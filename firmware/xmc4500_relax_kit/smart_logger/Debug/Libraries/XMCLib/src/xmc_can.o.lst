   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_can.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_IsPanelControlReady,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_IsPanelControlReady:
  25              	.LFB169:
  26              	 .file 1 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2017-11-09
   4:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  64:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  65:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  66:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  67:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  68:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  69:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  70:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  71:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  72:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  73:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  74:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  75:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  76:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  77:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  78:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  79:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  80:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  81:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  82:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  83:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  84:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  85:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  86:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  87:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  88:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  89:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  90:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  91:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  92:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  93:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  94:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  95:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
  96:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
  97:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
  98:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
  99:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 100:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 101:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 102:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 103:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 104:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 105:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 106:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 107:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 108:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 109:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 110:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 111:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 112:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 113:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 114:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 115:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 117:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 118:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 119:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 120:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 121:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 122:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 123:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 124:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 125:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 126:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 127:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 128:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 129:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 130:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 131:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 132:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 133:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 134:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 135:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 136:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 137:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 138:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 139:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 140:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 141:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 142:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 143:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 144:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 145:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 146:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 147:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 148:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 149:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 150:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 151:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 152:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 153:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 154:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 155:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 156:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 157:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 158:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 159:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 160:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 161:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 162:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 163:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 164:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 165:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 166:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 167:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 168:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 169:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 170:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 172:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 173:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 174:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 175:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 176:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 177:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 178:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 179:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 180:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 181:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 182:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 183:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 184:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 185:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 186:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 187:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 188:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 189:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 190:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 191:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 192:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 193:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 194:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 195:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 196:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 198:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 199:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 200:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 201:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 202:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 203:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 204:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 205:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 206:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 207:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 208:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 209:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 210:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 211:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 212:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 213:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 214:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 215:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 216:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 217:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 219:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 220:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 221:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 224:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 226:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 228:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 229:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 230:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 232:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 233:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 234:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 235:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 236:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 237:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 238:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 239:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 240:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 241:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 242:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 243:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 244:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 245:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 246:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 247:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 248:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 249:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 250:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 251:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 252:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 253:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 254:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 255:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 256:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 257:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 258:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 259:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 260:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 261:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 262:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 263:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 264:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 265:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 266:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 267:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 268:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 269:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 270:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 271:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 272:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 273:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 274:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 275:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 276:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 277:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 278:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 279:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 280:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 281:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 282:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 283:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 284:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 285:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 286:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 287:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 288:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 289:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 290:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 291:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 292:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 293:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 294:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 295:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 296:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 297:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 298:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 299:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 300:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 301:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 302:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 303:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 304:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 305:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 306:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 307:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 308:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 309:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 310:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 311:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 312:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 313:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 314:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 315:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 316:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 317:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 318:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 319:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 320:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 321:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 322:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 323:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 324:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 325:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 326:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 327:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 328:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 329:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 330:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 331:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 332:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,       /**< Bus-off status */
 333:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 334:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 335:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 336:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 337:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 338:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 339:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 340:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 341:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 342:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 343:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 344:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 345:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 346:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 347:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 348:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 349:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 350:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 351:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 352:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 353:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 354:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 355:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 356:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 357:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 358:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 359:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 360:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 361:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 362:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 363:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 364:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 365:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 366:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 367:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 368:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 369:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 370:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 371:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 372:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 373:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 374:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 375:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 376:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 377:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 378:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 379:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 380:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 381:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 382:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 383:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 384:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 385:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 386:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 387:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 388:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 391:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 393:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 395:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 396:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 397:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 398:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 399:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 400:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 401:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 402:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 403:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 404:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 405:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 406:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 407:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 408:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 409:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 410:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 411:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 412:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 413:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 414:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 415:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 416:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 417:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 418:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 419:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 420:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 421:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 422:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 424:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 425:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 426:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 427:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 428:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 429:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 430:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 431:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 432:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 435:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 437:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 439:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 440:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 441:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 442:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 443:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 444:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 445:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 446:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 447:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 448:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 449:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator 
 450:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 451:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 452:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {  
 453:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 454:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 455:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 456:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 457:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 458:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 459:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 460:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 461:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 462:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 463:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 464:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 465:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 466:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 467:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 468:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 469:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 470:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 471:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 472:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 473:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 474:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 475:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 476:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 
 477:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 478:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 479:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 480:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 481:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 482:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 483:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 484:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 485:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 486:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 487:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 488:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 489:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 490:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 491:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 492:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 493:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 494:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 495:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 496:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 497:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 498:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 499:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 500:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 501:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 502:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 503:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 504:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 505:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 506:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 507:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 508:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 509:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 510:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 511:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 512:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 513:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 514:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 515:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 516:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 517:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 518:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 519:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 520:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 521:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 522:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 523:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 524:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 525:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 526:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 527:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 528:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 529:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 530:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 531:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 532:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 533:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 534:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 535:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 536:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection:3;   /**<   Defines function of the frame counter  */
 537:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode:2;      /**<   Determines the operation mode of the frame count
 538:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 539:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 540:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 541:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 543:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 544:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 545:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 546:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 547:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 548:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 549:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 550:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 551:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 552:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 553:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 554:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 555:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 556:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 557:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 558:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message ident
 559:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 560:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 561:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 562:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 563:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 564:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 565:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 566:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 567:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 568:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 569:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 570:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 571:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 572:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 573:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 574:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 575:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint8_t can_data_byte[8];                 /**< Each position of the array represents a data b
 576:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bit
 577:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_dat
 578:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 579:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint64_t can_data_long;                   /** Data of the Message Object*/
 580:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       };
 581:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 582:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 583:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 584:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 585:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 586:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 587:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 588:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 589:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 590:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 591:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 592:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 593:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 594:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 595:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 596:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 597:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 599:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 600:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 601:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 602:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 603:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 604:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 605:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 606:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 607:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 608:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 609:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 610:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 611:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 612:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 613:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 614:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 615:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 616:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 617:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 618:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 619:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 620:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 621:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 622:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 623:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 624:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 625:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 626:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 627:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 628:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 629:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 630:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 632:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 633:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 634:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 635:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 636:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 637:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 639:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 640:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 641:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 642:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 643:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 644:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 645:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 646:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 647:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 648:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 649:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 650:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 652:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 653:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 654:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 655:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 656:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 658:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 659:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 660:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 661:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 662:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 663:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 664:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 665:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 667:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 668:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 669:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 670:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 670 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 671:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
  43              	 .loc 1 671 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F8C431 	 ldr r3,[r3,#452]
  46 000e 03F44073 	 and r3,r3,#768
  47 0012 002B     	 cmp r3,#0
  48 0014 0CBF     	 ite eq
  49 0016 0123     	 moveq r3,#1
  50 0018 0023     	 movne r3,#0
  51 001a DBB2     	 uxtb r3,r3
 672:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
  52              	 .loc 1 672 0
  53 001c 1846     	 mov r0,r3
  54 001e 0C37     	 adds r7,r7,#12
  55              	.LCFI3:
  56              	 .cfi_def_cfa_offset 4
  57 0020 BD46     	 mov sp,r7
  58              	.LCFI4:
  59              	 .cfi_def_cfa_register 13
  60              	 
  61 0022 5DF8047B 	 ldr r7,[sp],#4
  62              	.LCFI5:
  63              	 .cfi_restore 7
  64              	 .cfi_def_cfa_offset 0
  65 0026 7047     	 bx lr
  66              	 .cfi_endproc
  67              	.LFE169:
  69              	 .section .text.XMC_CAN_PanelControl,"ax",%progbits
  70              	 .align 2
  71              	 .thumb
  72              	 .thumb_func
  74              	XMC_CAN_PanelControl:
  75              	.LFB170:
 673:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 674:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 675:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 677:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 678:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 679:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 680:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 681:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 682:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 684:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 685:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 686:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 687:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 688:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 689:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 690:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 691:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 693:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 694:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 696:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 697:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 698:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 699:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg1,
 700:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg2)
 701:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
  76              	 .loc 1 701 0
  77              	 .cfi_startproc
  78              	 
  79              	 
  80              	 
  81 0000 80B4     	 push {r7}
  82              	.LCFI6:
  83              	 .cfi_def_cfa_offset 4
  84              	 .cfi_offset 7,-4
  85 0002 83B0     	 sub sp,sp,#12
  86              	.LCFI7:
  87              	 .cfi_def_cfa_offset 16
  88 0004 00AF     	 add r7,sp,#0
  89              	.LCFI8:
  90              	 .cfi_def_cfa_register 7
  91 0006 7860     	 str r0,[r7,#4]
  92 0008 0846     	 mov r0,r1
  93 000a 1146     	 mov r1,r2
  94 000c 1A46     	 mov r2,r3
  95 000e 0346     	 mov r3,r0
  96 0010 FB70     	 strb r3,[r7,#3]
  97 0012 0B46     	 mov r3,r1
  98 0014 BB70     	 strb r3,[r7,#2]
  99 0016 1346     	 mov r3,r2
 100 0018 7B70     	 strb r3,[r7,#1]
 702:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 101              	 .loc 1 702 0
 102 001a FA78     	 ldrb r2,[r7,#3]
 703:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 103              	 .loc 1 703 0
 104 001c BB78     	 ldrb r3,[r7,#2]
 105 001e 1B04     	 lsls r3,r3,#16
 106 0020 03F47F03 	 and r3,r3,#16711680
 702:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 107              	 .loc 1 702 0
 108 0024 1A43     	 orrs r2,r2,r3
 704:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 109              	 .loc 1 704 0
 110 0026 7B78     	 ldrb r3,[r7,#1]
 111 0028 1B06     	 lsls r3,r3,#24
 703:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 112              	 .loc 1 703 0
 113 002a 1A43     	 orrs r2,r2,r3
 702:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 114              	 .loc 1 702 0
 115 002c 7B68     	 ldr r3,[r7,#4]
 116 002e C3F8C421 	 str r2,[r3,#452]
 705:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 117              	 .loc 1 705 0
 118 0032 0C37     	 adds r7,r7,#12
 119              	.LCFI9:
 120              	 .cfi_def_cfa_offset 4
 121 0034 BD46     	 mov sp,r7
 122              	.LCFI10:
 123              	 .cfi_def_cfa_register 13
 124              	 
 125 0036 5DF8047B 	 ldr r7,[sp],#4
 126              	.LCFI11:
 127              	 .cfi_restore 7
 128              	 .cfi_def_cfa_offset 0
 129 003a 7047     	 bx lr
 130              	 .cfi_endproc
 131              	.LFE170:
 133              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 134              	 .align 2
 135              	 .thumb
 136              	 .thumb_func
 138              	XMC_CAN_NODE_EnableConfigurationChange:
 139              	.LFB186:
 706:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 707:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 708:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 709:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 710:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 711:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 712:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 713:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 714:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 715:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 716:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 717:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 718:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 719:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 720:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 721:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 722:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 723:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 724:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 725:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 726:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 727:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 728:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 729:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 730:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 731:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 732:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 733:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 734:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 735:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 736:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 737:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 739:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). 
 740:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 741:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 742:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 743:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 744:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 745:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 746:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 747:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 748:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN. 
 749:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 750:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 751:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 752:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 753:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 754:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 755:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 756:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 757:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 758:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 759:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 760:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 761:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 762:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 763:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 764:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 765:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 766:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 767:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 768:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 769:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 770:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 771:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 772:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 773:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 774:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 775:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 776:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 777:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 778:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 779:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 780:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 781:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 782:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 783:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 784:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 785:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 786:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 787:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 788:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 789:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 790:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 791:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 792:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 793:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 794:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency 
 795:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 796:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 797:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 798:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 799:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 800:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 801:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 802:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 803:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 804:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 805:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 806:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 807:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 808:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 809:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 810:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 811:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 812:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 813:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 814:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 815:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 816:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 817:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 818:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 819:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 820:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 821:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 822:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 825:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 827:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 828:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 829:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 830:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 831:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 832:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 833:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 834:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 835:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 836:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 837:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 838:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 839:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 840:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 841:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 844:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 847:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 848:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 849:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 850:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 851:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 852:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 853:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 854:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 855:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 856:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 857:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 858:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 859:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 860:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 866:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 867:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 868:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const uint32_t service_request)
 869:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 870:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
 871:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 872:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 873:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 874:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 875:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 876:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 877:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 878:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 879:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 880:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 881:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 882:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 883:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 884:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 885:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 886:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 887:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 889:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 890:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_b
 891:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 893:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 894:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 895:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 896:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 897:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 898:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 899:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 900:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate. 
 901:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 902:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 903:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 905:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 906:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 908:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 909:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 910:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 911:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 912:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 913:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 914:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 915:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 916:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 917:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 919:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 920:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 921:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 922:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 923:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 924:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 925:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 927:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 928:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 930:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 931:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 932:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 933:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 934:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 935:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                               const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 936:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 937:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 938:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 939:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 940:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 941:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 942:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 943:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 944:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 946:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 947:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 948:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 949:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 950:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 951:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 952:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 953:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 955:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 956:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 957:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 958:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 959:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 960:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 961:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 962:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 963:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 964:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 965:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 966:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 967:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 968:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 969:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 970:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 971:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 972:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 974:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 975:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 976:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 977:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 979:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 980:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 981:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 982:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 983:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 984:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 985:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 986:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 988:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 989:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 990:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 991:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 992:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 993:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 994:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 995:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 996:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 997:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
 998:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 999:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1000:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1002:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1003:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1005:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1006:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1007:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1008:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1009:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1010:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1022:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1025:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1034:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1035:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1036:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1038:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1039:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1040:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1041:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1042:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1043:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1044:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1045:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1046:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1047:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1048:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1049:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1051:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1052:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1053:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1054:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1055:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1056:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1057:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1058:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1059:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1060:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1061:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1062:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1063:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1064:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1065:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1066:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1067:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
1068:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1069:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1071:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1072:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1073:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1074:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1075:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1077:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1078:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1079:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1080:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1081:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1083:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1084:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1085:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1086:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1087:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1088:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1089:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1091:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1092:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1093:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1094:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1095:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1096:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1097:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1098:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1099:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1100:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1101:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1102:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1103:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1105:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1106:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1107:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1108:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1109:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1110:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1111:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1112:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1113:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1114:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1115:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1117:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1118:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1119:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1120:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1121:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1122:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1124:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1125:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1126:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1127:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1128:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1129:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1130:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1131:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1132:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1133:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1134:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1135:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1136:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1137:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1139:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1140:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1141:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1142:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1144:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1145:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1146:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1147:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1148:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1149:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1150:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1151:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1152:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1153:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1155:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1156:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1157:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1158:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1159:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1161:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1162:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1164:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1165:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1166:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1167:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1168:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1169:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1170:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1171:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1172:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1173:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1174:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1175:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1176:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1177:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1178:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1179:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1180:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1181:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1182:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1183:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1185:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1186:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1187:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1188:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1189:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1190:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1192:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1193:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1194:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1195:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1196:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1197:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1198:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1199:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1200:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1201:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1202:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1203:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1204:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1205:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1206:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1207:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1208:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1209:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1210:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1211:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1212:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1213:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1214:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1215:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1217:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1218:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1219:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1220:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1221:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1222:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1223:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1224:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1225:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1226:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1228:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1229:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1230:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1231:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1232:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1233:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
1234:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1235:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1240:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1241:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1242:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1243:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1244:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1245:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1246:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1247:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1248:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1249:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1250:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1251:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1252:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1253:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
1254:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1255:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1256:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1257:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1258:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1259:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1260:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1261:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1262:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1263:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1264:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1265:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1266:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1267:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1268:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1269:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1270:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1271:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1272:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1273:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 140              	 .loc 1 1273 0
 141              	 .cfi_startproc
 142              	 
 143              	 
 144              	 
 145 0000 80B4     	 push {r7}
 146              	.LCFI12:
 147              	 .cfi_def_cfa_offset 4
 148              	 .cfi_offset 7,-4
 149 0002 83B0     	 sub sp,sp,#12
 150              	.LCFI13:
 151              	 .cfi_def_cfa_offset 16
 152 0004 00AF     	 add r7,sp,#0
 153              	.LCFI14:
 154              	 .cfi_def_cfa_register 7
 155 0006 7860     	 str r0,[r7,#4]
1274:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 156              	 .loc 1 1274 0
 157 0008 7B68     	 ldr r3,[r7,#4]
 158 000a 1B68     	 ldr r3,[r3]
 159 000c 43F04002 	 orr r2,r3,#64
 160 0010 7B68     	 ldr r3,[r7,#4]
 161 0012 1A60     	 str r2,[r3]
1275:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 162              	 .loc 1 1275 0
 163 0014 0C37     	 adds r7,r7,#12
 164              	.LCFI15:
 165              	 .cfi_def_cfa_offset 4
 166 0016 BD46     	 mov sp,r7
 167              	.LCFI16:
 168              	 .cfi_def_cfa_register 13
 169              	 
 170 0018 5DF8047B 	 ldr r7,[sp],#4
 171              	.LCFI17:
 172              	 .cfi_restore 7
 173              	 .cfi_def_cfa_offset 0
 174 001c 7047     	 bx lr
 175              	 .cfi_endproc
 176              	.LFE186:
 178 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 179              	 .align 2
 180              	 .thumb
 181              	 .thumb_func
 183              	XMC_CAN_NODE_DisableConfigurationChange:
 184              	.LFB187:
1276:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1277:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1278:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1279:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1281:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1283:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1284:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1285:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1286:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1287:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1288:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1289:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1290:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1291:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1292:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1293:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 185              	 .loc 1 1293 0
 186              	 .cfi_startproc
 187              	 
 188              	 
 189              	 
 190 0000 80B4     	 push {r7}
 191              	.LCFI18:
 192              	 .cfi_def_cfa_offset 4
 193              	 .cfi_offset 7,-4
 194 0002 83B0     	 sub sp,sp,#12
 195              	.LCFI19:
 196              	 .cfi_def_cfa_offset 16
 197 0004 00AF     	 add r7,sp,#0
 198              	.LCFI20:
 199              	 .cfi_def_cfa_register 7
 200 0006 7860     	 str r0,[r7,#4]
1294:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 201              	 .loc 1 1294 0
 202 0008 7B68     	 ldr r3,[r7,#4]
 203 000a 1B68     	 ldr r3,[r3]
 204 000c 23F04002 	 bic r2,r3,#64
 205 0010 7B68     	 ldr r3,[r7,#4]
 206 0012 1A60     	 str r2,[r3]
1295:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 207              	 .loc 1 1295 0
 208 0014 0C37     	 adds r7,r7,#12
 209              	.LCFI21:
 210              	 .cfi_def_cfa_offset 4
 211 0016 BD46     	 mov sp,r7
 212              	.LCFI22:
 213              	 .cfi_def_cfa_register 13
 214              	 
 215 0018 5DF8047B 	 ldr r7,[sp],#4
 216              	.LCFI23:
 217              	 .cfi_restore 7
 218              	 .cfi_def_cfa_offset 0
 219 001c 7047     	 bx lr
 220              	 .cfi_endproc
 221              	.LFE187:
 223 001e 00BF     	 .section .text.max,"ax",%progbits
 224              	 .align 2
 225              	 .thumb
 226              	 .thumb_func
 228              	max:
 229              	.LFB222:
 230              	 .file 2 "../Libraries/XMCLib/src/xmc_can.c"
   1:../Libraries/XMCLib/src/xmc_can.c **** /**
   2:../Libraries/XMCLib/src/xmc_can.c ****  * @file xmc_can.c
   3:../Libraries/XMCLib/src/xmc_can.c ****  * @date 2018-06-21
   4:../Libraries/XMCLib/src/xmc_can.c ****  *
   5:../Libraries/XMCLib/src/xmc_can.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_can.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_can.c ****  *
   9:../Libraries/XMCLib/src/xmc_can.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_can.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_can.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_can.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_can.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_can.c ****  * 
  18:../Libraries/XMCLib/src/xmc_can.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_can.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_can.c ****  * 
  21:../Libraries/XMCLib/src/xmc_can.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_can.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_can.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_can.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_can.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_can.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_can.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_can.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_can.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_can.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_can.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_can.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_can.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_can.c ****  *
  36:../Libraries/XMCLib/src/xmc_can.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_can.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_can.c ****  *
  39:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_can.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_can.c ****  *
  42:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-05-20:
  43:../Libraries/XMCLib/src/xmc_can.c ****  *     - New API added: XMC_CAN_MO_ReceiveData() <br>
  44:../Libraries/XMCLib/src/xmc_can.c ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  45:../Libraries/XMCLib/src/xmc_can.c ****  *     - Minor fix in XMC_CAN_TXFIFO_ConfigMOSlaveObject(). <br>
  46:../Libraries/XMCLib/src/xmc_can.c ****  *
  47:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-06-20:
  48:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed version macros and declaration of GetDriverVersion API
  49:../Libraries/XMCLib/src/xmc_can.c ****  *
  50:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-01:
  51:../Libraries/XMCLib/src/xmc_can.c ****  *     - Removed  fCANB clock support <br>
  52:../Libraries/XMCLib/src/xmc_can.c ****  *
  53:../Libraries/XMCLib/src/xmc_can.c ****  * 2015-09-08:
  54:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_Init() <br>
  55:../Libraries/XMCLib/src/xmc_can.c ****  *
  56:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-07:
  57:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed XMC_CAN_AllocateMOtoNodeList to wait for ready status of list controller
  58:../Libraries/XMCLib/src/xmc_can.c ****  *
  59:../Libraries/XMCLib/src/xmc_can.c ****  * 2016-06-20:
  60:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed bug in XMC_CAN_MO_Config() <br> 
  61:../Libraries/XMCLib/src/xmc_can.c ****  *
  62:../Libraries/XMCLib/src/xmc_can.c ****  * 2017-11-09:
  63:../Libraries/XMCLib/src/xmc_can.c ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  64:../Libraries/XMCLib/src/xmc_can.c ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  65:../Libraries/XMCLib/src/xmc_can.c ****  *     - Changed refactoring XMC_CAN_MO_Config() to configure MOCTR depending on transmit or receiv
  66:../Libraries/XMCLib/src/xmc_can.c ****  *
  67:../Libraries/XMCLib/src/xmc_can.c ****  * 2018-06-21:
  68:../Libraries/XMCLib/src/xmc_can.c ****  *     - Fixed XMC_CAN_NODE_NominalBitTimeConfigureEx()
  69:../Libraries/XMCLib/src/xmc_can.c ****  *
  70:../Libraries/XMCLib/src/xmc_can.c ****  * @endcond
  71:../Libraries/XMCLib/src/xmc_can.c ****  *
  72:../Libraries/XMCLib/src/xmc_can.c ****  */ 
  73:../Libraries/XMCLib/src/xmc_can.c **** 
  74:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_can.c ****  * HEADER FILES
  76:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_can.h"
  78:../Libraries/XMCLib/src/xmc_can.c **** 
  79:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CAN)
  80:../Libraries/XMCLib/src/xmc_can.c **** #include "xmc_scu.h"
  81:../Libraries/XMCLib/src/xmc_can.c **** 
  82:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t max(uint32_t a, uint32_t b)
  83:../Libraries/XMCLib/src/xmc_can.c **** {
 231              	 .loc 2 83 0
 232              	 .cfi_startproc
 233              	 
 234              	 
 235              	 
 236 0000 80B4     	 push {r7}
 237              	.LCFI24:
 238              	 .cfi_def_cfa_offset 4
 239              	 .cfi_offset 7,-4
 240 0002 83B0     	 sub sp,sp,#12
 241              	.LCFI25:
 242              	 .cfi_def_cfa_offset 16
 243 0004 00AF     	 add r7,sp,#0
 244              	.LCFI26:
 245              	 .cfi_def_cfa_register 7
 246 0006 7860     	 str r0,[r7,#4]
 247 0008 3960     	 str r1,[r7]
  84:../Libraries/XMCLib/src/xmc_can.c ****   return (a > b) ? a : b;
 248              	 .loc 2 84 0
 249 000a 3A68     	 ldr r2,[r7]
 250 000c 7B68     	 ldr r3,[r7,#4]
 251 000e 9342     	 cmp r3,r2
 252 0010 38BF     	 it cc
 253 0012 1346     	 movcc r3,r2
  85:../Libraries/XMCLib/src/xmc_can.c **** }
 254              	 .loc 2 85 0
 255 0014 1846     	 mov r0,r3
 256 0016 0C37     	 adds r7,r7,#12
 257              	.LCFI27:
 258              	 .cfi_def_cfa_offset 4
 259 0018 BD46     	 mov sp,r7
 260              	.LCFI28:
 261              	 .cfi_def_cfa_register 13
 262              	 
 263 001a 5DF8047B 	 ldr r7,[sp],#4
 264              	.LCFI29:
 265              	 .cfi_restore 7
 266              	 .cfi_def_cfa_offset 0
 267 001e 7047     	 bx lr
 268              	 .cfi_endproc
 269              	.LFE222:
 271              	 .section .text.min,"ax",%progbits
 272              	 .align 2
 273              	 .thumb
 274              	 .thumb_func
 276              	min:
 277              	.LFB223:
  86:../Libraries/XMCLib/src/xmc_can.c **** 
  87:../Libraries/XMCLib/src/xmc_can.c **** __STATIC_INLINE uint32_t min(uint32_t a, uint32_t b)
  88:../Libraries/XMCLib/src/xmc_can.c **** {
 278              	 .loc 2 88 0
 279              	 .cfi_startproc
 280              	 
 281              	 
 282              	 
 283 0000 80B4     	 push {r7}
 284              	.LCFI30:
 285              	 .cfi_def_cfa_offset 4
 286              	 .cfi_offset 7,-4
 287 0002 83B0     	 sub sp,sp,#12
 288              	.LCFI31:
 289              	 .cfi_def_cfa_offset 16
 290 0004 00AF     	 add r7,sp,#0
 291              	.LCFI32:
 292              	 .cfi_def_cfa_register 7
 293 0006 7860     	 str r0,[r7,#4]
 294 0008 3960     	 str r1,[r7]
  89:../Libraries/XMCLib/src/xmc_can.c ****   return (a < b) ? a : b;
 295              	 .loc 2 89 0
 296 000a 3A68     	 ldr r2,[r7]
 297 000c 7B68     	 ldr r3,[r7,#4]
 298 000e 9342     	 cmp r3,r2
 299 0010 28BF     	 it cs
 300 0012 1346     	 movcs r3,r2
  90:../Libraries/XMCLib/src/xmc_can.c **** }
 301              	 .loc 2 90 0
 302 0014 1846     	 mov r0,r3
 303 0016 0C37     	 adds r7,r7,#12
 304              	.LCFI33:
 305              	 .cfi_def_cfa_offset 4
 306 0018 BD46     	 mov sp,r7
 307              	.LCFI34:
 308              	 .cfi_def_cfa_register 13
 309              	 
 310 001a 5DF8047B 	 ldr r7,[sp],#4
 311              	.LCFI35:
 312              	 .cfi_restore 7
 313              	 .cfi_def_cfa_offset 0
 314 001e 7047     	 bx lr
 315              	 .cfi_endproc
 316              	.LFE223:
 318              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigureEx,"ax",%progbits
 319              	 .align 2
 320              	 .global XMC_CAN_NODE_NominalBitTimeConfigureEx
 321              	 .thumb
 322              	 .thumb_func
 324              	XMC_CAN_NODE_NominalBitTimeConfigureEx:
 325              	.LFB224:
  91:../Libraries/XMCLib/src/xmc_can.c **** 
  92:../Libraries/XMCLib/src/xmc_can.c **** /*******************************************************************************
  93:../Libraries/XMCLib/src/xmc_can.c ****  * API IMPLEMENTATION
  94:../Libraries/XMCLib/src/xmc_can.c ****  *******************************************************************************/
  95:../Libraries/XMCLib/src/xmc_can.c **** 
  96:../Libraries/XMCLib/src/xmc_can.c **** /* The max prescaler is the equal to max BRP setting (64) multiply by 8 (DIV8) */
  97:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_PRESCALER 512
  98:../Libraries/XMCLib/src/xmc_can.c **** 
  99:../Libraries/XMCLib/src/xmc_can.c **** /* maximum TSEG1 is 16 and maximum TSEG2 is 8, plus one fix sync tq */
 100:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_NTQ 25
 101:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_NTQ 8
 102:../Libraries/XMCLib/src/xmc_can.c **** 
 103:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG1 3
 104:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MIN_TSEG2 2
 105:../Libraries/XMCLib/src/xmc_can.c **** 
 106:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG1 15
 107:../Libraries/XMCLib/src/xmc_can.c **** #define XMC_CAN_NODE_MAX_TSEG2 7
 108:../Libraries/XMCLib/src/xmc_can.c **** 
 109:../Libraries/XMCLib/src/xmc_can.c **** 
 110:../Libraries/XMCLib/src/xmc_can.c **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 111:../Libraries/XMCLib/src/xmc_can.c ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 112:../Libraries/XMCLib/src/xmc_can.c **** {
 326              	 .loc 2 112 0
 327              	 .cfi_startproc
 328              	 
 329              	 
 330 0000 80B5     	 push {r7,lr}
 331              	.LCFI36:
 332              	 .cfi_def_cfa_offset 8
 333              	 .cfi_offset 7,-8
 334              	 .cfi_offset 14,-4
 335 0002 88B0     	 sub sp,sp,#32
 336              	.LCFI37:
 337              	 .cfi_def_cfa_offset 40
 338 0004 00AF     	 add r7,sp,#0
 339              	.LCFI38:
 340              	 .cfi_def_cfa_register 7
 341 0006 7860     	 str r0,[r7,#4]
 342 0008 3960     	 str r1,[r7]
 113:../Libraries/XMCLib/src/xmc_can.c ****   /* Check that the CAN frequency is a multiple of the required baudrate */
 114:../Libraries/XMCLib/src/xmc_can.c ****   if ((bit_time_config->can_frequency % bit_time_config->baudrate) == 0)
 343              	 .loc 2 114 0
 344 000a 3B68     	 ldr r3,[r7]
 345 000c 1B68     	 ldr r3,[r3]
 346 000e 3A68     	 ldr r2,[r7]
 347 0010 5268     	 ldr r2,[r2,#4]
 348 0012 B3FBF2F1 	 udiv r1,r3,r2
 349 0016 02FB01F2 	 mul r2,r2,r1
 350 001a 9B1A     	 subs r3,r3,r2
 351 001c 002B     	 cmp r3,#0
 352 001e 40F08B80 	 bne .L11
 353              	.LBB2:
 115:../Libraries/XMCLib/src/xmc_can.c ****   {
 116:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t prescaler;
 117:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t div8 = 0;
 354              	 .loc 2 117 0
 355 0022 0023     	 movs r3,#0
 356 0024 BB61     	 str r3,[r7,#24]
 118:../Libraries/XMCLib/src/xmc_can.c **** 
 119:../Libraries/XMCLib/src/xmc_can.c ****   /* Calculate the factor between can frequency and required baudrate, this is equal to (prescaler 
 120:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t fcan_div = bit_time_config->can_frequency / bit_time_config->baudrate;
 357              	 .loc 2 120 0
 358 0026 3B68     	 ldr r3,[r7]
 359 0028 1A68     	 ldr r2,[r3]
 360 002a 3B68     	 ldr r3,[r7]
 361 002c 5B68     	 ldr r3,[r3,#4]
 362 002e B2FBF3F3 	 udiv r3,r2,r3
 363 0032 BB60     	 str r3,[r7,#8]
 121:../Libraries/XMCLib/src/xmc_can.c **** 
 122:../Libraries/XMCLib/src/xmc_can.c ****     /* start with highest ntq, i.e as much as possible time quanta should be used to construct a bi
 123:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t ntq = XMC_CAN_NODE_MAX_NTQ;
 364              	 .loc 2 123 0
 365 0034 1923     	 movs r3,#25
 366 0036 7B61     	 str r3,[r7,#20]
 124:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg1 = 0;
 367              	 .loc 2 124 0
 368 0038 0023     	 movs r3,#0
 369 003a 3B61     	 str r3,[r7,#16]
 125:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tseg2 = 0;
 370              	 .loc 2 125 0
 371 003c 0023     	 movs r3,#0
 372 003e FB60     	 str r3,[r7,#12]
 126:../Libraries/XMCLib/src/xmc_can.c ****     while (ntq >= XMC_CAN_NODE_MIN_NTQ)
 373              	 .loc 2 126 0
 374 0040 48E0     	 b .L12
 375              	.L17:
 127:../Libraries/XMCLib/src/xmc_can.c ****     {
 128:../Libraries/XMCLib/src/xmc_can.c ****       /* consider this ntq, only if fcan_div is multiple of ntq */
 129:../Libraries/XMCLib/src/xmc_can.c ****       if ((fcan_div % ntq) == 0)
 376              	 .loc 2 129 0
 377 0042 BB68     	 ldr r3,[r7,#8]
 378 0044 7A69     	 ldr r2,[r7,#20]
 379 0046 B3FBF2F2 	 udiv r2,r3,r2
 380 004a 7969     	 ldr r1,[r7,#20]
 381 004c 01FB02F2 	 mul r2,r1,r2
 382 0050 9B1A     	 subs r3,r3,r2
 383 0052 002B     	 cmp r3,#0
 384 0054 3BD1     	 bne .L13
 130:../Libraries/XMCLib/src/xmc_can.c ****       {
 131:../Libraries/XMCLib/src/xmc_can.c ****     	div8 = 0;
 385              	 .loc 2 131 0
 386 0056 0023     	 movs r3,#0
 387 0058 BB61     	 str r3,[r7,#24]
 132:../Libraries/XMCLib/src/xmc_can.c ****         prescaler = fcan_div / ntq;
 388              	 .loc 2 132 0
 389 005a BA68     	 ldr r2,[r7,#8]
 390 005c 7B69     	 ldr r3,[r7,#20]
 391 005e B2FBF3F3 	 udiv r3,r2,r3
 392 0062 FB61     	 str r3,[r7,#28]
 133:../Libraries/XMCLib/src/xmc_can.c ****         if ((prescaler > 0) && (prescaler <= XMC_CAN_NODE_MAX_PRESCALER))
 393              	 .loc 2 133 0
 394 0064 FB69     	 ldr r3,[r7,#28]
 395 0066 002B     	 cmp r3,#0
 396 0068 31D0     	 beq .L13
 397              	 .loc 2 133 0 is_stmt 0 discriminator 1
 398 006a FB69     	 ldr r3,[r7,#28]
 399 006c B3F5007F 	 cmp r3,#512
 400 0070 2DD8     	 bhi .L13
 134:../Libraries/XMCLib/src/xmc_can.c ****         {
 135:../Libraries/XMCLib/src/xmc_can.c ****           if (prescaler >= 64)
 401              	 .loc 2 135 0 is_stmt 1
 402 0072 FB69     	 ldr r3,[r7,#28]
 403 0074 3F2B     	 cmp r3,#63
 404 0076 07D9     	 bls .L14
 136:../Libraries/XMCLib/src/xmc_can.c ****           {
 137:../Libraries/XMCLib/src/xmc_can.c ****             /* consider prescaler >=64, if it is integer divisible by 8*/
 138:../Libraries/XMCLib/src/xmc_can.c ****             if ((prescaler & 0x7U) != 0)
 405              	 .loc 2 138 0
 406 0078 FB69     	 ldr r3,[r7,#28]
 407 007a 03F00703 	 and r3,r3,#7
 408 007e 002B     	 cmp r3,#0
 409 0080 00D0     	 beq .L15
 139:../Libraries/XMCLib/src/xmc_can.c ****             {
 140:../Libraries/XMCLib/src/xmc_can.c ****               continue;
 410              	 .loc 2 140 0
 411 0082 27E0     	 b .L12
 412              	.L15:
 141:../Libraries/XMCLib/src/xmc_can.c ****             }
 142:../Libraries/XMCLib/src/xmc_can.c ****             else
 143:../Libraries/XMCLib/src/xmc_can.c ****             {
 144:../Libraries/XMCLib/src/xmc_can.c ****               div8 = 1;
 413              	 .loc 2 144 0
 414 0084 0123     	 movs r3,#1
 415 0086 BB61     	 str r3,[r7,#24]
 416              	.L14:
 145:../Libraries/XMCLib/src/xmc_can.c ****             }
 146:../Libraries/XMCLib/src/xmc_can.c ****           }
 147:../Libraries/XMCLib/src/xmc_can.c **** 
 148:../Libraries/XMCLib/src/xmc_can.c ****           tseg1 = ((ntq - 1) * bit_time_config->sample_point) / 10000;
 417              	 .loc 2 148 0
 418 0088 7B69     	 ldr r3,[r7,#20]
 419 008a 013B     	 subs r3,r3,#1
 420 008c 3A68     	 ldr r2,[r7]
 421 008e 1289     	 ldrh r2,[r2,#8]
 422 0090 02FB03F3 	 mul r3,r2,r3
 423 0094 2B4A     	 ldr r2,.L19
 424 0096 A2FB0323 	 umull r2,r3,r2,r3
 425 009a 5B0B     	 lsrs r3,r3,#13
 426 009c 3B61     	 str r3,[r7,#16]
 149:../Libraries/XMCLib/src/xmc_can.c ****           tseg2 = ntq - tseg1 - 1;
 427              	 .loc 2 149 0
 428 009e 7A69     	 ldr r2,[r7,#20]
 429 00a0 3B69     	 ldr r3,[r7,#16]
 430 00a2 D31A     	 subs r3,r2,r3
 431 00a4 013B     	 subs r3,r3,#1
 432 00a6 FB60     	 str r3,[r7,#12]
 150:../Libraries/XMCLib/src/xmc_can.c **** 
 151:../Libraries/XMCLib/src/xmc_can.c ****           if ((XMC_CAN_NODE_MIN_TSEG1 <= tseg1) && (tseg1 <= XMC_CAN_NODE_MAX_TSEG1) &&
 433              	 .loc 2 151 0
 434 00a8 3B69     	 ldr r3,[r7,#16]
 435 00aa 022B     	 cmp r3,#2
 436 00ac 0FD9     	 bls .L13
 437              	 .loc 2 151 0 is_stmt 0 discriminator 1
 438 00ae 3B69     	 ldr r3,[r7,#16]
 439 00b0 0F2B     	 cmp r3,#15
 440 00b2 0CD8     	 bhi .L13
 441              	 .loc 2 151 0 discriminator 2
 442 00b4 FB68     	 ldr r3,[r7,#12]
 443 00b6 012B     	 cmp r3,#1
 444 00b8 09D9     	 bls .L13
 152:../Libraries/XMCLib/src/xmc_can.c ****         		  (XMC_CAN_NODE_MIN_TSEG2 <= tseg2) && (tseg2 < XMC_CAN_NODE_MAX_TSEG2) && (tseg2 >= bit_
 445              	 .loc 2 152 0 is_stmt 1
 446 00ba FB68     	 ldr r3,[r7,#12]
 447 00bc 062B     	 cmp r3,#6
 448 00be 06D8     	 bhi .L13
 449              	 .loc 2 152 0 is_stmt 0 discriminator 1
 450 00c0 3B68     	 ldr r3,[r7]
 451 00c2 5B89     	 ldrh r3,[r3,#10]
 452 00c4 1A46     	 mov r2,r3
 453 00c6 FB68     	 ldr r3,[r7,#12]
 454 00c8 9A42     	 cmp r2,r3
 455 00ca 00D8     	 bhi .L13
 153:../Libraries/XMCLib/src/xmc_can.c ****           {
 154:../Libraries/XMCLib/src/xmc_can.c ****             break;
 456              	 .loc 2 154 0 is_stmt 1
 457 00cc 05E0     	 b .L16
 458              	.L13:
 155:../Libraries/XMCLib/src/xmc_can.c ****           }
 156:../Libraries/XMCLib/src/xmc_can.c **** 
 157:../Libraries/XMCLib/src/xmc_can.c **** 
 158:../Libraries/XMCLib/src/xmc_can.c ****         }
 159:../Libraries/XMCLib/src/xmc_can.c ****       }
 160:../Libraries/XMCLib/src/xmc_can.c ****       --ntq;
 459              	 .loc 2 160 0
 460 00ce 7B69     	 ldr r3,[r7,#20]
 461 00d0 013B     	 subs r3,r3,#1
 462 00d2 7B61     	 str r3,[r7,#20]
 463              	.L12:
 126:../Libraries/XMCLib/src/xmc_can.c ****     {
 464              	 .loc 2 126 0
 465 00d4 7B69     	 ldr r3,[r7,#20]
 466 00d6 072B     	 cmp r3,#7
 467 00d8 B3D8     	 bhi .L17
 468              	.L16:
 161:../Libraries/XMCLib/src/xmc_can.c ****     }
 162:../Libraries/XMCLib/src/xmc_can.c **** 
 163:../Libraries/XMCLib/src/xmc_can.c ****     if (ntq >= XMC_CAN_NODE_MIN_NTQ)
 469              	 .loc 2 163 0
 470 00da 7B69     	 ldr r3,[r7,#20]
 471 00dc 072B     	 cmp r3,#7
 472 00de 2BD9     	 bls .L11
 164:../Libraries/XMCLib/src/xmc_can.c ****     {
 165:../Libraries/XMCLib/src/xmc_can.c **** 
 166:../Libraries/XMCLib/src/xmc_can.c **** 
 167:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_EnableConfigurationChange(can_node);
 473              	 .loc 2 167 0
 474 00e0 7868     	 ldr r0,[r7,#4]
 475 00e2 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 168:../Libraries/XMCLib/src/xmc_can.c **** 
 169:../Libraries/XMCLib/src/xmc_can.c ****       /* Configure bit timing register */
 170:../Libraries/XMCLib/src/xmc_can.c ****       can_node->NBTR = (((tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG2_M
 476              	 .loc 2 170 0
 477 00e6 FB68     	 ldr r3,[r7,#12]
 478 00e8 013B     	 subs r3,r3,#1
 479 00ea 1B03     	 lsls r3,r3,#12
 480 00ec 03F4E042 	 and r2,r3,#28672
 171:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 481              	 .loc 2 171 0
 482 00f0 3B68     	 ldr r3,[r7]
 483 00f2 5B89     	 ldrh r3,[r3,#10]
 484 00f4 013B     	 subs r3,r3,#1
 485 00f6 9B01     	 lsls r3,r3,#6
 486 00f8 DBB2     	 uxtb r3,r3
 170:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 487              	 .loc 2 170 0
 488 00fa 1A43     	 orrs r2,r2,r3
 172:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 489              	 .loc 2 172 0
 490 00fc 3B69     	 ldr r3,[r7,#16]
 491 00fe 013B     	 subs r3,r3,#1
 492 0100 1B02     	 lsls r3,r3,#8
 493 0102 03F47063 	 and r3,r3,#3840
 171:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 494              	 .loc 2 171 0
 495 0106 42EA0301 	 orr r1,r2,r3
 173:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 496              	 .loc 2 173 0
 497 010a BA69     	 ldr r2,[r7,#24]
 498 010c 1346     	 mov r3,r2
 499 010e 5B00     	 lsls r3,r3,#1
 500 0110 1344     	 add r3,r3,r2
 501 0112 1A46     	 mov r2,r3
 502 0114 FB69     	 ldr r3,[r7,#28]
 503 0116 D340     	 lsrs r3,r3,r2
 504 0118 013B     	 subs r3,r3,#1
 505 011a 03F03F03 	 and r3,r3,#63
 172:../Libraries/XMCLib/src/xmc_can.c ****                         (((tseg1 - 1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBTR_TSEG1_
 506              	 .loc 2 172 0
 507 011e 41EA0302 	 orr r2,r1,r3
 174:../Libraries/XMCLib/src/xmc_can.c ****                         ((div8 << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 508              	 .loc 2 174 0
 509 0122 BB69     	 ldr r3,[r7,#24]
 510 0124 DB03     	 lsls r3,r3,#15
 511 0126 9BB2     	 uxth r3,r3
 173:../Libraries/XMCLib/src/xmc_can.c ****                         ((((prescaler >> (3 * div8)) - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CA
 512              	 .loc 2 173 0
 513 0128 1A43     	 orrs r2,r2,r3
 170:../Libraries/XMCLib/src/xmc_can.c ****                         (((bit_time_config->sjw - 1U) << CAN_NODE_NBTR_SJW_Pos) & (uint32_t)CAN_NOD
 514              	 .loc 2 170 0
 515 012a 7B68     	 ldr r3,[r7,#4]
 516 012c 1A61     	 str r2,[r3,#16]
 175:../Libraries/XMCLib/src/xmc_can.c **** 
 176:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_NODE_DisableConfigurationChange(can_node);
 517              	 .loc 2 176 0
 518 012e 7868     	 ldr r0,[r7,#4]
 519 0130 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 177:../Libraries/XMCLib/src/xmc_can.c **** 
 178:../Libraries/XMCLib/src/xmc_can.c ****       return XMC_CAN_STATUS_SUCCESS;
 520              	 .loc 2 178 0
 521 0134 0023     	 movs r3,#0
 522 0136 00E0     	 b .L18
 523              	.L11:
 524              	.LBE2:
 179:../Libraries/XMCLib/src/xmc_can.c ****     }
 180:../Libraries/XMCLib/src/xmc_can.c ****   }
 181:../Libraries/XMCLib/src/xmc_can.c **** 
 182:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_STATUS_ERROR;
 525              	 .loc 2 182 0
 526 0138 0123     	 movs r3,#1
 527              	.L18:
 183:../Libraries/XMCLib/src/xmc_can.c **** }
 528              	 .loc 2 183 0
 529 013a 1846     	 mov r0,r3
 530 013c 2037     	 adds r7,r7,#32
 531              	.LCFI39:
 532              	 .cfi_def_cfa_offset 8
 533 013e BD46     	 mov sp,r7
 534              	.LCFI40:
 535              	 .cfi_def_cfa_register 13
 536              	 
 537 0140 80BD     	 pop {r7,pc}
 538              	.L20:
 539 0142 00BF     	 .align 2
 540              	.L19:
 541 0144 5917B7D1 	 .word -776530087
 542              	 .cfi_endproc
 543              	.LFE224:
 545              	 .section .text.XMC_CAN_NODE_NominalBitTimeConfigure,"ax",%progbits
 546              	 .align 2
 547              	 .global XMC_CAN_NODE_NominalBitTimeConfigure
 548              	 .thumb
 549              	 .thumb_func
 551              	XMC_CAN_NODE_NominalBitTimeConfigure:
 552              	.LFB225:
 184:../Libraries/XMCLib/src/xmc_can.c **** 
 185:../Libraries/XMCLib/src/xmc_can.c **** /* Baudrate Configuration */
 186:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_NominalBitTimeConfigure (XMC_CAN_NODE_t *const can_node,
 187:../Libraries/XMCLib/src/xmc_can.c ****                                            const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_
 188:../Libraries/XMCLib/src/xmc_can.c **** {
 553              	 .loc 2 188 0
 554              	 .cfi_startproc
 555              	 
 556              	 
 557 0000 80B5     	 push {r7,lr}
 558              	.LCFI41:
 559              	 .cfi_def_cfa_offset 8
 560              	 .cfi_offset 7,-8
 561              	 .cfi_offset 14,-4
 562 0002 90B0     	 sub sp,sp,#64
 563              	.LCFI42:
 564              	 .cfi_def_cfa_offset 72
 565 0004 00AF     	 add r7,sp,#0
 566              	.LCFI43:
 567              	 .cfi_def_cfa_register 7
 568 0006 7860     	 str r0,[r7,#4]
 569 0008 3960     	 str r1,[r7]
 189:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_brp = 12U ;
 570              	 .loc 2 189 0
 571 000a 0C23     	 movs r3,#12
 572 000c FB63     	 str r3,[r7,#60]
 190:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t temp_tseg1 = 12U;
 573              	 .loc 2 190 0
 574 000e 0C23     	 movs r3,#12
 575 0010 BB63     	 str r3,[r7,#56]
 191:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_brp = 0U;
 576              	 .loc 2 191 0
 577 0012 0023     	 movs r3,#0
 578 0014 7B63     	 str r3,[r7,#52]
 192:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg1 = 1U;
 579              	 .loc 2 192 0
 580 0016 0123     	 movs r3,#1
 581 0018 3B63     	 str r3,[r7,#48]
 193:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tseg2 = 0U;
 582              	 .loc 2 193 0
 583 001a 0023     	 movs r3,#0
 584 001c 7B61     	 str r3,[r7,#20]
 194:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_tbaud = 0U;
 585              	 .loc 2 194 0
 586 001e 0023     	 movs r3,#0
 587 0020 FB62     	 str r3,[r7,#44]
 195:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t best_error = 10000U;
 588              	 .loc 2 195 0
 589 0022 42F21073 	 movw r3,#10000
 590 0026 BB62     	 str r3,[r7,#40]
 196:../Libraries/XMCLib/src/xmc_can.c **** 
 197:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: rate not supported", (can_bit_time->baudrate
 198:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->baudrate >= 100000U));
 199:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 200:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency <= 120000000U);
 201:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: fCAN not supported",
 202:../Libraries/XMCLib/src/xmc_can.c ****              can_bit_time->can_frequency > 5000000U);
 203:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_NODE_NOMINAL_BIT_TIME_Configure: sample point not supported",
 204:../Libraries/XMCLib/src/xmc_can.c ****              (can_bit_time->sample_point < 10000U) && ((can_bit_time->sample_point > 0U)));
 205:../Libraries/XMCLib/src/xmc_can.c ****        
 206:../Libraries/XMCLib/src/xmc_can.c ****   /*
 207:../Libraries/XMCLib/src/xmc_can.c ****    * Bit timing & sampling
 208:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = (BRP+1)/Fcan if DIV8 = 0
 209:../Libraries/XMCLib/src/xmc_can.c ****    * Tq = 8*(BRP+1)/Fcan if DIV8 = 1
 210:../Libraries/XMCLib/src/xmc_can.c ****    * TSync = 1.Tq
 211:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 = (TSEG1+1)*Tq                >= 3Tq
 212:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 = (TSEG2+1)*Tq                >= 2Tq
 213:../Libraries/XMCLib/src/xmc_can.c ****    * Bit Time = TSync + TSeg1 + TSeg2    >= 8Tq
 214:../Libraries/XMCLib/src/xmc_can.c ****    *
 215:../Libraries/XMCLib/src/xmc_can.c ****    * Resynchronization:
 216:../Libraries/XMCLib/src/xmc_can.c ****    *
 217:../Libraries/XMCLib/src/xmc_can.c ****    * Tsjw = (SJW + 1)*Tq
 218:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg1 >= Tsjw + Tprop
 219:../Libraries/XMCLib/src/xmc_can.c ****    * TSeg2 >= Tsjw
 220:../Libraries/XMCLib/src/xmc_can.c ****    */
 221:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best baudrate */
 222:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_brp = 1U; temp_brp <= 64U; temp_brp++)
 591              	 .loc 2 222 0
 592 0028 0123     	 movs r3,#1
 593 002a FB63     	 str r3,[r7,#60]
 594 002c 67E0     	 b .L22
 595              	.L31:
 596              	.LBB3:
 223:../Libraries/XMCLib/src/xmc_can.c ****   {
 224:../Libraries/XMCLib/src/xmc_can.c **** 
 225:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t f_quanta = (uint32_t)((can_bit_time->can_frequency * 10U) / temp_brp);
 597              	 .loc 2 225 0
 598 002e 3B68     	 ldr r3,[r7]
 599 0030 1A68     	 ldr r2,[r3]
 600 0032 1346     	 mov r3,r2
 601 0034 9B00     	 lsls r3,r3,#2
 602 0036 1344     	 add r3,r3,r2
 603 0038 5B00     	 lsls r3,r3,#1
 604 003a 1A46     	 mov r2,r3
 605 003c FB6B     	 ldr r3,[r7,#60]
 606 003e B2FBF3F3 	 udiv r3,r2,r3
 607 0042 3B61     	 str r3,[r7,#16]
 226:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_tbaud = (uint32_t)(f_quanta / (can_bit_time->baudrate));
 608              	 .loc 2 226 0
 609 0044 3B68     	 ldr r3,[r7]
 610 0046 5B68     	 ldr r3,[r3,#4]
 611 0048 3A69     	 ldr r2,[r7,#16]
 612 004a B2FBF3F3 	 udiv r3,r2,r3
 613 004e 7B62     	 str r3,[r7,#36]
 227:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t temp_baudrate;
 228:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t error;
 229:../Libraries/XMCLib/src/xmc_can.c **** 
 230:../Libraries/XMCLib/src/xmc_can.c ****   if((temp_tbaud % 10U) > 5U)
 614              	 .loc 2 230 0
 615 0050 796A     	 ldr r1,[r7,#36]
 616 0052 5B4B     	 ldr r3,.L39
 617 0054 A3FB0123 	 umull r2,r3,r3,r1
 618 0058 DA08     	 lsrs r2,r3,#3
 619 005a 1346     	 mov r3,r2
 620 005c 9B00     	 lsls r3,r3,#2
 621 005e 1344     	 add r3,r3,r2
 622 0060 5B00     	 lsls r3,r3,#1
 623 0062 CA1A     	 subs r2,r1,r3
 624 0064 052A     	 cmp r2,#5
 625 0066 09D9     	 bls .L23
 231:../Libraries/XMCLib/src/xmc_can.c ****   {
 232:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 626              	 .loc 2 232 0
 627 0068 7B6A     	 ldr r3,[r7,#36]
 628 006a 554A     	 ldr r2,.L39
 629 006c A2FB0323 	 umull r2,r3,r2,r3
 630 0070 DB08     	 lsrs r3,r3,#3
 631 0072 7B62     	 str r3,[r7,#36]
 233:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud++;
 632              	 .loc 2 233 0
 633 0074 7B6A     	 ldr r3,[r7,#36]
 634 0076 0133     	 adds r3,r3,#1
 635 0078 7B62     	 str r3,[r7,#36]
 636 007a 05E0     	 b .L24
 637              	.L23:
 234:../Libraries/XMCLib/src/xmc_can.c ****   }
 235:../Libraries/XMCLib/src/xmc_can.c ****   else
 236:../Libraries/XMCLib/src/xmc_can.c ****   {
 237:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = (uint32_t)(temp_tbaud / 10U);
 638              	 .loc 2 237 0
 639 007c 7B6A     	 ldr r3,[r7,#36]
 640 007e 504A     	 ldr r2,.L39
 641 0080 A2FB0323 	 umull r2,r3,r2,r3
 642 0084 DB08     	 lsrs r3,r3,#3
 643 0086 7B62     	 str r3,[r7,#36]
 644              	.L24:
 238:../Libraries/XMCLib/src/xmc_can.c ****   }
 239:../Libraries/XMCLib/src/xmc_can.c **** 
 240:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_tbaud > 0U)
 645              	 .loc 2 240 0
 646 0088 7B6A     	 ldr r3,[r7,#36]
 647 008a 002B     	 cmp r3,#0
 648 008c 0AD0     	 beq .L25
 241:../Libraries/XMCLib/src/xmc_can.c ****   {
 242:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = (uint32_t) (f_quanta / (temp_tbaud * 10U));
 649              	 .loc 2 242 0
 650 008e 7A6A     	 ldr r2,[r7,#36]
 651 0090 1346     	 mov r3,r2
 652 0092 9B00     	 lsls r3,r3,#2
 653 0094 1344     	 add r3,r3,r2
 654 0096 5B00     	 lsls r3,r3,#1
 655 0098 1A46     	 mov r2,r3
 656 009a 3B69     	 ldr r3,[r7,#16]
 657 009c B3FBF2F3 	 udiv r3,r3,r2
 658 00a0 3B62     	 str r3,[r7,#32]
 659 00a2 07E0     	 b .L26
 660              	.L25:
 243:../Libraries/XMCLib/src/xmc_can.c ****   }
 244:../Libraries/XMCLib/src/xmc_can.c ****   else
 245:../Libraries/XMCLib/src/xmc_can.c ****   {
 246:../Libraries/XMCLib/src/xmc_can.c ****     temp_baudrate = f_quanta / 10U;
 661              	 .loc 2 246 0
 662 00a4 3B69     	 ldr r3,[r7,#16]
 663 00a6 464A     	 ldr r2,.L39
 664 00a8 A2FB0323 	 umull r2,r3,r2,r3
 665 00ac DB08     	 lsrs r3,r3,#3
 666 00ae 3B62     	 str r3,[r7,#32]
 247:../Libraries/XMCLib/src/xmc_can.c ****   temp_tbaud = 1;
 667              	 .loc 2 247 0
 668 00b0 0123     	 movs r3,#1
 669 00b2 7B62     	 str r3,[r7,#36]
 670              	.L26:
 248:../Libraries/XMCLib/src/xmc_can.c ****   }
 249:../Libraries/XMCLib/src/xmc_can.c **** 
 250:../Libraries/XMCLib/src/xmc_can.c ****   if(temp_baudrate >= can_bit_time->baudrate)
 671              	 .loc 2 250 0
 672 00b4 3B68     	 ldr r3,[r7]
 673 00b6 5A68     	 ldr r2,[r3,#4]
 674 00b8 3B6A     	 ldr r3,[r7,#32]
 675 00ba 9A42     	 cmp r2,r3
 676 00bc 05D8     	 bhi .L27
 251:../Libraries/XMCLib/src/xmc_can.c ****   {
 252:../Libraries/XMCLib/src/xmc_can.c ****   error = temp_baudrate - can_bit_time->baudrate;
 677              	 .loc 2 252 0
 678 00be 3B68     	 ldr r3,[r7]
 679 00c0 5B68     	 ldr r3,[r3,#4]
 680 00c2 3A6A     	 ldr r2,[r7,#32]
 681 00c4 D31A     	 subs r3,r2,r3
 682 00c6 FB61     	 str r3,[r7,#28]
 683 00c8 04E0     	 b .L28
 684              	.L27:
 253:../Libraries/XMCLib/src/xmc_can.c ****   }
 254:../Libraries/XMCLib/src/xmc_can.c ****   else
 255:../Libraries/XMCLib/src/xmc_can.c ****   {
 256:../Libraries/XMCLib/src/xmc_can.c ****   error = can_bit_time->baudrate - temp_baudrate;
 685              	 .loc 2 256 0
 686 00ca 3B68     	 ldr r3,[r7]
 687 00cc 5A68     	 ldr r2,[r3,#4]
 688 00ce 3B6A     	 ldr r3,[r7,#32]
 689 00d0 D31A     	 subs r3,r2,r3
 690 00d2 FB61     	 str r3,[r7,#28]
 691              	.L28:
 257:../Libraries/XMCLib/src/xmc_can.c ****   }
 258:../Libraries/XMCLib/src/xmc_can.c **** 
 259:../Libraries/XMCLib/src/xmc_can.c ****   if ((temp_tbaud <= 20U) && (best_error > error))
 692              	 .loc 2 259 0
 693 00d4 7B6A     	 ldr r3,[r7,#36]
 694 00d6 142B     	 cmp r3,#20
 695 00d8 0ED8     	 bhi .L29
 696              	 .loc 2 259 0 is_stmt 0 discriminator 1
 697 00da BA6A     	 ldr r2,[r7,#40]
 698 00dc FB69     	 ldr r3,[r7,#28]
 699 00de 9A42     	 cmp r2,r3
 700 00e0 0AD9     	 bls .L29
 260:../Libraries/XMCLib/src/xmc_can.c ****   {
 261:../Libraries/XMCLib/src/xmc_can.c ****     best_brp = temp_brp;
 701              	 .loc 2 261 0 is_stmt 1
 702 00e2 FB6B     	 ldr r3,[r7,#60]
 703 00e4 7B63     	 str r3,[r7,#52]
 262:../Libraries/XMCLib/src/xmc_can.c ****     best_tbaud = temp_tbaud;
 704              	 .loc 2 262 0
 705 00e6 7B6A     	 ldr r3,[r7,#36]
 706 00e8 FB62     	 str r3,[r7,#44]
 263:../Libraries/XMCLib/src/xmc_can.c ****     best_error = (error);
 707              	 .loc 2 263 0
 708 00ea FB69     	 ldr r3,[r7,#28]
 709 00ec BB62     	 str r3,[r7,#40]
 264:../Libraries/XMCLib/src/xmc_can.c **** 
 265:../Libraries/XMCLib/src/xmc_can.c ****     if (error < 1000U)
 710              	 .loc 2 265 0
 711 00ee FB69     	 ldr r3,[r7,#28]
 712 00f0 B3F57A7F 	 cmp r3,#1000
 713 00f4 00D2     	 bcs .L29
 266:../Libraries/XMCLib/src/xmc_can.c ****     {
 267:../Libraries/XMCLib/src/xmc_can.c ****       break;
 714              	 .loc 2 267 0
 715 00f6 05E0     	 b .L30
 716              	.L29:
 717              	.LBE3:
 222:../Libraries/XMCLib/src/xmc_can.c ****   {
 718              	 .loc 2 222 0 discriminator 2
 719 00f8 FB6B     	 ldr r3,[r7,#60]
 720 00fa 0133     	 adds r3,r3,#1
 721 00fc FB63     	 str r3,[r7,#60]
 722              	.L22:
 222:../Libraries/XMCLib/src/xmc_can.c ****   {
 723              	 .loc 2 222 0 is_stmt 0 discriminator 1
 724 00fe FB6B     	 ldr r3,[r7,#60]
 725 0100 402B     	 cmp r3,#64
 726 0102 94D9     	 bls .L31
 727              	.L30:
 268:../Libraries/XMCLib/src/xmc_can.c ****     }
 269:../Libraries/XMCLib/src/xmc_can.c ****    }
 270:../Libraries/XMCLib/src/xmc_can.c ****   }
 271:../Libraries/XMCLib/src/xmc_can.c ****   /* search for best sample point */
 272:../Libraries/XMCLib/src/xmc_can.c ****   best_error = 10000U;
 728              	 .loc 2 272 0 is_stmt 1
 729 0104 42F21073 	 movw r3,#10000
 730 0108 BB62     	 str r3,[r7,#40]
 273:../Libraries/XMCLib/src/xmc_can.c **** 
 274:../Libraries/XMCLib/src/xmc_can.c ****   for (temp_tseg1 = 64U; temp_tseg1 >= 3U; temp_tseg1--)
 731              	 .loc 2 274 0
 732 010a 4023     	 movs r3,#64
 733 010c BB63     	 str r3,[r7,#56]
 734 010e 2EE0     	 b .L32
 735              	.L38:
 736              	.LBB4:
 275:../Libraries/XMCLib/src/xmc_can.c ****   {
 276:../Libraries/XMCLib/src/xmc_can.c ****     uint32_t tempSamplePoint = ((temp_tseg1 + 1U) * 10000U) / best_tbaud;
 737              	 .loc 2 276 0
 738 0110 BB6B     	 ldr r3,[r7,#56]
 739 0112 0133     	 adds r3,r3,#1
 740 0114 42F21072 	 movw r2,#10000
 741 0118 02FB03F2 	 mul r2,r2,r3
 742 011c FB6A     	 ldr r3,[r7,#44]
 743 011e B2FBF3F3 	 udiv r3,r2,r3
 744 0122 FB60     	 str r3,[r7,#12]
 277:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t error;
 278:../Libraries/XMCLib/src/xmc_can.c ****   if (tempSamplePoint >= can_bit_time->sample_point)
 745              	 .loc 2 278 0
 746 0124 3B68     	 ldr r3,[r7]
 747 0126 1B89     	 ldrh r3,[r3,#8]
 748 0128 1A46     	 mov r2,r3
 749 012a FB68     	 ldr r3,[r7,#12]
 750 012c 9A42     	 cmp r2,r3
 751 012e 06D8     	 bhi .L33
 279:../Libraries/XMCLib/src/xmc_can.c ****   {
 280:../Libraries/XMCLib/src/xmc_can.c ****       error = tempSamplePoint  - can_bit_time->sample_point;
 752              	 .loc 2 280 0
 753 0130 3B68     	 ldr r3,[r7]
 754 0132 1B89     	 ldrh r3,[r3,#8]
 755 0134 1A46     	 mov r2,r3
 756 0136 FB68     	 ldr r3,[r7,#12]
 757 0138 9B1A     	 subs r3,r3,r2
 758 013a BB61     	 str r3,[r7,#24]
 759 013c 05E0     	 b .L34
 760              	.L33:
 281:../Libraries/XMCLib/src/xmc_can.c ****   }
 282:../Libraries/XMCLib/src/xmc_can.c ****   else
 283:../Libraries/XMCLib/src/xmc_can.c ****   {
 284:../Libraries/XMCLib/src/xmc_can.c ****     error = can_bit_time->sample_point  - tempSamplePoint;
 761              	 .loc 2 284 0
 762 013e 3B68     	 ldr r3,[r7]
 763 0140 1B89     	 ldrh r3,[r3,#8]
 764 0142 1A46     	 mov r2,r3
 765 0144 FB68     	 ldr r3,[r7,#12]
 766 0146 D31A     	 subs r3,r2,r3
 767 0148 BB61     	 str r3,[r7,#24]
 768              	.L34:
 285:../Libraries/XMCLib/src/xmc_can.c ****   }
 286:../Libraries/XMCLib/src/xmc_can.c ****     if (best_error > error)
 769              	 .loc 2 286 0
 770 014a BA6A     	 ldr r2,[r7,#40]
 771 014c BB69     	 ldr r3,[r7,#24]
 772 014e 9A42     	 cmp r2,r3
 773 0150 03D9     	 bls .L35
 287:../Libraries/XMCLib/src/xmc_can.c ****     {
 288:../Libraries/XMCLib/src/xmc_can.c ****       best_tseg1 = temp_tseg1;
 774              	 .loc 2 288 0
 775 0152 BB6B     	 ldr r3,[r7,#56]
 776 0154 3B63     	 str r3,[r7,#48]
 289:../Libraries/XMCLib/src/xmc_can.c ****       best_error = error;
 777              	 .loc 2 289 0
 778 0156 BB69     	 ldr r3,[r7,#24]
 779 0158 BB62     	 str r3,[r7,#40]
 780              	.L35:
 290:../Libraries/XMCLib/src/xmc_can.c ****     }
 291:../Libraries/XMCLib/src/xmc_can.c ****     if (tempSamplePoint < (can_bit_time->sample_point))
 781              	 .loc 2 291 0
 782 015a 3B68     	 ldr r3,[r7]
 783 015c 1B89     	 ldrh r3,[r3,#8]
 784 015e 1A46     	 mov r2,r3
 785 0160 FB68     	 ldr r3,[r7,#12]
 786 0162 9A42     	 cmp r2,r3
 787 0164 00D9     	 bls .L36
 292:../Libraries/XMCLib/src/xmc_can.c ****     {
 293:../Libraries/XMCLib/src/xmc_can.c ****       break;
 788              	 .loc 2 293 0
 789 0166 05E0     	 b .L37
 790              	.L36:
 791              	.LBE4:
 274:../Libraries/XMCLib/src/xmc_can.c ****   {
 792              	 .loc 2 274 0 discriminator 2
 793 0168 BB6B     	 ldr r3,[r7,#56]
 794 016a 013B     	 subs r3,r3,#1
 795 016c BB63     	 str r3,[r7,#56]
 796              	.L32:
 274:../Libraries/XMCLib/src/xmc_can.c ****   {
 797              	 .loc 2 274 0 is_stmt 0 discriminator 1
 798 016e BB6B     	 ldr r3,[r7,#56]
 799 0170 022B     	 cmp r3,#2
 800 0172 CDD8     	 bhi .L38
 801              	.L37:
 294:../Libraries/XMCLib/src/xmc_can.c ****     }
 295:../Libraries/XMCLib/src/xmc_can.c ****   }
 296:../Libraries/XMCLib/src/xmc_can.c **** 
 297:../Libraries/XMCLib/src/xmc_can.c ****   best_tseg2 = best_tbaud - best_tseg1 - 1U;
 802              	 .loc 2 297 0 is_stmt 1
 803 0174 FA6A     	 ldr r2,[r7,#44]
 804 0176 3B6B     	 ldr r3,[r7,#48]
 805 0178 D31A     	 subs r3,r2,r3
 806 017a 013B     	 subs r3,r3,#1
 807 017c 7B61     	 str r3,[r7,#20]
 298:../Libraries/XMCLib/src/xmc_can.c **** 
 299:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_EnableConfigurationChange(can_node);
 808              	 .loc 2 299 0
 809 017e 7868     	 ldr r0,[r7,#4]
 810 0180 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 300:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure bit timing register */
 301:../Libraries/XMCLib/src/xmc_can.c ****   can_node->NBTR = (((uint32_t)(best_tseg2 - 1u) << CAN_NODE_NBTR_TSEG2_Pos) & (uint32_t)CAN_NODE_N
 811              	 .loc 2 301 0
 812 0184 7B69     	 ldr r3,[r7,#20]
 813 0186 013B     	 subs r3,r3,#1
 814 0188 1B03     	 lsls r3,r3,#12
 815 018a 03F4E042 	 and r2,r3,#28672
 302:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 816              	 .loc 2 302 0
 817 018e 3B68     	 ldr r3,[r7]
 818 0190 5B89     	 ldrh r3,[r3,#10]
 819 0192 013B     	 subs r3,r3,#1
 820 0194 9B01     	 lsls r3,r3,#6
 821 0196 DBB2     	 uxtb r3,r3
 301:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 822              	 .loc 2 301 0
 823 0198 1A43     	 orrs r2,r2,r3
 303:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_tseg1-1U) << CAN_NODE_NBTR_TSEG1_Pos) & (uint32_t)CAN_NODE_NBT
 824              	 .loc 2 303 0
 825 019a 3B6B     	 ldr r3,[r7,#48]
 826 019c 013B     	 subs r3,r3,#1
 827 019e 1B02     	 lsls r3,r3,#8
 828 01a0 03F47063 	 and r3,r3,#3840
 302:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 829              	 .loc 2 302 0
 830 01a4 1A43     	 orrs r2,r2,r3
 304:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)(best_brp - 1U) << CAN_NODE_NBTR_BRP_Pos) & (uint32_t)CAN_NODE_NBTR_
 831              	 .loc 2 304 0
 832 01a6 7B6B     	 ldr r3,[r7,#52]
 833 01a8 013B     	 subs r3,r3,#1
 834 01aa 03F03F03 	 and r3,r3,#63
 835 01ae 1A43     	 orrs r2,r2,r3
 301:../Libraries/XMCLib/src/xmc_can.c ****                    ((((uint32_t)((uint32_t)(can_bit_time->sjw)-1U) << CAN_NODE_NBTR_SJW_Pos)) & (ui
 836              	 .loc 2 301 0
 837 01b0 7B68     	 ldr r3,[r7,#4]
 838 01b2 1A61     	 str r2,[r3,#16]
 305:../Libraries/XMCLib/src/xmc_can.c ****                    (((uint32_t)0U << CAN_NODE_NBTR_DIV8_Pos) & (uint32_t)CAN_NODE_NBTR_DIV8_Msk);
 306:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_NODE_DisableConfigurationChange(can_node);
 839              	 .loc 2 306 0
 840 01b4 7868     	 ldr r0,[r7,#4]
 841 01b6 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 307:../Libraries/XMCLib/src/xmc_can.c **** }
 842              	 .loc 2 307 0
 843 01ba 4037     	 adds r7,r7,#64
 844              	.LCFI44:
 845              	 .cfi_def_cfa_offset 8
 846 01bc BD46     	 mov sp,r7
 847              	.LCFI45:
 848              	 .cfi_def_cfa_register 13
 849              	 
 850 01be 80BD     	 pop {r7,pc}
 851              	.L40:
 852              	 .align 2
 853              	.L39:
 854 01c0 CDCCCCCC 	 .word -858993459
 855              	 .cfi_endproc
 856              	.LFE225:
 858              	 .section .text.XMC_CAN_AllocateMOtoNodeList,"ax",%progbits
 859              	 .align 2
 860              	 .global XMC_CAN_AllocateMOtoNodeList
 861              	 .thumb
 862              	 .thumb_func
 864              	XMC_CAN_AllocateMOtoNodeList:
 865              	.LFB226:
 308:../Libraries/XMCLib/src/xmc_can.c **** /* Function to allocate message object from free list to node list */
 309:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 310:../Libraries/XMCLib/src/xmc_can.c **** {
 866              	 .loc 2 310 0
 867              	 .cfi_startproc
 868              	 
 869              	 
 870 0000 80B5     	 push {r7,lr}
 871              	.LCFI46:
 872              	 .cfi_def_cfa_offset 8
 873              	 .cfi_offset 7,-8
 874              	 .cfi_offset 14,-4
 875 0002 82B0     	 sub sp,sp,#8
 876              	.LCFI47:
 877              	 .cfi_def_cfa_offset 16
 878 0004 00AF     	 add r7,sp,#0
 879              	.LCFI48:
 880              	 .cfi_def_cfa_register 7
 881 0006 7860     	 str r0,[r7,#4]
 882 0008 0B46     	 mov r3,r1
 883 000a FB70     	 strb r3,[r7,#3]
 884 000c 1346     	 mov r3,r2
 885 000e BB70     	 strb r3,[r7,#2]
 311:../Libraries/XMCLib/src/xmc_can.c ****   /* wait while panel operation is in progress. */
 312:../Libraries/XMCLib/src/xmc_can.c ****   while (XMC_CAN_IsPanelControlReady(obj) == false)
 886              	 .loc 2 312 0
 887 0010 00BF     	 nop
 888              	.L42:
 889              	 .loc 2 312 0 is_stmt 0 discriminator 1
 890 0012 7868     	 ldr r0,[r7,#4]
 891 0014 FFF7FEFF 	 bl XMC_CAN_IsPanelControlReady
 892 0018 0346     	 mov r3,r0
 893 001a 83F00103 	 eor r3,r3,#1
 894 001e DBB2     	 uxtb r3,r3
 895 0020 002B     	 cmp r3,#0
 896 0022 F6D1     	 bne .L42
 313:../Libraries/XMCLib/src/xmc_can.c ****   {
 314:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 315:../Libraries/XMCLib/src/xmc_can.c ****   };
 316:../Libraries/XMCLib/src/xmc_can.c **** 
 317:../Libraries/XMCLib/src/xmc_can.c ****   /* Panel Command for  allocation of MO to node list */
 318:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_PanelControl(obj, XMC_CAN_PANCMD_STATIC_ALLOCATE,mo_num,(node_num + 1U));
 897              	 .loc 2 318 0 is_stmt 1
 898 0024 FB78     	 ldrb r3,[r7,#3]
 899 0026 0133     	 adds r3,r3,#1
 900 0028 DBB2     	 uxtb r3,r3
 901 002a BA78     	 ldrb r2,[r7,#2]
 902 002c 7868     	 ldr r0,[r7,#4]
 903 002e 0221     	 movs r1,#2
 904 0030 FFF7FEFF 	 bl XMC_CAN_PanelControl
 319:../Libraries/XMCLib/src/xmc_can.c **** }
 905              	 .loc 2 319 0
 906 0034 0837     	 adds r7,r7,#8
 907              	.LCFI49:
 908              	 .cfi_def_cfa_offset 8
 909 0036 BD46     	 mov sp,r7
 910              	.LCFI50:
 911              	 .cfi_def_cfa_register 13
 912              	 
 913 0038 80BD     	 pop {r7,pc}
 914              	 .cfi_endproc
 915              	.LFE226:
 917 003a 00BF     	 .section .text.XMC_CAN_Disable,"ax",%progbits
 918              	 .align 2
 919              	 .global XMC_CAN_Disable
 920              	 .thumb
 921              	 .thumb_func
 923              	XMC_CAN_Disable:
 924              	.LFB227:
 320:../Libraries/XMCLib/src/xmc_can.c **** 
 321:../Libraries/XMCLib/src/xmc_can.c **** /* Disable XMC_CAN Peripheral */
 322:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Disable(XMC_CAN_t *const obj)
 323:../Libraries/XMCLib/src/xmc_can.c **** {
 925              	 .loc 2 323 0
 926              	 .cfi_startproc
 927              	 
 928              	 
 929 0000 80B5     	 push {r7,lr}
 930              	.LCFI51:
 931              	 .cfi_def_cfa_offset 8
 932              	 .cfi_offset 7,-8
 933              	 .cfi_offset 14,-4
 934 0002 82B0     	 sub sp,sp,#8
 935              	.LCFI52:
 936              	 .cfi_def_cfa_offset 16
 937 0004 00AF     	 add r7,sp,#0
 938              	.LCFI53:
 939              	 .cfi_def_cfa_register 7
 940 0006 7860     	 str r0,[r7,#4]
 324:../Libraries/XMCLib/src/xmc_can.c ****   /* Disable CAN Module */
 325:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC = CAN_CLC_DISR_Msk;
 941              	 .loc 2 325 0
 942 0008 7B68     	 ldr r3,[r7,#4]
 943 000a 0122     	 movs r2,#1
 944 000c 1A60     	 str r2,[r3]
 326:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 327:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 945              	 .loc 2 327 0
 946 000e 0348     	 ldr r0,.L44
 947 0010 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 328:../Libraries/XMCLib/src/xmc_can.c **** #endif
 329:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 330:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 331:../Libraries/XMCLib/src/xmc_can.c **** #endif
 332:../Libraries/XMCLib/src/xmc_can.c **** }
 948              	 .loc 2 332 0
 949 0014 0837     	 adds r7,r7,#8
 950              	.LCFI54:
 951              	 .cfi_def_cfa_offset 8
 952 0016 BD46     	 mov sp,r7
 953              	.LCFI55:
 954              	 .cfi_def_cfa_register 13
 955              	 
 956 0018 80BD     	 pop {r7,pc}
 957              	.L45:
 958 001a 00BF     	 .align 2
 959              	.L44:
 960 001c 10000010 	 .word 268435472
 961              	 .cfi_endproc
 962              	.LFE227:
 964              	 .section .text.XMC_CAN_Enable,"ax",%progbits
 965              	 .align 2
 966              	 .global XMC_CAN_Enable
 967              	 .thumb
 968              	 .thumb_func
 970              	XMC_CAN_Enable:
 971              	.LFB228:
 333:../Libraries/XMCLib/src/xmc_can.c **** 
 334:../Libraries/XMCLib/src/xmc_can.c **** /* Enable XMC_CAN Peripheral */
 335:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Enable(XMC_CAN_t *const obj)
 336:../Libraries/XMCLib/src/xmc_can.c **** {
 972              	 .loc 2 336 0
 973              	 .cfi_startproc
 974              	 
 975              	 
 976 0000 80B5     	 push {r7,lr}
 977              	.LCFI56:
 978              	 .cfi_def_cfa_offset 8
 979              	 .cfi_offset 7,-8
 980              	 .cfi_offset 14,-4
 981 0002 82B0     	 sub sp,sp,#8
 982              	.LCFI57:
 983              	 .cfi_def_cfa_offset 16
 984 0004 00AF     	 add r7,sp,#0
 985              	.LCFI58:
 986              	 .cfi_def_cfa_register 7
 987 0006 7860     	 str r0,[r7,#4]
 337:../Libraries/XMCLib/src/xmc_can.c **** #if defined(CLOCK_GATING_SUPPORTED)
 338:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_MCAN);
 339:../Libraries/XMCLib/src/xmc_can.c **** #endif
 340:../Libraries/XMCLib/src/xmc_can.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 341:../Libraries/XMCLib/src/xmc_can.c ****   XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_MCAN);
 988              	 .loc 2 341 0
 989 0008 0948     	 ldr r0,.L48
 990 000a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 342:../Libraries/XMCLib/src/xmc_can.c **** #endif
 343:../Libraries/XMCLib/src/xmc_can.c ****   /* Enable CAN Module */
 344:../Libraries/XMCLib/src/xmc_can.c ****   obj->CLC &= ~(uint32_t)CAN_CLC_DISR_Msk;
 991              	 .loc 2 344 0
 992 000e 7B68     	 ldr r3,[r7,#4]
 993 0010 1B68     	 ldr r3,[r3]
 994 0012 23F00102 	 bic r2,r3,#1
 995 0016 7B68     	 ldr r3,[r7,#4]
 996 0018 1A60     	 str r2,[r3]
 345:../Libraries/XMCLib/src/xmc_can.c ****   while (obj->CLC & CAN_CLC_DISS_Msk)
 997              	 .loc 2 345 0
 998 001a 00BF     	 nop
 999              	.L47:
 1000              	 .loc 2 345 0 is_stmt 0 discriminator 1
 1001 001c 7B68     	 ldr r3,[r7,#4]
 1002 001e 1B68     	 ldr r3,[r3]
 1003 0020 03F00203 	 and r3,r3,#2
 1004 0024 002B     	 cmp r3,#0
 1005 0026 F9D1     	 bne .L47
 346:../Libraries/XMCLib/src/xmc_can.c ****   {
 347:../Libraries/XMCLib/src/xmc_can.c ****     /*Do nothing*/
 348:../Libraries/XMCLib/src/xmc_can.c ****   };
 349:../Libraries/XMCLib/src/xmc_can.c **** }
 1006              	 .loc 2 349 0 is_stmt 1
 1007 0028 0837     	 adds r7,r7,#8
 1008              	.LCFI59:
 1009              	 .cfi_def_cfa_offset 8
 1010 002a BD46     	 mov sp,r7
 1011              	.LCFI60:
 1012              	 .cfi_def_cfa_register 13
 1013              	 
 1014 002c 80BD     	 pop {r7,pc}
 1015              	.L49:
 1016 002e 00BF     	 .align 2
 1017              	.L48:
 1018 0030 10000010 	 .word 268435472
 1019              	 .cfi_endproc
 1020              	.LFE228:
 1022              	 .section .text.XMC_CAN_Init,"ax",%progbits
 1023              	 .align 2
 1024              	 .global XMC_CAN_Init
 1025              	 .thumb
 1026              	 .thumb_func
 1028              	XMC_CAN_Init:
 1029              	.LFB229:
 350:../Libraries/XMCLib/src/xmc_can.c **** 
 351:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 352:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 353:../Libraries/XMCLib/src/xmc_can.c **** {
 354:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 355:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 356:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 357:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 358:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 359:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 360:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 361:../Libraries/XMCLib/src/xmc_can.c **** 
 362:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 363:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 364:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 365:../Libraries/XMCLib/src/xmc_can.c **** 
 366:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 367:../Libraries/XMCLib/src/xmc_can.c **** 
 368:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 369:../Libraries/XMCLib/src/xmc_can.c **** 
 370:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 371:../Libraries/XMCLib/src/xmc_can.c **** 
 372:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 373:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 374:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 375:../Libraries/XMCLib/src/xmc_can.c **** 
 376:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 377:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 378:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 379:../Libraries/XMCLib/src/xmc_can.c **** 
 380:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 381:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 382:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 383:../Libraries/XMCLib/src/xmc_can.c **** 
 384:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 385:../Libraries/XMCLib/src/xmc_can.c **** 
 386:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 387:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 388:../Libraries/XMCLib/src/xmc_can.c **** 
 389:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 390:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 391:../Libraries/XMCLib/src/xmc_can.c **** 
 392:../Libraries/XMCLib/src/xmc_can.c **** }
 393:../Libraries/XMCLib/src/xmc_can.c **** 
 394:../Libraries/XMCLib/src/xmc_can.c **** #else
 395:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN GLOBAL Object */
 396:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency)
 397:../Libraries/XMCLib/src/xmc_can.c **** {
 1030              	 .loc 2 397 0
 1031              	 .cfi_startproc
 1032              	 
 1033              	 
 1034 0000 80B5     	 push {r7,lr}
 1035              	.LCFI61:
 1036              	 .cfi_def_cfa_offset 8
 1037              	 .cfi_offset 7,-8
 1038              	 .cfi_offset 14,-4
 1039 0002 8CB0     	 sub sp,sp,#48
 1040              	.LCFI62:
 1041              	 .cfi_def_cfa_offset 56
 1042 0004 00AF     	 add r7,sp,#0
 1043              	.LCFI63:
 1044              	 .cfi_def_cfa_register 7
 1045 0006 7860     	 str r0,[r7,#4]
 1046 0008 3960     	 str r1,[r7]
 398:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t  step_n, step_f;
 399:../Libraries/XMCLib/src/xmc_can.c ****   bool normal_divider;
 400:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n, freq_f;
 401:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step;
 402:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t can_frequency_khz;
 403:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency_khz;
 404:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_DM_t can_divider_mode;
 405:../Libraries/XMCLib/src/xmc_can.c **** 
 406:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency = (XMC_SCU_CLOCK_GetPeripheralClockFrequency());
 1047              	 .loc 2 406 0
 1048 000a FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1049 000e F862     	 str r0,[r7,#44]
 407:../Libraries/XMCLib/src/xmc_can.c **** 
 408:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 409:../Libraries/XMCLib/src/xmc_can.c **** 
 410:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 411:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1050              	 .loc 2 411 0
 1051 0010 7868     	 ldr r0,[r7,#4]
 1052 0012 FFF7FEFF 	 bl XMC_CAN_Enable
 412:../Libraries/XMCLib/src/xmc_can.c **** 
 413:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 414:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1053              	 .loc 2 414 0
 1054 0016 FA6A     	 ldr r2,[r7,#44]
 1055 0018 3B68     	 ldr r3,[r7]
 1056 001a B2FBF3F3 	 udiv r3,r2,r3
 1057 001e C3F58063 	 rsb r3,r3,#1024
 1058 0022 0020     	 movs r0,#0
 1059 0024 1946     	 mov r1,r3
 1060 0026 FFF7FEFF 	 bl max
 1061 002a 0346     	 mov r3,r0
 1062 002c 1846     	 mov r0,r3
 1063 002e 40F2FF31 	 movw r1,#1023
 1064 0032 FFF7FEFF 	 bl min
 1065 0036 B862     	 str r0,[r7,#40]
 415:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t) (peripheral_frequency / (1024U - step_n));
 1066              	 .loc 2 415 0
 1067 0038 BB6A     	 ldr r3,[r7,#40]
 1068 003a C3F58063 	 rsb r3,r3,#1024
 1069 003e FA6A     	 ldr r2,[r7,#44]
 1070 0040 B2FBF3F3 	 udiv r3,r2,r3
 1071 0044 7B62     	 str r3,[r7,#36]
 416:../Libraries/XMCLib/src/xmc_can.c **** 
 417:../Libraries/XMCLib/src/xmc_can.c ****   /* Fractional divider mode */
 418:../Libraries/XMCLib/src/xmc_can.c ****   can_frequency_khz = (uint32_t) (can_frequency >> 6);
 1072              	 .loc 2 418 0
 1073 0046 3B68     	 ldr r3,[r7]
 1074 0048 9B09     	 lsrs r3,r3,#6
 1075 004a 3B62     	 str r3,[r7,#32]
 419:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency_khz = (uint32_t)(peripheral_frequency >> 6);
 1076              	 .loc 2 419 0
 1077 004c FB6A     	 ldr r3,[r7,#44]
 1078 004e 9B09     	 lsrs r3,r3,#6
 1079 0050 FB61     	 str r3,[r7,#28]
 420:../Libraries/XMCLib/src/xmc_can.c **** 
 421:../Libraries/XMCLib/src/xmc_can.c ****   step_f = (uint32_t)(min( (((1024U * can_frequency_khz) / peripheral_frequency_khz) ), 1023U ));
 1080              	 .loc 2 421 0
 1081 0052 3B6A     	 ldr r3,[r7,#32]
 1082 0054 9A02     	 lsls r2,r3,#10
 1083 0056 FB69     	 ldr r3,[r7,#28]
 1084 0058 B2FBF3F3 	 udiv r3,r2,r3
 1085 005c 1846     	 mov r0,r3
 1086 005e 40F2FF31 	 movw r1,#1023
 1087 0062 FFF7FEFF 	 bl min
 1088 0066 B861     	 str r0,[r7,#24]
 422:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = (uint32_t)((peripheral_frequency_khz * step_f) / 1024U);
 1089              	 .loc 2 422 0
 1090 0068 FB69     	 ldr r3,[r7,#28]
 1091 006a BA69     	 ldr r2,[r7,#24]
 1092 006c 02FB03F3 	 mul r3,r2,r3
 1093 0070 9B0A     	 lsrs r3,r3,#10
 1094 0072 7B61     	 str r3,[r7,#20]
 423:../Libraries/XMCLib/src/xmc_can.c ****   freq_f = freq_f << 6;
 1095              	 .loc 2 423 0
 1096 0074 7B69     	 ldr r3,[r7,#20]
 1097 0076 9B01     	 lsls r3,r3,#6
 1098 0078 7B61     	 str r3,[r7,#20]
 424:../Libraries/XMCLib/src/xmc_can.c **** 
 425:../Libraries/XMCLib/src/xmc_can.c ****   normal_divider  = (uint32_t)(can_frequency - freq_n) <= (can_frequency - freq_f);
 1099              	 .loc 2 425 0
 1100 007a 3A68     	 ldr r2,[r7]
 1101 007c 7B6A     	 ldr r3,[r7,#36]
 1102 007e D21A     	 subs r2,r2,r3
 1103 0080 3968     	 ldr r1,[r7]
 1104 0082 7B69     	 ldr r3,[r7,#20]
 1105 0084 CB1A     	 subs r3,r1,r3
 1106 0086 9A42     	 cmp r2,r3
 1107 0088 94BF     	 ite ls
 1108 008a 0123     	 movls r3,#1
 1109 008c 0023     	 movhi r3,#0
 1110 008e FB74     	 strb r3,[r7,#19]
 426:../Libraries/XMCLib/src/xmc_can.c **** 
 427:../Libraries/XMCLib/src/xmc_can.c ****   step   = (normal_divider != 0U) ? step_n : step_f;
 1111              	 .loc 2 427 0
 1112 0090 FB7C     	 ldrb r3,[r7,#19]
 1113 0092 002B     	 cmp r3,#0
 1114 0094 01D0     	 beq .L51
 1115              	 .loc 2 427 0 is_stmt 0 discriminator 1
 1116 0096 BB6A     	 ldr r3,[r7,#40]
 1117 0098 00E0     	 b .L52
 1118              	.L51:
 1119              	 .loc 2 427 0 discriminator 2
 1120 009a BB69     	 ldr r3,[r7,#24]
 1121              	.L52:
 1122              	 .loc 2 427 0 discriminator 4
 1123 009c FB60     	 str r3,[r7,#12]
 428:../Libraries/XMCLib/src/xmc_can.c ****   can_divider_mode = (normal_divider != 0U) ? XMC_CAN_DM_NORMAL : XMC_CAN_DM_FRACTIONAL;
 1124              	 .loc 2 428 0 is_stmt 1 discriminator 4
 1125 009e FB7C     	 ldrb r3,[r7,#19]
 1126 00a0 002B     	 cmp r3,#0
 1127 00a2 01D0     	 beq .L53
 1128              	 .loc 2 428 0 is_stmt 0 discriminator 1
 1129 00a4 0123     	 movs r3,#1
 1130 00a6 00E0     	 b .L54
 1131              	.L53:
 1132              	 .loc 2 428 0 discriminator 2
 1133 00a8 0223     	 movs r3,#2
 1134              	.L54:
 1135              	 .loc 2 428 0 discriminator 4
 1136 00aa FB72     	 strb r3,[r7,#11]
 429:../Libraries/XMCLib/src/xmc_can.c **** 
 430:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1137              	 .loc 2 430 0 is_stmt 1 discriminator 4
 1138 00ac 7B68     	 ldr r3,[r7,#4]
 1139 00ae DB68     	 ldr r3,[r3,#12]
 1140 00b0 23F44343 	 bic r3,r3,#49920
 1141 00b4 23F0FF03 	 bic r3,r3,#255
 1142 00b8 7A68     	 ldr r2,[r7,#4]
 1143 00ba D360     	 str r3,[r2,#12]
 431:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)can_divider_mode << CAN_FDR_DM_Pos) | ((uint32_t)step << CAN_FDR_STEP_Pos)
 1144              	 .loc 2 431 0 discriminator 4
 1145 00bc 7B68     	 ldr r3,[r7,#4]
 1146 00be DA68     	 ldr r2,[r3,#12]
 1147 00c0 FB7A     	 ldrb r3,[r7,#11]
 1148 00c2 9903     	 lsls r1,r3,#14
 1149 00c4 FB68     	 ldr r3,[r7,#12]
 1150 00c6 0B43     	 orrs r3,r3,r1
 1151 00c8 1A43     	 orrs r2,r2,r3
 1152 00ca 7B68     	 ldr r3,[r7,#4]
 1153 00cc DA60     	 str r2,[r3,#12]
 432:../Libraries/XMCLib/src/xmc_can.c **** }
 1154              	 .loc 2 432 0 discriminator 4
 1155 00ce 3037     	 adds r7,r7,#48
 1156              	.LCFI64:
 1157              	 .cfi_def_cfa_offset 8
 1158 00d0 BD46     	 mov sp,r7
 1159              	.LCFI65:
 1160              	 .cfi_def_cfa_register 13
 1161              	 
 1162 00d2 80BD     	 pop {r7,pc}
 1163              	 .cfi_endproc
 1164              	.LFE229:
 1166              	 .section .text.XMC_CAN_SetBaudrateClockSource,"ax",%progbits
 1167              	 .align 2
 1168              	 .global XMC_CAN_SetBaudrateClockSource
 1169              	 .thumb
 1170              	 .thumb_func
 1172              	XMC_CAN_SetBaudrateClockSource:
 1173              	.LFB230:
 433:../Libraries/XMCLib/src/xmc_can.c **** #endif
 434:../Libraries/XMCLib/src/xmc_can.c **** 
 435:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source)
 436:../Libraries/XMCLib/src/xmc_can.c **** {
 1174              	 .loc 2 436 0
 1175              	 .cfi_startproc
 1176              	 
 1177              	 
 1178              	 
 1179 0000 80B4     	 push {r7}
 1180              	.LCFI66:
 1181              	 .cfi_def_cfa_offset 4
 1182              	 .cfi_offset 7,-4
 1183 0002 83B0     	 sub sp,sp,#12
 1184              	.LCFI67:
 1185              	 .cfi_def_cfa_offset 16
 1186 0004 00AF     	 add r7,sp,#0
 1187              	.LCFI68:
 1188              	 .cfi_def_cfa_register 7
 1189 0006 7860     	 str r0,[r7,#4]
 1190 0008 0B46     	 mov r3,r1
 1191 000a FB70     	 strb r3,[r7,#3]
 437:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 438:../Libraries/XMCLib/src/xmc_can.c ****   obj->MCR = (obj->MCR & ~CAN_MCR_CLKSEL_Msk) | source ;
 439:../Libraries/XMCLib/src/xmc_can.c **** #endif  
 440:../Libraries/XMCLib/src/xmc_can.c **** }
 1192              	 .loc 2 440 0
 1193 000c 0C37     	 adds r7,r7,#12
 1194              	.LCFI69:
 1195              	 .cfi_def_cfa_offset 4
 1196 000e BD46     	 mov sp,r7
 1197              	.LCFI70:
 1198              	 .cfi_def_cfa_register 13
 1199              	 
 1200 0010 5DF8047B 	 ldr r7,[sp],#4
 1201              	.LCFI71:
 1202              	 .cfi_restore 7
 1203              	 .cfi_def_cfa_offset 0
 1204 0014 7047     	 bx lr
 1205              	 .cfi_endproc
 1206              	.LFE230:
 1208 0016 00BF     	 .section .text.XMC_CAN_GetBaudrateClockSource,"ax",%progbits
 1209              	 .align 2
 1210              	 .global XMC_CAN_GetBaudrateClockSource
 1211              	 .thumb
 1212              	 .thumb_func
 1214              	XMC_CAN_GetBaudrateClockSource:
 1215              	.LFB231:
 441:../Libraries/XMCLib/src/xmc_can.c **** 
 442:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj)
 443:../Libraries/XMCLib/src/xmc_can.c **** {
 1216              	 .loc 2 443 0
 1217              	 .cfi_startproc
 1218              	 
 1219              	 
 1220              	 
 1221 0000 80B4     	 push {r7}
 1222              	.LCFI72:
 1223              	 .cfi_def_cfa_offset 4
 1224              	 .cfi_offset 7,-4
 1225 0002 83B0     	 sub sp,sp,#12
 1226              	.LCFI73:
 1227              	 .cfi_def_cfa_offset 16
 1228 0004 00AF     	 add r7,sp,#0
 1229              	.LCFI74:
 1230              	 .cfi_def_cfa_register 7
 1231 0006 7860     	 str r0,[r7,#4]
 444:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 445:../Libraries/XMCLib/src/xmc_can.c ****   return ((XMC_CAN_CANCLKSRC_t)((obj->MCR & CAN_MCR_CLKSEL_Msk) >> CAN_MCR_CLKSEL_Pos));
 446:../Libraries/XMCLib/src/xmc_can.c **** #elif (UC_FAMILY == XMC4) 
 447:../Libraries/XMCLib/src/xmc_can.c ****   return XMC_CAN_CANCLKSRC_FPERI;
 1232              	 .loc 2 447 0
 1233 0008 0123     	 movs r3,#1
 448:../Libraries/XMCLib/src/xmc_can.c **** #endif    
 449:../Libraries/XMCLib/src/xmc_can.c **** }
 1234              	 .loc 2 449 0
 1235 000a 1846     	 mov r0,r3
 1236 000c 0C37     	 adds r7,r7,#12
 1237              	.LCFI75:
 1238              	 .cfi_def_cfa_offset 4
 1239 000e BD46     	 mov sp,r7
 1240              	.LCFI76:
 1241              	 .cfi_def_cfa_register 13
 1242              	 
 1243 0010 5DF8047B 	 ldr r7,[sp],#4
 1244              	.LCFI77:
 1245              	 .cfi_restore 7
 1246              	 .cfi_def_cfa_offset 0
 1247 0014 7047     	 bx lr
 1248              	 .cfi_endproc
 1249              	.LFE231:
 1251 0016 00BF     	 .section .text.XMC_CAN_GetBaudrateClockFrequency,"ax",%progbits
 1252              	 .align 2
 1253              	 .global XMC_CAN_GetBaudrateClockFrequency
 1254              	 .thumb
 1255              	 .thumb_func
 1257              	XMC_CAN_GetBaudrateClockFrequency:
 1258              	.LFB232:
 450:../Libraries/XMCLib/src/xmc_can.c **** 
 451:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj)
 452:../Libraries/XMCLib/src/xmc_can.c **** {
 1259              	 .loc 2 452 0
 1260              	 .cfi_startproc
 1261              	 
 1262              	 
 1263 0000 80B5     	 push {r7,lr}
 1264              	.LCFI78:
 1265              	 .cfi_def_cfa_offset 8
 1266              	 .cfi_offset 7,-8
 1267              	 .cfi_offset 14,-4
 1268 0002 84B0     	 sub sp,sp,#16
 1269              	.LCFI79:
 1270              	 .cfi_def_cfa_offset 24
 1271 0004 00AF     	 add r7,sp,#0
 1272              	.LCFI80:
 1273              	 .cfi_def_cfa_register 7
 1274 0006 7860     	 str r0,[r7,#4]
 453:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t frequency;
 454:../Libraries/XMCLib/src/xmc_can.c **** 
 455:../Libraries/XMCLib/src/xmc_can.c **** #if defined(MULTICAN_PLUS)
 456:../Libraries/XMCLib/src/xmc_can.c ****   switch(XMC_CAN_GetBaudrateClockSource(obj))
 457:../Libraries/XMCLib/src/xmc_can.c ****   {
 458:../Libraries/XMCLib/src/xmc_can.c **** #if UC_FAMILY == XMC4
 459:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FPERI:
 460:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 461:../Libraries/XMCLib/src/xmc_can.c ****       break;
 462:../Libraries/XMCLib/src/xmc_can.c **** #else
 463:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_MCLK:
 464:../Libraries/XMCLib/src/xmc_can.c ****       frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 465:../Libraries/XMCLib/src/xmc_can.c ****       break;
 466:../Libraries/XMCLib/src/xmc_can.c **** #endif
 467:../Libraries/XMCLib/src/xmc_can.c ****     case XMC_CAN_CANCLKSRC_FOHP:
 468:../Libraries/XMCLib/src/xmc_can.c ****       frequency = OSCHP_GetFrequency();
 469:../Libraries/XMCLib/src/xmc_can.c ****       break;
 470:../Libraries/XMCLib/src/xmc_can.c **** 
 471:../Libraries/XMCLib/src/xmc_can.c ****     default:
 472:../Libraries/XMCLib/src/xmc_can.c ****       frequency = 0;
 473:../Libraries/XMCLib/src/xmc_can.c ****       break;
 474:../Libraries/XMCLib/src/xmc_can.c ****   }
 475:../Libraries/XMCLib/src/xmc_can.c **** #else
 476:../Libraries/XMCLib/src/xmc_can.c ****   frequency = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 1275              	 .loc 2 476 0
 1276 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 1277 000c F860     	 str r0,[r7,#12]
 477:../Libraries/XMCLib/src/xmc_can.c **** #endif  
 478:../Libraries/XMCLib/src/xmc_can.c **** 
 479:../Libraries/XMCLib/src/xmc_can.c ****   return frequency;
 1278              	 .loc 2 479 0
 1279 000e FB68     	 ldr r3,[r7,#12]
 480:../Libraries/XMCLib/src/xmc_can.c **** }
 1280              	 .loc 2 480 0
 1281 0010 1846     	 mov r0,r3
 1282 0012 1037     	 adds r7,r7,#16
 1283              	.LCFI81:
 1284              	 .cfi_def_cfa_offset 8
 1285 0014 BD46     	 mov sp,r7
 1286              	.LCFI82:
 1287              	 .cfi_def_cfa_register 13
 1288              	 
 1289 0016 80BD     	 pop {r7,pc}
 1290              	 .cfi_endproc
 1291              	.LFE232:
 1293              	 .section .text.XMC_CAN_InitEx,"ax",%progbits
 1294              	 .align 2
 1295              	 .global XMC_CAN_InitEx
 1296              	 .thumb
 1297              	 .thumb_func
 1299              	XMC_CAN_InitEx:
 1300              	.LFB233:
 481:../Libraries/XMCLib/src/xmc_can.c **** 
 482:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency)
 483:../Libraries/XMCLib/src/xmc_can.c **** {
 1301              	 .loc 2 483 0
 1302              	 .cfi_startproc
 1303              	 
 1304              	 
 1305 0000 80B5     	 push {r7,lr}
 1306              	.LCFI83:
 1307              	 .cfi_def_cfa_offset 8
 1308              	 .cfi_offset 7,-8
 1309              	 .cfi_offset 14,-4
 1310 0002 88B0     	 sub sp,sp,#32
 1311              	.LCFI84:
 1312              	 .cfi_def_cfa_offset 40
 1313 0004 00AF     	 add r7,sp,#0
 1314              	.LCFI85:
 1315              	 .cfi_def_cfa_register 7
 1316 0006 F860     	 str r0,[r7,#12]
 1317 0008 0B46     	 mov r3,r1
 1318 000a 7A60     	 str r2,[r7,#4]
 1319 000c FB72     	 strb r3,[r7,#11]
 484:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t step_n;
 485:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t freq_n;
 486:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t peripheral_frequency;
 487:../Libraries/XMCLib/src/xmc_can.c **** 
 488:../Libraries/XMCLib/src/xmc_can.c ****   XMC_ASSERT("XMC_CAN_Init: frequency not supported", can_frequency <= peripheral_frequency);
 489:../Libraries/XMCLib/src/xmc_can.c **** 
 490:../Libraries/XMCLib/src/xmc_can.c ****   /*Enabling the module*/
 491:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_Enable(obj);
 1320              	 .loc 2 491 0
 1321 000e F868     	 ldr r0,[r7,#12]
 1322 0010 FFF7FEFF 	 bl XMC_CAN_Enable
 492:../Libraries/XMCLib/src/xmc_can.c **** 
 493:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_SetBaudrateClockSource(obj, clksrc);
 1323              	 .loc 2 493 0
 1324 0014 FB7A     	 ldrb r3,[r7,#11]
 1325 0016 F868     	 ldr r0,[r7,#12]
 1326 0018 1946     	 mov r1,r3
 1327 001a FFF7FEFF 	 bl XMC_CAN_SetBaudrateClockSource
 494:../Libraries/XMCLib/src/xmc_can.c ****   peripheral_frequency = XMC_CAN_GetBaudrateClockFrequency(obj);
 1328              	 .loc 2 494 0
 1329 001e F868     	 ldr r0,[r7,#12]
 1330 0020 FFF7FEFF 	 bl XMC_CAN_GetBaudrateClockFrequency
 1331 0024 F861     	 str r0,[r7,#28]
 495:../Libraries/XMCLib/src/xmc_can.c **** 
 496:../Libraries/XMCLib/src/xmc_can.c ****   /* Normal divider mode */
 497:../Libraries/XMCLib/src/xmc_can.c ****   step_n = (uint32_t)min(max(0U, (1024U - (peripheral_frequency / can_frequency))), 1023U);
 1332              	 .loc 2 497 0
 1333 0026 FA69     	 ldr r2,[r7,#28]
 1334 0028 7B68     	 ldr r3,[r7,#4]
 1335 002a B2FBF3F3 	 udiv r3,r2,r3
 1336 002e C3F58063 	 rsb r3,r3,#1024
 1337 0032 0020     	 movs r0,#0
 1338 0034 1946     	 mov r1,r3
 1339 0036 FFF7FEFF 	 bl max
 1340 003a 0346     	 mov r3,r0
 1341 003c 1846     	 mov r0,r3
 1342 003e 40F2FF31 	 movw r1,#1023
 1343 0042 FFF7FEFF 	 bl min
 1344 0046 B861     	 str r0,[r7,#24]
 498:../Libraries/XMCLib/src/xmc_can.c ****   freq_n = (uint32_t)(peripheral_frequency / (1024U - step_n));
 1345              	 .loc 2 498 0
 1346 0048 BB69     	 ldr r3,[r7,#24]
 1347 004a C3F58063 	 rsb r3,r3,#1024
 1348 004e FA69     	 ldr r2,[r7,#28]
 1349 0050 B2FBF3F3 	 udiv r3,r2,r3
 1350 0054 7B61     	 str r3,[r7,#20]
 499:../Libraries/XMCLib/src/xmc_can.c **** 
 500:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR &= (uint32_t) ~(CAN_FDR_DM_Msk | CAN_FDR_STEP_Msk);
 1351              	 .loc 2 500 0
 1352 0056 FB68     	 ldr r3,[r7,#12]
 1353 0058 DB68     	 ldr r3,[r3,#12]
 1354 005a 23F44343 	 bic r3,r3,#49920
 1355 005e 23F0FF03 	 bic r3,r3,#255
 1356 0062 FA68     	 ldr r2,[r7,#12]
 1357 0064 D360     	 str r3,[r2,#12]
 501:../Libraries/XMCLib/src/xmc_can.c ****   obj->FDR |= ((uint32_t)XMC_CAN_DM_NORMAL << CAN_FDR_DM_Pos) | ((uint32_t)step_n << CAN_FDR_STEP_P
 1358              	 .loc 2 501 0
 1359 0066 FB68     	 ldr r3,[r7,#12]
 1360 0068 DA68     	 ldr r2,[r3,#12]
 1361 006a BB69     	 ldr r3,[r7,#24]
 1362 006c 1343     	 orrs r3,r3,r2
 1363 006e 43F48042 	 orr r2,r3,#16384
 1364 0072 FB68     	 ldr r3,[r7,#12]
 1365 0074 DA60     	 str r2,[r3,#12]
 502:../Libraries/XMCLib/src/xmc_can.c **** 
 503:../Libraries/XMCLib/src/xmc_can.c ****   return freq_n;
 1366              	 .loc 2 503 0
 1367 0076 7B69     	 ldr r3,[r7,#20]
 504:../Libraries/XMCLib/src/xmc_can.c **** }
 1368              	 .loc 2 504 0
 1369 0078 1846     	 mov r0,r3
 1370 007a 2037     	 adds r7,r7,#32
 1371              	.LCFI86:
 1372              	 .cfi_def_cfa_offset 8
 1373 007c BD46     	 mov sp,r7
 1374              	.LCFI87:
 1375              	 .cfi_def_cfa_register 13
 1376              	 
 1377 007e 80BD     	 pop {r7,pc}
 1378              	 .cfi_endproc
 1379              	.LFE233:
 1381              	 .section .text.XMC_CAN_MO_SetIdentifier,"ax",%progbits
 1382              	 .align 2
 1383              	 .global XMC_CAN_MO_SetIdentifier
 1384              	 .thumb
 1385              	 .thumb_func
 1387              	XMC_CAN_MO_SetIdentifier:
 1388              	.LFB234:
 505:../Libraries/XMCLib/src/xmc_can.c **** 
 506:../Libraries/XMCLib/src/xmc_can.c **** /* Sets the Identifier of the MO */
 507:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetIdentifier(XMC_CAN_MO_t *const can_mo, const uint32_t can_identifier)
 508:../Libraries/XMCLib/src/xmc_can.c **** {
 1389              	 .loc 2 508 0
 1390              	 .cfi_startproc
 1391              	 
 1392              	 
 1393              	 
 1394 0000 80B4     	 push {r7}
 1395              	.LCFI88:
 1396              	 .cfi_def_cfa_offset 4
 1397              	 .cfi_offset 7,-4
 1398 0002 83B0     	 sub sp,sp,#12
 1399              	.LCFI89:
 1400              	 .cfi_def_cfa_offset 16
 1401 0004 00AF     	 add r7,sp,#0
 1402              	.LCFI90:
 1403              	 .cfi_def_cfa_register 7
 1404 0006 7860     	 str r0,[r7,#4]
 1405 0008 3960     	 str r1,[r7]
 509:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1406              	 .loc 2 509 0
 1407 000a 7B68     	 ldr r3,[r7,#4]
 1408 000c 1B68     	 ldr r3,[r3]
 1409 000e 9B69     	 ldr r3,[r3,#24]
 1410 0010 03F00053 	 and r3,r3,#536870912
 1411 0014 002B     	 cmp r3,#0
 1412 0016 0DD1     	 bne .L63
 510:../Libraries/XMCLib/src/xmc_can.c ****   {
 511:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1413              	 .loc 2 511 0
 1414 0018 7B68     	 ldr r3,[r7,#4]
 1415 001a 1B68     	 ldr r3,[r3]
 1416 001c 7A68     	 ldr r2,[r7,#4]
 1417 001e 1268     	 ldr r2,[r2]
 1418 0020 9269     	 ldr r2,[r2,#24]
 1419 0022 02F06041 	 and r1,r2,#-536870912
 512:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1420              	 .loc 2 512 0
 1421 0026 3A68     	 ldr r2,[r7]
 1422 0028 9204     	 lsls r2,r2,#18
 1423 002a 22F06042 	 bic r2,r2,#-536870912
 511:../Libraries/XMCLib/src/xmc_can.c ****                              ((can_identifier << XMC_CAN_MO_MOAR_STDID_Pos) & (uint32_t)CAN_MO_MOAR
 1424              	 .loc 2 511 0
 1425 002e 0A43     	 orrs r2,r2,r1
 1426 0030 9A61     	 str r2,[r3,#24]
 1427 0032 0BE0     	 b .L64
 1428              	.L63:
 513:../Libraries/XMCLib/src/xmc_can.c ****   }
 514:../Libraries/XMCLib/src/xmc_can.c ****   else
 515:../Libraries/XMCLib/src/xmc_can.c ****   {
 516:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOAR = ((can_mo->can_mo_ptr->MOAR) & ~(uint32_t)(CAN_MO_MOAR_ID_Msk)) |
 1429              	 .loc 2 516 0
 1430 0034 7B68     	 ldr r3,[r7,#4]
 1431 0036 1B68     	 ldr r3,[r3]
 1432 0038 7A68     	 ldr r2,[r7,#4]
 1433 003a 1268     	 ldr r2,[r2]
 1434 003c 9269     	 ldr r2,[r2,#24]
 1435 003e 02F06041 	 and r1,r2,#-536870912
 517:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1436              	 .loc 2 517 0
 1437 0042 3A68     	 ldr r2,[r7]
 1438 0044 22F06042 	 bic r2,r2,#-536870912
 516:../Libraries/XMCLib/src/xmc_can.c ****                            (can_identifier & (uint32_t)CAN_MO_MOAR_ID_Msk);
 1439              	 .loc 2 516 0
 1440 0048 0A43     	 orrs r2,r2,r1
 1441 004a 9A61     	 str r2,[r3,#24]
 1442              	.L64:
 518:../Libraries/XMCLib/src/xmc_can.c ****   }
 519:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_identifier = can_identifier;
 1443              	 .loc 2 519 0
 1444 004c 3B68     	 ldr r3,[r7]
 1445 004e 23F06041 	 bic r1,r3,#-536870912
 1446 0052 7A68     	 ldr r2,[r7,#4]
 1447 0054 5368     	 ldr r3,[r2,#4]
 1448 0056 61F31C03 	 bfi r3,r1,#0,#29
 1449 005a 5360     	 str r3,[r2,#4]
 520:../Libraries/XMCLib/src/xmc_can.c **** }
 1450              	 .loc 2 520 0
 1451 005c 0C37     	 adds r7,r7,#12
 1452              	.LCFI91:
 1453              	 .cfi_def_cfa_offset 4
 1454 005e BD46     	 mov sp,r7
 1455              	.LCFI92:
 1456              	 .cfi_def_cfa_register 13
 1457              	 
 1458 0060 5DF8047B 	 ldr r7,[sp],#4
 1459              	.LCFI93:
 1460              	 .cfi_restore 7
 1461              	 .cfi_def_cfa_offset 0
 1462 0064 7047     	 bx lr
 1463              	 .cfi_endproc
 1464              	.LFE234:
 1466 0066 00BF     	 .section .text.XMC_CAN_MO_GetIdentifier,"ax",%progbits
 1467              	 .align 2
 1468              	 .global XMC_CAN_MO_GetIdentifier
 1469              	 .thumb
 1470              	 .thumb_func
 1472              	XMC_CAN_MO_GetIdentifier:
 1473              	.LFB235:
 521:../Libraries/XMCLib/src/xmc_can.c **** 
 522:../Libraries/XMCLib/src/xmc_can.c **** 
 523:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the Identifier of the MO */
 524:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetIdentifier(const XMC_CAN_MO_t *const can_mo)
 525:../Libraries/XMCLib/src/xmc_can.c **** {
 1474              	 .loc 2 525 0
 1475              	 .cfi_startproc
 1476              	 
 1477              	 
 1478              	 
 1479 0000 80B4     	 push {r7}
 1480              	.LCFI94:
 1481              	 .cfi_def_cfa_offset 4
 1482              	 .cfi_offset 7,-4
 1483 0002 85B0     	 sub sp,sp,#20
 1484              	.LCFI95:
 1485              	 .cfi_def_cfa_offset 24
 1486 0004 00AF     	 add r7,sp,#0
 1487              	.LCFI96:
 1488              	 .cfi_def_cfa_register 7
 1489 0006 7860     	 str r0,[r7,#4]
 526:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier;
 527:../Libraries/XMCLib/src/xmc_can.c ****   if ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk)
 1490              	 .loc 2 527 0
 1491 0008 7B68     	 ldr r3,[r7,#4]
 1492 000a 1B68     	 ldr r3,[r3]
 1493 000c 9B69     	 ldr r3,[r3,#24]
 1494 000e 03F00053 	 and r3,r3,#536870912
 1495 0012 002B     	 cmp r3,#0
 1496 0014 07D1     	 bne .L66
 528:../Libraries/XMCLib/src/xmc_can.c ****   {
 529:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk)) >> XMC_CAN_MO_MOAR_STD
 1497              	 .loc 2 529 0
 1498 0016 7B68     	 ldr r3,[r7,#4]
 1499 0018 1B68     	 ldr r3,[r3]
 1500 001a 9B69     	 ldr r3,[r3,#24]
 1501 001c 23F06043 	 bic r3,r3,#-536870912
 1502 0020 9B0C     	 lsrs r3,r3,#18
 1503 0022 FB60     	 str r3,[r7,#12]
 1504 0024 05E0     	 b .L67
 1505              	.L66:
 530:../Libraries/XMCLib/src/xmc_can.c ****   }
 531:../Libraries/XMCLib/src/xmc_can.c ****   else
 532:../Libraries/XMCLib/src/xmc_can.c ****   {
 533:../Libraries/XMCLib/src/xmc_can.c ****   identifier = ((can_mo->can_mo_ptr->MOAR) & (uint32_t)(CAN_MO_MOAR_ID_Msk));
 1506              	 .loc 2 533 0
 1507 0026 7B68     	 ldr r3,[r7,#4]
 1508 0028 1B68     	 ldr r3,[r3]
 1509 002a 9B69     	 ldr r3,[r3,#24]
 1510 002c 23F06043 	 bic r3,r3,#-536870912
 1511 0030 FB60     	 str r3,[r7,#12]
 1512              	.L67:
 534:../Libraries/XMCLib/src/xmc_can.c ****   }
 535:../Libraries/XMCLib/src/xmc_can.c ****   return identifier;
 1513              	 .loc 2 535 0
 1514 0032 FB68     	 ldr r3,[r7,#12]
 536:../Libraries/XMCLib/src/xmc_can.c **** }
 1515              	 .loc 2 536 0
 1516 0034 1846     	 mov r0,r3
 1517 0036 1437     	 adds r7,r7,#20
 1518              	.LCFI97:
 1519              	 .cfi_def_cfa_offset 4
 1520 0038 BD46     	 mov sp,r7
 1521              	.LCFI98:
 1522              	 .cfi_def_cfa_register 13
 1523              	 
 1524 003a 5DF8047B 	 ldr r7,[sp],#4
 1525              	.LCFI99:
 1526              	 .cfi_restore 7
 1527              	 .cfi_def_cfa_offset 0
 1528 003e 7047     	 bx lr
 1529              	 .cfi_endproc
 1530              	.LFE235:
 1532              	 .section .text.XMC_CAN_MO_GetAcceptanceMask,"ax",%progbits
 1533              	 .align 2
 1534              	 .global XMC_CAN_MO_GetAcceptanceMask
 1535              	 .thumb
 1536              	 .thumb_func
 1538              	XMC_CAN_MO_GetAcceptanceMask:
 1539              	.LFB236:
 537:../Libraries/XMCLib/src/xmc_can.c **** 
 538:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask for the CAN MO. */
 539:../Libraries/XMCLib/src/xmc_can.c **** uint32_t XMC_CAN_MO_GetAcceptanceMask(const XMC_CAN_MO_t *const can_mo)
 540:../Libraries/XMCLib/src/xmc_can.c **** {
 1540              	 .loc 2 540 0
 1541              	 .cfi_startproc
 1542              	 
 1543              	 
 1544              	 
 1545 0000 80B4     	 push {r7}
 1546              	.LCFI100:
 1547              	 .cfi_def_cfa_offset 4
 1548              	 .cfi_offset 7,-4
 1549 0002 85B0     	 sub sp,sp,#20
 1550              	.LCFI101:
 1551              	 .cfi_def_cfa_offset 24
 1552 0004 00AF     	 add r7,sp,#0
 1553              	.LCFI102:
 1554              	 .cfi_def_cfa_register 7
 1555 0006 7860     	 str r0,[r7,#4]
 541:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t identifier_mask;
 542:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1556              	 .loc 2 542 0
 1557 0008 7B68     	 ldr r3,[r7,#4]
 1558 000a 1B68     	 ldr r3,[r3]
 1559 000c DB68     	 ldr r3,[r3,#12]
 1560 000e 03F00053 	 and r3,r3,#536870912
 1561 0012 002B     	 cmp r3,#0
 1562 0014 0ED1     	 bne .L70
 543:../Libraries/XMCLib/src/xmc_can.c ****             && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1563              	 .loc 2 543 0
 1564 0016 7B68     	 ldr r3,[r7,#4]
 1565 0018 1B68     	 ldr r3,[r3]
 1566 001a 9B69     	 ldr r3,[r3,#24]
 1567 001c 03F00053 	 and r3,r3,#536870912
 1568 0020 002B     	 cmp r3,#0
 1569 0022 07D1     	 bne .L70
 544:../Libraries/XMCLib/src/xmc_can.c ****   {
 545:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk)) >> XMC_CAN_MO
 1570              	 .loc 2 545 0
 1571 0024 7B68     	 ldr r3,[r7,#4]
 1572 0026 1B68     	 ldr r3,[r3]
 1573 0028 DB68     	 ldr r3,[r3,#12]
 1574 002a 23F06043 	 bic r3,r3,#-536870912
 1575 002e 9B0C     	 lsrs r3,r3,#18
 1576 0030 FB60     	 str r3,[r7,#12]
 1577 0032 05E0     	 b .L71
 1578              	.L70:
 546:../Libraries/XMCLib/src/xmc_can.c ****   }
 547:../Libraries/XMCLib/src/xmc_can.c ****   else
 548:../Libraries/XMCLib/src/xmc_can.c ****   {
 549:../Libraries/XMCLib/src/xmc_can.c ****     identifier_mask = ((can_mo->can_mo_ptr->MOAMR) & (uint32_t)(CAN_MO_MOAMR_AM_Msk));
 1579              	 .loc 2 549 0
 1580 0034 7B68     	 ldr r3,[r7,#4]
 1581 0036 1B68     	 ldr r3,[r3]
 1582 0038 DB68     	 ldr r3,[r3,#12]
 1583 003a 23F06043 	 bic r3,r3,#-536870912
 1584 003e FB60     	 str r3,[r7,#12]
 1585              	.L71:
 550:../Libraries/XMCLib/src/xmc_can.c ****   }
 551:../Libraries/XMCLib/src/xmc_can.c ****   return identifier_mask;
 1586              	 .loc 2 551 0
 1587 0040 FB68     	 ldr r3,[r7,#12]
 552:../Libraries/XMCLib/src/xmc_can.c **** }
 1588              	 .loc 2 552 0
 1589 0042 1846     	 mov r0,r3
 1590 0044 1437     	 adds r7,r7,#20
 1591              	.LCFI103:
 1592              	 .cfi_def_cfa_offset 4
 1593 0046 BD46     	 mov sp,r7
 1594              	.LCFI104:
 1595              	 .cfi_def_cfa_register 13
 1596              	 
 1597 0048 5DF8047B 	 ldr r7,[sp],#4
 1598              	.LCFI105:
 1599              	 .cfi_restore 7
 1600              	 .cfi_def_cfa_offset 0
 1601 004c 7047     	 bx lr
 1602              	 .cfi_endproc
 1603              	.LFE236:
 1605 004e 00BF     	 .section .text.XMC_CAN_MO_SetAcceptanceMask,"ax",%progbits
 1606              	 .align 2
 1607              	 .global XMC_CAN_MO_SetAcceptanceMask
 1608              	 .thumb
 1609              	 .thumb_func
 1611              	XMC_CAN_MO_SetAcceptanceMask:
 1612              	.LFB237:
 553:../Libraries/XMCLib/src/xmc_can.c **** 
 554:../Libraries/XMCLib/src/xmc_can.c **** /* Gets the acceptance mask of the MO */
 555:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_SetAcceptanceMask(XMC_CAN_MO_t *const can_mo,const uint32_t can_id_mask)
 556:../Libraries/XMCLib/src/xmc_can.c **** {
 1613              	 .loc 2 556 0
 1614              	 .cfi_startproc
 1615              	 
 1616              	 
 1617              	 
 1618 0000 80B4     	 push {r7}
 1619              	.LCFI106:
 1620              	 .cfi_def_cfa_offset 4
 1621              	 .cfi_offset 7,-4
 1622 0002 83B0     	 sub sp,sp,#12
 1623              	.LCFI107:
 1624              	 .cfi_def_cfa_offset 16
 1625 0004 00AF     	 add r7,sp,#0
 1626              	.LCFI108:
 1627              	 .cfi_def_cfa_register 7
 1628 0006 7860     	 str r0,[r7,#4]
 1629 0008 3960     	 str r1,[r7]
 557:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) != (uint32_t)CAN_MO_MOAMR_MIDE_Msk)
 1630              	 .loc 2 557 0
 1631 000a 7B68     	 ldr r3,[r7,#4]
 1632 000c 1B68     	 ldr r3,[r3]
 1633 000e DB68     	 ldr r3,[r3,#12]
 1634 0010 03F00053 	 and r3,r3,#536870912
 1635 0014 002B     	 cmp r3,#0
 1636 0016 12D1     	 bne .L74
 558:../Libraries/XMCLib/src/xmc_can.c ****           && ((can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_IDE_Msk) != (uint32_t)CAN_MO_MOAR_IDE_Msk))
 1637              	 .loc 2 558 0
 1638 0018 7B68     	 ldr r3,[r7,#4]
 1639 001a 1B68     	 ldr r3,[r3]
 1640 001c 9B69     	 ldr r3,[r3,#24]
 1641 001e 03F00053 	 and r3,r3,#536870912
 1642 0022 002B     	 cmp r3,#0
 1643 0024 0BD1     	 bne .L74
 559:../Libraries/XMCLib/src/xmc_can.c ****   {
 560:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1644              	 .loc 2 560 0
 1645 0026 7B68     	 ldr r3,[r7,#4]
 1646 0028 1B68     	 ldr r3,[r3]
 1647 002a 7A68     	 ldr r2,[r7,#4]
 1648 002c 1268     	 ldr r2,[r2]
 1649 002e D268     	 ldr r2,[r2,#12]
 1650 0030 02F06041 	 and r1,r2,#-536870912
 561:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1651              	 .loc 2 561 0
 1652 0034 3A68     	 ldr r2,[r7]
 1653 0036 9204     	 lsls r2,r2,#18
 560:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1654              	 .loc 2 560 0
 1655 0038 0A43     	 orrs r2,r2,r1
 1656 003a DA60     	 str r2,[r3,#12]
 1657 003c 0BE0     	 b .L75
 1658              	.L74:
 562:../Libraries/XMCLib/src/xmc_can.c ****   }
 563:../Libraries/XMCLib/src/xmc_can.c ****   else
 564:../Libraries/XMCLib/src/xmc_can.c ****   {
 565:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOAMR = ((can_mo->can_mo_ptr->MOAMR) & ~(uint32_t)(CAN_MO_MOAMR_AM_Msk)) |
 1659              	 .loc 2 565 0
 1660 003e 7B68     	 ldr r3,[r7,#4]
 1661 0040 1B68     	 ldr r3,[r3]
 1662 0042 7A68     	 ldr r2,[r7,#4]
 1663 0044 1268     	 ldr r2,[r2]
 1664 0046 D268     	 ldr r2,[r2,#12]
 1665 0048 02F06041 	 and r1,r2,#-536870912
 566:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1666              	 .loc 2 566 0
 1667 004c 3A68     	 ldr r2,[r7]
 1668 004e 22F06042 	 bic r2,r2,#-536870912
 565:../Libraries/XMCLib/src/xmc_can.c ****                   (can_id_mask & (uint32_t)CAN_MO_MOAMR_AM_Msk);
 1669              	 .loc 2 565 0
 1670 0052 0A43     	 orrs r2,r2,r1
 1671 0054 DA60     	 str r2,[r3,#12]
 1672              	.L75:
 567:../Libraries/XMCLib/src/xmc_can.c ****   }
 568:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_id_mask = can_id_mask;
 1673              	 .loc 2 568 0
 1674 0056 3B68     	 ldr r3,[r7]
 1675 0058 23F06041 	 bic r1,r3,#-536870912
 1676 005c 7A68     	 ldr r2,[r7,#4]
 1677 005e 9368     	 ldr r3,[r2,#8]
 1678 0060 61F31C03 	 bfi r3,r1,#0,#29
 1679 0064 9360     	 str r3,[r2,#8]
 569:../Libraries/XMCLib/src/xmc_can.c **** }
 1680              	 .loc 2 569 0
 1681 0066 0C37     	 adds r7,r7,#12
 1682              	.LCFI109:
 1683              	 .cfi_def_cfa_offset 4
 1684 0068 BD46     	 mov sp,r7
 1685              	.LCFI110:
 1686              	 .cfi_def_cfa_register 13
 1687              	 
 1688 006a 5DF8047B 	 ldr r7,[sp],#4
 1689              	.LCFI111:
 1690              	 .cfi_restore 7
 1691              	 .cfi_def_cfa_offset 0
 1692 006e 7047     	 bx lr
 1693              	 .cfi_endproc
 1694              	.LFE237:
 1696              	 .section .text.XMC_CAN_MO_Config,"ax",%progbits
 1697              	 .align 2
 1698              	 .global XMC_CAN_MO_Config
 1699              	 .thumb
 1700              	 .thumb_func
 1702              	XMC_CAN_MO_Config:
 1703              	.LFB238:
 570:../Libraries/XMCLib/src/xmc_can.c **** 
 571:../Libraries/XMCLib/src/xmc_can.c **** /* Initialization of XMC_CAN MO Object */
 572:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo)
 573:../Libraries/XMCLib/src/xmc_can.c **** {
 1704              	 .loc 2 573 0
 1705              	 .cfi_startproc
 1706              	 
 1707              	 
 1708 0000 80B5     	 push {r7,lr}
 1709              	.LCFI112:
 1710              	 .cfi_def_cfa_offset 8
 1711              	 .cfi_offset 7,-8
 1712              	 .cfi_offset 14,-4
 1713 0002 86B0     	 sub sp,sp,#24
 1714              	.LCFI113:
 1715              	 .cfi_def_cfa_offset 32
 1716 0004 00AF     	 add r7,sp,#0
 1717              	.LCFI114:
 1718              	 .cfi_def_cfa_register 7
 1719 0006 7860     	 str r0,[r7,#4]
 574:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t reg;
 575:../Libraries/XMCLib/src/xmc_can.c ****   
 576:../Libraries/XMCLib/src/xmc_can.c ****   /* Configure MPN */
 577:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t num = ((uint32_t)(can_mo->can_mo_ptr) - CAN_BASE - 0x1000U)/0x0020U;
 1720              	 .loc 2 577 0
 1721 0008 7B68     	 ldr r3,[r7,#4]
 1722 000a 1B68     	 ldr r3,[r3]
 1723 000c 03F13843 	 add r3,r3,#-1207959552
 1724 0010 A3F5A833 	 sub r3,r3,#86016
 1725 0014 5B09     	 lsrs r3,r3,#5
 1726 0016 7B61     	 str r3,[r7,#20]
 578:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t set = (((uint32_t)(num/32) << (CAN_MO_MOIPR_MPN_Pos + 5U)) | ((uint32_t)(num%32) << CAN_
 1727              	 .loc 2 578 0
 1728 0018 7B69     	 ldr r3,[r7,#20]
 1729 001a 5B09     	 lsrs r3,r3,#5
 1730 001c 5A03     	 lsls r2,r3,#13
 1731 001e 7B69     	 ldr r3,[r7,#20]
 1732 0020 03F01F03 	 and r3,r3,#31
 1733 0024 1B02     	 lsls r3,r3,#8
 1734 0026 1343     	 orrs r3,r3,r2
 1735 0028 3B61     	 str r3,[r7,#16]
 579:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR &= ~(CAN_MO_MOIPR_MPN_Msk);
 1736              	 .loc 2 579 0
 1737 002a 7B68     	 ldr r3,[r7,#4]
 1738 002c 1B68     	 ldr r3,[r3]
 1739 002e 7A68     	 ldr r2,[r7,#4]
 1740 0030 1268     	 ldr r2,[r2]
 1741 0032 9268     	 ldr r2,[r2,#8]
 1742 0034 22F47F42 	 bic r2,r2,#65280
 1743 0038 9A60     	 str r2,[r3,#8]
 580:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOIPR |= set;
 1744              	 .loc 2 580 0
 1745 003a 7B68     	 ldr r3,[r7,#4]
 1746 003c 1B68     	 ldr r3,[r3]
 1747 003e 7A68     	 ldr r2,[r7,#4]
 1748 0040 1268     	 ldr r2,[r2]
 1749 0042 9168     	 ldr r1,[r2,#8]
 1750 0044 3A69     	 ldr r2,[r7,#16]
 1751 0046 0A43     	 orrs r2,r2,r1
 1752 0048 9A60     	 str r2,[r3,#8]
 581:../Libraries/XMCLib/src/xmc_can.c ****   
 582:../Libraries/XMCLib/src/xmc_can.c ****   if (((can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_STANDARD_11BITS) &&
 1753              	 .loc 2 582 0
 1754 004a 7B68     	 ldr r3,[r7,#4]
 1755 004c DB79     	 ldrb r3,[r3,#7]
 1756 004e 03F02003 	 and r3,r3,#32
 1757 0052 DBB2     	 uxtb r3,r3
 1758 0054 002B     	 cmp r3,#0
 1759 0056 07D0     	 beq .L77
 583:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1760              	 .loc 2 583 0 discriminator 1
 1761 0058 7B68     	 ldr r3,[r7,#4]
 1762 005a DB79     	 ldrb r3,[r3,#7]
 1763 005c 03F02003 	 and r3,r3,#32
 1764 0060 DBB2     	 uxtb r3,r3
 582:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1765              	 .loc 2 582 0 discriminator 1
 1766 0062 002B     	 cmp r3,#0
 1767 0064 00D1     	 bne .L77
 582:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1768              	 .loc 2 582 0 is_stmt 0
 1769 0066 60E0     	 b .L76
 1770              	.L77:
 584:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1771              	 .loc 2 584 0 is_stmt 1
 1772 0068 7B68     	 ldr r3,[r7,#4]
 1773 006a 1B7E     	 ldrb r3,[r3,#24]
 583:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_id_mode != (uint32_t) XMC_CAN_FRAME_TYPE_EXTENDED_29BITS)) ||
 1774              	 .loc 2 583 0
 1775 006c 002B     	 cmp r3,#0
 1776 006e 04D0     	 beq .L79
 585:../Libraries/XMCLib/src/xmc_can.c ****        (can_mo->can_mo_type != XMC_CAN_MO_TYPE_TRANSMSGOBJ)))
 1777              	 .loc 2 585 0
 1778 0070 7B68     	 ldr r3,[r7,#4]
 1779 0072 1B7E     	 ldrb r3,[r3,#24]
 584:../Libraries/XMCLib/src/xmc_can.c ****       ((can_mo->can_mo_type != XMC_CAN_MO_TYPE_RECMSGOBJ) &&
 1780              	 .loc 2 584 0
 1781 0074 012B     	 cmp r3,#1
 1782 0076 00D0     	 beq .L79
 1783 0078 57E0     	 b .L76
 1784              	.L79:
 586:../Libraries/XMCLib/src/xmc_can.c ****   {
 587:../Libraries/XMCLib/src/xmc_can.c ****     ; /*Do nothing*/
 588:../Libraries/XMCLib/src/xmc_can.c ****   }
 589:../Libraries/XMCLib/src/xmc_can.c ****   else
 590:../Libraries/XMCLib/src/xmc_can.c ****   {
 591:../Libraries/XMCLib/src/xmc_can.c **** 
 592:../Libraries/XMCLib/src/xmc_can.c ****     /* Disable Message object */
 593:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1785              	 .loc 2 593 0
 1786 007a 7B68     	 ldr r3,[r7,#4]
 1787 007c 1B68     	 ldr r3,[r3]
 1788 007e 2022     	 movs r2,#32
 1789 0080 DA61     	 str r2,[r3,#28]
 594:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_id_mode == (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS)
 1790              	 .loc 2 594 0
 1791 0082 7B68     	 ldr r3,[r7,#4]
 1792 0084 DB79     	 ldrb r3,[r3,#7]
 1793 0086 03F02003 	 and r3,r3,#32
 1794 008a DBB2     	 uxtb r3,r3
 1795 008c 002B     	 cmp r3,#0
 1796 008e 28D1     	 bne .L80
 595:../Libraries/XMCLib/src/xmc_can.c ****     {
 596:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_ar;
 1797              	 .loc 2 596 0
 1798 0090 7B68     	 ldr r3,[r7,#4]
 1799 0092 5B68     	 ldr r3,[r3,#4]
 1800 0094 FB60     	 str r3,[r7,#12]
 597:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAR_ID_Msk);
 1801              	 .loc 2 597 0
 1802 0096 FB68     	 ldr r3,[r7,#12]
 1803 0098 03F06043 	 and r3,r3,#-536870912
 1804 009c FB60     	 str r3,[r7,#12]
 598:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_identifier << XMC_CAN_MO_MOAR_STDID_Pos);
 1805              	 .loc 2 598 0
 1806 009e 7B68     	 ldr r3,[r7,#4]
 1807 00a0 5B68     	 ldr r3,[r3,#4]
 1808 00a2 C3F31C03 	 ubfx r3,r3,#0,#29
 1809 00a6 9B04     	 lsls r3,r3,#18
 1810 00a8 1A46     	 mov r2,r3
 1811 00aa FB68     	 ldr r3,[r7,#12]
 1812 00ac 1343     	 orrs r3,r3,r2
 1813 00ae FB60     	 str r3,[r7,#12]
 599:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = reg;
 1814              	 .loc 2 599 0
 1815 00b0 7B68     	 ldr r3,[r7,#4]
 1816 00b2 1B68     	 ldr r3,[r3]
 1817 00b4 FA68     	 ldr r2,[r7,#12]
 1818 00b6 9A61     	 str r2,[r3,#24]
 600:../Libraries/XMCLib/src/xmc_can.c **** 
 601:../Libraries/XMCLib/src/xmc_can.c ****       reg = can_mo->mo_amr;
 1819              	 .loc 2 601 0
 1820 00b8 7B68     	 ldr r3,[r7,#4]
 1821 00ba 9B68     	 ldr r3,[r3,#8]
 1822 00bc FB60     	 str r3,[r7,#12]
 602:../Libraries/XMCLib/src/xmc_can.c ****       reg &= (uint32_t) ~(CAN_MO_MOAMR_AM_Msk);
 1823              	 .loc 2 602 0
 1824 00be FB68     	 ldr r3,[r7,#12]
 1825 00c0 03F06043 	 and r3,r3,#-536870912
 1826 00c4 FB60     	 str r3,[r7,#12]
 603:../Libraries/XMCLib/src/xmc_can.c ****       reg |= (can_mo->can_id_mask << XMC_CAN_MO_MOAR_STDID_Pos);
 1827              	 .loc 2 603 0
 1828 00c6 7B68     	 ldr r3,[r7,#4]
 1829 00c8 9B68     	 ldr r3,[r3,#8]
 1830 00ca C3F31C03 	 ubfx r3,r3,#0,#29
 1831 00ce 9B04     	 lsls r3,r3,#18
 1832 00d0 1A46     	 mov r2,r3
 1833 00d2 FB68     	 ldr r3,[r7,#12]
 1834 00d4 1343     	 orrs r3,r3,r2
 1835 00d6 FB60     	 str r3,[r7,#12]
 604:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = reg;
 1836              	 .loc 2 604 0
 1837 00d8 7B68     	 ldr r3,[r7,#4]
 1838 00da 1B68     	 ldr r3,[r3]
 1839 00dc FA68     	 ldr r2,[r7,#12]
 1840 00de DA60     	 str r2,[r3,#12]
 1841 00e0 09E0     	 b .L81
 1842              	.L80:
 605:../Libraries/XMCLib/src/xmc_can.c ****     }
 606:../Libraries/XMCLib/src/xmc_can.c ****     else
 607:../Libraries/XMCLib/src/xmc_can.c ****     {
 608:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAR = can_mo->mo_ar;
 1843              	 .loc 2 608 0
 1844 00e2 7B68     	 ldr r3,[r7,#4]
 1845 00e4 1B68     	 ldr r3,[r3]
 1846 00e6 7A68     	 ldr r2,[r7,#4]
 1847 00e8 5268     	 ldr r2,[r2,#4]
 1848 00ea 9A61     	 str r2,[r3,#24]
 609:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOAMR = can_mo->mo_amr;
 1849              	 .loc 2 609 0
 1850 00ec 7B68     	 ldr r3,[r7,#4]
 1851 00ee 1B68     	 ldr r3,[r3]
 1852 00f0 7A68     	 ldr r2,[r7,#4]
 1853 00f2 9268     	 ldr r2,[r2,#8]
 1854 00f4 DA60     	 str r2,[r3,#12]
 1855              	.L81:
 610:../Libraries/XMCLib/src/xmc_can.c ****     }
 611:../Libraries/XMCLib/src/xmc_can.c ****     /* Check whether message object is transmit message object */
 612:../Libraries/XMCLib/src/xmc_can.c ****     if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1856              	 .loc 2 612 0
 1857 00f6 7B68     	 ldr r3,[r7,#4]
 1858 00f8 1B7E     	 ldrb r3,[r3,#24]
 1859 00fa 012B     	 cmp r3,#1
 1860 00fc 0CD1     	 bne .L82
 613:../Libraries/XMCLib/src/xmc_can.c ****     {
 614:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Transmit message object  */
 615:../Libraries/XMCLib/src/xmc_can.c ****       XMC_CAN_MO_UpdateData(can_mo);
 1861              	 .loc 2 615 0
 1862 00fe 7868     	 ldr r0,[r7,#4]
 1863 0100 FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 616:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_SETDIR_Msk;
 1864              	 .loc 2 616 0
 1865 0104 7B68     	 ldr r3,[r7,#4]
 1866 0106 1B68     	 ldr r3,[r3]
 1867 0108 4FF00062 	 mov r2,#134217728
 1868 010c DA61     	 str r2,[r3,#28]
 617:../Libraries/XMCLib/src/xmc_can.c **** 
 618:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL and Set MSGVAL, TXEN0 and TXEN1 bits */
 619:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk | CAN_MO_M
 1869              	 .loc 2 619 0
 1870 010e 7B68     	 ldr r3,[r7,#4]
 1871 0110 1B68     	 ldr r3,[r3]
 1872 0112 074A     	 ldr r2,.L83
 1873 0114 DA61     	 str r2,[r3,#28]
 1874 0116 08E0     	 b .L76
 1875              	.L82:
 620:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_RESRXEN_Msk  | CAN_MO_MOCTR_RESRTSEL_Msk);
 621:../Libraries/XMCLib/src/xmc_can.c ****     }
 622:../Libraries/XMCLib/src/xmc_can.c ****     else
 623:../Libraries/XMCLib/src/xmc_can.c ****     {
 624:../Libraries/XMCLib/src/xmc_can.c ****       /* Set MO as Receive message object and set RXEN bit */
 625:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESDIR_Msk;
 1876              	 .loc 2 625 0
 1877 0118 7B68     	 ldr r3,[r7,#4]
 1878 011a 1B68     	 ldr r3,[r3]
 1879 011c 4FF40062 	 mov r2,#2048
 1880 0120 DA61     	 str r2,[r3,#28]
 626:../Libraries/XMCLib/src/xmc_can.c **** 
 627:../Libraries/XMCLib/src/xmc_can.c ****       /* Reset RTSEL, TXEN1 and TXEN2 and Set MSGVAL and RXEN bits */
 628:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_RESTXEN0_Msk | CAN_MO_MOCTR_RESTXEN1_Msk | CAN_MO_M
 1881              	 .loc 2 628 0
 1882 0122 7B68     	 ldr r3,[r7,#4]
 1883 0124 1B68     	 ldr r3,[r3]
 1884 0126 034A     	 ldr r2,.L83+4
 1885 0128 DA61     	 str r2,[r3,#28]
 1886              	.L76:
 629:../Libraries/XMCLib/src/xmc_can.c ****                                    CAN_MO_MOCTR_SETRXEN_Msk | CAN_MO_MOCTR_RESRTSEL_Msk);
 630:../Libraries/XMCLib/src/xmc_can.c ****     }
 631:../Libraries/XMCLib/src/xmc_can.c **** 
 632:../Libraries/XMCLib/src/xmc_can.c ****   }
 633:../Libraries/XMCLib/src/xmc_can.c **** }
 1887              	 .loc 2 633 0
 1888 012a 1837     	 adds r7,r7,#24
 1889              	.LCFI115:
 1890              	 .cfi_def_cfa_offset 8
 1891 012c BD46     	 mov sp,r7
 1892              	.LCFI116:
 1893              	 .cfi_def_cfa_register 13
 1894              	 
 1895 012e 80BD     	 pop {r7,pc}
 1896              	.L84:
 1897              	 .align 2
 1898              	.L83:
 1899 0130 C0002006 	 .word 102760640
 1900 0134 4006A000 	 .word 10487360
 1901              	 .cfi_endproc
 1902              	.LFE238:
 1904              	 .section .text.XMC_CAN_MO_UpdateData,"ax",%progbits
 1905              	 .align 2
 1906              	 .global XMC_CAN_MO_UpdateData
 1907              	 .thumb
 1908              	 .thumb_func
 1910              	XMC_CAN_MO_UpdateData:
 1911              	.LFB239:
 634:../Libraries/XMCLib/src/xmc_can.c **** 
 635:../Libraries/XMCLib/src/xmc_can.c **** /* Update of XMC_CAN Object */
 636:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo)
 637:../Libraries/XMCLib/src/xmc_can.c **** {
 1912              	 .loc 2 637 0
 1913              	 .cfi_startproc
 1914              	 
 1915              	 
 1916              	 
 1917 0000 80B4     	 push {r7}
 1918              	.LCFI117:
 1919              	 .cfi_def_cfa_offset 4
 1920              	 .cfi_offset 7,-4
 1921 0002 85B0     	 sub sp,sp,#20
 1922              	.LCFI118:
 1923              	 .cfi_def_cfa_offset 24
 1924 0004 00AF     	 add r7,sp,#0
 1925              	.LCFI119:
 1926              	 .cfi_def_cfa_register 7
 1927 0006 7860     	 str r0,[r7,#4]
 638:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1928              	 .loc 2 638 0
 1929 0008 0323     	 movs r3,#3
 1930 000a FB73     	 strb r3,[r7,#15]
 639:../Libraries/XMCLib/src/xmc_can.c ****   /* Check whether message object is transmit message object */
 640:../Libraries/XMCLib/src/xmc_can.c ****   if (can_mo->can_mo_type == XMC_CAN_MO_TYPE_TRANSMSGOBJ)
 1931              	 .loc 2 640 0
 1932 000c 7B68     	 ldr r3,[r7,#4]
 1933 000e 1B7E     	 ldrb r3,[r3,#24]
 1934 0010 012B     	 cmp r3,#1
 1935 0012 22D1     	 bne .L86
 641:../Libraries/XMCLib/src/xmc_can.c ****   {
 642:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESMSGVAL_Msk;
 1936              	 .loc 2 642 0
 1937 0014 7B68     	 ldr r3,[r7,#4]
 1938 0016 1B68     	 ldr r3,[r3]
 1939 0018 2022     	 movs r2,#32
 1940 001a DA61     	 str r2,[r3,#28]
 643:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure data length */
 644:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR) & ~(uint32_t)(CAN_MO_MOFCR_DLC_Msk)) |
 1941              	 .loc 2 644 0
 1942 001c 7B68     	 ldr r3,[r7,#4]
 1943 001e 1B68     	 ldr r3,[r3]
 1944 0020 7A68     	 ldr r2,[r7,#4]
 1945 0022 1268     	 ldr r2,[r2]
 1946 0024 1268     	 ldr r2,[r2]
 1947 0026 22F07061 	 bic r1,r2,#251658240
 645:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1948              	 .loc 2 645 0
 1949 002a 7A68     	 ldr r2,[r7,#4]
 1950 002c 127B     	 ldrb r2,[r2,#12]
 1951 002e 1206     	 lsls r2,r2,#24
 1952 0030 02F07062 	 and r2,r2,#251658240
 644:../Libraries/XMCLib/src/xmc_can.c ****                                 (((uint32_t) can_mo->can_data_length << CAN_MO_MOFCR_DLC_Pos) & (ui
 1953              	 .loc 2 644 0
 1954 0034 0A43     	 orrs r2,r2,r1
 1955 0036 1A60     	 str r2,[r3]
 646:../Libraries/XMCLib/src/xmc_can.c ****     /* Configure Data registers*/
 647:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAL = can_mo->can_data[0];
 1956              	 .loc 2 647 0
 1957 0038 7B68     	 ldr r3,[r7,#4]
 1958 003a 1B68     	 ldr r3,[r3]
 1959 003c 7A68     	 ldr r2,[r7,#4]
 1960 003e 1269     	 ldr r2,[r2,#16]
 1961 0040 1A61     	 str r2,[r3,#16]
 648:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MODATAH = can_mo->can_data[1];
 1962              	 .loc 2 648 0
 1963 0042 7B68     	 ldr r3,[r7,#4]
 1964 0044 1B68     	 ldr r3,[r3]
 1965 0046 7A68     	 ldr r2,[r7,#4]
 1966 0048 5269     	 ldr r2,[r2,#20]
 1967 004a 5A61     	 str r2,[r3,#20]
 649:../Libraries/XMCLib/src/xmc_can.c ****     /* Reset RTSEL and Set MSGVAL ,TXEN0 and TXEN1 bits */
 650:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr->MOCTR = (CAN_MO_MOCTR_SETNEWDAT_Msk| CAN_MO_MOCTR_SETMSGVAL_Msk |CAN_MO_MOC
 1968              	 .loc 2 650 0
 1969 004c 7B68     	 ldr r3,[r7,#4]
 1970 004e 1B68     	 ldr r3,[r3]
 1971 0050 064A     	 ldr r2,.L89
 1972 0052 DA61     	 str r2,[r3,#28]
 651:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 1973              	 .loc 2 651 0
 1974 0054 0023     	 movs r3,#0
 1975 0056 FB73     	 strb r3,[r7,#15]
 1976 0058 01E0     	 b .L87
 1977              	.L86:
 652:../Libraries/XMCLib/src/xmc_can.c ****   }
 653:../Libraries/XMCLib/src/xmc_can.c ****   else
 654:../Libraries/XMCLib/src/xmc_can.c ****   {
 655:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 1978              	 .loc 2 655 0
 1979 005a 0323     	 movs r3,#3
 1980 005c FB73     	 strb r3,[r7,#15]
 1981              	.L87:
 656:../Libraries/XMCLib/src/xmc_can.c ****   }
 657:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 1982              	 .loc 2 657 0
 1983 005e FB7B     	 ldrb r3,[r7,#15]
 658:../Libraries/XMCLib/src/xmc_can.c **** }
 1984              	 .loc 2 658 0
 1985 0060 1846     	 mov r0,r3
 1986 0062 1437     	 adds r7,r7,#20
 1987              	.LCFI120:
 1988              	 .cfi_def_cfa_offset 4
 1989 0064 BD46     	 mov sp,r7
 1990              	.LCFI121:
 1991              	 .cfi_def_cfa_register 13
 1992              	 
 1993 0066 5DF8047B 	 ldr r7,[sp],#4
 1994              	.LCFI122:
 1995              	 .cfi_restore 7
 1996              	 .cfi_def_cfa_offset 0
 1997 006a 7047     	 bx lr
 1998              	.L90:
 1999              	 .align 2
 2000              	.L89:
 2001 006c 40002800 	 .word 2621504
 2002              	 .cfi_endproc
 2003              	.LFE239:
 2005              	 .section .text.XMC_CAN_MO_Transmit,"ax",%progbits
 2006              	 .align 2
 2007              	 .global XMC_CAN_MO_Transmit
 2008              	 .thumb
 2009              	 .thumb_func
 2011              	XMC_CAN_MO_Transmit:
 2012              	.LFB240:
 659:../Libraries/XMCLib/src/xmc_can.c **** 
 660:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will put a transmit request to transmit message object */
 661:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo)
 662:../Libraries/XMCLib/src/xmc_can.c **** {
 2013              	 .loc 2 662 0
 2014              	 .cfi_startproc
 2015              	 
 2016              	 
 2017              	 
 2018 0000 80B4     	 push {r7}
 2019              	.LCFI123:
 2020              	 .cfi_def_cfa_offset 4
 2021              	 .cfi_offset 7,-4
 2022 0002 87B0     	 sub sp,sp,#28
 2023              	.LCFI124:
 2024              	 .cfi_def_cfa_offset 32
 2025 0004 00AF     	 add r7,sp,#0
 2026              	.LCFI125:
 2027              	 .cfi_def_cfa_register 7
 2028 0006 7860     	 str r0,[r7,#4]
 663:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2029              	 .loc 2 663 0
 2030 0008 0123     	 movs r3,#1
 2031 000a FB75     	 strb r3,[r7,#23]
 664:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)(((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2032              	 .loc 2 664 0
 2033 000c 7B68     	 ldr r3,[r7,#4]
 2034 000e 1B68     	 ldr r3,[r3]
 2035 0010 DB69     	 ldr r3,[r3,#28]
 2036 0012 03F02003 	 and r3,r3,#32
 2037 0016 5B09     	 lsrs r3,r3,#5
 2038 0018 3B61     	 str r3,[r7,#16]
 665:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t) ((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_
 2039              	 .loc 2 665 0
 2040 001a 7B68     	 ldr r3,[r7,#4]
 2041 001c 1B68     	 ldr r3,[r3]
 2042 001e DB69     	 ldr r3,[r3,#28]
 2043 0020 03F48073 	 and r3,r3,#256
 2044 0024 1B0A     	 lsrs r3,r3,#8
 2045 0026 FB60     	 str r3,[r7,#12]
 666:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 667:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2046              	 .loc 2 667 0
 2047 0028 3B69     	 ldr r3,[r7,#16]
 2048 002a 002B     	 cmp r3,#0
 2049 002c 02D1     	 bne .L92
 668:../Libraries/XMCLib/src/xmc_can.c ****   {
 669:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2050              	 .loc 2 669 0
 2051 002e 0423     	 movs r3,#4
 2052 0030 FB75     	 strb r3,[r7,#23]
 2053 0032 0CE0     	 b .L93
 2054              	.L92:
 670:../Libraries/XMCLib/src/xmc_can.c ****   }
 671:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 672:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2055              	 .loc 2 672 0
 2056 0034 FB68     	 ldr r3,[r7,#12]
 2057 0036 012B     	 cmp r3,#1
 2058 0038 02D1     	 bne .L94
 673:../Libraries/XMCLib/src/xmc_can.c ****   {
 674:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2059              	 .loc 2 674 0
 2060 003a 0223     	 movs r3,#2
 2061 003c FB75     	 strb r3,[r7,#23]
 2062 003e 06E0     	 b .L93
 2063              	.L94:
 675:../Libraries/XMCLib/src/xmc_can.c ****   }
 676:../Libraries/XMCLib/src/xmc_can.c ****   else
 677:../Libraries/XMCLib/src/xmc_can.c ****   {
 678:../Libraries/XMCLib/src/xmc_can.c ****     /* set TXRQ bit */
 679:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_ptr-> MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCT
 2064              	 .loc 2 679 0
 2065 0040 7B68     	 ldr r3,[r7,#4]
 2066 0042 1B68     	 ldr r3,[r3]
 2067 0044 4FF0E062 	 mov r2,#117440512
 2068 0048 DA61     	 str r2,[r3,#28]
 680:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2069              	 .loc 2 680 0
 2070 004a 0023     	 movs r3,#0
 2071 004c FB75     	 strb r3,[r7,#23]
 2072              	.L93:
 681:../Libraries/XMCLib/src/xmc_can.c ****   }
 682:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2073              	 .loc 2 682 0
 2074 004e FB7D     	 ldrb r3,[r7,#23]
 683:../Libraries/XMCLib/src/xmc_can.c **** }
 2075              	 .loc 2 683 0
 2076 0050 1846     	 mov r0,r3
 2077 0052 1C37     	 adds r7,r7,#28
 2078              	.LCFI126:
 2079              	 .cfi_def_cfa_offset 4
 2080 0054 BD46     	 mov sp,r7
 2081              	.LCFI127:
 2082              	 .cfi_def_cfa_register 13
 2083              	 
 2084 0056 5DF8047B 	 ldr r7,[sp],#4
 2085              	.LCFI128:
 2086              	 .cfi_restore 7
 2087              	 .cfi_def_cfa_offset 0
 2088 005a 7047     	 bx lr
 2089              	 .cfi_endproc
 2090              	.LFE240:
 2092              	 .section .text.XMC_CAN_MO_ReceiveData,"ax",%progbits
 2093              	 .align 2
 2094              	 .global XMC_CAN_MO_ReceiveData
 2095              	 .thumb
 2096              	 .thumb_func
 2098              	XMC_CAN_MO_ReceiveData:
 2099              	.LFB241:
 684:../Libraries/XMCLib/src/xmc_can.c **** 
 685:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 686:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo)
 687:../Libraries/XMCLib/src/xmc_can.c **** {
 2100              	 .loc 2 687 0
 2101              	 .cfi_startproc
 2102              	 
 2103              	 
 2104              	 
 2105 0000 80B4     	 push {r7}
 2106              	.LCFI129:
 2107              	 .cfi_def_cfa_offset 4
 2108              	 .cfi_offset 7,-4
 2109 0002 87B0     	 sub sp,sp,#28
 2110              	.LCFI130:
 2111              	 .cfi_def_cfa_offset 32
 2112 0004 00AF     	 add r7,sp,#0
 2113              	.LCFI131:
 2114              	 .cfi_def_cfa_register 7
 2115 0006 7860     	 str r0,[r7,#4]
 688:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2116              	 .loc 2 688 0
 2117 0008 0123     	 movs r3,#1
 2118 000a FB75     	 strb r3,[r7,#23]
 689:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2119              	 .loc 2 689 0
 2120 000c 0023     	 movs r3,#0
 2121 000e BB75     	 strb r3,[r7,#22]
 690:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2122              	 .loc 2 690 0
 2123 0010 0023     	 movs r3,#0
 2124 0012 7B75     	 strb r3,[r7,#21]
 691:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2125              	 .loc 2 691 0
 2126 0014 7B68     	 ldr r3,[r7,#4]
 2127 0016 1B68     	 ldr r3,[r3]
 2128 0018 DB69     	 ldr r3,[r3,#28]
 2129 001a 03F40063 	 and r3,r3,#2048
 2130 001e DB0A     	 lsrs r3,r3,#11
 2131 0020 3B61     	 str r3,[r7,#16]
 692:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2132              	 .loc 2 692 0
 2133 0022 7B68     	 ldr r3,[r7,#4]
 2134 0024 1B68     	 ldr r3,[r3]
 2135 0026 DB69     	 ldr r3,[r3,#28]
 2136 0028 03F00403 	 and r3,r3,#4
 2137 002c 9B08     	 lsrs r3,r3,#2
 2138 002e FB60     	 str r3,[r7,#12]
 693:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 694:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2139              	 .loc 2 694 0
 2140 0030 3B69     	 ldr r3,[r7,#16]
 2141 0032 002B     	 cmp r3,#0
 2142 0034 02D0     	 beq .L97
 695:../Libraries/XMCLib/src/xmc_can.c ****   {
 696:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2143              	 .loc 2 696 0
 2144 0036 0323     	 movs r3,#3
 2145 0038 FB75     	 strb r3,[r7,#23]
 2146 003a 25E0     	 b .L98
 2147              	.L97:
 697:../Libraries/XMCLib/src/xmc_can.c ****   }
 698:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 699:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2148              	 .loc 2 699 0
 2149 003c FB68     	 ldr r3,[r7,#12]
 2150 003e 012B     	 cmp r3,#1
 2151 0040 02D1     	 bne .L99
 700:../Libraries/XMCLib/src/xmc_can.c ****   {
 701:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2152              	 .loc 2 701 0
 2153 0042 0223     	 movs r3,#2
 2154 0044 FB75     	 strb r3,[r7,#23]
 2155 0046 1FE0     	 b .L98
 2156              	.L99:
 702:../Libraries/XMCLib/src/xmc_can.c ****   }
 703:../Libraries/XMCLib/src/xmc_can.c ****   else
 704:../Libraries/XMCLib/src/xmc_can.c ****   {
 705:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 706:../Libraries/XMCLib/src/xmc_can.c ****     do
 707:../Libraries/XMCLib/src/xmc_can.c ****     {
 708:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2157              	 .loc 2 708 0 discriminator 2
 2158 0048 7B68     	 ldr r3,[r7,#4]
 2159 004a 1B68     	 ldr r3,[r3]
 2160 004c 1A69     	 ldr r2,[r3,#16]
 2161 004e 7B68     	 ldr r3,[r7,#4]
 2162 0050 1A61     	 str r2,[r3,#16]
 709:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2163              	 .loc 2 709 0 discriminator 2
 2164 0052 7B68     	 ldr r3,[r7,#4]
 2165 0054 1B68     	 ldr r3,[r3]
 2166 0056 5A69     	 ldr r2,[r3,#20]
 2167 0058 7B68     	 ldr r3,[r7,#4]
 2168 005a 5A61     	 str r2,[r3,#20]
 710:../Libraries/XMCLib/src/xmc_can.c **** 
 711:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2169              	 .loc 2 711 0 discriminator 2
 2170 005c 7B68     	 ldr r3,[r7,#4]
 2171 005e 1B68     	 ldr r3,[r3]
 2172 0060 DB69     	 ldr r3,[r3,#28]
 2173 0062 03F00403 	 and r3,r3,#4
 2174 0066 9B08     	 lsrs r3,r3,#2
 2175 0068 BB75     	 strb r3,[r7,#22]
 712:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2176              	 .loc 2 712 0 discriminator 2
 2177 006a 7B68     	 ldr r3,[r7,#4]
 2178 006c 1B68     	 ldr r3,[r3]
 2179 006e DB69     	 ldr r3,[r3,#28]
 2180 0070 03F00803 	 and r3,r3,#8
 2181 0074 DB08     	 lsrs r3,r3,#3
 2182 0076 7B75     	 strb r3,[r7,#21]
 713:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 2183              	 .loc 2 713 0 discriminator 2
 2184 0078 BB7D     	 ldrb r3,[r7,#22]
 2185 007a 002B     	 cmp r3,#0
 2186 007c 02D0     	 beq .L100
 2187              	 .loc 2 713 0 is_stmt 0 discriminator 1
 2188 007e 7B7D     	 ldrb r3,[r7,#21]
 2189 0080 002B     	 cmp r3,#0
 2190 0082 E1D1     	 bne .L99
 2191              	.L100:
 714:../Libraries/XMCLib/src/xmc_can.c **** 
 715:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2192              	 .loc 2 715 0 is_stmt 1
 2193 0084 0023     	 movs r3,#0
 2194 0086 FB75     	 strb r3,[r7,#23]
 2195              	.L98:
 716:../Libraries/XMCLib/src/xmc_can.c ****   }
 717:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2196              	 .loc 2 717 0
 2197 0088 FB7D     	 ldrb r3,[r7,#23]
 718:../Libraries/XMCLib/src/xmc_can.c **** }
 2198              	 .loc 2 718 0
 2199 008a 1846     	 mov r0,r3
 2200 008c 1C37     	 adds r7,r7,#28
 2201              	.LCFI132:
 2202              	 .cfi_def_cfa_offset 4
 2203 008e BD46     	 mov sp,r7
 2204              	.LCFI133:
 2205              	 .cfi_def_cfa_register 13
 2206              	 
 2207 0090 5DF8047B 	 ldr r7,[sp],#4
 2208              	.LCFI134:
 2209              	 .cfi_restore 7
 2210              	 .cfi_def_cfa_offset 0
 2211 0094 7047     	 bx lr
 2212              	 .cfi_endproc
 2213              	.LFE241:
 2215 0096 00BF     	 .section .text.XMC_CAN_MO_Receive,"ax",%progbits
 2216              	 .align 2
 2217              	 .global XMC_CAN_MO_Receive
 2218              	 .thumb
 2219              	 .thumb_func
 2221              	XMC_CAN_MO_Receive:
 2222              	.LFB242:
 719:../Libraries/XMCLib/src/xmc_can.c **** 
 720:../Libraries/XMCLib/src/xmc_can.c **** 
 721:../Libraries/XMCLib/src/xmc_can.c **** /* This function is will read the message object data bytes */
 722:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive (XMC_CAN_MO_t *can_mo)
 723:../Libraries/XMCLib/src/xmc_can.c **** {
 2223              	 .loc 2 723 0
 2224              	 .cfi_startproc
 2225              	 
 2226              	 
 2227              	 
 2228 0000 80B4     	 push {r7}
 2229              	.LCFI135:
 2230              	 .cfi_def_cfa_offset 4
 2231              	 .cfi_offset 7,-4
 2232 0002 87B0     	 sub sp,sp,#28
 2233              	.LCFI136:
 2234              	 .cfi_def_cfa_offset 32
 2235 0004 00AF     	 add r7,sp,#0
 2236              	.LCFI137:
 2237              	 .cfi_def_cfa_register 7
 2238 0006 7860     	 str r0,[r7,#4]
 724:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2239              	 .loc 2 724 0
 2240 0008 0123     	 movs r3,#1
 2241 000a FB75     	 strb r3,[r7,#23]
 725:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t rx_pnd = 0U;
 2242              	 .loc 2 725 0
 2243 000c 0023     	 movs r3,#0
 2244 000e BB75     	 strb r3,[r7,#22]
 726:../Libraries/XMCLib/src/xmc_can.c ****   uint8_t new_data = 0U;
 2245              	 .loc 2 726 0
 2246 0010 0023     	 movs r3,#0
 2247 0012 7B75     	 strb r3,[r7,#21]
 727:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_DIR_Msk) >> CAN_MO_MOS
 2248              	 .loc 2 727 0
 2249 0014 7B68     	 ldr r3,[r7,#4]
 2250 0016 1B68     	 ldr r3,[r3]
 2251 0018 DB69     	 ldr r3,[r3,#28]
 2252 001a 03F40063 	 and r3,r3,#2048
 2253 001e DB0A     	 lsrs r3,r3,#11
 2254 0020 3B61     	 str r3,[r7,#16]
 728:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_recepcion_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk
 2255              	 .loc 2 728 0
 2256 0022 7B68     	 ldr r3,[r7,#4]
 2257 0024 1B68     	 ldr r3,[r3]
 2258 0026 DB69     	 ldr r3,[r3,#28]
 2259 0028 03F00403 	 and r3,r3,#4
 2260 002c 9B08     	 lsrs r3,r3,#2
 2261 002e FB60     	 str r3,[r7,#12]
 729:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message object is a receive message object */
 730:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type != (uint32_t)XMC_CAN_MO_TYPE_RECMSGOBJ)
 2262              	 .loc 2 730 0
 2263 0030 3B69     	 ldr r3,[r7,#16]
 2264 0032 002B     	 cmp r3,#0
 2265 0034 02D0     	 beq .L103
 731:../Libraries/XMCLib/src/xmc_can.c ****   {
 732:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_NOT_ACCEPTABLE;
 2266              	 .loc 2 732 0
 2267 0036 0323     	 movs r3,#3
 2268 0038 FB75     	 strb r3,[r7,#23]
 2269 003a A7E0     	 b .L104
 2270              	.L103:
 733:../Libraries/XMCLib/src/xmc_can.c ****   }
 734:../Libraries/XMCLib/src/xmc_can.c ****   /* check if reception is ongoing on message object */
 735:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_recepcion_ongoing == 1U)
 2271              	 .loc 2 735 0
 2272 003c FB68     	 ldr r3,[r7,#12]
 2273 003e 012B     	 cmp r3,#1
 2274 0040 02D1     	 bne .L105
 736:../Libraries/XMCLib/src/xmc_can.c ****   {
 737:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2275              	 .loc 2 737 0
 2276 0042 0223     	 movs r3,#2
 2277 0044 FB75     	 strb r3,[r7,#23]
 2278 0046 A1E0     	 b .L104
 2279              	.L105:
 738:../Libraries/XMCLib/src/xmc_can.c ****   }
 739:../Libraries/XMCLib/src/xmc_can.c ****   else
 740:../Libraries/XMCLib/src/xmc_can.c ****   {
 741:../Libraries/XMCLib/src/xmc_can.c ****     /* read message parameters */
 742:../Libraries/XMCLib/src/xmc_can.c ****     do
 743:../Libraries/XMCLib/src/xmc_can.c ****     {
 744:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_mo_ptr->MOCTR = CAN_MO_MOCTR_RESNEWDAT_Msk;
 2280              	 .loc 2 744 0
 2281 0048 7B68     	 ldr r3,[r7,#4]
 2282 004a 1B68     	 ldr r3,[r3]
 2283 004c 0822     	 movs r2,#8
 2284 004e DA61     	 str r2,[r3,#28]
 745:../Libraries/XMCLib/src/xmc_can.c ****       if ((((can_mo->can_mo_ptr->MOAR) & CAN_MO_MOAR_IDE_Msk) >> CAN_MO_MOAR_IDE_Pos) == 0U)
 2285              	 .loc 2 745 0
 2286 0050 7B68     	 ldr r3,[r7,#4]
 2287 0052 1B68     	 ldr r3,[r3]
 2288 0054 9B69     	 ldr r3,[r3,#24]
 2289 0056 03F00053 	 and r3,r3,#536870912
 2290 005a 5B0F     	 lsrs r3,r3,#29
 2291 005c 002B     	 cmp r3,#0
 2292 005e 40D1     	 bne .L106
 746:../Libraries/XMCLib/src/xmc_can.c ****       {
 747:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_STANDARD_11BITS;
 2293              	 .loc 2 747 0
 2294 0060 7A68     	 ldr r2,[r7,#4]
 2295 0062 D379     	 ldrb r3,[r2,#7]
 2296 0064 6FF34513 	 bfc r3,#5,#1
 2297 0068 D371     	 strb r3,[r2,#7]
 748:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & XMC_CAN_MO_MOAR_STDID_Msk) >> XMC_CAN_
 2298              	 .loc 2 748 0
 2299 006a 7B68     	 ldr r3,[r7,#4]
 2300 006c 1B68     	 ldr r3,[r3]
 2301 006e 9A69     	 ldr r2,[r3,#24]
 2302 0070 4A4B     	 ldr r3,.L112
 2303 0072 1340     	 ands r3,r3,r2
 2304 0074 9B0C     	 lsrs r3,r3,#18
 2305 0076 23F06041 	 bic r1,r3,#-536870912
 2306 007a 7A68     	 ldr r2,[r7,#4]
 2307 007c 5368     	 ldr r3,[r2,#4]
 2308 007e 61F31C03 	 bfi r3,r1,#0,#29
 2309 0082 5360     	 str r3,[r2,#4]
 749:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2310              	 .loc 2 749 0
 2311 0084 7B68     	 ldr r3,[r7,#4]
 2312 0086 1B68     	 ldr r3,[r3]
 2313 0088 DB68     	 ldr r3,[r3,#12]
 2314 008a 03F00053 	 and r3,r3,#536870912
 2315 008e 5B0F     	 lsrs r3,r3,#29
 2316 0090 DBB2     	 uxtb r3,r3
 2317 0092 03F00103 	 and r3,r3,#1
 2318 0096 D9B2     	 uxtb r1,r3
 2319 0098 7A68     	 ldr r2,[r7,#4]
 2320 009a D37A     	 ldrb r3,[r2,#11]
 2321 009c 61F34513 	 bfi r3,r1,#5,#1
 2322 00a0 D372     	 strb r3,[r2,#11]
 750:../Libraries/XMCLib/src/xmc_can.c ****         if(can_mo->can_ide_mask == 1U)
 2323              	 .loc 2 750 0
 2324 00a2 7B68     	 ldr r3,[r7,#4]
 2325 00a4 DB7A     	 ldrb r3,[r3,#11]
 2326 00a6 03F02003 	 and r3,r3,#32
 2327 00aa DBB2     	 uxtb r3,r3
 2328 00ac 002B     	 cmp r3,#0
 2329 00ae 0DD0     	 beq .L107
 751:../Libraries/XMCLib/src/xmc_can.c ****         {
 752:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & XMC_CAN_MO_MOAR_STDID_Msk) >
 2330              	 .loc 2 752 0
 2331 00b0 7B68     	 ldr r3,[r7,#4]
 2332 00b2 1B68     	 ldr r3,[r3]
 2333 00b4 DA68     	 ldr r2,[r3,#12]
 2334 00b6 394B     	 ldr r3,.L112
 2335 00b8 1340     	 ands r3,r3,r2
 2336 00ba 9B0C     	 lsrs r3,r3,#18
 2337 00bc 23F06041 	 bic r1,r3,#-536870912
 2338 00c0 7A68     	 ldr r2,[r7,#4]
 2339 00c2 9368     	 ldr r3,[r2,#8]
 2340 00c4 61F31C03 	 bfi r3,r1,#0,#29
 2341 00c8 9360     	 str r3,[r2,#8]
 2342 00ca 32E0     	 b .L109
 2343              	.L107:
 753:../Libraries/XMCLib/src/xmc_can.c ****         }
 754:../Libraries/XMCLib/src/xmc_can.c ****         else
 755:../Libraries/XMCLib/src/xmc_can.c ****         {
 756:../Libraries/XMCLib/src/xmc_can.c ****           can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2344              	 .loc 2 756 0
 2345 00cc 7B68     	 ldr r3,[r7,#4]
 2346 00ce 1B68     	 ldr r3,[r3]
 2347 00d0 DB68     	 ldr r3,[r3,#12]
 2348 00d2 23F06041 	 bic r1,r3,#-536870912
 2349 00d6 7A68     	 ldr r2,[r7,#4]
 2350 00d8 9368     	 ldr r3,[r2,#8]
 2351 00da 61F31C03 	 bfi r3,r1,#0,#29
 2352 00de 9360     	 str r3,[r2,#8]
 2353 00e0 27E0     	 b .L109
 2354              	.L106:
 757:../Libraries/XMCLib/src/xmc_can.c ****         }
 758:../Libraries/XMCLib/src/xmc_can.c ****       }
 759:../Libraries/XMCLib/src/xmc_can.c ****       else
 760:../Libraries/XMCLib/src/xmc_can.c ****       {
 761:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mode = (uint32_t)XMC_CAN_FRAME_TYPE_EXTENDED_29BITS;
 2355              	 .loc 2 761 0
 2356 00e2 7A68     	 ldr r2,[r7,#4]
 2357 00e4 D379     	 ldrb r3,[r2,#7]
 2358 00e6 43F02003 	 orr r3,r3,#32
 2359 00ea D371     	 strb r3,[r2,#7]
 762:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_identifier = (can_mo->can_mo_ptr->MOAR & CAN_MO_MOAR_ID_Msk);
 2360              	 .loc 2 762 0
 2361 00ec 7B68     	 ldr r3,[r7,#4]
 2362 00ee 1B68     	 ldr r3,[r3]
 2363 00f0 9B69     	 ldr r3,[r3,#24]
 2364 00f2 23F06041 	 bic r1,r3,#-536870912
 2365 00f6 7A68     	 ldr r2,[r7,#4]
 2366 00f8 5368     	 ldr r3,[r2,#4]
 2367 00fa 61F31C03 	 bfi r3,r1,#0,#29
 2368 00fe 5360     	 str r3,[r2,#4]
 763:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_id_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_AM_Msk);
 2369              	 .loc 2 763 0
 2370 0100 7B68     	 ldr r3,[r7,#4]
 2371 0102 1B68     	 ldr r3,[r3]
 2372 0104 DB68     	 ldr r3,[r3,#12]
 2373 0106 23F06041 	 bic r1,r3,#-536870912
 2374 010a 7A68     	 ldr r2,[r7,#4]
 2375 010c 9368     	 ldr r3,[r2,#8]
 2376 010e 61F31C03 	 bfi r3,r1,#0,#29
 2377 0112 9360     	 str r3,[r2,#8]
 764:../Libraries/XMCLib/src/xmc_can.c ****         can_mo->can_ide_mask = (uint32_t)(can_mo->can_mo_ptr->MOAMR & CAN_MO_MOAMR_MIDE_Msk) >> CAN
 2378              	 .loc 2 764 0
 2379 0114 7B68     	 ldr r3,[r7,#4]
 2380 0116 1B68     	 ldr r3,[r3]
 2381 0118 DB68     	 ldr r3,[r3,#12]
 2382 011a 03F00053 	 and r3,r3,#536870912
 2383 011e 5B0F     	 lsrs r3,r3,#29
 2384 0120 DBB2     	 uxtb r3,r3
 2385 0122 03F00103 	 and r3,r3,#1
 2386 0126 D9B2     	 uxtb r1,r3
 2387 0128 7A68     	 ldr r2,[r7,#4]
 2388 012a D37A     	 ldrb r3,[r2,#11]
 2389 012c 61F34513 	 bfi r3,r1,#5,#1
 2390 0130 D372     	 strb r3,[r2,#11]
 2391              	.L109:
 765:../Libraries/XMCLib/src/xmc_can.c ****       }
 766:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data_length = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOFCR) & CAN_MO_MOFCR_DLC
 2392              	 .loc 2 766 0
 2393 0132 7B68     	 ldr r3,[r7,#4]
 2394 0134 1B68     	 ldr r3,[r3]
 2395 0136 1B68     	 ldr r3,[r3]
 2396 0138 03F07063 	 and r3,r3,#251658240
 2397 013c 1B0E     	 lsrs r3,r3,#24
 2398 013e DAB2     	 uxtb r2,r3
 2399 0140 7B68     	 ldr r3,[r7,#4]
 2400 0142 1A73     	 strb r2,[r3,#12]
 767:../Libraries/XMCLib/src/xmc_can.c **** 
 768:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[0] = can_mo->can_mo_ptr->MODATAL;
 2401              	 .loc 2 768 0
 2402 0144 7B68     	 ldr r3,[r7,#4]
 2403 0146 1B68     	 ldr r3,[r3]
 2404 0148 1A69     	 ldr r2,[r3,#16]
 2405 014a 7B68     	 ldr r3,[r7,#4]
 2406 014c 1A61     	 str r2,[r3,#16]
 769:../Libraries/XMCLib/src/xmc_can.c ****       can_mo->can_data[1] = can_mo->can_mo_ptr->MODATAH;
 2407              	 .loc 2 769 0
 2408 014e 7B68     	 ldr r3,[r7,#4]
 2409 0150 1B68     	 ldr r3,[r3]
 2410 0152 5A69     	 ldr r2,[r3,#20]
 2411 0154 7B68     	 ldr r3,[r7,#4]
 2412 0156 5A61     	 str r2,[r3,#20]
 770:../Libraries/XMCLib/src/xmc_can.c **** 
 771:../Libraries/XMCLib/src/xmc_can.c ****       rx_pnd = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_RXUPD_Msk) >> CAN_
 2413              	 .loc 2 771 0
 2414 0158 7B68     	 ldr r3,[r7,#4]
 2415 015a 1B68     	 ldr r3,[r3]
 2416 015c DB69     	 ldr r3,[r3,#28]
 2417 015e 03F00403 	 and r3,r3,#4
 2418 0162 9B08     	 lsrs r3,r3,#2
 2419 0164 BB75     	 strb r3,[r7,#22]
 772:../Libraries/XMCLib/src/xmc_can.c ****       new_data = (uint8_t)((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_NEWDAT_Msk) >> C
 2420              	 .loc 2 772 0
 2421 0166 7B68     	 ldr r3,[r7,#4]
 2422 0168 1B68     	 ldr r3,[r3]
 2423 016a DB69     	 ldr r3,[r3,#28]
 2424 016c 03F00803 	 and r3,r3,#8
 2425 0170 DB08     	 lsrs r3,r3,#3
 2426 0172 7B75     	 strb r3,[r7,#21]
 773:../Libraries/XMCLib/src/xmc_can.c ****     } while ((rx_pnd != 0U) && (new_data != 0U));
 2427              	 .loc 2 773 0
 2428 0174 BB7D     	 ldrb r3,[r7,#22]
 2429 0176 002B     	 cmp r3,#0
 2430 0178 03D0     	 beq .L110
 2431              	 .loc 2 773 0 is_stmt 0 discriminator 1
 2432 017a 7B7D     	 ldrb r3,[r7,#21]
 2433 017c 002B     	 cmp r3,#0
 2434 017e 7FF463AF 	 bne .L105
 2435              	.L110:
 774:../Libraries/XMCLib/src/xmc_can.c **** 
 775:../Libraries/XMCLib/src/xmc_can.c ****     can_mo->can_mo_type = XMC_CAN_MO_TYPE_RECMSGOBJ;
 2436              	 .loc 2 775 0 is_stmt 1
 2437 0182 7B68     	 ldr r3,[r7,#4]
 2438 0184 0022     	 movs r2,#0
 2439 0186 1A76     	 strb r2,[r3,#24]
 776:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2440              	 .loc 2 776 0
 2441 0188 0023     	 movs r3,#0
 2442 018a FB75     	 strb r3,[r7,#23]
 2443              	.L104:
 777:../Libraries/XMCLib/src/xmc_can.c ****   }
 778:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2444              	 .loc 2 778 0
 2445 018c FB7D     	 ldrb r3,[r7,#23]
 779:../Libraries/XMCLib/src/xmc_can.c **** }
 2446              	 .loc 2 779 0
 2447 018e 1846     	 mov r0,r3
 2448 0190 1C37     	 adds r7,r7,#28
 2449              	.LCFI138:
 2450              	 .cfi_def_cfa_offset 4
 2451 0192 BD46     	 mov sp,r7
 2452              	.LCFI139:
 2453              	 .cfi_def_cfa_register 13
 2454              	 
 2455 0194 5DF8047B 	 ldr r7,[sp],#4
 2456              	.LCFI140:
 2457              	 .cfi_restore 7
 2458              	 .cfi_def_cfa_offset 0
 2459 0198 7047     	 bx lr
 2460              	.L113:
 2461 019a 00BF     	 .align 2
 2462              	.L112:
 2463 019c 0000FC1F 	 .word 536608768
 2464              	 .cfi_endproc
 2465              	.LFE242:
 2467              	 .section .text.XMC_CAN_NODE_EnableEvent,"ax",%progbits
 2468              	 .align 2
 2469              	 .global XMC_CAN_NODE_EnableEvent
 2470              	 .thumb
 2471              	 .thumb_func
 2473              	XMC_CAN_NODE_EnableEvent:
 2474              	.LFB243:
 780:../Libraries/XMCLib/src/xmc_can.c **** 
 781:../Libraries/XMCLib/src/xmc_can.c **** /* Function to enable node event */
 782:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 783:../Libraries/XMCLib/src/xmc_can.c **** {
 2475              	 .loc 2 783 0
 2476              	 .cfi_startproc
 2477              	 
 2478              	 
 2479              	 
 2480 0000 80B4     	 push {r7}
 2481              	.LCFI141:
 2482              	 .cfi_def_cfa_offset 4
 2483              	 .cfi_offset 7,-4
 2484 0002 83B0     	 sub sp,sp,#12
 2485              	.LCFI142:
 2486              	 .cfi_def_cfa_offset 16
 2487 0004 00AF     	 add r7,sp,#0
 2488              	.LCFI143:
 2489              	 .cfi_def_cfa_register 7
 2490 0006 7860     	 str r0,[r7,#4]
 2491 0008 3960     	 str r1,[r7]
 784:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2492              	 .loc 2 784 0
 2493 000a 3B68     	 ldr r3,[r7]
 2494 000c B3F5800F 	 cmp r3,#4194304
 2495 0010 06D0     	 beq .L115
 785:../Libraries/XMCLib/src/xmc_can.c ****   {
 786:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR |= (uint32_t)event;
 2496              	 .loc 2 786 0
 2497 0012 7B68     	 ldr r3,[r7,#4]
 2498 0014 1A68     	 ldr r2,[r3]
 2499 0016 3B68     	 ldr r3,[r7]
 2500 0018 1A43     	 orrs r2,r2,r3
 2501 001a 7B68     	 ldr r3,[r7,#4]
 2502 001c 1A60     	 str r2,[r3]
 2503 001e 05E0     	 b .L114
 2504              	.L115:
 787:../Libraries/XMCLib/src/xmc_can.c ****   }
 788:../Libraries/XMCLib/src/xmc_can.c ****   else
 789:../Libraries/XMCLib/src/xmc_can.c ****   {
 790:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR |= (uint32_t)event;
 2505              	 .loc 2 790 0
 2506 0020 7B68     	 ldr r3,[r7,#4]
 2507 0022 9A69     	 ldr r2,[r3,#24]
 2508 0024 3B68     	 ldr r3,[r7]
 2509 0026 1A43     	 orrs r2,r2,r3
 2510 0028 7B68     	 ldr r3,[r7,#4]
 2511 002a 9A61     	 str r2,[r3,#24]
 2512              	.L114:
 791:../Libraries/XMCLib/src/xmc_can.c ****   }
 792:../Libraries/XMCLib/src/xmc_can.c **** }
 2513              	 .loc 2 792 0
 2514 002c 0C37     	 adds r7,r7,#12
 2515              	.LCFI144:
 2516              	 .cfi_def_cfa_offset 4
 2517 002e BD46     	 mov sp,r7
 2518              	.LCFI145:
 2519              	 .cfi_def_cfa_register 13
 2520              	 
 2521 0030 5DF8047B 	 ldr r7,[sp],#4
 2522              	.LCFI146:
 2523              	 .cfi_restore 7
 2524              	 .cfi_def_cfa_offset 0
 2525 0034 7047     	 bx lr
 2526              	 .cfi_endproc
 2527              	.LFE243:
 2529 0036 00BF     	 .section .text.XMC_CAN_NODE_DisableEvent,"ax",%progbits
 2530              	 .align 2
 2531              	 .global XMC_CAN_NODE_DisableEvent
 2532              	 .thumb
 2533              	 .thumb_func
 2535              	XMC_CAN_NODE_DisableEvent:
 2536              	.LFB244:
 793:../Libraries/XMCLib/src/xmc_can.c **** 
 794:../Libraries/XMCLib/src/xmc_can.c **** /* Function to disable node event */
 795:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event)
 796:../Libraries/XMCLib/src/xmc_can.c **** {
 2537              	 .loc 2 796 0
 2538              	 .cfi_startproc
 2539              	 
 2540              	 
 2541              	 
 2542 0000 80B4     	 push {r7}
 2543              	.LCFI147:
 2544              	 .cfi_def_cfa_offset 4
 2545              	 .cfi_offset 7,-4
 2546 0002 83B0     	 sub sp,sp,#12
 2547              	.LCFI148:
 2548              	 .cfi_def_cfa_offset 16
 2549 0004 00AF     	 add r7,sp,#0
 2550              	.LCFI149:
 2551              	 .cfi_def_cfa_register 7
 2552 0006 7860     	 str r0,[r7,#4]
 2553 0008 3960     	 str r1,[r7]
 797:../Libraries/XMCLib/src/xmc_can.c ****   if(event != XMC_CAN_NODE_EVENT_CFCIE)
 2554              	 .loc 2 797 0
 2555 000a 3B68     	 ldr r3,[r7]
 2556 000c B3F5800F 	 cmp r3,#4194304
 2557 0010 07D0     	 beq .L118
 798:../Libraries/XMCLib/src/xmc_can.c ****   {
 799:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NCR &= ~(uint32_t)event;
 2558              	 .loc 2 799 0
 2559 0012 7B68     	 ldr r3,[r7,#4]
 2560 0014 1A68     	 ldr r2,[r3]
 2561 0016 3B68     	 ldr r3,[r7]
 2562 0018 DB43     	 mvns r3,r3
 2563 001a 1A40     	 ands r2,r2,r3
 2564 001c 7B68     	 ldr r3,[r7,#4]
 2565 001e 1A60     	 str r2,[r3]
 2566 0020 06E0     	 b .L117
 2567              	.L118:
 800:../Libraries/XMCLib/src/xmc_can.c ****   }
 801:../Libraries/XMCLib/src/xmc_can.c ****   else
 802:../Libraries/XMCLib/src/xmc_can.c ****   {
 803:../Libraries/XMCLib/src/xmc_can.c ****     can_node->NFCR &= ~(uint32_t)event;
 2568              	 .loc 2 803 0
 2569 0022 7B68     	 ldr r3,[r7,#4]
 2570 0024 9A69     	 ldr r2,[r3,#24]
 2571 0026 3B68     	 ldr r3,[r7]
 2572 0028 DB43     	 mvns r3,r3
 2573 002a 1A40     	 ands r2,r2,r3
 2574 002c 7B68     	 ldr r3,[r7,#4]
 2575 002e 9A61     	 str r2,[r3,#24]
 2576              	.L117:
 804:../Libraries/XMCLib/src/xmc_can.c ****   }
 805:../Libraries/XMCLib/src/xmc_can.c **** }
 2577              	 .loc 2 805 0
 2578 0030 0C37     	 adds r7,r7,#12
 2579              	.LCFI150:
 2580              	 .cfi_def_cfa_offset 4
 2581 0032 BD46     	 mov sp,r7
 2582              	.LCFI151:
 2583              	 .cfi_def_cfa_register 13
 2584              	 
 2585 0034 5DF8047B 	 ldr r7,[sp],#4
 2586              	.LCFI152:
 2587              	 .cfi_restore 7
 2588              	 .cfi_def_cfa_offset 0
 2589 0038 7047     	 bx lr
 2590              	 .cfi_endproc
 2591              	.LFE244:
 2593 003a 00BF     	 .section .text.XMC_CAN_TXFIFO_Transmit,"ax",%progbits
 2594              	 .align 2
 2595              	 .global XMC_CAN_TXFIFO_Transmit
 2596              	 .thumb
 2597              	 .thumb_func
 2599              	XMC_CAN_TXFIFO_Transmit:
 2600              	.LFB245:
 806:../Libraries/XMCLib/src/xmc_can.c **** /* Function to transmit MO from the FIFO */
 807:../Libraries/XMCLib/src/xmc_can.c **** XMC_CAN_STATUS_t XMC_CAN_TXFIFO_Transmit(const XMC_CAN_MO_t *const can_mo)
 808:../Libraries/XMCLib/src/xmc_can.c **** {
 2601              	 .loc 2 808 0
 2602              	 .cfi_startproc
 2603              	 
 2604              	 
 2605              	 
 2606 0000 80B4     	 push {r7}
 2607              	.LCFI153:
 2608              	 .cfi_def_cfa_offset 4
 2609              	 .cfi_offset 7,-4
 2610 0002 89B0     	 sub sp,sp,#36
 2611              	.LCFI154:
 2612              	 .cfi_def_cfa_offset 40
 2613 0004 00AF     	 add r7,sp,#0
 2614              	.LCFI155:
 2615              	 .cfi_def_cfa_register 7
 2616 0006 7860     	 str r0,[r7,#4]
 809:../Libraries/XMCLib/src/xmc_can.c ****   XMC_CAN_STATUS_t error = XMC_CAN_STATUS_ERROR;
 2617              	 .loc 2 809 0
 2618 0008 0123     	 movs r3,#1
 2619 000a FB77     	 strb r3,[r7,#31]
 810:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_type = ((uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_MSGVAL_Msk) >> CAN_MO
 2620              	 .loc 2 810 0
 2621 000c 7B68     	 ldr r3,[r7,#4]
 2622 000e 1B68     	 ldr r3,[r3]
 2623 0010 DB69     	 ldr r3,[r3,#28]
 2624 0012 03F02003 	 and r3,r3,#32
 2625 0016 5B09     	 lsrs r3,r3,#5
 2626 0018 BB61     	 str r3,[r7,#24]
 811:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_transmission_ongoing = (uint32_t)((can_mo->can_mo_ptr->MOSTAT) & CAN_MO_MOSTAT_TXRQ_M
 2627              	 .loc 2 811 0
 2628 001a 7B68     	 ldr r3,[r7,#4]
 2629 001c 1B68     	 ldr r3,[r3]
 2630 001e DB69     	 ldr r3,[r3,#28]
 2631 0020 03F48073 	 and r3,r3,#256
 2632 0024 1B0A     	 lsrs r3,r3,#8
 2633 0026 7B61     	 str r3,[r7,#20]
 812:../Libraries/XMCLib/src/xmc_can.c ****   uint32_t mo_cur =  (uint32_t)(can_mo->can_mo_ptr-> MOFGPR & CAN_MO_MOFGPR_CUR_Msk) >> CAN_MO_MOFG
 2634              	 .loc 2 812 0
 2635 0028 7B68     	 ldr r3,[r7,#4]
 2636 002a 1B68     	 ldr r3,[r3]
 2637 002c 5B68     	 ldr r3,[r3,#4]
 2638 002e 03F47F03 	 and r3,r3,#16711680
 2639 0032 1B0C     	 lsrs r3,r3,#16
 2640 0034 3B61     	 str r3,[r7,#16]
 813:../Libraries/XMCLib/src/xmc_can.c ****   CAN_MO_TypeDef*  mo = (CAN_MO_TypeDef *)(CAN_BASE + 0x1000UL + (mo_cur * 0x0020UL));
 2641              	 .loc 2 813 0
 2642 0036 3B69     	 ldr r3,[r7,#16]
 2643 0038 03F11073 	 add r3,r3,#37748736
 2644 003c 03F52863 	 add r3,r3,#2688
 2645 0040 5B01     	 lsls r3,r3,#5
 2646 0042 FB60     	 str r3,[r7,#12]
 814:../Libraries/XMCLib/src/xmc_can.c ****   /* check if message is disabled */
 815:../Libraries/XMCLib/src/xmc_can.c ****   if (mo_type == 0U)
 2647              	 .loc 2 815 0
 2648 0044 BB69     	 ldr r3,[r7,#24]
 2649 0046 002B     	 cmp r3,#0
 2650 0048 02D1     	 bne .L121
 816:../Libraries/XMCLib/src/xmc_can.c ****   {
 817:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_MO_DISABLED;
 2651              	 .loc 2 817 0
 2652 004a 0423     	 movs r3,#4
 2653 004c FB77     	 strb r3,[r7,#31]
 2654 004e 0BE0     	 b .L122
 2655              	.L121:
 818:../Libraries/XMCLib/src/xmc_can.c ****   }
 819:../Libraries/XMCLib/src/xmc_can.c ****   /* check if transmission is ongoing on message object */
 820:../Libraries/XMCLib/src/xmc_can.c ****   else if (mo_transmission_ongoing == 1U)
 2656              	 .loc 2 820 0
 2657 0050 7B69     	 ldr r3,[r7,#20]
 2658 0052 012B     	 cmp r3,#1
 2659 0054 02D1     	 bne .L123
 821:../Libraries/XMCLib/src/xmc_can.c ****   {
 822:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_BUSY;
 2660              	 .loc 2 822 0
 2661 0056 0223     	 movs r3,#2
 2662 0058 FB77     	 strb r3,[r7,#31]
 2663 005a 05E0     	 b .L122
 2664              	.L123:
 823:../Libraries/XMCLib/src/xmc_can.c ****   }
 824:../Libraries/XMCLib/src/xmc_can.c ****   else
 825:../Libraries/XMCLib/src/xmc_can.c ****   {
 826:../Libraries/XMCLib/src/xmc_can.c ****     mo->MOCTR = CAN_MO_MOCTR_SETTXRQ_Msk | CAN_MO_MOCTR_SETTXEN0_Msk | CAN_MO_MOCTR_SETTXEN1_Msk;
 2665              	 .loc 2 826 0
 2666 005c FB68     	 ldr r3,[r7,#12]
 2667 005e 4FF0E062 	 mov r2,#117440512
 2668 0062 DA61     	 str r2,[r3,#28]
 827:../Libraries/XMCLib/src/xmc_can.c ****     error = XMC_CAN_STATUS_SUCCESS;
 2669              	 .loc 2 827 0
 2670 0064 0023     	 movs r3,#0
 2671 0066 FB77     	 strb r3,[r7,#31]
 2672              	.L122:
 828:../Libraries/XMCLib/src/xmc_can.c ****   }
 829:../Libraries/XMCLib/src/xmc_can.c ****   return error;
 2673              	 .loc 2 829 0
 2674 0068 FB7F     	 ldrb r3,[r7,#31]
 830:../Libraries/XMCLib/src/xmc_can.c **** }
 2675              	 .loc 2 830 0
 2676 006a 1846     	 mov r0,r3
 2677 006c 2437     	 adds r7,r7,#36
 2678              	.LCFI156:
 2679              	 .cfi_def_cfa_offset 4
 2680 006e BD46     	 mov sp,r7
 2681              	.LCFI157:
 2682              	 .cfi_def_cfa_register 13
 2683              	 
 2684 0070 5DF8047B 	 ldr r7,[sp],#4
 2685              	.LCFI158:
 2686              	 .cfi_restore 7
 2687              	 .cfi_def_cfa_offset 0
 2688 0074 7047     	 bx lr
 2689              	 .cfi_endproc
 2690              	.LFE245:
 2692 0076 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOBaseObject,"ax",%progbits
 2693              	 .align 2
 2694              	 .global XMC_CAN_TXFIFO_ConfigMOBaseObject
 2695              	 .thumb
 2696              	 .thumb_func
 2698              	XMC_CAN_TXFIFO_ConfigMOBaseObject:
 2699              	.LFB246:
 831:../Libraries/XMCLib/src/xmc_can.c **** 
 832:../Libraries/XMCLib/src/xmc_can.c **** /* Function to initialize the transmit FIFO MO base object */
 833:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 834:../Libraries/XMCLib/src/xmc_can.c **** {
 2700              	 .loc 2 834 0
 2701              	 .cfi_startproc
 2702              	 
 2703              	 
 2704              	 
 2705 0000 80B4     	 push {r7}
 2706              	.LCFI159:
 2707              	 .cfi_def_cfa_offset 4
 2708              	 .cfi_offset 7,-4
 2709 0002 83B0     	 sub sp,sp,#12
 2710              	.LCFI160:
 2711              	 .cfi_def_cfa_offset 16
 2712 0004 00AF     	 add r7,sp,#0
 2713              	.LCFI161:
 2714              	 .cfi_def_cfa_register 7
 2715 0006 7860     	 str r0,[r7,#4]
 2716 0008 3960     	 str r1,[r7]
 835:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2717              	 .loc 2 835 0
 2718 000a 7B68     	 ldr r3,[r7,#4]
 2719 000c 1B68     	 ldr r3,[r3]
 2720 000e 7A68     	 ldr r2,[r7,#4]
 2721 0010 1268     	 ldr r2,[r2]
 2722 0012 1268     	 ldr r2,[r2]
 2723 0014 22F00F02 	 bic r2,r2,#15
 2724 0018 42F00202 	 orr r2,r2,#2
 2725 001c 1A60     	 str r2,[r3]
 836:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x2U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 837:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_BOT_Msk |
 2726              	 .loc 2 837 0
 2727 001e 7B68     	 ldr r3,[r7,#4]
 2728 0020 1B68     	 ldr r3,[r3]
 2729 0022 7A68     	 ldr r2,[r7,#4]
 2730 0024 1268     	 ldr r2,[r2]
 2731 0026 5268     	 ldr r2,[r2,#4]
 2732 0028 02F07F42 	 and r2,r2,#-16777216
 838:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 839:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 840:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2733              	 .loc 2 840 0
 2734 002c 3978     	 ldrb r1,[r7]
 839:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2735              	 .loc 2 839 0
 2736 002e 1143     	 orrs r1,r1,r2
 841:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2737              	 .loc 2 841 0
 2738 0030 BA78     	 ldrb r2,[r7,#2]
 2739 0032 1204     	 lsls r2,r2,#16
 2740 0034 02F47F02 	 and r2,r2,#16711680
 840:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2741              	 .loc 2 840 0
 2742 0038 1143     	 orrs r1,r1,r2
 842:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2743              	 .loc 2 842 0
 2744 003a 7A78     	 ldrb r2,[r7,#1]
 2745 003c 1202     	 lsls r2,r2,#8
 2746 003e 92B2     	 uxth r2,r2
 841:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2747              	 .loc 2 841 0
 2748 0040 0A43     	 orrs r2,r2,r1
 837:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2749              	 .loc 2 837 0
 2750 0042 5A60     	 str r2,[r3,#4]
 843:../Libraries/XMCLib/src/xmc_can.c **** }
 2751              	 .loc 2 843 0
 2752 0044 0C37     	 adds r7,r7,#12
 2753              	.LCFI162:
 2754              	 .cfi_def_cfa_offset 4
 2755 0046 BD46     	 mov sp,r7
 2756              	.LCFI163:
 2757              	 .cfi_def_cfa_register 13
 2758              	 
 2759 0048 5DF8047B 	 ldr r7,[sp],#4
 2760              	.LCFI164:
 2761              	 .cfi_restore 7
 2762              	 .cfi_def_cfa_offset 0
 2763 004c 7047     	 bx lr
 2764              	 .cfi_endproc
 2765              	.LFE246:
 2767 004e 00BF     	 .section .text.XMC_CAN_RXFIFO_ConfigMOBaseObject,"ax",%progbits
 2768              	 .align 2
 2769              	 .global XMC_CAN_RXFIFO_ConfigMOBaseObject
 2770              	 .thumb
 2771              	 .thumb_func
 2773              	XMC_CAN_RXFIFO_ConfigMOBaseObject:
 2774              	.LFB247:
 844:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the receive FIFO MO base object */
 845:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_RXFIFO_ConfigMOBaseObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_t
 846:../Libraries/XMCLib/src/xmc_can.c **** {
 2775              	 .loc 2 846 0
 2776              	 .cfi_startproc
 2777              	 
 2778              	 
 2779              	 
 2780 0000 80B4     	 push {r7}
 2781              	.LCFI165:
 2782              	 .cfi_def_cfa_offset 4
 2783              	 .cfi_offset 7,-4
 2784 0002 83B0     	 sub sp,sp,#12
 2785              	.LCFI166:
 2786              	 .cfi_def_cfa_offset 16
 2787 0004 00AF     	 add r7,sp,#0
 2788              	.LCFI167:
 2789              	 .cfi_def_cfa_register 7
 2790 0006 7860     	 str r0,[r7,#4]
 2791 0008 3960     	 str r1,[r7]
 847:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2792              	 .loc 2 847 0
 2793 000a 7B68     	 ldr r3,[r7,#4]
 2794 000c 1B68     	 ldr r3,[r3]
 2795 000e 7A68     	 ldr r2,[r7,#4]
 2796 0010 1268     	 ldr r2,[r2]
 2797 0012 1268     	 ldr r2,[r2]
 2798 0014 22F00F02 	 bic r2,r2,#15
 2799 0018 42F00102 	 orr r2,r2,#1
 2800 001c 1A60     	 str r2,[r3]
 848:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x1U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 849:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~( uint32_t)(CAN_MO_MOFGPR_BOT_Msk 
 2801              	 .loc 2 849 0
 2802 001e 7B68     	 ldr r3,[r7,#4]
 2803 0020 1B68     	 ldr r3,[r3]
 2804 0022 7A68     	 ldr r2,[r7,#4]
 2805 0024 1268     	 ldr r2,[r2]
 2806 0026 5268     	 ldr r2,[r2,#4]
 2807 0028 02F07F42 	 and r2,r2,#-16777216
 850:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 851:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_CUR_Msk)) |
 852:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2808              	 .loc 2 852 0
 2809 002c 3978     	 ldrb r1,[r7]
 851:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_bottom << CAN_MO_MOFGPR_BOT_Pos) & (uint32
 2810              	 .loc 2 851 0
 2811 002e 1143     	 orrs r1,r1,r2
 853:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2812              	 .loc 2 853 0
 2813 0030 BA78     	 ldrb r2,[r7,#2]
 2814 0032 1204     	 lsls r2,r2,#16
 2815 0034 02F47F02 	 and r2,r2,#16711680
 852:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2816              	 .loc 2 852 0
 2817 0038 1143     	 orrs r1,r1,r2
 854:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_top << CAN_MO_MOFGPR_TOP_Pos) & (uint32_t)
 2818              	 .loc 2 854 0
 2819 003a 7A78     	 ldrb r2,[r7,#1]
 2820 003c 1202     	 lsls r2,r2,#8
 2821 003e 92B2     	 uxth r2,r2
 853:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2822              	 .loc 2 853 0
 2823 0040 0A43     	 orrs r2,r2,r1
 849:../Libraries/XMCLib/src/xmc_can.c ****                                                                   CAN_MO_MOFGPR_TOP_Msk |
 2824              	 .loc 2 849 0
 2825 0042 5A60     	 str r2,[r3,#4]
 855:../Libraries/XMCLib/src/xmc_can.c **** }
 2826              	 .loc 2 855 0
 2827 0044 0C37     	 adds r7,r7,#12
 2828              	.LCFI168:
 2829              	 .cfi_def_cfa_offset 4
 2830 0046 BD46     	 mov sp,r7
 2831              	.LCFI169:
 2832              	 .cfi_def_cfa_register 13
 2833              	 
 2834 0048 5DF8047B 	 ldr r7,[sp],#4
 2835              	.LCFI170:
 2836              	 .cfi_restore 7
 2837              	 .cfi_def_cfa_offset 0
 2838 004c 7047     	 bx lr
 2839              	 .cfi_endproc
 2840              	.LFE247:
 2842 004e 00BF     	 .section .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject,"ax",%progbits
 2843              	 .align 2
 2844              	 .global XMC_CAN_TXFIFO_ConfigMOSlaveObject
 2845              	 .thumb
 2846              	 .thumb_func
 2848              	XMC_CAN_TXFIFO_ConfigMOSlaveObject:
 2849              	.LFB248:
 856:../Libraries/XMCLib/src/xmc_can.c **** 
 857:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the FIFO MO slave object */
 858:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_TXFIFO_ConfigMOSlaveObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_FIFO_CONFIG_
 859:../Libraries/XMCLib/src/xmc_can.c **** {
 2850              	 .loc 2 859 0
 2851              	 .cfi_startproc
 2852              	 
 2853              	 
 2854              	 
 2855 0000 80B4     	 push {r7}
 2856              	.LCFI171:
 2857              	 .cfi_def_cfa_offset 4
 2858              	 .cfi_offset 7,-4
 2859 0002 83B0     	 sub sp,sp,#12
 2860              	.LCFI172:
 2861              	 .cfi_def_cfa_offset 16
 2862 0004 00AF     	 add r7,sp,#0
 2863              	.LCFI173:
 2864              	 .cfi_def_cfa_register 7
 2865 0006 7860     	 str r0,[r7,#4]
 2866 0008 3960     	 str r1,[r7]
 860:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = ((can_mo->can_mo_ptr->MOFCR ) & ~(uint32_t)(CAN_MO_MOFCR_MMC_Msk)) |
 2867              	 .loc 2 860 0
 2868 000a 7B68     	 ldr r3,[r7,#4]
 2869 000c 1B68     	 ldr r3,[r3]
 2870 000e 7A68     	 ldr r2,[r7,#4]
 2871 0010 1268     	 ldr r2,[r2]
 2872 0012 1268     	 ldr r2,[r2]
 2873 0014 22F00F02 	 bic r2,r2,#15
 2874 0018 42F00302 	 orr r2,r2,#3
 2875 001c 1A60     	 str r2,[r3]
 861:../Libraries/XMCLib/src/xmc_can.c ****                               (((uint32_t)0x3U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 862:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = ((can_mo->can_mo_ptr->MOFGPR ) & ~(uint32_t)(CAN_MO_MOFGPR_CUR_Msk))
 2876              	 .loc 2 862 0
 2877 001e 7B68     	 ldr r3,[r7,#4]
 2878 0020 1B68     	 ldr r3,[r3]
 2879 0022 7A68     	 ldr r2,[r7,#4]
 2880 0024 1268     	 ldr r2,[r2]
 2881 0026 5268     	 ldr r2,[r2,#4]
 2882 0028 22F47F01 	 bic r1,r2,#16711680
 863:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2883              	 .loc 2 863 0
 2884 002c BA78     	 ldrb r2,[r7,#2]
 2885 002e 1204     	 lsls r2,r2,#16
 2886 0030 02F47F02 	 and r2,r2,#16711680
 862:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_fifo.fifo_base << CAN_MO_MOFGPR_CUR_Pos) & (uint32_t
 2887              	 .loc 2 862 0
 2888 0034 0A43     	 orrs r2,r2,r1
 2889 0036 5A60     	 str r2,[r3,#4]
 864:../Libraries/XMCLib/src/xmc_can.c **** 
 865:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOCTR  = CAN_MO_MOCTR_SETTXEN0_Msk|
 2890              	 .loc 2 865 0
 2891 0038 7B68     	 ldr r3,[r7,#4]
 2892 003a 1B68     	 ldr r3,[r3]
 2893 003c 034A     	 ldr r2,.L128
 2894 003e DA61     	 str r2,[r3,#28]
 866:../Libraries/XMCLib/src/xmc_can.c ****                                CAN_MO_MOCTR_RESTXEN1_Msk;
 867:../Libraries/XMCLib/src/xmc_can.c **** }
 2895              	 .loc 2 867 0
 2896 0040 0C37     	 adds r7,r7,#12
 2897              	.LCFI174:
 2898              	 .cfi_def_cfa_offset 4
 2899 0042 BD46     	 mov sp,r7
 2900              	.LCFI175:
 2901              	 .cfi_def_cfa_register 13
 2902              	 
 2903 0044 5DF8047B 	 ldr r7,[sp],#4
 2904              	.LCFI176:
 2905              	 .cfi_restore 7
 2906              	 .cfi_def_cfa_offset 0
 2907 0048 7047     	 bx lr
 2908              	.L129:
 2909 004a 00BF     	 .align 2
 2910              	.L128:
 2911 004c 00040002 	 .word 33555456
 2912              	 .cfi_endproc
 2913              	.LFE248:
 2915              	 .section .text.XMC_CAN_GATEWAY_InitSourceObject,"ax",%progbits
 2916              	 .align 2
 2917              	 .global XMC_CAN_GATEWAY_InitSourceObject
 2918              	 .thumb
 2919              	 .thumb_func
 2921              	XMC_CAN_GATEWAY_InitSourceObject:
 2922              	.LFB249:
 868:../Libraries/XMCLib/src/xmc_can.c **** 
 869:../Libraries/XMCLib/src/xmc_can.c **** /* Function to Initialize the Gateway Source Object */
 870:../Libraries/XMCLib/src/xmc_can.c **** void XMC_CAN_GATEWAY_InitSourceObject(const XMC_CAN_MO_t *const can_mo,const XMC_CAN_GATEWAY_CONFIG
 871:../Libraries/XMCLib/src/xmc_can.c **** {
 2923              	 .loc 2 871 0
 2924              	 .cfi_startproc
 2925              	 
 2926              	 
 2927              	 
 2928 0000 80B4     	 push {r7}
 2929              	.LCFI177:
 2930              	 .cfi_def_cfa_offset 4
 2931              	 .cfi_offset 7,-4
 2932 0002 85B0     	 sub sp,sp,#20
 2933              	.LCFI178:
 2934              	 .cfi_def_cfa_offset 24
 2935 0004 00AF     	 add r7,sp,#0
 2936              	.LCFI179:
 2937              	 .cfi_def_cfa_register 7
 2938 0006 F860     	 str r0,[r7,#12]
 2939 0008 3B1D     	 adds r3,r7,#4
 2940 000a 83E80600 	 stmia r3,{r1,r2}
 872:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFCR = (((uint32_t)0x4U << CAN_MO_MOFCR_MMC_Pos) & (uint32_t)CAN_MO_MOFCR_MM
 2941              	 .loc 2 872 0
 2942 000e FB68     	 ldr r3,[r7,#12]
 2943 0010 1B68     	 ldr r3,[r3]
 873:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2944              	 .loc 2 873 0
 2945 0012 FA79     	 ldrb r2,[r7,#7]
 2946 0014 1202     	 lsls r2,r2,#8
 2947 0016 02F48071 	 and r1,r2,#256
 874:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2948              	 .loc 2 874 0
 2949 001a 7A7A     	 ldrb r2,[r7,#9]
 2950 001c 9202     	 lsls r2,r2,#10
 2951 001e 02F48062 	 and r2,r2,#1024
 873:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2952              	 .loc 2 873 0
 2953 0022 1143     	 orrs r1,r1,r2
 875:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2954              	 .loc 2 875 0
 2955 0024 3A7A     	 ldrb r2,[r7,#8]
 2956 0026 5202     	 lsls r2,r2,#9
 2957 0028 02F40072 	 and r2,r2,#512
 874:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_length_code_copy) << CAN_MO_MOF
 2958              	 .loc 2 874 0
 2959 002c 1143     	 orrs r1,r1,r2
 876:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_copy) << CAN_MO_MOFCR_DATC_Pos)
 2960              	 .loc 2 876 0
 2961 002e BA7A     	 ldrb r2,[r7,#10]
 2962 0030 D202     	 lsls r2,r2,#11
 2963 0032 02F40062 	 and r2,r2,#2048
 875:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_identifier_copy) << CAN_MO_MOFCR_IDC
 2964              	 .loc 2 875 0
 2965 0036 0A43     	 orrs r2,r2,r1
 2966 0038 42F00402 	 orr r2,r2,#4
 872:../Libraries/XMCLib/src/xmc_can.c ****                               ((((uint32_t)can_gateway.gateway_data_frame_send) << CAN_MO_MOFCR_GDF
 2967              	 .loc 2 872 0
 2968 003c 1A60     	 str r2,[r3]
 877:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2969              	 .loc 2 877 0
 2970 003e FB68     	 ldr r3,[r7,#12]
 2971 0040 1B68     	 ldr r3,[r3]
 2972 0042 3A79     	 ldrb r2,[r7,#4]
 2973 0044 1146     	 mov r1,r2
 878:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_base << CAN_MO_MOFGPR_CUR_Pos) & (ui
 2974              	 .loc 2 878 0
 2975 0046 BA79     	 ldrb r2,[r7,#6]
 2976 0048 1204     	 lsls r2,r2,#16
 2977 004a 02F47F02 	 and r2,r2,#16711680
 877:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2978              	 .loc 2 877 0
 2979 004e 1143     	 orrs r1,r1,r2
 879:../Libraries/XMCLib/src/xmc_can.c ****                                (((uint32_t)can_gateway.gateway_top << CAN_MO_MOFGPR_TOP_Pos) & (uin
 2980              	 .loc 2 879 0
 2981 0050 7A79     	 ldrb r2,[r7,#5]
 2982 0052 1202     	 lsls r2,r2,#8
 2983 0054 92B2     	 uxth r2,r2
 877:../Libraries/XMCLib/src/xmc_can.c ****   can_mo->can_mo_ptr->MOFGPR = (uint32_t)((((uint32_t)can_gateway.gateway_bottom << CAN_MO_MOFGPR_B
 2984              	 .loc 2 877 0
 2985 0056 0A43     	 orrs r2,r2,r1
 2986 0058 5A60     	 str r2,[r3,#4]
 880:../Libraries/XMCLib/src/xmc_can.c **** }
 2987              	 .loc 2 880 0
 2988 005a 1437     	 adds r7,r7,#20
 2989              	.LCFI180:
 2990              	 .cfi_def_cfa_offset 4
 2991 005c BD46     	 mov sp,r7
 2992              	.LCFI181:
 2993              	 .cfi_def_cfa_register 13
 2994              	 
 2995 005e 5DF8047B 	 ldr r7,[sp],#4
 2996              	.LCFI182:
 2997              	 .cfi_restore 7
 2998              	 .cfi_def_cfa_offset 0
 2999 0062 7047     	 bx lr
 3000              	 .cfi_endproc
 3001              	.LFE249:
 3003              	 .text
 3004              	.Letext0:
 3005              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3006              	 .file 4 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3007              	 .file 5 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3008              	 .file 6 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc4_scu.h"
 3009              	 .file 7 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include/core_cm4.h"
 3010              	 .file 8 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_can.c
    {standard input}:20     .text.XMC_CAN_IsPanelControlReady:00000000 $t
    {standard input}:24     .text.XMC_CAN_IsPanelControlReady:00000000 XMC_CAN_IsPanelControlReady
    {standard input}:70     .text.XMC_CAN_PanelControl:00000000 $t
    {standard input}:74     .text.XMC_CAN_PanelControl:00000000 XMC_CAN_PanelControl
    {standard input}:134    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:138    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:179    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:183    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:224    .text.max:00000000 $t
    {standard input}:228    .text.max:00000000 max
    {standard input}:272    .text.min:00000000 $t
    {standard input}:276    .text.min:00000000 min
    {standard input}:319    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 $t
    {standard input}:324    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000000 XMC_CAN_NODE_NominalBitTimeConfigureEx
    {standard input}:541    .text.XMC_CAN_NODE_NominalBitTimeConfigureEx:00000144 $d
    {standard input}:546    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 $t
    {standard input}:551    .text.XMC_CAN_NODE_NominalBitTimeConfigure:00000000 XMC_CAN_NODE_NominalBitTimeConfigure
    {standard input}:854    .text.XMC_CAN_NODE_NominalBitTimeConfigure:000001c0 $d
    {standard input}:859    .text.XMC_CAN_AllocateMOtoNodeList:00000000 $t
    {standard input}:864    .text.XMC_CAN_AllocateMOtoNodeList:00000000 XMC_CAN_AllocateMOtoNodeList
    {standard input}:918    .text.XMC_CAN_Disable:00000000 $t
    {standard input}:923    .text.XMC_CAN_Disable:00000000 XMC_CAN_Disable
    {standard input}:960    .text.XMC_CAN_Disable:0000001c $d
    {standard input}:965    .text.XMC_CAN_Enable:00000000 $t
    {standard input}:970    .text.XMC_CAN_Enable:00000000 XMC_CAN_Enable
    {standard input}:1018   .text.XMC_CAN_Enable:00000030 $d
    {standard input}:1023   .text.XMC_CAN_Init:00000000 $t
    {standard input}:1028   .text.XMC_CAN_Init:00000000 XMC_CAN_Init
    {standard input}:1167   .text.XMC_CAN_SetBaudrateClockSource:00000000 $t
    {standard input}:1172   .text.XMC_CAN_SetBaudrateClockSource:00000000 XMC_CAN_SetBaudrateClockSource
    {standard input}:1209   .text.XMC_CAN_GetBaudrateClockSource:00000000 $t
    {standard input}:1214   .text.XMC_CAN_GetBaudrateClockSource:00000000 XMC_CAN_GetBaudrateClockSource
    {standard input}:1252   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 $t
    {standard input}:1257   .text.XMC_CAN_GetBaudrateClockFrequency:00000000 XMC_CAN_GetBaudrateClockFrequency
    {standard input}:1294   .text.XMC_CAN_InitEx:00000000 $t
    {standard input}:1299   .text.XMC_CAN_InitEx:00000000 XMC_CAN_InitEx
    {standard input}:1382   .text.XMC_CAN_MO_SetIdentifier:00000000 $t
    {standard input}:1387   .text.XMC_CAN_MO_SetIdentifier:00000000 XMC_CAN_MO_SetIdentifier
    {standard input}:1467   .text.XMC_CAN_MO_GetIdentifier:00000000 $t
    {standard input}:1472   .text.XMC_CAN_MO_GetIdentifier:00000000 XMC_CAN_MO_GetIdentifier
    {standard input}:1533   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 $t
    {standard input}:1538   .text.XMC_CAN_MO_GetAcceptanceMask:00000000 XMC_CAN_MO_GetAcceptanceMask
    {standard input}:1606   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 $t
    {standard input}:1611   .text.XMC_CAN_MO_SetAcceptanceMask:00000000 XMC_CAN_MO_SetAcceptanceMask
    {standard input}:1697   .text.XMC_CAN_MO_Config:00000000 $t
    {standard input}:1702   .text.XMC_CAN_MO_Config:00000000 XMC_CAN_MO_Config
    {standard input}:1910   .text.XMC_CAN_MO_UpdateData:00000000 XMC_CAN_MO_UpdateData
    {standard input}:1899   .text.XMC_CAN_MO_Config:00000130 $d
    {standard input}:1905   .text.XMC_CAN_MO_UpdateData:00000000 $t
    {standard input}:2001   .text.XMC_CAN_MO_UpdateData:0000006c $d
    {standard input}:2006   .text.XMC_CAN_MO_Transmit:00000000 $t
    {standard input}:2011   .text.XMC_CAN_MO_Transmit:00000000 XMC_CAN_MO_Transmit
    {standard input}:2093   .text.XMC_CAN_MO_ReceiveData:00000000 $t
    {standard input}:2098   .text.XMC_CAN_MO_ReceiveData:00000000 XMC_CAN_MO_ReceiveData
    {standard input}:2216   .text.XMC_CAN_MO_Receive:00000000 $t
    {standard input}:2221   .text.XMC_CAN_MO_Receive:00000000 XMC_CAN_MO_Receive
    {standard input}:2463   .text.XMC_CAN_MO_Receive:0000019c $d
    {standard input}:2468   .text.XMC_CAN_NODE_EnableEvent:00000000 $t
    {standard input}:2473   .text.XMC_CAN_NODE_EnableEvent:00000000 XMC_CAN_NODE_EnableEvent
    {standard input}:2530   .text.XMC_CAN_NODE_DisableEvent:00000000 $t
    {standard input}:2535   .text.XMC_CAN_NODE_DisableEvent:00000000 XMC_CAN_NODE_DisableEvent
    {standard input}:2594   .text.XMC_CAN_TXFIFO_Transmit:00000000 $t
    {standard input}:2599   .text.XMC_CAN_TXFIFO_Transmit:00000000 XMC_CAN_TXFIFO_Transmit
    {standard input}:2693   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2698   .text.XMC_CAN_TXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_TXFIFO_ConfigMOBaseObject
    {standard input}:2768   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 $t
    {standard input}:2773   .text.XMC_CAN_RXFIFO_ConfigMOBaseObject:00000000 XMC_CAN_RXFIFO_ConfigMOBaseObject
    {standard input}:2843   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 $t
    {standard input}:2848   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:00000000 XMC_CAN_TXFIFO_ConfigMOSlaveObject
    {standard input}:2911   .text.XMC_CAN_TXFIFO_ConfigMOSlaveObject:0000004c $d
    {standard input}:2916   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 $t
    {standard input}:2921   .text.XMC_CAN_GATEWAY_InitSourceObject:00000000 XMC_CAN_GATEWAY_InitSourceObject
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_CLOCK_GetPeripheralClockFrequency
