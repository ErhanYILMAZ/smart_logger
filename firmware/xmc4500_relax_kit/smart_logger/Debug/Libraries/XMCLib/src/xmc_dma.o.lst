   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "xmc_dma.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_DMA_GetEventStatus,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_DMA_GetEventStatus:
  25              	.LFB135:
  26              	 .file 1 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc_dma.h"
   1:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
   2:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @file xmc_dma.h
   3:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @date 2018-09-18
   4:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
   5:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @cond
   6:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
   7:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library
   8:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
   9:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * All rights reserved.                        
  11:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *                                             
  12:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * following conditions are met:   
  14:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  15:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer.                        
  17:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  18:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 
  21:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  24:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *                                                                              
  32:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  **************************************************************************************************
  35:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  36:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Change History
  37:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * --------------
  38:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  39:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-02-20:
  40:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Initial <br>
  41:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  42:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 2015-06-20:
  43:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Add the declarations for the following APIs: <br>
  44:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  45:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  46:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  47:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Documentation updates <br>
  48:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  49:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  50:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 2016-10-28:
  51:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Fix documentation on maximum block size
  52:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  53:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 2017-09-28:
  54:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Improved documentation and added XMC_DMA_CH_EnableFifo() and XMC_DMA_CH_DisableFifo()
  55:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  56:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * 2018-09-18:
  57:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *     - Added XMC_DMA_CH_GetTransferredData()
  58:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  59:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @endcond
  60:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
  61:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  62:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #ifndef XMC_DMA_H
  63:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA_H
  64:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  65:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  66:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * HEADER FILES
  67:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
  68:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  69:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_common.h"
  70:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  71:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
  72:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  73:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #include "xmc_dma_map.h"
  74:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  75:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
  76:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup XMClib XMC Peripheral Library
  77:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  78:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
  79:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  80:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
  81:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @addtogroup DMA
  82:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @brief General purpose DMA (GPDMA) driver for the XMC4000 microcontroller family
  83:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  84:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The GPDMA is a highly configurable DMA controller that allows high-speed data transfers
  85:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * between peripherals and memories. Complex data transfers can be done with minimal
  86:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * intervention of the processor, making CPU available for other operations.
  87:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  88:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA provides extensive support for XMC microcontroller peripherals like A/D, D/A
  89:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * converters and timers. Data transfers through communication interfaces (USIC) using the
  90:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA increase efficiency and parallelism for real-time applications.
  91:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
  92:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The DMA low level driver provides functions to configure and initialize the GPDMA
  93:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * hardware peripheral.
  94:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @{
  95:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
  96:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
  97:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
  98:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * MACROS
  99:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 100:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 101:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA0)
 102:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0 ((XMC_DMA_t *)GPDMA0_CH0_BASE) /**< DMA module 0 */
 103:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA0_NUM_CHANNELS 8
 104:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 105:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 106:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (GPDMA1)
 107:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1 ((XMC_DMA_t *)GPDMA1_CH0_BASE) /**< DMA module 1, only available in XMC45xx series
 108:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #define XMC_DMA1_NUM_CHANNELS 4
 109:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 110:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 111:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 112:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * ENUMS
 113:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 114:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 115:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 116:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer types
 117:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 118:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_TYPE
 119:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 120:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK,                                /**< Single block */
 121:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD, /**< Multi-block: src addre
 122:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 123:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD,     /**< Multi-block: src addre
 124:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED, /**< Multi-block: src addre
 125:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED,     /**< Multi-block: src addre
 126:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS, /**< Multi-block: src addre
 127:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD,     /**< Multi-block: src addre
 128:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED      /**< Multi-block: src addre
 129:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_TYPE_t;
 130:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 131:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 132:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA transfer flow modes
 133:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 134:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_FLOW
 135:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 136:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2M_DMA    = 0x0UL, /**< Memory to memory (DMA flow controller) */
 137:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA    = 0x1UL, /**< Memory to peripheral (DMA flow controller) */
 138:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA    = 0x2UL, /**< Peripheral to memory (DMA flow controller) */
 139:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA    = 0x3UL, /**< Peripheral to peripheral (DMA flow controller) 
 140:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2M_PER    = 0x4UL, /**< Peripheral to memory (Peripheral flow controlle
 141:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_SRCPER = 0x5UL, /**< Peripheral to peripheral (Source peripheral flo
 142:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_M2P_PER    = 0x6UL, /**< Memory to peripheral (Peripheral flow controlle
 143:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_FLOW_P2P_DSTPER = 0x7UL  /**< Peripheral to peripheral (Destination periphera
 144:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_FLOW_t;
 145:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 146:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 147:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid burst length values
 148:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 149:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_BURST_LENGTH
 150:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 151:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_1 = 0x0UL, /**< Burst length: 1 word */
 152:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_4 = 0x1UL, /**< Burst length: 4 words */
 153:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_BURST_LENGTH_8 = 0x2UL  /**< Burst length: 8 words */
 154:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_BURST_LENGTH_t;
 155:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 156:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 157:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Valid transfer width values
 158:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 159:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSFER_WIDTH
 160:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 161:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_8  = 0x0UL, /**< 8-bit transfer width */
 162:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_16 = 0x1UL, /**< 16-bit transfer width */
 163:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_WIDTH_32 = 0x2UL  /**< 32-bit transfer width */
 164:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSFER_WIDTH_t;
 165:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 166:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 167:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA address count mode
 168:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 169:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_ADDRESS_COUNT_MODE
 170:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 171:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_INCREMENT = 0x0UL, /**< Address count mode: increment */
 172:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_DECREMENT = 0x1UL, /**< Address count mode: decrement */
 173:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_ADDRESS_COUNT_MODE_NO_CHANGE = 0x2UL  /**< Address count mode: no change */
 174:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_ADDRESS_COUNT_MODE_t;
 175:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 176:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 177:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel priorities
 178:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 179:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_PRIORITY
 180:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 181:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_0 = 0x0UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 0 (low) *
 182:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_1 = 0x1UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 1 */
 183:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_2 = 0x2UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 2 */
 184:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_3 = 0x3UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 3 */
 185:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_4 = 0x4UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 4 */
 186:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_5 = 0x5UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 5 */
 187:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_6 = 0x6UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos, /**< DMA channel priority 6 */
 188:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_7 = 0x7UL << GPDMA0_CH_CFGL_CH_PRIOR_Pos  /**< DMA channel priority 7 (high) 
 189:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_PRIORITY_t;
 190:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 191:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 192:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Source handshake interface
 193:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 194:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_SRC_HANDSHAKING
 195:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 196:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos, /**< Source: hardwa
 197:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_SRC_Pos  /**< Source: softwa
 198:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_SRC_HANDSHAKING_t;
 199:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 200:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 201:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination handshake interface
 202:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 203:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_DST_HANDSHAKING
 204:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 205:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_HARDWARE = 0x0UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos, /**< Destination: h
 206:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_SOFTWARE = 0x1UL << GPDMA0_CH_CFGL_HS_SEL_DST_Pos  /**< Destination: s
 207:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_DST_HANDSHAKING_t;
 208:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 209:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 210:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA hardware handshaking interface
 211:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Hardware handshaking available only if DMA is flow controller
 212:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 213:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_HARDWARE_HANDSHAKING_IF
 214:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 215:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_0 = 0x0UL, /**< Hardware handshaking interface 0 */
 216:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_1 = 0x1UL, /**< Hardware handshaking interface 1 */
 217:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_2 = 0x2UL, /**< Hardware handshaking interface 2 */
 218:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_3 = 0x3UL, /**< Hardware handshaking interface 3 */
 219:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_4 = 0x4UL, /**< Hardware handshaking interface 4 */
 220:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_5 = 0x5UL, /**< Hardware handshaking interface 5 */
 221:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_6 = 0x6UL, /**< Hardware handshaking interface 6 */
 222:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_7 = 0x7UL  /**< Hardware handshaking interface 7 */
 223:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_HARDWARE_HANDSHAKING_IF_t;
 224:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 225:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 226:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA events
 227:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 228:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_EVENT
 229:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 230:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_TRANSFER_COMPLETE        = 0x1UL, /**< Transfer complete event */
 231:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE  = 0x2UL, /**< Block transfer complete event */
 232:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE = 0x4UL, /**< Source transaction complete event */
 233:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE = 0x8UL, /**< Destination transaction complete event */
 234:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_EVENT_ERROR                    = 0x10UL /**< DMA error event */
 235:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_EVENT_t;
 236:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 237:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 238:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Transaction types
 239:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 240:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_TRANSACTION_TYPE
 241:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 242:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_SINGLE, /**< Single DMA transaction */
 243:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSACTION_TYPE_BURST   /**< Burst transaction */
 244:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_TRANSACTION_TYPE_t;
 245:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 246:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 247:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel status values
 248:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 249:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef enum XMC_DMA_CH_STATUS
 250:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 251:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_OK,    /**< DMA status OK */
 252:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_ERROR, /**< DMA status error */
 253:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_STATUS_BUSY   /**< DMA is busy */
 254:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_STATUS_t;
 255:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 256:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 257:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DATA STRUCTURES
 258:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 259:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 260:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 261:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure <br>
 262:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 263:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 264:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the DMA channel. It is contained within the ::XMC_DMA_t
 265:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * structure. It's registers can be used to configure DMA transfer details
 266:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * like source address, destination address, block size, incrementation
 267:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * modes and the like.
 268:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 269:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  
 270:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 271:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SAR;
 272:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED0;
 273:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DAR;
 274:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED1;
 275:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LLP;
 276:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED2;
 277:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLL;
 278:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CTLH;
 279:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTAT;
 280:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED3;
 281:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTAT;
 282:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED4;
 283:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SSTATAR;
 284:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED5;
 285:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSTATAR;
 286:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED6;
 287:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGL;
 288:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CFGH;
 289:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGR;
 290:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED7;
 291:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DSR;
 292:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED8;
 293:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } GPDMA_CH_t;
 294:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 295:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 296:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA device structure <br>
 297:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 298:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The structure represents a collection of all hardware registers used
 299:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * to configure the GPDMA peripheral on the XMC4000 series of microcontrollers.
 300:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The registers can be accessed with ::XMC_DMA0 and ::XMC_DMA1.
 301:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 302:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct {
 303:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   GPDMA_CH_t CH[8];
 304:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 305:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  RAWCHEV[10];
 306:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSCHEV[10];
 307:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  MASKCHEV[10];
 308:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __O  uint32_t  CLEARCHEV[10];
 309:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  STATUSGLEV;
 310:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED20;
 311:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQSRCREG;
 312:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED21;
 313:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  REQDSTREG;
 314:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED22;
 315:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQSRCREG;
 316:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED23;
 317:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  SGLREQDSTREG;
 318:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED24;
 319:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTSRCREG;
 320:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED25;
 321:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  LSTDSTREG;
 322:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED26;
 323:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  DMACFGREG;
 324:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED27;
 325:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __IO uint32_t  CHENREG;
 326:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED28;
 327:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  ID;
 328:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  RESERVED29[19];
 329:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  TYPE;
 330:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   __I  uint32_t  VERSION;
 331:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_t;
 332:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 333:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard start */
 334:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 335:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma push
 336:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma anon_unions
 337:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 338:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning 586
 339:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 340:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 341:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 342:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel linked list item.
 343:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Note: Needs to be word aligned
 344:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 345:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_LLI
 346:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 347:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 348:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 349:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   struct XMC_DMA_LLI *llp;                      /**< Linked list pointer of type XMC_DMA_LLI_t */
 350:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   union
 351:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   {
 352:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 353:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     {
 354:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 355:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 356:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 357:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 358:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 359:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 360:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 361:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 362:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 363:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             /**< Reserved bits */
 364:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 365:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 4;                             /**< Reserved bits */
 366:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_linked_list: 1;       /**< Enable destination linked list? */
 367:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_linked_list: 1;       /**< Enable source linked list? */
 368:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 3;                             /**< Reserved bits */
 369:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     };
 370:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 371:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   };
 372:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t block_size;                          /**< Transfer block size */
 373:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_status;                          /**< Source status */
 374:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_status;                          /**< Destination status */
 375:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_LLI_t;
 376:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 377:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef XMC_DMA_LLI_t **XMC_DMA_LIST_t;         /**< Type definition for a linked list pointer */
 378:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 379:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 380:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel configuration structure
 381:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 382:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef struct XMC_DMA_CH_CONFIG
 383:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 384:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   union
 385:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   {
 386:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t control;
 387:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 388:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     {
 389:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_interrupt: 1;             /**< Enable interrupts? */
 390:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_transfer_width: 3;           /**< Destination transfer width (:: XMC_DMA_CH_TRAN
 391:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_transfer_width: 3;           /**< Source transfer width (:: XMC_DMA_CH_TRANSFER_
 392:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_address_count_mode: 2;       /**< Destination address count mode (:: XMC_DMA_CH_
 393:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_address_count_mode: 2;       /**< Source address count mode (:: XMC_DMA_CH_ADDRE
 394:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_burst_length: 3;             /**< Destination burst length (:: XMC_DMA_CH_BURST_
 395:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_burst_length: 3;             /**< Source burst length (:: XMC_DMA_CH_BURST_LENGT
 396:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_src_gather: 1;            /**< Enable source gather? */
 397:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t enable_dst_scatter: 1;           /**< Enable destination scatter? */
 398:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 1;                             
 399:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t transfer_flow: 3;                /**< DMA transfer flow (:: XMC_DMA_CH_TRANSFER_FLOW
 400:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t : 9;                             
 401:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     };
 402:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   };
 403:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 404:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t src_addr;                            /**< Source address */
 405:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint32_t dst_addr;                            /**< Destination address */
 406:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_LLI_t *linked_list_pointer;           /**< Linked list pointer */
 407:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   
 408:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   union
 409:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   {
 410:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t src_gather_control;
 411:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 412:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     {
 413:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_interval: 20;         /**< Source gather interval */
 414:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t src_gather_count: 12;            /**< Source gather count */
 415:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     };
 416:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   };
 417:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 418:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   union
 419:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   {
 420:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     uint32_t dst_scatter_control;
 421:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     struct
 422:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     {
 423:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_interval: 20;        /**< Destination scatter interval */
 424:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****       uint32_t dst_scatter_count: 12;           /**< Destination scatter count */
 425:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****     };
 426:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   };
 427:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   
 428:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint16_t block_size;                          /**< Block size for DMA controlled transfers [max. 
 429:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_TRANSFER_TYPE_t transfer_type;     /**< DMA transfer type (:: XMC_DMA_CH_TRANSFER_TYPE
 430:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_PRIORITY_t priority;               /**< DMA channel priority (::XMC_DMA_CH_PRIORITY_t)
 431:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_SRC_HANDSHAKING_t src_handshaking; /**< DMA source handshaking interface (:: XMC_DMA_C
 432:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t src_peripheral_request;               /**< Source peripheral request. See xmc_dma_map.h *
 433:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   XMC_DMA_CH_DST_HANDSHAKING_t dst_handshaking; /**< DMA destination handshaking interface (:: XMC_
 434:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   uint8_t dst_peripheral_request;               /**< Destination peripheral request. See xmc_dma_ma
 435:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** } XMC_DMA_CH_CONFIG_t;
 436:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 437:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /* Anonymous structure/union guard end */
 438:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #if defined (__CC_ARM)
 439:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma pop
 440:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #elif defined (__TASKING__)
 441:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   #pragma warning restore
 442:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 443:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 444:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 445:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA channel event handler
 446:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 447:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** typedef void (*XMC_DMA_CH_EVENT_HANDLER_t)(XMC_DMA_CH_EVENT_t event);
 448:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 449:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /*******************************************************************************
 450:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * API PROTOTYPES
 451:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *******************************************************************************/
 452:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 453:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #ifdef __cplusplus
 454:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** extern "C" {
 455:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** #endif
 456:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 457:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 458:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 459:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 460:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 461:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 462:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Initialize the GPDMA peripheral <br>
 463:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 464:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 465:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function initializes a prioritized list of DMA channels and enables the GPDMA
 466:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral.
 467:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 468:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Init(XMC_DMA_t *const dma);
 469:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 470:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 471:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 472:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 473:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 474:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 475:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Enable the GPDMA peripheral <br>
 476:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 477:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 478:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function de-asserts the GPDMA peripheral reset. In addition, it un-gates the
 479:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * GPDMA0 peripheral clock for all XMC4000 series of microcontrollers with an exception
 480:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * of the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 481:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 482:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Enable(XMC_DMA_t *const dma);
 483:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 484:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 485:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 486:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return None
 487:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 488:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 489:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Disable the GPDMA peripheral <br>
 490:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 491:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 492:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function asserts the GPDMA peripheral reset. In addition, it gates the GPDMA0
 493:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * peripheral clock for all XMC4000 series of microcontrollers with an exception of
 494:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * the XMC4500 microcontroller. The XMC4500 doesn't support gating.
 495:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 496:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** void XMC_DMA_Disable(XMC_DMA_t *const dma);
 497:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 498:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 499:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 500:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return bool
 501:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 502:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 503:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Check if the GPDMA peripheral is enabled <br>
 504:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 505:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 506:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * For the XMC4500 microcontroller, the function checks if the GPDMA module is asserted
 507:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * and returns "false" if it is. In addition, it also checks if the clock is gated
 508:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * for the other XMC4000 series of microcontrollers. It returns "true" if the peripheral
 509:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * is enabled.
 510:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 511:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma);
 512:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 513:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 514:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 515:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 516:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 517:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 518:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA event status <br>
 519:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 520:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 521:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the collective (global) status of GPDMA events. The following
 522:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * lists the various DMA events and their corresponding enumeration. The return value
 523:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * of this function may then be masked with any one of the following enumerations to
 524:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * obtain the status of individual DMA events. <br>
 525:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 526:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 527:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Transfer complete -> ::XMC_DMA_CH_EVENT_TRANSFER_COMPLETE                       <br>
 528:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Block transfer complete -> ::XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE           <br>
 529:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Source transaction complete -> ::XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE      <br>
 530:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Destination transaction complete -> ::XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE <br>
 531:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * DMA error event -> ::XMC_DMA_CH_EVENT_ERROR                                     <br>
 532:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 533:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetEventStatus(XMC_DMA_t *const dma)
 534:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
  27              	 .loc 1 534 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 83B0     	 sub sp,sp,#12
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 16
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 7860     	 str r0,[r7,#4]
 535:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSGLEV);
  43              	 .loc 1 535 0
  44 0008 7B68     	 ldr r3,[r7,#4]
  45 000a D3F86033 	 ldr r3,[r3,#864]
 536:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
  46              	 .loc 1 536 0
  47 000e 1846     	 mov r0,r3
  48 0010 0C37     	 adds r7,r7,#12
  49              	.LCFI3:
  50              	 .cfi_def_cfa_offset 4
  51 0012 BD46     	 mov sp,r7
  52              	.LCFI4:
  53              	 .cfi_def_cfa_register 13
  54              	 
  55 0014 5DF8047B 	 ldr r7,[sp],#4
  56              	.LCFI5:
  57              	 .cfi_restore 7
  58              	 .cfi_def_cfa_offset 0
  59 0018 7047     	 bx lr
  60              	 .cfi_endproc
  61              	.LFE135:
  63 001a 00BF     	 .section .text.XMC_DMA_GetChannelsTransferCompleteStatus,"ax",%progbits
  64              	 .align 2
  65              	 .thumb
  66              	 .thumb_func
  68              	XMC_DMA_GetChannelsTransferCompleteStatus:
  69              	.LFB136:
 537:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 538:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 539:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 540:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA transfer complete status
 541:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 542:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 543:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get transfer complete status <br>
 544:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 545:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 546:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA transfer complete interrupt status. <br>
 547:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 548:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsTransferCompleteStatus(XMC_DMA_t *const dma)
 549:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
  70              	 .loc 1 549 0
  71              	 .cfi_startproc
  72              	 
  73              	 
  74              	 
  75 0000 80B4     	 push {r7}
  76              	.LCFI6:
  77              	 .cfi_def_cfa_offset 4
  78              	 .cfi_offset 7,-4
  79 0002 83B0     	 sub sp,sp,#12
  80              	.LCFI7:
  81              	 .cfi_def_cfa_offset 16
  82 0004 00AF     	 add r7,sp,#0
  83              	.LCFI8:
  84              	 .cfi_def_cfa_register 7
  85 0006 7860     	 str r0,[r7,#4]
 550:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[0]);
  86              	 .loc 1 550 0
  87 0008 7B68     	 ldr r3,[r7,#4]
  88 000a D3F8E832 	 ldr r3,[r3,#744]
 551:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
  89              	 .loc 1 551 0
  90 000e 1846     	 mov r0,r3
  91 0010 0C37     	 adds r7,r7,#12
  92              	.LCFI9:
  93              	 .cfi_def_cfa_offset 4
  94 0012 BD46     	 mov sp,r7
  95              	.LCFI10:
  96              	 .cfi_def_cfa_register 13
  97              	 
  98 0014 5DF8047B 	 ldr r7,[sp],#4
  99              	.LCFI11:
 100              	 .cfi_restore 7
 101              	 .cfi_def_cfa_offset 0
 102 0018 7047     	 bx lr
 103              	 .cfi_endproc
 104              	.LFE136:
 106 001a 00BF     	 .section .text.XMC_DMA_GetChannelsBlockCompleteStatus,"ax",%progbits
 107              	 .align 2
 108              	 .thumb
 109              	 .thumb_func
 111              	XMC_DMA_GetChannelsBlockCompleteStatus:
 112              	.LFB137:
 552:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 553:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 554:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 555:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA block complete status
 556:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 557:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 558:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get block transfer complete status <br>
 559:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 560:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 561:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns GPDMA block transfer complete interrupt status. <br>
 562:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 563:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsBlockCompleteStatus(XMC_DMA_t *const dma)
 564:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 113              	 .loc 1 564 0
 114              	 .cfi_startproc
 115              	 
 116              	 
 117              	 
 118 0000 80B4     	 push {r7}
 119              	.LCFI12:
 120              	 .cfi_def_cfa_offset 4
 121              	 .cfi_offset 7,-4
 122 0002 83B0     	 sub sp,sp,#12
 123              	.LCFI13:
 124              	 .cfi_def_cfa_offset 16
 125 0004 00AF     	 add r7,sp,#0
 126              	.LCFI14:
 127              	 .cfi_def_cfa_register 7
 128 0006 7860     	 str r0,[r7,#4]
 565:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[2]);
 129              	 .loc 1 565 0
 130 0008 7B68     	 ldr r3,[r7,#4]
 131 000a D3F8F032 	 ldr r3,[r3,#752]
 566:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
 132              	 .loc 1 566 0
 133 000e 1846     	 mov r0,r3
 134 0010 0C37     	 adds r7,r7,#12
 135              	.LCFI15:
 136              	 .cfi_def_cfa_offset 4
 137 0012 BD46     	 mov sp,r7
 138              	.LCFI16:
 139              	 .cfi_def_cfa_register 13
 140              	 
 141 0014 5DF8047B 	 ldr r7,[sp],#4
 142              	.LCFI17:
 143              	 .cfi_restore 7
 144              	 .cfi_def_cfa_offset 0
 145 0018 7047     	 bx lr
 146              	 .cfi_endproc
 147              	.LFE137:
 149 001a 00BF     	 .section .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus,"ax",%progbits
 150              	 .align 2
 151              	 .thumb
 152              	 .thumb_func
 154              	XMC_DMA_GetChannelsSourceTransactionCompleteStatus:
 155              	.LFB138:
 567:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 568:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 569:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 570:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 571:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 572:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 573:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get source transaction complete status <br>
 574:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 575:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 576:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the source transaction complete interrupt status. <br>
 577:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 578:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 579:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * If the source peripheral is memory, the source transaction complete interrupt is
 580:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * ignored.
 581:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 582:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsSourceTransactionCompleteStatus(XMC_DMA_t *const dma)
 583:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 156              	 .loc 1 583 0
 157              	 .cfi_startproc
 158              	 
 159              	 
 160              	 
 161 0000 80B4     	 push {r7}
 162              	.LCFI18:
 163              	 .cfi_def_cfa_offset 4
 164              	 .cfi_offset 7,-4
 165 0002 83B0     	 sub sp,sp,#12
 166              	.LCFI19:
 167              	 .cfi_def_cfa_offset 16
 168 0004 00AF     	 add r7,sp,#0
 169              	.LCFI20:
 170              	 .cfi_def_cfa_register 7
 171 0006 7860     	 str r0,[r7,#4]
 584:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[4]);
 172              	 .loc 1 584 0
 173 0008 7B68     	 ldr r3,[r7,#4]
 174 000a D3F8F832 	 ldr r3,[r3,#760]
 585:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
 175              	 .loc 1 585 0
 176 000e 1846     	 mov r0,r3
 177 0010 0C37     	 adds r7,r7,#12
 178              	.LCFI21:
 179              	 .cfi_def_cfa_offset 4
 180 0012 BD46     	 mov sp,r7
 181              	.LCFI22:
 182              	 .cfi_def_cfa_register 13
 183              	 
 184 0014 5DF8047B 	 ldr r7,[sp],#4
 185              	.LCFI23:
 186              	 .cfi_restore 7
 187              	 .cfi_def_cfa_offset 0
 188 0018 7047     	 bx lr
 189              	 .cfi_endproc
 190              	.LFE138:
 192 001a 00BF     	 .section .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus,"ax",%progbits
 193              	 .align 2
 194              	 .thumb
 195              	 .thumb_func
 197              	XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:
 198              	.LFB139:
 586:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 587:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 588:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 589:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA event status
 590:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 591:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 592:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get destination transaction complete status <br>
 593:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 594:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 595:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns the destination transaction complete interrupt status <br>
 596:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 597:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Note: </b><br>
 598:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * If the destination peripheral is memory, the destination transaction complete
 599:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * interrupt is ignored.
 600:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 601:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(XMC_DMA_t *const d
 602:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 199              	 .loc 1 602 0
 200              	 .cfi_startproc
 201              	 
 202              	 
 203              	 
 204 0000 80B4     	 push {r7}
 205              	.LCFI24:
 206              	 .cfi_def_cfa_offset 4
 207              	 .cfi_offset 7,-4
 208 0002 83B0     	 sub sp,sp,#12
 209              	.LCFI25:
 210              	 .cfi_def_cfa_offset 16
 211 0004 00AF     	 add r7,sp,#0
 212              	.LCFI26:
 213              	 .cfi_def_cfa_register 7
 214 0006 7860     	 str r0,[r7,#4]
 603:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[6]);
 215              	 .loc 1 603 0
 216 0008 7B68     	 ldr r3,[r7,#4]
 217 000a D3F80033 	 ldr r3,[r3,#768]
 604:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
 218              	 .loc 1 604 0
 219 000e 1846     	 mov r0,r3
 220 0010 0C37     	 adds r7,r7,#12
 221              	.LCFI27:
 222              	 .cfi_def_cfa_offset 4
 223 0012 BD46     	 mov sp,r7
 224              	.LCFI28:
 225              	 .cfi_def_cfa_register 13
 226              	 
 227 0014 5DF8047B 	 ldr r7,[sp],#4
 228              	.LCFI29:
 229              	 .cfi_restore 7
 230              	 .cfi_def_cfa_offset 0
 231 0018 7047     	 bx lr
 232              	 .cfi_endproc
 233              	.LFE139:
 235 001a 00BF     	 .section .text.XMC_DMA_GetChannelsErrorStatus,"ax",%progbits
 236              	 .align 2
 237              	 .thumb
 238              	 .thumb_func
 240              	XMC_DMA_GetChannelsErrorStatus:
 241              	.LFB140:
 605:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** 
 606:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** /**
 607:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @param dma A constant pointer to XMC_DMA_t, pointing to the GPDMA base address
 608:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * @return uint32_t DMA error event status
 609:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 610:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par<b>Description: </b><br>
 611:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * Get DMA error event status <br>
 612:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  *
 613:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * \par
 614:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  * The function returns error interrupt status. <br>
 615:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****  */
 616:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** __STATIC_INLINE uint32_t XMC_DMA_GetChannelsErrorStatus(XMC_DMA_t *const dma)
 617:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** {
 242              	 .loc 1 617 0
 243              	 .cfi_startproc
 244              	 
 245              	 
 246              	 
 247 0000 80B4     	 push {r7}
 248              	.LCFI30:
 249              	 .cfi_def_cfa_offset 4
 250              	 .cfi_offset 7,-4
 251 0002 83B0     	 sub sp,sp,#12
 252              	.LCFI31:
 253              	 .cfi_def_cfa_offset 16
 254 0004 00AF     	 add r7,sp,#0
 255              	.LCFI32:
 256              	 .cfi_def_cfa_register 7
 257 0006 7860     	 str r0,[r7,#4]
 618:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h ****   return (dma->STATUSCHEV[8]);
 258              	 .loc 1 618 0
 259 0008 7B68     	 ldr r3,[r7,#4]
 260 000a D3F80833 	 ldr r3,[r3,#776]
 619:C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_dma.h **** }
 261              	 .loc 1 619 0
 262 000e 1846     	 mov r0,r3
 263 0010 0C37     	 adds r7,r7,#12
 264              	.LCFI33:
 265              	 .cfi_def_cfa_offset 4
 266 0012 BD46     	 mov sp,r7
 267              	.LCFI34:
 268              	 .cfi_def_cfa_register 13
 269              	 
 270 0014 5DF8047B 	 ldr r7,[sp],#4
 271              	.LCFI35:
 272              	 .cfi_restore 7
 273              	 .cfi_def_cfa_offset 0
 274 0018 7047     	 bx lr
 275              	 .cfi_endproc
 276              	.LFE140:
 278              	 .comm dma0_event_handlers,32,4
 279              	 .comm dma1_event_handlers,16,4
 280 001a 00BF     	 .section .text.XMC_DMA_Init,"ax",%progbits
 281              	 .align 2
 282              	 .global XMC_DMA_Init
 283              	 .thumb
 284              	 .thumb_func
 286              	XMC_DMA_Init:
 287              	.LFB183:
 288              	 .file 2 "../Libraries/XMCLib/src/xmc_dma.c"
   1:../Libraries/XMCLib/src/xmc_dma.c **** 
   2:../Libraries/XMCLib/src/xmc_dma.c **** /**
   3:../Libraries/XMCLib/src/xmc_dma.c ****  * @file xmc_dma.c
   4:../Libraries/XMCLib/src/xmc_dma.c ****  * @date 2016-04-08
   5:../Libraries/XMCLib/src/xmc_dma.c ****  *
   6:../Libraries/XMCLib/src/xmc_dma.c ****  * @cond
   7:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
   8:../Libraries/XMCLib/src/xmc_dma.c ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   9:../Libraries/XMCLib/src/xmc_dma.c ****  *
  10:../Libraries/XMCLib/src/xmc_dma.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  11:../Libraries/XMCLib/src/xmc_dma.c ****  * All rights reserved.                        
  12:../Libraries/XMCLib/src/xmc_dma.c ****  *                                             
  13:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:../Libraries/XMCLib/src/xmc_dma.c ****  * following conditions are met:   
  15:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  16:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer.                        
  18:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  19:../Libraries/XMCLib/src/xmc_dma.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:../Libraries/XMCLib/src/xmc_dma.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:../Libraries/XMCLib/src/xmc_dma.c ****  * 
  22:../Libraries/XMCLib/src/xmc_dma.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:../Libraries/XMCLib/src/xmc_dma.c ****  * products derived from this software without specific prior written permission.                  
  24:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  25:../Libraries/XMCLib/src/xmc_dma.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:../Libraries/XMCLib/src/xmc_dma.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:../Libraries/XMCLib/src/xmc_dma.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:../Libraries/XMCLib/src/xmc_dma.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:../Libraries/XMCLib/src/xmc_dma.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:../Libraries/XMCLib/src/xmc_dma.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:../Libraries/XMCLib/src/xmc_dma.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:../Libraries/XMCLib/src/xmc_dma.c ****  *                                                                              
  33:../Libraries/XMCLib/src/xmc_dma.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:../Libraries/XMCLib/src/xmc_dma.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:../Libraries/XMCLib/src/xmc_dma.c ****  **************************************************************************************************
  36:../Libraries/XMCLib/src/xmc_dma.c ****  *
  37:../Libraries/XMCLib/src/xmc_dma.c ****  * Change History
  38:../Libraries/XMCLib/src/xmc_dma.c ****  * --------------
  39:../Libraries/XMCLib/src/xmc_dma.c ****  *
  40:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-02-20:
  41:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Initial <br>
  42:../Libraries/XMCLib/src/xmc_dma.c ****  *
  43:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-05-20:
  44:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Add the declarations for the following APIs: <br>
  45:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_DisableRequestLine, XMC_DMA_ClearRequestLine, <br>
  46:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearSourcePeripheralRequest, <br>
  47:../Libraries/XMCLib/src/xmc_dma.c ****  *       XMC_DMA_CH_ClearDestinationPeripheralRequest <br>
  48:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Remove PRIOARRAY <br>
  49:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Documentation updates <br>
  50:../Libraries/XMCLib/src/xmc_dma.c ****  *
  51:../Libraries/XMCLib/src/xmc_dma.c ****  * 2015-06-20:
  52:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Removed GetDriverVersion API <br>
  53:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Init() to support scatter/gather functionality (only
  54:../Libraries/XMCLib/src/xmc_dma.c ****  *       on advanced DMA channels) <br>
  55:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Updated XMC_DMA_CH_Disable() <br>
  56:../Libraries/XMCLib/src/xmc_dma.c ****  *
  57:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-03-09:
  58:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Optimize write only registers
  59:../Libraries/XMCLib/src/xmc_dma.c ****  *
  60:../Libraries/XMCLib/src/xmc_dma.c ****  * 2016-04-08:
  61:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Update XMC_DMA_CH_EnableEvent and XMC_DMA_CH_DisableEvent.
  62:../Libraries/XMCLib/src/xmc_dma.c ****  *       Write optimization of MASKCHEV 
  63:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_IRQHandler, clear channel event status before processing the event handler.
  64:../Libraries/XMCLib/src/xmc_dma.c ****  *       It corrects event losses if the DMA triggered in the event handler finished before returni
  65:../Libraries/XMCLib/src/xmc_dma.c ****  *
  66:../Libraries/XMCLib/src/xmc_dma.c ****  * 2018-02-08:
  67:../Libraries/XMCLib/src/xmc_dma.c ****  *     - Fix XMC_DMA_CH_RequestLastMultiblockTransfer() clearing CTLL_LLP_SRC_EN and CTLL_LLP_DST_E
  68:../Libraries/XMCLib/src/xmc_dma.c ****  *
  69:../Libraries/XMCLib/src/xmc_dma.c ****  * @endcond
  70:../Libraries/XMCLib/src/xmc_dma.c ****  */
  71:../Libraries/XMCLib/src/xmc_dma.c **** 
  72:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  73:../Libraries/XMCLib/src/xmc_dma.c ****  * HEADER FILES
  74:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  75:../Libraries/XMCLib/src/xmc_dma.c **** 
  76:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_dma.h"
  77:../Libraries/XMCLib/src/xmc_dma.c **** 
  78:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
  79:../Libraries/XMCLib/src/xmc_dma.c **** 
  80:../Libraries/XMCLib/src/xmc_dma.c **** #include "xmc_scu.h"
  81:../Libraries/XMCLib/src/xmc_dma.c **** 
  82:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  83:../Libraries/XMCLib/src/xmc_dma.c ****  * MACROS
  84:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  85:../Libraries/XMCLib/src/xmc_dma.c **** 
  86:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_MSK (0xfUL)
  87:../Libraries/XMCLib/src/xmc_dma.c **** #define DLR_SRSEL_RS_BITSIZE (4UL)
  88:../Libraries/XMCLib/src/xmc_dma.c **** #define DMA_EVENT_MAX (5UL)
  89:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_DEST_PER_Pos GPDMA0_CH_CFGH_DEST_PER_Pos
  90:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_SRC_PER_Pos GPDMA0_CH_CFGH_SRC_PER_Pos
  91:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA0_CH_CFGH_PER_Msk (0x7U)
  92:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA1_CH_CFGH_PER_Msk (0x3U)
  93:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CFGH_PER_BITSIZE (4U)
  94:../Libraries/XMCLib/src/xmc_dma.c **** #define GPDMA_CH_CTLL_INT_EN_Msk GPDMA0_CH_CTLL_INT_EN_Msk
  95:../Libraries/XMCLib/src/xmc_dma.c **** 
  96:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
  97:../Libraries/XMCLib/src/xmc_dma.c ****  * LOCAL DATA
  98:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
  99:../Libraries/XMCLib/src/xmc_dma.c **** 
 100:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA0)
 101:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma0_event_handlers[XMC_DMA0_NUM_CHANNELS];
 102:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 103:../Libraries/XMCLib/src/xmc_dma.c **** 
 104:../Libraries/XMCLib/src/xmc_dma.c **** #if defined (GPDMA1)
 105:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_EVENT_HANDLER_t dma1_event_handlers[XMC_DMA1_NUM_CHANNELS];
 106:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 107:../Libraries/XMCLib/src/xmc_dma.c ****  
 108:../Libraries/XMCLib/src/xmc_dma.c **** /*******************************************************************************
 109:../Libraries/XMCLib/src/xmc_dma.c ****  * API IMPLEMENTATION
 110:../Libraries/XMCLib/src/xmc_dma.c ****  *******************************************************************************/
 111:../Libraries/XMCLib/src/xmc_dma.c **** 
 112:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize GPDMA */
 113:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Init(XMC_DMA_t *const dma)
 114:../Libraries/XMCLib/src/xmc_dma.c **** {
 289              	 .loc 2 114 0
 290              	 .cfi_startproc
 291              	 
 292              	 
 293 0000 80B5     	 push {r7,lr}
 294              	.LCFI36:
 295              	 .cfi_def_cfa_offset 8
 296              	 .cfi_offset 7,-8
 297              	 .cfi_offset 14,-4
 298 0002 82B0     	 sub sp,sp,#8
 299              	.LCFI37:
 300              	 .cfi_def_cfa_offset 16
 301 0004 00AF     	 add r7,sp,#0
 302              	.LCFI38:
 303              	 .cfi_def_cfa_register 7
 304 0006 7860     	 str r0,[r7,#4]
 115:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_Enable(dma);
 305              	 .loc 2 115 0
 306 0008 7868     	 ldr r0,[r7,#4]
 307 000a FFF7FEFF 	 bl XMC_DMA_Enable
 116:../Libraries/XMCLib/src/xmc_dma.c **** }
 308              	 .loc 2 116 0
 309 000e 0837     	 adds r7,r7,#8
 310              	.LCFI39:
 311              	 .cfi_def_cfa_offset 8
 312 0010 BD46     	 mov sp,r7
 313              	.LCFI40:
 314              	 .cfi_def_cfa_register 13
 315              	 
 316 0012 80BD     	 pop {r7,pc}
 317              	 .cfi_endproc
 318              	.LFE183:
 320              	 .section .text.XMC_DMA_Enable,"ax",%progbits
 321              	 .align 2
 322              	 .global XMC_DMA_Enable
 323              	 .thumb
 324              	 .thumb_func
 326              	XMC_DMA_Enable:
 327              	.LFB184:
 117:../Libraries/XMCLib/src/xmc_dma.c **** 
 118:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA module */
 119:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Enable(XMC_DMA_t *const dma)
 120:../Libraries/XMCLib/src/xmc_dma.c **** {
 328              	 .loc 2 120 0
 329              	 .cfi_startproc
 330              	 
 331              	 
 332 0000 80B5     	 push {r7,lr}
 333              	.LCFI41:
 334              	 .cfi_def_cfa_offset 8
 335              	 .cfi_offset 7,-8
 336              	 .cfi_offset 14,-4
 337 0002 82B0     	 sub sp,sp,#8
 338              	.LCFI42:
 339              	 .cfi_def_cfa_offset 16
 340 0004 00AF     	 add r7,sp,#0
 341              	.LCFI43:
 342              	 .cfi_def_cfa_register 7
 343 0006 7860     	 str r0,[r7,#4]
 121:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 122:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 344              	 .loc 2 122 0
 345 0008 7B68     	 ldr r3,[r7,#4]
 346 000a 084A     	 ldr r2,.L17
 347 000c 9342     	 cmp r3,r2
 348 000e 03D1     	 bne .L15
 123:../Libraries/XMCLib/src/xmc_dma.c ****   {
 124:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 125:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 126:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 127:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 128:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 349              	 .loc 2 128 0
 350 0010 0748     	 ldr r0,.L17+4
 351 0012 FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 352 0016 02E0     	 b .L16
 353              	.L15:
 129:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 130:../Libraries/XMCLib/src/xmc_dma.c ****   }
 131:../Libraries/XMCLib/src/xmc_dma.c ****   else
 132:../Libraries/XMCLib/src/xmc_dma.c ****   {
 133:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 134:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 135:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 136:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 354              	 .loc 2 136 0
 355 0018 0648     	 ldr r0,.L17+8
 356 001a FFF7FEFF 	 bl XMC_SCU_RESET_DeassertPeripheralReset
 357              	.L16:
 137:../Libraries/XMCLib/src/xmc_dma.c ****   }
 138:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 139:../Libraries/XMCLib/src/xmc_dma.c **** 
 140:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x1U;
 358              	 .loc 2 140 0
 359 001e 7B68     	 ldr r3,[r7,#4]
 360 0020 0122     	 movs r2,#1
 361 0022 C3F89823 	 str r2,[r3,#920]
 141:../Libraries/XMCLib/src/xmc_dma.c **** }
 362              	 .loc 2 141 0
 363 0026 0837     	 adds r7,r7,#8
 364              	.LCFI44:
 365              	 .cfi_def_cfa_offset 8
 366 0028 BD46     	 mov sp,r7
 367              	.LCFI45:
 368              	 .cfi_def_cfa_register 13
 369              	 
 370 002a 80BD     	 pop {r7,pc}
 371              	.L18:
 372              	 .align 2
 373              	.L17:
 374 002c 00400150 	 .word 1342259200
 375 0030 10000020 	 .word 536870928
 376 0034 20000020 	 .word 536870944
 377              	 .cfi_endproc
 378              	.LFE184:
 380              	 .section .text.XMC_DMA_Disable,"ax",%progbits
 381              	 .align 2
 382              	 .global XMC_DMA_Disable
 383              	 .thumb
 384              	 .thumb_func
 386              	XMC_DMA_Disable:
 387              	.LFB185:
 142:../Libraries/XMCLib/src/xmc_dma.c **** 
 143:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA module */
 144:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_Disable(XMC_DMA_t *const dma)
 145:../Libraries/XMCLib/src/xmc_dma.c **** {
 388              	 .loc 2 145 0
 389              	 .cfi_startproc
 390              	 
 391              	 
 392 0000 80B5     	 push {r7,lr}
 393              	.LCFI46:
 394              	 .cfi_def_cfa_offset 8
 395              	 .cfi_offset 7,-8
 396              	 .cfi_offset 14,-4
 397 0002 82B0     	 sub sp,sp,#8
 398              	.LCFI47:
 399              	 .cfi_def_cfa_offset 16
 400 0004 00AF     	 add r7,sp,#0
 401              	.LCFI48:
 402              	 .cfi_def_cfa_register 7
 403 0006 7860     	 str r0,[r7,#4]
 146:../Libraries/XMCLib/src/xmc_dma.c ****   dma->DMACFGREG = 0x0U;
 404              	 .loc 2 146 0
 405 0008 7B68     	 ldr r3,[r7,#4]
 406 000a 0022     	 movs r2,#0
 407 000c C3F89823 	 str r2,[r3,#920]
 147:../Libraries/XMCLib/src/xmc_dma.c **** 
 148:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 149:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 408              	 .loc 2 149 0
 409 0010 7B68     	 ldr r3,[r7,#4]
 410 0012 064A     	 ldr r2,.L22
 411 0014 9342     	 cmp r3,r2
 412 0016 03D1     	 bne .L20
 150:../Libraries/XMCLib/src/xmc_dma.c ****   {
 151:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 152:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 413              	 .loc 2 152 0
 414 0018 0548     	 ldr r0,.L22+4
 415 001a FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 416 001e 02E0     	 b .L19
 417              	.L20:
 153:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 154:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 155:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 156:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 157:../Libraries/XMCLib/src/xmc_dma.c ****   }
 158:../Libraries/XMCLib/src/xmc_dma.c ****   else
 159:../Libraries/XMCLib/src/xmc_dma.c ****   {
 160:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 418              	 .loc 2 160 0
 419 0020 0448     	 ldr r0,.L22+8
 420 0022 FFF7FEFF 	 bl XMC_SCU_RESET_AssertPeripheralReset
 421              	.L19:
 161:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 162:../Libraries/XMCLib/src/xmc_dma.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 163:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 164:../Libraries/XMCLib/src/xmc_dma.c ****   }
 165:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 166:../Libraries/XMCLib/src/xmc_dma.c **** }
 422              	 .loc 2 166 0
 423 0026 0837     	 adds r7,r7,#8
 424              	.LCFI49:
 425              	 .cfi_def_cfa_offset 8
 426 0028 BD46     	 mov sp,r7
 427              	.LCFI50:
 428              	 .cfi_def_cfa_register 13
 429              	 
 430 002a 80BD     	 pop {r7,pc}
 431              	.L23:
 432              	 .align 2
 433              	.L22:
 434 002c 00400150 	 .word 1342259200
 435 0030 10000020 	 .word 536870928
 436 0034 20000020 	 .word 536870944
 437              	 .cfi_endproc
 438              	.LFE185:
 440              	 .section .text.XMC_DMA_IsEnabled,"ax",%progbits
 441              	 .align 2
 442              	 .global XMC_DMA_IsEnabled
 443              	 .thumb
 444              	 .thumb_func
 446              	XMC_DMA_IsEnabled:
 447              	.LFB186:
 167:../Libraries/XMCLib/src/xmc_dma.c **** 
 168:../Libraries/XMCLib/src/xmc_dma.c **** /* Check is the GPDMA peripheral is enabled */
 169:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_IsEnabled(const XMC_DMA_t *const dma)
 170:../Libraries/XMCLib/src/xmc_dma.c **** {
 448              	 .loc 2 170 0
 449              	 .cfi_startproc
 450              	 
 451              	 
 452 0000 80B5     	 push {r7,lr}
 453              	.LCFI51:
 454              	 .cfi_def_cfa_offset 8
 455              	 .cfi_offset 7,-8
 456              	 .cfi_offset 14,-4
 457 0002 84B0     	 sub sp,sp,#16
 458              	.LCFI52:
 459              	 .cfi_def_cfa_offset 24
 460 0004 00AF     	 add r7,sp,#0
 461              	.LCFI53:
 462              	 .cfi_def_cfa_register 7
 463 0006 7860     	 str r0,[r7,#4]
 171:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 172:../Libraries/XMCLib/src/xmc_dma.c **** 
 173:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 174:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 464              	 .loc 2 174 0
 465 0008 7B68     	 ldr r3,[r7,#4]
 466 000a 1F4A     	 ldr r2,.L31
 467 000c 9342     	 cmp r3,r2
 468 000e 11D1     	 bne .L25
 175:../Libraries/XMCLib/src/xmc_dma.c ****   {
 176:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 177:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA0);
 469              	 .loc 2 177 0
 470 0010 1E48     	 ldr r0,.L31+4
 471 0012 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 472 0016 0346     	 mov r3,r0
 473 0018 002B     	 cmp r3,#0
 474 001a 14BF     	 ite ne
 475 001c 0123     	 movne r3,#1
 476 001e 0023     	 moveq r3,#0
 477 0020 DBB2     	 uxtb r3,r3
 478 0022 83F00103 	 eor r3,r3,#1
 479 0026 DBB2     	 uxtb r3,r3
 480 0028 FB73     	 strb r3,[r7,#15]
 481 002a FB7B     	 ldrb r3,[r7,#15]
 482 002c 03F00103 	 and r3,r3,#1
 483 0030 FB73     	 strb r3,[r7,#15]
 484 0032 10E0     	 b .L26
 485              	.L25:
 178:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 179:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA0);
 180:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 181:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 182:../Libraries/XMCLib/src/xmc_dma.c ****   }
 183:../Libraries/XMCLib/src/xmc_dma.c ****   else
 184:../Libraries/XMCLib/src/xmc_dma.c ****   {
 185:../Libraries/XMCLib/src/xmc_dma.c ****     status = !XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_GPDMA1);
 486              	 .loc 2 185 0
 487 0034 1648     	 ldr r0,.L31+8
 488 0036 FFF7FEFF 	 bl XMC_SCU_RESET_IsPeripheralResetAsserted
 489 003a 0346     	 mov r3,r0
 490 003c 002B     	 cmp r3,#0
 491 003e 14BF     	 ite ne
 492 0040 0123     	 movne r3,#1
 493 0042 0023     	 moveq r3,#0
 494 0044 DBB2     	 uxtb r3,r3
 495 0046 83F00103 	 eor r3,r3,#1
 496 004a DBB2     	 uxtb r3,r3
 497 004c FB73     	 strb r3,[r7,#15]
 498 004e FB7B     	 ldrb r3,[r7,#15]
 499 0050 03F00103 	 and r3,r3,#1
 500 0054 FB73     	 strb r3,[r7,#15]
 501              	.L26:
 186:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(CLOCK_GATING_SUPPORTED)
 187:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && !XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_GPDMA1);
 188:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 189:../Libraries/XMCLib/src/xmc_dma.c ****   }
 190:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 191:../Libraries/XMCLib/src/xmc_dma.c **** 
 192:../Libraries/XMCLib/src/xmc_dma.c ****   /* DMA reset is not asserted and peripheral clock is not gated */
 193:../Libraries/XMCLib/src/xmc_dma.c ****   if (status == true)
 502              	 .loc 2 193 0
 503 0056 FB7B     	 ldrb r3,[r7,#15]
 504 0058 002B     	 cmp r3,#0
 505 005a 0FD0     	 beq .L27
 194:../Libraries/XMCLib/src/xmc_dma.c ****   {
 195:../Libraries/XMCLib/src/xmc_dma.c ****     status = status && (dma->DMACFGREG != 0U);
 506              	 .loc 2 195 0
 507 005c FB7B     	 ldrb r3,[r7,#15]
 508 005e 002B     	 cmp r3,#0
 509 0060 06D0     	 beq .L28
 510              	 .loc 2 195 0 is_stmt 0 discriminator 1
 511 0062 7B68     	 ldr r3,[r7,#4]
 512 0064 D3F89833 	 ldr r3,[r3,#920]
 513 0068 002B     	 cmp r3,#0
 514 006a 01D0     	 beq .L28
 515              	 .loc 2 195 0 discriminator 3
 516 006c 0123     	 movs r3,#1
 517 006e 00E0     	 b .L29
 518              	.L28:
 519              	 .loc 2 195 0 discriminator 4
 520 0070 0023     	 movs r3,#0
 521              	.L29:
 522              	 .loc 2 195 0 discriminator 6
 523 0072 FB73     	 strb r3,[r7,#15]
 524 0074 FB7B     	 ldrb r3,[r7,#15]
 525 0076 03F00103 	 and r3,r3,#1
 526 007a FB73     	 strb r3,[r7,#15]
 527              	.L27:
 196:../Libraries/XMCLib/src/xmc_dma.c ****   }
 197:../Libraries/XMCLib/src/xmc_dma.c **** 
 198:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 528              	 .loc 2 198 0 is_stmt 1
 529 007c FB7B     	 ldrb r3,[r7,#15]
 199:../Libraries/XMCLib/src/xmc_dma.c **** }
 530              	 .loc 2 199 0
 531 007e 1846     	 mov r0,r3
 532 0080 1037     	 adds r7,r7,#16
 533              	.LCFI54:
 534              	 .cfi_def_cfa_offset 8
 535 0082 BD46     	 mov sp,r7
 536              	.LCFI55:
 537              	 .cfi_def_cfa_register 13
 538              	 
 539 0084 80BD     	 pop {r7,pc}
 540              	.L32:
 541 0086 00BF     	 .align 2
 542              	.L31:
 543 0088 00400150 	 .word 1342259200
 544 008c 10000020 	 .word 536870928
 545 0090 20000020 	 .word 536870944
 546              	 .cfi_endproc
 547              	.LFE186:
 549              	 .section .text.XMC_DMA_EnableRequestLine,"ax",%progbits
 550              	 .align 2
 551              	 .global XMC_DMA_EnableRequestLine
 552              	 .thumb
 553              	 .thumb_func
 555              	XMC_DMA_EnableRequestLine:
 556              	.LFB187:
 200:../Libraries/XMCLib/src/xmc_dma.c **** 
 201:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable request line */
 202:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_EnableRequestLine(XMC_DMA_t *const dma, uint8_t line, uint8_t peripheral)
 203:../Libraries/XMCLib/src/xmc_dma.c **** {
 557              	 .loc 2 203 0
 558              	 .cfi_startproc
 559              	 
 560              	 
 561              	 
 562 0000 80B4     	 push {r7}
 563              	.LCFI56:
 564              	 .cfi_def_cfa_offset 4
 565              	 .cfi_offset 7,-4
 566 0002 83B0     	 sub sp,sp,#12
 567              	.LCFI57:
 568              	 .cfi_def_cfa_offset 16
 569 0004 00AF     	 add r7,sp,#0
 570              	.LCFI58:
 571              	 .cfi_def_cfa_register 7
 572 0006 7860     	 str r0,[r7,#4]
 573 0008 0B46     	 mov r3,r1
 574 000a FB70     	 strb r3,[r7,#3]
 575 000c 1346     	 mov r3,r2
 576 000e BB70     	 strb r3,[r7,#2]
 204:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 205:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 577              	 .loc 2 205 0
 578 0010 7B68     	 ldr r3,[r7,#4]
 579 0012 1F4A     	 ldr r2,.L36
 580 0014 9342     	 cmp r3,r2
 581 0016 1BD1     	 bne .L34
 206:../Libraries/XMCLib/src/xmc_dma.c ****   {
 207:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 208:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL0 = ((DLR->SRSEL0 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 582              	 .loc 2 208 0
 583 0018 1E48     	 ldr r0,.L36+4
 584 001a 1E4B     	 ldr r3,.L36+4
 585 001c 9A68     	 ldr r2,[r3,#8]
 586 001e FB78     	 ldrb r3,[r7,#3]
 587 0020 9B00     	 lsls r3,r3,#2
 588 0022 1946     	 mov r1,r3
 589 0024 0F23     	 movs r3,#15
 590 0026 8B40     	 lsls r3,r3,r1
 591 0028 DB43     	 mvns r3,r3
 592 002a 1A40     	 ands r2,r2,r3
 209:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 593              	 .loc 2 209 0
 594 002c BB78     	 ldrb r3,[r7,#2]
 595 002e F978     	 ldrb r1,[r7,#3]
 596 0030 8900     	 lsls r1,r1,#2
 597 0032 8B40     	 lsls r3,r3,r1
 208:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 598              	 .loc 2 208 0
 599 0034 1343     	 orrs r3,r3,r2
 600 0036 8360     	 str r3,[r0,#8]
 210:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x1UL << (line & GPDMA0_CH_CFGH_PER_Msk));
 601              	 .loc 2 210 0
 602 0038 1649     	 ldr r1,.L36+4
 603 003a 164B     	 ldr r3,.L36+4
 604 003c 1A69     	 ldr r2,[r3,#16]
 605 003e FB78     	 ldrb r3,[r7,#3]
 606 0040 03F00703 	 and r3,r3,#7
 607 0044 0120     	 movs r0,#1
 608 0046 00FA03F3 	 lsl r3,r0,r3
 609 004a 1343     	 orrs r3,r3,r2
 610 004c 0B61     	 str r3,[r1,#16]
 611 004e 19E0     	 b .L33
 612              	.L34:
 211:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 212:../Libraries/XMCLib/src/xmc_dma.c ****   }
 213:../Libraries/XMCLib/src/xmc_dma.c ****   else
 214:../Libraries/XMCLib/src/xmc_dma.c ****   {
 215:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->SRSEL1 = ((DLR->SRSEL1 & (uint32_t)~(DLR_SRSEL_RS_MSK << (line * DLR_SRSEL_RS_BITSIZE))) |
 613              	 .loc 2 215 0
 614 0050 1048     	 ldr r0,.L36+4
 615 0052 104B     	 ldr r3,.L36+4
 616 0054 DA68     	 ldr r2,[r3,#12]
 617 0056 FB78     	 ldrb r3,[r7,#3]
 618 0058 9B00     	 lsls r3,r3,#2
 619 005a 1946     	 mov r1,r3
 620 005c 0F23     	 movs r3,#15
 621 005e 8B40     	 lsls r3,r3,r1
 622 0060 DB43     	 mvns r3,r3
 623 0062 1A40     	 ands r2,r2,r3
 216:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 624              	 .loc 2 216 0
 625 0064 BB78     	 ldrb r3,[r7,#2]
 626 0066 F978     	 ldrb r1,[r7,#3]
 627 0068 8900     	 lsls r1,r1,#2
 628 006a 8B40     	 lsls r3,r3,r1
 215:../Libraries/XMCLib/src/xmc_dma.c ****                    ((uint32_t)peripheral << (line * DLR_SRSEL_RS_BITSIZE)));
 629              	 .loc 2 215 0
 630 006c 1343     	 orrs r3,r3,r2
 631 006e C360     	 str r3,[r0,#12]
 217:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN |= (0x100UL << line);
 632              	 .loc 2 217 0
 633 0070 0849     	 ldr r1,.L36+4
 634 0072 084B     	 ldr r3,.L36+4
 635 0074 1A69     	 ldr r2,[r3,#16]
 636 0076 FB78     	 ldrb r3,[r7,#3]
 637 0078 4FF48070 	 mov r0,#256
 638 007c 00FA03F3 	 lsl r3,r0,r3
 639 0080 1343     	 orrs r3,r3,r2
 640 0082 0B61     	 str r3,[r1,#16]
 641              	.L33:
 218:../Libraries/XMCLib/src/xmc_dma.c ****   }
 219:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 220:../Libraries/XMCLib/src/xmc_dma.c **** }
 642              	 .loc 2 220 0
 643 0084 0C37     	 adds r7,r7,#12
 644              	.LCFI59:
 645              	 .cfi_def_cfa_offset 4
 646 0086 BD46     	 mov sp,r7
 647              	.LCFI60:
 648              	 .cfi_def_cfa_register 13
 649              	 
 650 0088 5DF8047B 	 ldr r7,[sp],#4
 651              	.LCFI61:
 652              	 .cfi_restore 7
 653              	 .cfi_def_cfa_offset 0
 654 008c 7047     	 bx lr
 655              	.L37:
 656 008e 00BF     	 .align 2
 657              	.L36:
 658 0090 00400150 	 .word 1342259200
 659 0094 00490050 	 .word 1342195968
 660              	 .cfi_endproc
 661              	.LFE187:
 663              	 .section .text.XMC_DMA_DisableRequestLine,"ax",%progbits
 664              	 .align 2
 665              	 .global XMC_DMA_DisableRequestLine
 666              	 .thumb
 667              	 .thumb_func
 669              	XMC_DMA_DisableRequestLine:
 670              	.LFB188:
 221:../Libraries/XMCLib/src/xmc_dma.c **** 
 222:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_DisableRequestLine(XMC_DMA_t *const dma, uint8_t line)
 223:../Libraries/XMCLib/src/xmc_dma.c **** {
 671              	 .loc 2 223 0
 672              	 .cfi_startproc
 673              	 
 674              	 
 675              	 
 676 0000 80B4     	 push {r7}
 677              	.LCFI62:
 678              	 .cfi_def_cfa_offset 4
 679              	 .cfi_offset 7,-4
 680 0002 83B0     	 sub sp,sp,#12
 681              	.LCFI63:
 682              	 .cfi_def_cfa_offset 16
 683 0004 00AF     	 add r7,sp,#0
 684              	.LCFI64:
 685              	 .cfi_def_cfa_register 7
 686 0006 7860     	 str r0,[r7,#4]
 687 0008 0B46     	 mov r3,r1
 688 000a FB70     	 strb r3,[r7,#3]
 224:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 225:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 689              	 .loc 2 225 0
 690 000c 7B68     	 ldr r3,[r7,#4]
 691 000e 0F4A     	 ldr r2,.L41
 692 0010 9342     	 cmp r3,r2
 693 0012 0AD1     	 bne .L39
 226:../Libraries/XMCLib/src/xmc_dma.c ****   {
 227:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 228:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 694              	 .loc 2 228 0
 695 0014 0E49     	 ldr r1,.L41+4
 696 0016 0E4B     	 ldr r3,.L41+4
 697 0018 1A69     	 ldr r2,[r3,#16]
 698 001a FB78     	 ldrb r3,[r7,#3]
 699 001c 0120     	 movs r0,#1
 700 001e 00FA03F3 	 lsl r3,r0,r3
 701 0022 DB43     	 mvns r3,r3
 702 0024 1340     	 ands r3,r3,r2
 703 0026 0B61     	 str r3,[r1,#16]
 704 0028 0AE0     	 b .L38
 705              	.L39:
 229:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 230:../Libraries/XMCLib/src/xmc_dma.c ****   }
 231:../Libraries/XMCLib/src/xmc_dma.c ****   else
 232:../Libraries/XMCLib/src/xmc_dma.c ****   {
 233:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 706              	 .loc 2 233 0
 707 002a 0949     	 ldr r1,.L41+4
 708 002c 084B     	 ldr r3,.L41+4
 709 002e 1A69     	 ldr r2,[r3,#16]
 710 0030 FB78     	 ldrb r3,[r7,#3]
 711 0032 4FF48070 	 mov r0,#256
 712 0036 00FA03F3 	 lsl r3,r0,r3
 713 003a DB43     	 mvns r3,r3
 714 003c 1340     	 ands r3,r3,r2
 715 003e 0B61     	 str r3,[r1,#16]
 716              	.L38:
 234:../Libraries/XMCLib/src/xmc_dma.c ****   }
 235:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 236:../Libraries/XMCLib/src/xmc_dma.c **** }
 717              	 .loc 2 236 0
 718 0040 0C37     	 adds r7,r7,#12
 719              	.LCFI65:
 720              	 .cfi_def_cfa_offset 4
 721 0042 BD46     	 mov sp,r7
 722              	.LCFI66:
 723              	 .cfi_def_cfa_register 13
 724              	 
 725 0044 5DF8047B 	 ldr r7,[sp],#4
 726              	.LCFI67:
 727              	 .cfi_restore 7
 728              	 .cfi_def_cfa_offset 0
 729 0048 7047     	 bx lr
 730              	.L42:
 731 004a 00BF     	 .align 2
 732              	.L41:
 733 004c 00400150 	 .word 1342259200
 734 0050 00490050 	 .word 1342195968
 735              	 .cfi_endproc
 736              	.LFE188:
 738              	 .section .text.XMC_DMA_ClearRequestLine,"ax",%progbits
 739              	 .align 2
 740              	 .global XMC_DMA_ClearRequestLine
 741              	 .thumb
 742              	 .thumb_func
 744              	XMC_DMA_ClearRequestLine:
 745              	.LFB189:
 237:../Libraries/XMCLib/src/xmc_dma.c **** 
 238:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearRequestLine(XMC_DMA_t *const dma, uint8_t line)
 239:../Libraries/XMCLib/src/xmc_dma.c **** {
 746              	 .loc 2 239 0
 747              	 .cfi_startproc
 748              	 
 749              	 
 750              	 
 751 0000 80B4     	 push {r7}
 752              	.LCFI68:
 753              	 .cfi_def_cfa_offset 4
 754              	 .cfi_offset 7,-4
 755 0002 83B0     	 sub sp,sp,#12
 756              	.LCFI69:
 757              	 .cfi_def_cfa_offset 16
 758 0004 00AF     	 add r7,sp,#0
 759              	.LCFI70:
 760              	 .cfi_def_cfa_register 7
 761 0006 7860     	 str r0,[r7,#4]
 762 0008 0B46     	 mov r3,r1
 763 000a FB70     	 strb r3,[r7,#3]
 240:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 241:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 764              	 .loc 2 241 0
 765 000c 7B68     	 ldr r3,[r7,#4]
 766 000e 184A     	 ldr r2,.L46
 767 0010 9342     	 cmp r3,r2
 768 0012 13D1     	 bne .L44
 242:../Libraries/XMCLib/src/xmc_dma.c ****   {
 243:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 244:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x1UL << line);
 769              	 .loc 2 244 0
 770 0014 1749     	 ldr r1,.L46+4
 771 0016 174B     	 ldr r3,.L46+4
 772 0018 1A69     	 ldr r2,[r3,#16]
 773 001a FB78     	 ldrb r3,[r7,#3]
 774 001c 0120     	 movs r0,#1
 775 001e 00FA03F3 	 lsl r3,r0,r3
 776 0022 DB43     	 mvns r3,r3
 777 0024 1340     	 ands r3,r3,r2
 778 0026 0B61     	 str r3,[r1,#16]
 245:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x1UL << line;
 779              	 .loc 2 245 0
 780 0028 1249     	 ldr r1,.L46+4
 781 002a 124B     	 ldr r3,.L46+4
 782 002c 1A69     	 ldr r2,[r3,#16]
 783 002e FB78     	 ldrb r3,[r7,#3]
 784 0030 0120     	 movs r0,#1
 785 0032 00FA03F3 	 lsl r3,r0,r3
 786 0036 1343     	 orrs r3,r3,r2
 787 0038 0B61     	 str r3,[r1,#16]
 788 003a 14E0     	 b .L43
 789              	.L44:
 246:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 247:../Libraries/XMCLib/src/xmc_dma.c ****   }
 248:../Libraries/XMCLib/src/xmc_dma.c ****   else
 249:../Libraries/XMCLib/src/xmc_dma.c ****   {
 250:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->LNEN &= ~(0x100UL << line);
 790              	 .loc 2 250 0
 791 003c 0D49     	 ldr r1,.L46+4
 792 003e 0D4B     	 ldr r3,.L46+4
 793 0040 1A69     	 ldr r2,[r3,#16]
 794 0042 FB78     	 ldrb r3,[r7,#3]
 795 0044 4FF48070 	 mov r0,#256
 796 0048 00FA03F3 	 lsl r3,r0,r3
 797 004c DB43     	 mvns r3,r3
 798 004e 1340     	 ands r3,r3,r2
 799 0050 0B61     	 str r3,[r1,#16]
 251:../Libraries/XMCLib/src/xmc_dma.c **** 	DLR->LNEN |= 0x100UL << line;
 800              	 .loc 2 251 0
 801 0052 0849     	 ldr r1,.L46+4
 802 0054 074B     	 ldr r3,.L46+4
 803 0056 1A69     	 ldr r2,[r3,#16]
 804 0058 FB78     	 ldrb r3,[r7,#3]
 805 005a 4FF48070 	 mov r0,#256
 806 005e 00FA03F3 	 lsl r3,r0,r3
 807 0062 1343     	 orrs r3,r3,r2
 808 0064 0B61     	 str r3,[r1,#16]
 809              	.L43:
 252:../Libraries/XMCLib/src/xmc_dma.c ****   }
 253:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 254:../Libraries/XMCLib/src/xmc_dma.c **** }
 810              	 .loc 2 254 0
 811 0066 0C37     	 adds r7,r7,#12
 812              	.LCFI71:
 813              	 .cfi_def_cfa_offset 4
 814 0068 BD46     	 mov sp,r7
 815              	.LCFI72:
 816              	 .cfi_def_cfa_register 13
 817              	 
 818 006a 5DF8047B 	 ldr r7,[sp],#4
 819              	.LCFI73:
 820              	 .cfi_restore 7
 821              	 .cfi_def_cfa_offset 0
 822 006e 7047     	 bx lr
 823              	.L47:
 824              	 .align 2
 825              	.L46:
 826 0070 00400150 	 .word 1342259200
 827 0074 00490050 	 .word 1342195968
 828              	 .cfi_endproc
 829              	.LFE189:
 831              	 .section .text.XMC_DMA_GetOverrunStatus,"ax",%progbits
 832              	 .align 2
 833              	 .global XMC_DMA_GetOverrunStatus
 834              	 .thumb
 835              	 .thumb_func
 837              	XMC_DMA_GetOverrunStatus:
 838              	.LFB190:
 255:../Libraries/XMCLib/src/xmc_dma.c **** 
 256:../Libraries/XMCLib/src/xmc_dma.c **** /* Get DMA DLR overrun status */
 257:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_GetOverrunStatus(XMC_DMA_t *const dma, uint8_t line)
 258:../Libraries/XMCLib/src/xmc_dma.c **** {
 839              	 .loc 2 258 0
 840              	 .cfi_startproc
 841              	 
 842              	 
 843              	 
 844 0000 80B4     	 push {r7}
 845              	.LCFI74:
 846              	 .cfi_def_cfa_offset 4
 847              	 .cfi_offset 7,-4
 848 0002 85B0     	 sub sp,sp,#20
 849              	.LCFI75:
 850              	 .cfi_def_cfa_offset 24
 851 0004 00AF     	 add r7,sp,#0
 852              	.LCFI76:
 853              	 .cfi_def_cfa_register 7
 854 0006 7860     	 str r0,[r7,#4]
 855 0008 0B46     	 mov r3,r1
 856 000a FB70     	 strb r3,[r7,#3]
 259:../Libraries/XMCLib/src/xmc_dma.c ****   bool status;
 260:../Libraries/XMCLib/src/xmc_dma.c **** 
 261:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 262:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 857              	 .loc 2 262 0
 858 000c 7B68     	 ldr r3,[r7,#4]
 859 000e 124A     	 ldr r2,.L52
 860 0010 9342     	 cmp r3,r2
 861 0012 0CD1     	 bne .L49
 263:../Libraries/XMCLib/src/xmc_dma.c ****   {
 264:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 265:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x1UL << line));
 862              	 .loc 2 265 0
 863 0014 114B     	 ldr r3,.L52+4
 864 0016 1A68     	 ldr r2,[r3]
 865 0018 FB78     	 ldrb r3,[r7,#3]
 866 001a 22FA03F3 	 lsr r3,r2,r3
 867 001e 03F00103 	 and r3,r3,#1
 868 0022 002B     	 cmp r3,#0
 869 0024 14BF     	 ite ne
 870 0026 0123     	 movne r3,#1
 871 0028 0023     	 moveq r3,#0
 872 002a FB73     	 strb r3,[r7,#15]
 873 002c 0CE0     	 b .L50
 874              	.L49:
 266:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 267:../Libraries/XMCLib/src/xmc_dma.c ****   }
 268:../Libraries/XMCLib/src/xmc_dma.c ****   else
 269:../Libraries/XMCLib/src/xmc_dma.c ****   {
 270:../Libraries/XMCLib/src/xmc_dma.c ****     status = (bool)(DLR->OVRSTAT & (0x100UL << line));
 875              	 .loc 2 270 0
 876 002e 0B4B     	 ldr r3,.L52+4
 877 0030 1A68     	 ldr r2,[r3]
 878 0032 FB78     	 ldrb r3,[r7,#3]
 879 0034 4FF48071 	 mov r1,#256
 880 0038 01FA03F3 	 lsl r3,r1,r3
 881 003c 1340     	 ands r3,r3,r2
 882 003e 002B     	 cmp r3,#0
 883 0040 14BF     	 ite ne
 884 0042 0123     	 movne r3,#1
 885 0044 0023     	 moveq r3,#0
 886 0046 FB73     	 strb r3,[r7,#15]
 887              	.L50:
 271:../Libraries/XMCLib/src/xmc_dma.c ****   }
 272:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 273:../Libraries/XMCLib/src/xmc_dma.c **** 
 274:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 888              	 .loc 2 274 0
 889 0048 FB7B     	 ldrb r3,[r7,#15]
 275:../Libraries/XMCLib/src/xmc_dma.c **** }
 890              	 .loc 2 275 0
 891 004a 1846     	 mov r0,r3
 892 004c 1437     	 adds r7,r7,#20
 893              	.LCFI77:
 894              	 .cfi_def_cfa_offset 4
 895 004e BD46     	 mov sp,r7
 896              	.LCFI78:
 897              	 .cfi_def_cfa_register 13
 898              	 
 899 0050 5DF8047B 	 ldr r7,[sp],#4
 900              	.LCFI79:
 901              	 .cfi_restore 7
 902              	 .cfi_def_cfa_offset 0
 903 0054 7047     	 bx lr
 904              	.L53:
 905 0056 00BF     	 .align 2
 906              	.L52:
 907 0058 00400150 	 .word 1342259200
 908 005c 00490050 	 .word 1342195968
 909              	 .cfi_endproc
 910              	.LFE190:
 912              	 .section .text.XMC_DMA_ClearOverrunStatus,"ax",%progbits
 913              	 .align 2
 914              	 .global XMC_DMA_ClearOverrunStatus
 915              	 .thumb
 916              	 .thumb_func
 918              	XMC_DMA_ClearOverrunStatus:
 919              	.LFB191:
 276:../Libraries/XMCLib/src/xmc_dma.c **** 
 277:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear DMA DLR overrun status */
 278:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_ClearOverrunStatus(XMC_DMA_t *const dma, const uint8_t line)
 279:../Libraries/XMCLib/src/xmc_dma.c **** {
 920              	 .loc 2 279 0
 921              	 .cfi_startproc
 922              	 
 923              	 
 924              	 
 925 0000 80B4     	 push {r7}
 926              	.LCFI80:
 927              	 .cfi_def_cfa_offset 4
 928              	 .cfi_offset 7,-4
 929 0002 83B0     	 sub sp,sp,#12
 930              	.LCFI81:
 931              	 .cfi_def_cfa_offset 16
 932 0004 00AF     	 add r7,sp,#0
 933              	.LCFI82:
 934              	 .cfi_def_cfa_register 7
 935 0006 7860     	 str r0,[r7,#4]
 936 0008 0B46     	 mov r3,r1
 937 000a FB70     	 strb r3,[r7,#3]
 280:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 281:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 938              	 .loc 2 281 0
 939 000c 7B68     	 ldr r3,[r7,#4]
 940 000e 0B4A     	 ldr r2,.L57
 941 0010 9342     	 cmp r3,r2
 942 0012 06D1     	 bne .L55
 282:../Libraries/XMCLib/src/xmc_dma.c ****   {
 283:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 284:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x1UL << line);
 943              	 .loc 2 284 0
 944 0014 0A4A     	 ldr r2,.L57+4
 945 0016 FB78     	 ldrb r3,[r7,#3]
 946 0018 0121     	 movs r1,#1
 947 001a 01FA03F3 	 lsl r3,r1,r3
 948 001e 5360     	 str r3,[r2,#4]
 949 0020 06E0     	 b .L54
 950              	.L55:
 285:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 286:../Libraries/XMCLib/src/xmc_dma.c ****   }
 287:../Libraries/XMCLib/src/xmc_dma.c ****   else
 288:../Libraries/XMCLib/src/xmc_dma.c ****   {
 289:../Libraries/XMCLib/src/xmc_dma.c ****     DLR->OVRCLR = (uint32_t)(0x100UL << line);
 951              	 .loc 2 289 0
 952 0022 074A     	 ldr r2,.L57+4
 953 0024 FB78     	 ldrb r3,[r7,#3]
 954 0026 4FF48071 	 mov r1,#256
 955 002a 01FA03F3 	 lsl r3,r1,r3
 956 002e 5360     	 str r3,[r2,#4]
 957              	.L54:
 290:../Libraries/XMCLib/src/xmc_dma.c ****   }
 291:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 292:../Libraries/XMCLib/src/xmc_dma.c **** }
 958              	 .loc 2 292 0
 959 0030 0C37     	 adds r7,r7,#12
 960              	.LCFI83:
 961              	 .cfi_def_cfa_offset 4
 962 0032 BD46     	 mov sp,r7
 963              	.LCFI84:
 964              	 .cfi_def_cfa_register 13
 965              	 
 966 0034 5DF8047B 	 ldr r7,[sp],#4
 967              	.LCFI85:
 968              	 .cfi_restore 7
 969              	 .cfi_def_cfa_offset 0
 970 0038 7047     	 bx lr
 971              	.L58:
 972 003a 00BF     	 .align 2
 973              	.L57:
 974 003c 00400150 	 .word 1342259200
 975 0040 00490050 	 .word 1342195968
 976              	 .cfi_endproc
 977              	.LFE191:
 979              	 .section .text.XMC_DMA_CH_Disable,"ax",%progbits
 980              	 .align 2
 981              	 .global XMC_DMA_CH_Disable
 982              	 .thumb
 983              	 .thumb_func
 985              	XMC_DMA_CH_Disable:
 986              	.LFB192:
 293:../Libraries/XMCLib/src/xmc_dma.c **** 
 294:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable DMA channel */
 295:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Disable(XMC_DMA_t *const dma, const uint8_t channel)
 296:../Libraries/XMCLib/src/xmc_dma.c **** {
 987              	 .loc 2 296 0
 988              	 .cfi_startproc
 989              	 
 990              	 
 991              	 
 992 0000 80B4     	 push {r7}
 993              	.LCFI86:
 994              	 .cfi_def_cfa_offset 4
 995              	 .cfi_offset 7,-4
 996 0002 83B0     	 sub sp,sp,#12
 997              	.LCFI87:
 998              	 .cfi_def_cfa_offset 16
 999 0004 00AF     	 add r7,sp,#0
 1000              	.LCFI88:
 1001              	 .cfi_def_cfa_register 7
 1002 0006 7860     	 str r0,[r7,#4]
 1003 0008 0B46     	 mov r3,r1
 1004 000a FB70     	 strb r3,[r7,#3]
 297:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CHENREG = (uint32_t)(0x100UL << channel);
 1005              	 .loc 2 297 0
 1006 000c FB78     	 ldrb r3,[r7,#3]
 1007 000e 4FF48072 	 mov r2,#256
 1008 0012 9A40     	 lsls r2,r2,r3
 1009 0014 7B68     	 ldr r3,[r7,#4]
 1010 0016 C3F8A023 	 str r2,[r3,#928]
 298:../Libraries/XMCLib/src/xmc_dma.c ****   while((dma->CHENREG & (uint32_t)(0x1UL << channel)) != 0U)
 1011              	 .loc 2 298 0
 1012 001a 00BF     	 nop
 1013              	.L60:
 1014              	 .loc 2 298 0 is_stmt 0 discriminator 1
 1015 001c 7B68     	 ldr r3,[r7,#4]
 1016 001e D3F8A023 	 ldr r2,[r3,#928]
 1017 0022 FB78     	 ldrb r3,[r7,#3]
 1018 0024 22FA03F3 	 lsr r3,r2,r3
 1019 0028 03F00103 	 and r3,r3,#1
 1020 002c 002B     	 cmp r3,#0
 1021 002e F5D1     	 bne .L60
 299:../Libraries/XMCLib/src/xmc_dma.c ****   {
 300:../Libraries/XMCLib/src/xmc_dma.c ****     /* wait until channel is disabled */
 301:../Libraries/XMCLib/src/xmc_dma.c ****   }
 302:../Libraries/XMCLib/src/xmc_dma.c **** }
 1022              	 .loc 2 302 0 is_stmt 1
 1023 0030 0C37     	 adds r7,r7,#12
 1024              	.LCFI89:
 1025              	 .cfi_def_cfa_offset 4
 1026 0032 BD46     	 mov sp,r7
 1027              	.LCFI90:
 1028              	 .cfi_def_cfa_register 13
 1029              	 
 1030 0034 5DF8047B 	 ldr r7,[sp],#4
 1031              	.LCFI91:
 1032              	 .cfi_restore 7
 1033              	 .cfi_def_cfa_offset 0
 1034 0038 7047     	 bx lr
 1035              	 .cfi_endproc
 1036              	.LFE192:
 1038 003a 00BF     	 .section .text.XMC_DMA_CH_IsEnabled,"ax",%progbits
 1039              	 .align 2
 1040              	 .global XMC_DMA_CH_IsEnabled
 1041              	 .thumb
 1042              	 .thumb_func
 1044              	XMC_DMA_CH_IsEnabled:
 1045              	.LFB193:
 303:../Libraries/XMCLib/src/xmc_dma.c **** 
 304:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is enabled */
 305:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsEnabled(XMC_DMA_t *const dma, const uint8_t channel)
 306:../Libraries/XMCLib/src/xmc_dma.c **** {
 1046              	 .loc 2 306 0
 1047              	 .cfi_startproc
 1048              	 
 1049              	 
 1050              	 
 1051 0000 80B4     	 push {r7}
 1052              	.LCFI92:
 1053              	 .cfi_def_cfa_offset 4
 1054              	 .cfi_offset 7,-4
 1055 0002 83B0     	 sub sp,sp,#12
 1056              	.LCFI93:
 1057              	 .cfi_def_cfa_offset 16
 1058 0004 00AF     	 add r7,sp,#0
 1059              	.LCFI94:
 1060              	 .cfi_def_cfa_register 7
 1061 0006 7860     	 str r0,[r7,#4]
 1062 0008 0B46     	 mov r3,r1
 1063 000a FB70     	 strb r3,[r7,#3]
 307:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CHENREG & ((uint32_t)1U << channel));
 1064              	 .loc 2 307 0
 1065 000c 7B68     	 ldr r3,[r7,#4]
 1066 000e D3F8A023 	 ldr r2,[r3,#928]
 1067 0012 FB78     	 ldrb r3,[r7,#3]
 1068 0014 22FA03F3 	 lsr r3,r2,r3
 1069 0018 03F00103 	 and r3,r3,#1
 1070 001c 002B     	 cmp r3,#0
 1071 001e 14BF     	 ite ne
 1072 0020 0123     	 movne r3,#1
 1073 0022 0023     	 moveq r3,#0
 1074 0024 DBB2     	 uxtb r3,r3
 308:../Libraries/XMCLib/src/xmc_dma.c **** }
 1075              	 .loc 2 308 0
 1076 0026 1846     	 mov r0,r3
 1077 0028 0C37     	 adds r7,r7,#12
 1078              	.LCFI95:
 1079              	 .cfi_def_cfa_offset 4
 1080 002a BD46     	 mov sp,r7
 1081              	.LCFI96:
 1082              	 .cfi_def_cfa_register 13
 1083              	 
 1084 002c 5DF8047B 	 ldr r7,[sp],#4
 1085              	.LCFI97:
 1086              	 .cfi_restore 7
 1087              	 .cfi_def_cfa_offset 0
 1088 0030 7047     	 bx lr
 1089              	 .cfi_endproc
 1090              	.LFE193:
 1092 0032 00BF     	 .section .text.XMC_DMA_CH_Init,"ax",%progbits
 1093              	 .align 2
 1094              	 .global XMC_DMA_CH_Init
 1095              	 .thumb
 1096              	 .thumb_func
 1098              	XMC_DMA_CH_Init:
 1099              	.LFB194:
 309:../Libraries/XMCLib/src/xmc_dma.c **** 
 310:../Libraries/XMCLib/src/xmc_dma.c **** /* Initialize DMA channel */
 311:../Libraries/XMCLib/src/xmc_dma.c **** XMC_DMA_CH_STATUS_t XMC_DMA_CH_Init(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_C
 312:../Libraries/XMCLib/src/xmc_dma.c **** {
 1100              	 .loc 2 312 0
 1101              	 .cfi_startproc
 1102              	 
 1103              	 
 1104 0000 80B5     	 push {r7,lr}
 1105              	.LCFI98:
 1106              	 .cfi_def_cfa_offset 8
 1107              	 .cfi_offset 7,-8
 1108              	 .cfi_offset 14,-4
 1109 0002 86B0     	 sub sp,sp,#24
 1110              	.LCFI99:
 1111              	 .cfi_def_cfa_offset 32
 1112 0004 00AF     	 add r7,sp,#0
 1113              	.LCFI100:
 1114              	 .cfi_def_cfa_register 7
 1115 0006 F860     	 str r0,[r7,#12]
 1116 0008 0B46     	 mov r3,r1
 1117 000a 7A60     	 str r2,[r7,#4]
 1118 000c FB72     	 strb r3,[r7,#11]
 313:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_STATUS_t status;
 314:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t line;
 315:../Libraries/XMCLib/src/xmc_dma.c ****   uint8_t peripheral;
 316:../Libraries/XMCLib/src/xmc_dma.c **** 
 317:../Libraries/XMCLib/src/xmc_dma.c ****   if (XMC_DMA_IsEnabled(dma) == true)
 1119              	 .loc 2 317 0
 1120 000e F868     	 ldr r0,[r7,#12]
 1121 0010 FFF7FEFF 	 bl XMC_DMA_IsEnabled
 1122 0014 0346     	 mov r3,r0
 1123 0016 002B     	 cmp r3,#0
 1124 0018 00F0F181 	 beq .L64
 318:../Libraries/XMCLib/src/xmc_dma.c ****   {
 319:../Libraries/XMCLib/src/xmc_dma.c ****     if (XMC_DMA_CH_IsEnabled(dma, channel) == false)
 1125              	 .loc 2 319 0
 1126 001c FB7A     	 ldrb r3,[r7,#11]
 1127 001e F868     	 ldr r0,[r7,#12]
 1128 0020 1946     	 mov r1,r3
 1129 0022 FFF7FEFF 	 bl XMC_DMA_CH_IsEnabled
 1130 0026 0346     	 mov r3,r0
 1131 0028 83F00103 	 eor r3,r3,#1
 1132 002c DBB2     	 uxtb r3,r3
 1133 002e 002B     	 cmp r3,#0
 1134 0030 00F0E281 	 beq .L65
 320:../Libraries/XMCLib/src/xmc_dma.c ****     {
 321:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].SAR = config->src_addr;
 1135              	 .loc 2 321 0
 1136 0034 FB7A     	 ldrb r3,[r7,#11]
 1137 0036 7A68     	 ldr r2,[r7,#4]
 1138 0038 5268     	 ldr r2,[r2,#4]
 1139 003a F968     	 ldr r1,[r7,#12]
 1140 003c 5820     	 movs r0,#88
 1141 003e 00FB03F3 	 mul r3,r0,r3
 1142 0042 0B44     	 add r3,r3,r1
 1143 0044 1A60     	 str r2,[r3]
 322:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].DAR = config->dst_addr;
 1144              	 .loc 2 322 0
 1145 0046 FB7A     	 ldrb r3,[r7,#11]
 1146 0048 7A68     	 ldr r2,[r7,#4]
 1147 004a 9268     	 ldr r2,[r2,#8]
 1148 004c F968     	 ldr r1,[r7,#12]
 1149 004e 5820     	 movs r0,#88
 1150 0050 00FB03F3 	 mul r3,r0,r3
 1151 0054 0B44     	 add r3,r3,r1
 1152 0056 0833     	 adds r3,r3,#8
 1153 0058 1A60     	 str r2,[r3]
 323:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].LLP = (uint32_t)config->linked_list_pointer;
 1154              	 .loc 2 323 0
 1155 005a FB7A     	 ldrb r3,[r7,#11]
 1156 005c 7A68     	 ldr r2,[r7,#4]
 1157 005e D268     	 ldr r2,[r2,#12]
 1158 0060 1046     	 mov r0,r2
 1159 0062 FA68     	 ldr r2,[r7,#12]
 1160 0064 5821     	 movs r1,#88
 1161 0066 01FB03F3 	 mul r3,r1,r3
 1162 006a 1344     	 add r3,r3,r2
 1163 006c 1033     	 adds r3,r3,#16
 1164 006e 1860     	 str r0,[r3]
 324:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLH = (uint32_t)config->block_size;
 1165              	 .loc 2 324 0
 1166 0070 FB7A     	 ldrb r3,[r7,#11]
 1167 0072 7A68     	 ldr r2,[r7,#4]
 1168 0074 128B     	 ldrh r2,[r2,#24]
 1169 0076 1046     	 mov r0,r2
 1170 0078 FA68     	 ldr r2,[r7,#12]
 1171 007a 5821     	 movs r1,#88
 1172 007c 01FB03F3 	 mul r3,r1,r3
 1173 0080 1344     	 add r3,r3,r2
 1174 0082 1833     	 adds r3,r3,#24
 1175 0084 5860     	 str r0,[r3,#4]
 325:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CTLL = config->control;
 1176              	 .loc 2 325 0
 1177 0086 FB7A     	 ldrb r3,[r7,#11]
 1178 0088 7A68     	 ldr r2,[r7,#4]
 1179 008a 1268     	 ldr r2,[r2]
 1180 008c F968     	 ldr r1,[r7,#12]
 1181 008e 5820     	 movs r0,#88
 1182 0090 00FB03F3 	 mul r3,r0,r3
 1183 0094 0B44     	 add r3,r3,r1
 1184 0096 1833     	 adds r3,r3,#24
 1185 0098 1A60     	 str r2,[r3]
 326:../Libraries/XMCLib/src/xmc_dma.c **** 
 327:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CH[channel].CFGL = (uint32_t)((uint32_t)config->priority |
 1186              	 .loc 2 327 0
 1187 009a FB7A     	 ldrb r3,[r7,#11]
 1188 009c 7A68     	 ldr r2,[r7,#4]
 1189 009e D27E     	 ldrb r2,[r2,#27]
 1190 00a0 42F44062 	 orr r2,r2,#3072
 1191 00a4 F968     	 ldr r1,[r7,#12]
 1192 00a6 5820     	 movs r0,#88
 1193 00a8 00FB03F3 	 mul r3,r0,r3
 1194 00ac 0B44     	 add r3,r3,r1
 1195 00ae 4033     	 adds r3,r3,#64
 1196 00b0 1A60     	 str r2,[r3]
 328:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_SRC_Msk |
 329:../Libraries/XMCLib/src/xmc_dma.c ****                                          (uint32_t)GPDMA0_CH_CFGL_HS_SEL_DST_Msk);
 330:../Libraries/XMCLib/src/xmc_dma.c **** 
 331:../Libraries/XMCLib/src/xmc_dma.c ****       if ((dma == XMC_DMA0) && (channel < (uint8_t)2))
 1197              	 .loc 2 331 0
 1198 00b2 FB68     	 ldr r3,[r7,#12]
 1199 00b4 B14A     	 ldr r2,.L91
 1200 00b6 9342     	 cmp r3,r2
 1201 00b8 16D1     	 bne .L66
 1202              	 .loc 2 331 0 is_stmt 0 discriminator 1
 1203 00ba FB7A     	 ldrb r3,[r7,#11]
 1204 00bc 012B     	 cmp r3,#1
 1205 00be 13D8     	 bhi .L66
 332:../Libraries/XMCLib/src/xmc_dma.c ****       {
 333:../Libraries/XMCLib/src/xmc_dma.c ****         /* Configure scatter and gather */
 334:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].SGR = config->src_gather_control;
 1206              	 .loc 2 334 0 is_stmt 1
 1207 00c0 FB7A     	 ldrb r3,[r7,#11]
 1208 00c2 7A68     	 ldr r2,[r7,#4]
 1209 00c4 1269     	 ldr r2,[r2,#16]
 1210 00c6 F968     	 ldr r1,[r7,#12]
 1211 00c8 5820     	 movs r0,#88
 1212 00ca 00FB03F3 	 mul r3,r0,r3
 1213 00ce 0B44     	 add r3,r3,r1
 1214 00d0 4833     	 adds r3,r3,#72
 1215 00d2 1A60     	 str r2,[r3]
 335:../Libraries/XMCLib/src/xmc_dma.c ****         dma->CH[channel].DSR = config->dst_scatter_control;
 1216              	 .loc 2 335 0
 1217 00d4 FB7A     	 ldrb r3,[r7,#11]
 1218 00d6 7A68     	 ldr r2,[r7,#4]
 1219 00d8 5269     	 ldr r2,[r2,#20]
 1220 00da F968     	 ldr r1,[r7,#12]
 1221 00dc 5820     	 movs r0,#88
 1222 00de 00FB03F3 	 mul r3,r0,r3
 1223 00e2 0B44     	 add r3,r3,r1
 1224 00e4 5033     	 adds r3,r3,#80
 1225 00e6 1A60     	 str r2,[r3]
 1226              	.L66:
 336:../Libraries/XMCLib/src/xmc_dma.c ****       }
 337:../Libraries/XMCLib/src/xmc_dma.c **** 
 338:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->dst_handshaking == XMC_DMA_CH_DST_HANDSHAKING_HARDWARE)
 1227              	 .loc 2 338 0
 1228 00e8 7B68     	 ldr r3,[r7,#4]
 1229 00ea 1B8C     	 ldrh r3,[r3,#32]
 1230 00ec 002B     	 cmp r3,#0
 1231 00ee 4FD1     	 bne .L67
 339:../Libraries/XMCLib/src/xmc_dma.c ****       {
 340:../Libraries/XMCLib/src/xmc_dma.c ****         /* Hardware handshaking interface configuration */
 341:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_M2P_DMA) ||
 1232              	 .loc 2 341 0
 1233 00f0 7B68     	 ldr r3,[r7,#4]
 1234 00f2 9B78     	 ldrb r3,[r3,#2]
 1235 00f4 03F07003 	 and r3,r3,#112
 1236 00f8 DBB2     	 uxtb r3,r3
 1237 00fa 102B     	 cmp r3,#16
 1238 00fc 06D0     	 beq .L68
 342:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1239              	 .loc 2 342 0 discriminator 1
 1240 00fe 7B68     	 ldr r3,[r7,#4]
 1241 0100 9B78     	 ldrb r3,[r3,#2]
 1242 0102 03F07003 	 and r3,r3,#112
 1243 0106 DBB2     	 uxtb r3,r3
 341:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1244              	 .loc 2 341 0 discriminator 1
 1245 0108 302B     	 cmp r3,#48
 1246 010a 41D1     	 bne .L67
 1247              	.L68:
 343:../Libraries/XMCLib/src/xmc_dma.c ****         {
 344:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 345:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1248              	 .loc 2 345 0
 1249 010c FB68     	 ldr r3,[r7,#12]
 1250 010e 9B4A     	 ldr r2,.L91
 1251 0110 9342     	 cmp r3,r2
 1252 0112 06D1     	 bne .L69
 346:../Libraries/XMCLib/src/xmc_dma.c ****           {
 347:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 348:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1253              	 .loc 2 348 0
 1254 0114 7B68     	 ldr r3,[r7,#4]
 1255 0116 93F82230 	 ldrb r3,[r3,#34]
 1256 011a 03F00703 	 and r3,r3,#7
 1257 011e BB75     	 strb r3,[r7,#22]
 1258 0120 05E0     	 b .L70
 1259              	.L69:
 349:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 350:../Libraries/XMCLib/src/xmc_dma.c ****           }
 351:../Libraries/XMCLib/src/xmc_dma.c ****           else
 352:../Libraries/XMCLib/src/xmc_dma.c ****           {
 353:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->dst_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1260              	 .loc 2 353 0
 1261 0122 7B68     	 ldr r3,[r7,#4]
 1262 0124 93F82230 	 ldrb r3,[r3,#34]
 1263 0128 03F00303 	 and r3,r3,#3
 1264 012c BB75     	 strb r3,[r7,#22]
 1265              	.L70:
 354:../Libraries/XMCLib/src/xmc_dma.c ****           }
 355:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 356:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->dst_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1266              	 .loc 2 356 0
 1267 012e 7B68     	 ldr r3,[r7,#4]
 1268 0130 93F82230 	 ldrb r3,[r3,#34]
 1269 0134 1B09     	 lsrs r3,r3,#4
 1270 0136 7B75     	 strb r3,[r7,#21]
 357:../Libraries/XMCLib/src/xmc_dma.c **** 
 358:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_DEST_PER_Pos);
 1271              	 .loc 2 358 0
 1272 0138 FB7A     	 ldrb r3,[r7,#11]
 1273 013a FA7A     	 ldrb r2,[r7,#11]
 1274 013c F968     	 ldr r1,[r7,#12]
 1275 013e 5820     	 movs r0,#88
 1276 0140 00FB02F2 	 mul r2,r0,r2
 1277 0144 0A44     	 add r2,r2,r1
 1278 0146 4032     	 adds r2,r2,#64
 1279 0148 5168     	 ldr r1,[r2,#4]
 1280 014a BA7D     	 ldrb r2,[r7,#22]
 1281 014c D202     	 lsls r2,r2,#11
 1282 014e 0A43     	 orrs r2,r2,r1
 1283 0150 F968     	 ldr r1,[r7,#12]
 1284 0152 5820     	 movs r0,#88
 1285 0154 00FB03F3 	 mul r3,r0,r3
 1286 0158 0B44     	 add r3,r3,r1
 1287 015a 4033     	 adds r3,r3,#64
 1288 015c 5A60     	 str r2,[r3,#4]
 359:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1289              	 .loc 2 359 0
 1290 015e BA7D     	 ldrb r2,[r7,#22]
 1291 0160 7B7D     	 ldrb r3,[r7,#21]
 1292 0162 F868     	 ldr r0,[r7,#12]
 1293 0164 1146     	 mov r1,r2
 1294 0166 1A46     	 mov r2,r3
 1295 0168 FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 360:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_DST_Msk;
 1296              	 .loc 2 360 0
 1297 016c FB7A     	 ldrb r3,[r7,#11]
 1298 016e FA7A     	 ldrb r2,[r7,#11]
 1299 0170 F968     	 ldr r1,[r7,#12]
 1300 0172 5820     	 movs r0,#88
 1301 0174 00FB02F2 	 mul r2,r0,r2
 1302 0178 0A44     	 add r2,r2,r1
 1303 017a 4032     	 adds r2,r2,#64
 1304 017c 1268     	 ldr r2,[r2]
 1305 017e 22F48062 	 bic r2,r2,#1024
 1306 0182 F968     	 ldr r1,[r7,#12]
 1307 0184 5820     	 movs r0,#88
 1308 0186 00FB03F3 	 mul r3,r0,r3
 1309 018a 0B44     	 add r3,r3,r1
 1310 018c 4033     	 adds r3,r3,#64
 1311 018e 1A60     	 str r2,[r3]
 1312              	.L67:
 361:../Libraries/XMCLib/src/xmc_dma.c ****         }
 362:../Libraries/XMCLib/src/xmc_dma.c ****       }
 363:../Libraries/XMCLib/src/xmc_dma.c **** 
 364:../Libraries/XMCLib/src/xmc_dma.c **** 
 365:../Libraries/XMCLib/src/xmc_dma.c ****       if (config->src_handshaking == XMC_DMA_CH_SRC_HANDSHAKING_HARDWARE)
 1313              	 .loc 2 365 0
 1314 0190 7B68     	 ldr r3,[r7,#4]
 1315 0192 9B8B     	 ldrh r3,[r3,#28]
 1316 0194 002B     	 cmp r3,#0
 1317 0196 4CD1     	 bne .L71
 366:../Libraries/XMCLib/src/xmc_dma.c ****       {
 367:../Libraries/XMCLib/src/xmc_dma.c ****         if ((config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2M_DMA) ||
 1318              	 .loc 2 367 0
 1319 0198 7B68     	 ldr r3,[r7,#4]
 1320 019a 9B78     	 ldrb r3,[r3,#2]
 1321 019c 03F07003 	 and r3,r3,#112
 1322 01a0 DBB2     	 uxtb r3,r3
 1323 01a2 202B     	 cmp r3,#32
 1324 01a4 06D0     	 beq .L72
 368:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1325              	 .loc 2 368 0 discriminator 1
 1326 01a6 7B68     	 ldr r3,[r7,#4]
 1327 01a8 9B78     	 ldrb r3,[r3,#2]
 1328 01aa 03F07003 	 and r3,r3,#112
 1329 01ae DBB2     	 uxtb r3,r3
 367:../Libraries/XMCLib/src/xmc_dma.c ****             (config->transfer_flow == (uint32_t)XMC_DMA_CH_TRANSFER_FLOW_P2P_DMA))
 1330              	 .loc 2 367 0 discriminator 1
 1331 01b0 302B     	 cmp r3,#48
 1332 01b2 3ED1     	 bne .L71
 1333              	.L72:
 369:../Libraries/XMCLib/src/xmc_dma.c ****         {
 370:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 371:../Libraries/XMCLib/src/xmc_dma.c ****           if (dma == XMC_DMA0)
 1334              	 .loc 2 371 0
 1335 01b4 FB68     	 ldr r3,[r7,#12]
 1336 01b6 714A     	 ldr r2,.L91
 1337 01b8 9342     	 cmp r3,r2
 1338 01ba 05D1     	 bne .L73
 372:../Libraries/XMCLib/src/xmc_dma.c ****           {
 373:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 374:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA0_CH_CFGH_PER_Msk;
 1339              	 .loc 2 374 0
 1340 01bc 7B68     	 ldr r3,[r7,#4]
 1341 01be 9B7F     	 ldrb r3,[r3,#30]
 1342 01c0 03F00703 	 and r3,r3,#7
 1343 01c4 BB75     	 strb r3,[r7,#22]
 1344 01c6 04E0     	 b .L74
 1345              	.L73:
 375:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 376:../Libraries/XMCLib/src/xmc_dma.c ****           }
 377:../Libraries/XMCLib/src/xmc_dma.c ****           else
 378:../Libraries/XMCLib/src/xmc_dma.c ****           {
 379:../Libraries/XMCLib/src/xmc_dma.c ****             line = config->src_peripheral_request & GPDMA1_CH_CFGH_PER_Msk;
 1346              	 .loc 2 379 0
 1347 01c8 7B68     	 ldr r3,[r7,#4]
 1348 01ca 9B7F     	 ldrb r3,[r3,#30]
 1349 01cc 03F00303 	 and r3,r3,#3
 1350 01d0 BB75     	 strb r3,[r7,#22]
 1351              	.L74:
 380:../Libraries/XMCLib/src/xmc_dma.c ****           }
 381:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 382:../Libraries/XMCLib/src/xmc_dma.c ****           peripheral = config->src_peripheral_request >> GPDMA_CH_CFGH_PER_BITSIZE;
 1352              	 .loc 2 382 0
 1353 01d2 7B68     	 ldr r3,[r7,#4]
 1354 01d4 9B7F     	 ldrb r3,[r3,#30]
 1355 01d6 1B09     	 lsrs r3,r3,#4
 1356 01d8 7B75     	 strb r3,[r7,#21]
 383:../Libraries/XMCLib/src/xmc_dma.c **** 
 384:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGH |= (uint32_t)((uint32_t)line << GPDMA0_CH_CFGH_SRC_PER_Pos);
 1357              	 .loc 2 384 0
 1358 01da FB7A     	 ldrb r3,[r7,#11]
 1359 01dc FA7A     	 ldrb r2,[r7,#11]
 1360 01de F968     	 ldr r1,[r7,#12]
 1361 01e0 5820     	 movs r0,#88
 1362 01e2 00FB02F2 	 mul r2,r0,r2
 1363 01e6 0A44     	 add r2,r2,r1
 1364 01e8 4032     	 adds r2,r2,#64
 1365 01ea 5168     	 ldr r1,[r2,#4]
 1366 01ec BA7D     	 ldrb r2,[r7,#22]
 1367 01ee D201     	 lsls r2,r2,#7
 1368 01f0 0A43     	 orrs r2,r2,r1
 1369 01f2 F968     	 ldr r1,[r7,#12]
 1370 01f4 5820     	 movs r0,#88
 1371 01f6 00FB03F3 	 mul r3,r0,r3
 1372 01fa 0B44     	 add r3,r3,r1
 1373 01fc 4033     	 adds r3,r3,#64
 1374 01fe 5A60     	 str r2,[r3,#4]
 385:../Libraries/XMCLib/src/xmc_dma.c ****           XMC_DMA_EnableRequestLine(dma, line, peripheral);
 1375              	 .loc 2 385 0
 1376 0200 BA7D     	 ldrb r2,[r7,#22]
 1377 0202 7B7D     	 ldrb r3,[r7,#21]
 1378 0204 F868     	 ldr r0,[r7,#12]
 1379 0206 1146     	 mov r1,r2
 1380 0208 1A46     	 mov r2,r3
 1381 020a FFF7FEFF 	 bl XMC_DMA_EnableRequestLine
 386:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_HS_SEL_SRC_Msk;
 1382              	 .loc 2 386 0
 1383 020e FB7A     	 ldrb r3,[r7,#11]
 1384 0210 FA7A     	 ldrb r2,[r7,#11]
 1385 0212 F968     	 ldr r1,[r7,#12]
 1386 0214 5820     	 movs r0,#88
 1387 0216 00FB02F2 	 mul r2,r0,r2
 1388 021a 0A44     	 add r2,r2,r1
 1389 021c 4032     	 adds r2,r2,#64
 1390 021e 1268     	 ldr r2,[r2]
 1391 0220 22F40062 	 bic r2,r2,#2048
 1392 0224 F968     	 ldr r1,[r7,#12]
 1393 0226 5820     	 movs r0,#88
 1394 0228 00FB03F3 	 mul r3,r0,r3
 1395 022c 0B44     	 add r3,r3,r1
 1396 022e 4033     	 adds r3,r3,#64
 1397 0230 1A60     	 str r2,[r3]
 1398              	.L71:
 387:../Libraries/XMCLib/src/xmc_dma.c ****         }
 388:../Libraries/XMCLib/src/xmc_dma.c ****       }
 389:../Libraries/XMCLib/src/xmc_dma.c ****       
 390:../Libraries/XMCLib/src/xmc_dma.c ****       XMC_DMA_CH_ClearEventStatus(dma, channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMP
 1399              	 .loc 2 390 0
 1400 0232 FB7A     	 ldrb r3,[r7,#11]
 1401 0234 F868     	 ldr r0,[r7,#12]
 1402 0236 1946     	 mov r1,r3
 1403 0238 1F22     	 movs r2,#31
 1404 023a FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 391:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFE
 392:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 393:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 394:../Libraries/XMCLib/src/xmc_dma.c ****                                                            (uint32_t)XMC_DMA_CH_EVENT_ERROR));
 395:../Libraries/XMCLib/src/xmc_dma.c **** 
 396:../Libraries/XMCLib/src/xmc_dma.c ****       switch (config->transfer_type)
 1405              	 .loc 2 396 0
 1406 023e 7B68     	 ldr r3,[r7,#4]
 1407 0240 9B7E     	 ldrb r3,[r3,#26]
 1408 0242 082B     	 cmp r3,#8
 1409 0244 00F2D480 	 bhi .L90
 1410 0248 01A2     	 adr r2,.L77
 1411 024a 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 1412 024e 00BF     	 .p2align 2
 1413              	.L77:
 1414 0250 F1030000 	 .word .L90+1
 1415 0254 75020000 	 .word .L78+1
 1416 0258 9B020000 	 .word .L79+1
 1417 025c C1020000 	 .word .L80+1
 1418 0260 E7020000 	 .word .L81+1
 1419 0264 0D030000 	 .word .L82+1
 1420 0268 57030000 	 .word .L83+1
 1421 026c 81030000 	 .word .L84+1
 1422 0270 CB030000 	 .word .L85+1
 1423              	 .p2align 1
 1424              	.L78:
 397:../Libraries/XMCLib/src/xmc_dma.c ****       {
 398:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_SINGLE_BLOCK:
 399:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 400:../Libraries/XMCLib/src/xmc_dma.c **** 
 401:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_RELOAD:
 402:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1425              	 .loc 2 402 0
 1426 0274 FB7A     	 ldrb r3,[r7,#11]
 1427 0276 FA7A     	 ldrb r2,[r7,#11]
 1428 0278 F968     	 ldr r1,[r7,#12]
 1429 027a 5820     	 movs r0,#88
 1430 027c 00FB02F2 	 mul r2,r0,r2
 1431 0280 0A44     	 add r2,r2,r1
 1432 0282 4032     	 adds r2,r2,#64
 1433 0284 1268     	 ldr r2,[r2]
 1434 0286 42F00042 	 orr r2,r2,#-2147483648
 1435 028a F968     	 ldr r1,[r7,#12]
 1436 028c 5820     	 movs r0,#88
 1437 028e 00FB03F3 	 mul r3,r0,r3
 1438 0292 0B44     	 add r3,r3,r1
 1439 0294 4033     	 adds r3,r3,#64
 1440 0296 1A60     	 str r2,[r3]
 403:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1441              	 .loc 2 403 0
 1442 0298 ABE0     	 b .L86
 1443              	.L79:
 404:../Libraries/XMCLib/src/xmc_dma.c **** 
 405:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_CONTIGUOUS:
 406:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1444              	 .loc 2 406 0
 1445 029a FB7A     	 ldrb r3,[r7,#11]
 1446 029c FA7A     	 ldrb r2,[r7,#11]
 1447 029e F968     	 ldr r1,[r7,#12]
 1448 02a0 5820     	 movs r0,#88
 1449 02a2 00FB02F2 	 mul r2,r0,r2
 1450 02a6 0A44     	 add r2,r2,r1
 1451 02a8 4032     	 adds r2,r2,#64
 1452 02aa 1268     	 ldr r2,[r2]
 1453 02ac 42F08042 	 orr r2,r2,#1073741824
 1454 02b0 F968     	 ldr r1,[r7,#12]
 1455 02b2 5820     	 movs r0,#88
 1456 02b4 00FB03F3 	 mul r3,r0,r3
 1457 02b8 0B44     	 add r3,r3,r1
 1458 02ba 4033     	 adds r3,r3,#64
 1459 02bc 1A60     	 str r2,[r3]
 407:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1460              	 .loc 2 407 0
 1461 02be 98E0     	 b .L86
 1462              	.L80:
 408:../Libraries/XMCLib/src/xmc_dma.c **** 
 409:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_RELOAD:
 410:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)((uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk |
 1463              	 .loc 2 410 0
 1464 02c0 FB7A     	 ldrb r3,[r7,#11]
 1465 02c2 FA7A     	 ldrb r2,[r7,#11]
 1466 02c4 F968     	 ldr r1,[r7,#12]
 1467 02c6 5820     	 movs r0,#88
 1468 02c8 00FB02F2 	 mul r2,r0,r2
 1469 02cc 0A44     	 add r2,r2,r1
 1470 02ce 4032     	 adds r2,r2,#64
 1471 02d0 1268     	 ldr r2,[r2]
 1472 02d2 42F04042 	 orr r2,r2,#-1073741824
 1473 02d6 F968     	 ldr r1,[r7,#12]
 1474 02d8 5820     	 movs r0,#88
 1475 02da 00FB03F3 	 mul r3,r0,r3
 1476 02de 0B44     	 add r3,r3,r1
 1477 02e0 4033     	 adds r3,r3,#64
 1478 02e2 1A60     	 str r2,[r3]
 411:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk);
 412:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1479              	 .loc 2 412 0
 1480 02e4 85E0     	 b .L86
 1481              	.L81:
 413:../Libraries/XMCLib/src/xmc_dma.c **** 
 414:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_CONTIGUOUS_DSTADR_LINKED:
 415:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1482              	 .loc 2 415 0
 1483 02e6 FB7A     	 ldrb r3,[r7,#11]
 1484 02e8 FA7A     	 ldrb r2,[r7,#11]
 1485 02ea F968     	 ldr r1,[r7,#12]
 1486 02ec 5820     	 movs r0,#88
 1487 02ee 00FB02F2 	 mul r2,r0,r2
 1488 02f2 0A44     	 add r2,r2,r1
 1489 02f4 1832     	 adds r2,r2,#24
 1490 02f6 1268     	 ldr r2,[r2]
 1491 02f8 42F00062 	 orr r2,r2,#134217728
 1492 02fc F968     	 ldr r1,[r7,#12]
 1493 02fe 5820     	 movs r0,#88
 1494 0300 00FB03F3 	 mul r3,r0,r3
 1495 0304 0B44     	 add r3,r3,r1
 1496 0306 1833     	 adds r3,r3,#24
 1497 0308 1A60     	 str r2,[r3]
 416:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1498              	 .loc 2 416 0
 1499 030a 72E0     	 b .L86
 1500              	.L82:
 417:../Libraries/XMCLib/src/xmc_dma.c **** 
 418:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_RELOAD_DSTADR_LINKED:
 419:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 1501              	 .loc 2 419 0
 1502 030c FB7A     	 ldrb r3,[r7,#11]
 1503 030e FA7A     	 ldrb r2,[r7,#11]
 1504 0310 F968     	 ldr r1,[r7,#12]
 1505 0312 5820     	 movs r0,#88
 1506 0314 00FB02F2 	 mul r2,r0,r2
 1507 0318 0A44     	 add r2,r2,r1
 1508 031a 4032     	 adds r2,r2,#64
 1509 031c 1268     	 ldr r2,[r2]
 1510 031e 42F08042 	 orr r2,r2,#1073741824
 1511 0322 F968     	 ldr r1,[r7,#12]
 1512 0324 5820     	 movs r0,#88
 1513 0326 00FB03F3 	 mul r3,r0,r3
 1514 032a 0B44     	 add r3,r3,r1
 1515 032c 4033     	 adds r3,r3,#64
 1516 032e 1A60     	 str r2,[r3]
 420:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk;
 1517              	 .loc 2 420 0
 1518 0330 FB7A     	 ldrb r3,[r7,#11]
 1519 0332 FA7A     	 ldrb r2,[r7,#11]
 1520 0334 F968     	 ldr r1,[r7,#12]
 1521 0336 5820     	 movs r0,#88
 1522 0338 00FB02F2 	 mul r2,r0,r2
 1523 033c 0A44     	 add r2,r2,r1
 1524 033e 1832     	 adds r2,r2,#24
 1525 0340 1268     	 ldr r2,[r2]
 1526 0342 42F00062 	 orr r2,r2,#134217728
 1527 0346 F968     	 ldr r1,[r7,#12]
 1528 0348 5820     	 movs r0,#88
 1529 034a 00FB03F3 	 mul r3,r0,r3
 1530 034e 0B44     	 add r3,r3,r1
 1531 0350 1833     	 adds r3,r3,#24
 1532 0352 1A60     	 str r2,[r3]
 421:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1533              	 .loc 2 421 0
 1534 0354 4DE0     	 b .L86
 1535              	.L83:
 422:../Libraries/XMCLib/src/xmc_dma.c **** 
 423:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_CONTIGUOUS:
 424:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1536              	 .loc 2 424 0
 1537 0356 FB7A     	 ldrb r3,[r7,#11]
 1538 0358 FA7A     	 ldrb r2,[r7,#11]
 1539 035a F968     	 ldr r1,[r7,#12]
 1540 035c 5820     	 movs r0,#88
 1541 035e 00FB02F2 	 mul r2,r0,r2
 1542 0362 0A44     	 add r2,r2,r1
 1543 0364 1832     	 adds r2,r2,#24
 1544 0366 1268     	 ldr r2,[r2]
 1545 0368 42F08052 	 orr r2,r2,#268435456
 1546 036c F968     	 ldr r1,[r7,#12]
 1547 036e 5820     	 movs r0,#88
 1548 0370 00FB03F3 	 mul r3,r0,r3
 1549 0374 0B44     	 add r3,r3,r1
 1550 0376 1833     	 adds r3,r3,#24
 1551 0378 1A60     	 str r2,[r3]
 425:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1552              	 .loc 2 425 0
 1553 037a 3AE0     	 b .L86
 1554              	.L92:
 1555              	 .align 2
 1556              	.L91:
 1557 037c 00400150 	 .word 1342259200
 1558              	.L84:
 426:../Libraries/XMCLib/src/xmc_dma.c **** 
 427:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_RELOAD:
 428:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 1559              	 .loc 2 428 0
 1560 0380 FB7A     	 ldrb r3,[r7,#11]
 1561 0382 FA7A     	 ldrb r2,[r7,#11]
 1562 0384 F968     	 ldr r1,[r7,#12]
 1563 0386 5820     	 movs r0,#88
 1564 0388 00FB02F2 	 mul r2,r0,r2
 1565 038c 0A44     	 add r2,r2,r1
 1566 038e 4032     	 adds r2,r2,#64
 1567 0390 1268     	 ldr r2,[r2]
 1568 0392 42F00042 	 orr r2,r2,#-2147483648
 1569 0396 F968     	 ldr r1,[r7,#12]
 1570 0398 5820     	 movs r0,#88
 1571 039a 00FB03F3 	 mul r3,r0,r3
 1572 039e 0B44     	 add r3,r3,r1
 1573 03a0 4033     	 adds r3,r3,#64
 1574 03a2 1A60     	 str r2,[r3]
 429:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk;
 1575              	 .loc 2 429 0
 1576 03a4 FB7A     	 ldrb r3,[r7,#11]
 1577 03a6 FA7A     	 ldrb r2,[r7,#11]
 1578 03a8 F968     	 ldr r1,[r7,#12]
 1579 03aa 5820     	 movs r0,#88
 1580 03ac 00FB02F2 	 mul r2,r0,r2
 1581 03b0 0A44     	 add r2,r2,r1
 1582 03b2 1832     	 adds r2,r2,#24
 1583 03b4 1268     	 ldr r2,[r2]
 1584 03b6 42F08052 	 orr r2,r2,#268435456
 1585 03ba F968     	 ldr r1,[r7,#12]
 1586 03bc 5820     	 movs r0,#88
 1587 03be 00FB03F3 	 mul r3,r0,r3
 1588 03c2 0B44     	 add r3,r3,r1
 1589 03c4 1833     	 adds r3,r3,#24
 1590 03c6 1A60     	 str r2,[r3]
 430:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1591              	 .loc 2 430 0
 1592 03c8 13E0     	 b .L86
 1593              	.L85:
 431:../Libraries/XMCLib/src/xmc_dma.c **** 
 432:../Libraries/XMCLib/src/xmc_dma.c ****         case XMC_DMA_CH_TRANSFER_TYPE_MULTI_BLOCK_SRCADR_LINKED_DSTADR_LINKED:
 433:../Libraries/XMCLib/src/xmc_dma.c ****           dma->CH[channel].CTLL |= (uint32_t)((uint32_t)GPDMA0_CH_CTLL_LLP_SRC_EN_Msk |
 1594              	 .loc 2 433 0
 1595 03ca FB7A     	 ldrb r3,[r7,#11]
 1596 03cc FA7A     	 ldrb r2,[r7,#11]
 1597 03ce F968     	 ldr r1,[r7,#12]
 1598 03d0 5820     	 movs r0,#88
 1599 03d2 00FB02F2 	 mul r2,r0,r2
 1600 03d6 0A44     	 add r2,r2,r1
 1601 03d8 1832     	 adds r2,r2,#24
 1602 03da 1268     	 ldr r2,[r2]
 1603 03dc 42F0C052 	 orr r2,r2,#402653184
 1604 03e0 F968     	 ldr r1,[r7,#12]
 1605 03e2 5820     	 movs r0,#88
 1606 03e4 00FB03F3 	 mul r3,r0,r3
 1607 03e8 0B44     	 add r3,r3,r1
 1608 03ea 1833     	 adds r3,r3,#24
 1609 03ec 1A60     	 str r2,[r3]
 434:../Libraries/XMCLib/src/xmc_dma.c ****                                               (uint32_t)GPDMA0_CH_CTLL_LLP_DST_EN_Msk);
 435:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1610              	 .loc 2 435 0
 1611 03ee 00E0     	 b .L86
 1612              	.L90:
 436:../Libraries/XMCLib/src/xmc_dma.c **** 
 437:../Libraries/XMCLib/src/xmc_dma.c ****         default:
 438:../Libraries/XMCLib/src/xmc_dma.c ****           break;
 1613              	 .loc 2 438 0
 1614 03f0 00BF     	 nop
 1615              	.L86:
 439:../Libraries/XMCLib/src/xmc_dma.c ****       }
 440:../Libraries/XMCLib/src/xmc_dma.c **** 
 441:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_OK;
 1616              	 .loc 2 441 0
 1617 03f2 0023     	 movs r3,#0
 1618 03f4 FB75     	 strb r3,[r7,#23]
 1619 03f6 04E0     	 b .L88
 1620              	.L65:
 442:../Libraries/XMCLib/src/xmc_dma.c **** 
 443:../Libraries/XMCLib/src/xmc_dma.c ****     }
 444:../Libraries/XMCLib/src/xmc_dma.c ****     else
 445:../Libraries/XMCLib/src/xmc_dma.c ****     {
 446:../Libraries/XMCLib/src/xmc_dma.c ****       status = XMC_DMA_CH_STATUS_BUSY;
 1621              	 .loc 2 446 0
 1622 03f8 0223     	 movs r3,#2
 1623 03fa FB75     	 strb r3,[r7,#23]
 1624 03fc 01E0     	 b .L88
 1625              	.L64:
 447:../Libraries/XMCLib/src/xmc_dma.c ****     }
 448:../Libraries/XMCLib/src/xmc_dma.c ****   }
 449:../Libraries/XMCLib/src/xmc_dma.c ****   else 
 450:../Libraries/XMCLib/src/xmc_dma.c ****   {
 451:../Libraries/XMCLib/src/xmc_dma.c ****     status = XMC_DMA_CH_STATUS_ERROR;
 1626              	 .loc 2 451 0
 1627 03fe 0123     	 movs r3,#1
 1628 0400 FB75     	 strb r3,[r7,#23]
 1629              	.L88:
 452:../Libraries/XMCLib/src/xmc_dma.c ****   }
 453:../Libraries/XMCLib/src/xmc_dma.c ****   
 454:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 1630              	 .loc 2 454 0
 1631 0402 FB7D     	 ldrb r3,[r7,#23]
 455:../Libraries/XMCLib/src/xmc_dma.c **** }
 1632              	 .loc 2 455 0
 1633 0404 1846     	 mov r0,r3
 1634 0406 1837     	 adds r7,r7,#24
 1635              	.LCFI101:
 1636              	 .cfi_def_cfa_offset 8
 1637 0408 BD46     	 mov sp,r7
 1638              	.LCFI102:
 1639              	 .cfi_def_cfa_register 13
 1640              	 
 1641 040a 80BD     	 pop {r7,pc}
 1642              	 .cfi_endproc
 1643              	.LFE194:
 1645              	 .section .text.XMC_DMA_CH_Suspend,"ax",%progbits
 1646              	 .align 2
 1647              	 .global XMC_DMA_CH_Suspend
 1648              	 .thumb
 1649              	 .thumb_func
 1651              	XMC_DMA_CH_Suspend:
 1652              	.LFB195:
 456:../Libraries/XMCLib/src/xmc_dma.c **** 
 457:../Libraries/XMCLib/src/xmc_dma.c **** /* Suspend DMA channel transfer */
 458:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Suspend(XMC_DMA_t *const dma, const uint8_t channel)
 459:../Libraries/XMCLib/src/xmc_dma.c **** {
 1653              	 .loc 2 459 0
 1654              	 .cfi_startproc
 1655              	 
 1656              	 
 1657              	 
 1658 0000 80B4     	 push {r7}
 1659              	.LCFI103:
 1660              	 .cfi_def_cfa_offset 4
 1661              	 .cfi_offset 7,-4
 1662 0002 83B0     	 sub sp,sp,#12
 1663              	.LCFI104:
 1664              	 .cfi_def_cfa_offset 16
 1665 0004 00AF     	 add r7,sp,#0
 1666              	.LCFI105:
 1667              	 .cfi_def_cfa_register 7
 1668 0006 7860     	 str r0,[r7,#4]
 1669 0008 0B46     	 mov r3,r1
 1670 000a FB70     	 strb r3,[r7,#3]
 460:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1671              	 .loc 2 460 0
 1672 000c FB78     	 ldrb r3,[r7,#3]
 1673 000e FA78     	 ldrb r2,[r7,#3]
 1674 0010 7968     	 ldr r1,[r7,#4]
 1675 0012 5820     	 movs r0,#88
 1676 0014 00FB02F2 	 mul r2,r0,r2
 1677 0018 0A44     	 add r2,r2,r1
 1678 001a 4032     	 adds r2,r2,#64
 1679 001c 1268     	 ldr r2,[r2]
 1680 001e 42F48072 	 orr r2,r2,#256
 1681 0022 7968     	 ldr r1,[r7,#4]
 1682 0024 5820     	 movs r0,#88
 1683 0026 00FB03F3 	 mul r3,r0,r3
 1684 002a 0B44     	 add r3,r3,r1
 1685 002c 4033     	 adds r3,r3,#64
 1686 002e 1A60     	 str r2,[r3]
 461:../Libraries/XMCLib/src/xmc_dma.c **** }
 1687              	 .loc 2 461 0
 1688 0030 0C37     	 adds r7,r7,#12
 1689              	.LCFI106:
 1690              	 .cfi_def_cfa_offset 4
 1691 0032 BD46     	 mov sp,r7
 1692              	.LCFI107:
 1693              	 .cfi_def_cfa_register 13
 1694              	 
 1695 0034 5DF8047B 	 ldr r7,[sp],#4
 1696              	.LCFI108:
 1697              	 .cfi_restore 7
 1698              	 .cfi_def_cfa_offset 0
 1699 0038 7047     	 bx lr
 1700              	 .cfi_endproc
 1701              	.LFE195:
 1703 003a 00BF     	 .section .text.XMC_DMA_CH_Resume,"ax",%progbits
 1704              	 .align 2
 1705              	 .global XMC_DMA_CH_Resume
 1706              	 .thumb
 1707              	 .thumb_func
 1709              	XMC_DMA_CH_Resume:
 1710              	.LFB196:
 462:../Libraries/XMCLib/src/xmc_dma.c **** 
 463:../Libraries/XMCLib/src/xmc_dma.c **** /* Resume DMA channel transfer */
 464:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_Resume(XMC_DMA_t *const dma, const uint8_t channel)
 465:../Libraries/XMCLib/src/xmc_dma.c **** {
 1711              	 .loc 2 465 0
 1712              	 .cfi_startproc
 1713              	 
 1714              	 
 1715              	 
 1716 0000 80B4     	 push {r7}
 1717              	.LCFI109:
 1718              	 .cfi_def_cfa_offset 4
 1719              	 .cfi_offset 7,-4
 1720 0002 83B0     	 sub sp,sp,#12
 1721              	.LCFI110:
 1722              	 .cfi_def_cfa_offset 16
 1723 0004 00AF     	 add r7,sp,#0
 1724              	.LCFI111:
 1725              	 .cfi_def_cfa_register 7
 1726 0006 7860     	 str r0,[r7,#4]
 1727 0008 0B46     	 mov r3,r1
 1728 000a FB70     	 strb r3,[r7,#3]
 466:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_CH_SUSP_Msk;
 1729              	 .loc 2 466 0
 1730 000c FB78     	 ldrb r3,[r7,#3]
 1731 000e FA78     	 ldrb r2,[r7,#3]
 1732 0010 7968     	 ldr r1,[r7,#4]
 1733 0012 5820     	 movs r0,#88
 1734 0014 00FB02F2 	 mul r2,r0,r2
 1735 0018 0A44     	 add r2,r2,r1
 1736 001a 4032     	 adds r2,r2,#64
 1737 001c 1268     	 ldr r2,[r2]
 1738 001e 22F48072 	 bic r2,r2,#256
 1739 0022 7968     	 ldr r1,[r7,#4]
 1740 0024 5820     	 movs r0,#88
 1741 0026 00FB03F3 	 mul r3,r0,r3
 1742 002a 0B44     	 add r3,r3,r1
 1743 002c 4033     	 adds r3,r3,#64
 1744 002e 1A60     	 str r2,[r3]
 467:../Libraries/XMCLib/src/xmc_dma.c **** }
 1745              	 .loc 2 467 0
 1746 0030 0C37     	 adds r7,r7,#12
 1747              	.LCFI112:
 1748              	 .cfi_def_cfa_offset 4
 1749 0032 BD46     	 mov sp,r7
 1750              	.LCFI113:
 1751              	 .cfi_def_cfa_register 13
 1752              	 
 1753 0034 5DF8047B 	 ldr r7,[sp],#4
 1754              	.LCFI114:
 1755              	 .cfi_restore 7
 1756              	 .cfi_def_cfa_offset 0
 1757 0038 7047     	 bx lr
 1758              	 .cfi_endproc
 1759              	.LFE196:
 1761 003a 00BF     	 .section .text.XMC_DMA_CH_IsSuspended,"ax",%progbits
 1762              	 .align 2
 1763              	 .global XMC_DMA_CH_IsSuspended
 1764              	 .thumb
 1765              	 .thumb_func
 1767              	XMC_DMA_CH_IsSuspended:
 1768              	.LFB197:
 468:../Libraries/XMCLib/src/xmc_dma.c **** 
 469:../Libraries/XMCLib/src/xmc_dma.c **** /* Check if a DMA channel is suspended */
 470:../Libraries/XMCLib/src/xmc_dma.c **** bool XMC_DMA_CH_IsSuspended(XMC_DMA_t *const dma, const uint8_t channel)
 471:../Libraries/XMCLib/src/xmc_dma.c **** {
 1769              	 .loc 2 471 0
 1770              	 .cfi_startproc
 1771              	 
 1772              	 
 1773              	 
 1774 0000 80B4     	 push {r7}
 1775              	.LCFI115:
 1776              	 .cfi_def_cfa_offset 4
 1777              	 .cfi_offset 7,-4
 1778 0002 83B0     	 sub sp,sp,#12
 1779              	.LCFI116:
 1780              	 .cfi_def_cfa_offset 16
 1781 0004 00AF     	 add r7,sp,#0
 1782              	.LCFI117:
 1783              	 .cfi_def_cfa_register 7
 1784 0006 7860     	 str r0,[r7,#4]
 1785 0008 0B46     	 mov r3,r1
 1786 000a FB70     	 strb r3,[r7,#3]
 472:../Libraries/XMCLib/src/xmc_dma.c ****   return (bool)(dma->CH[channel].CFGL & (uint32_t)GPDMA0_CH_CFGL_CH_SUSP_Msk);
 1787              	 .loc 2 472 0
 1788 000c FB78     	 ldrb r3,[r7,#3]
 1789 000e 7A68     	 ldr r2,[r7,#4]
 1790 0010 5821     	 movs r1,#88
 1791 0012 01FB03F3 	 mul r3,r1,r3
 1792 0016 1344     	 add r3,r3,r2
 1793 0018 4033     	 adds r3,r3,#64
 1794 001a 1B68     	 ldr r3,[r3]
 1795 001c 03F48073 	 and r3,r3,#256
 1796 0020 002B     	 cmp r3,#0
 1797 0022 14BF     	 ite ne
 1798 0024 0123     	 movne r3,#1
 1799 0026 0023     	 moveq r3,#0
 1800 0028 DBB2     	 uxtb r3,r3
 473:../Libraries/XMCLib/src/xmc_dma.c **** }
 1801              	 .loc 2 473 0
 1802 002a 1846     	 mov r0,r3
 1803 002c 0C37     	 adds r7,r7,#12
 1804              	.LCFI118:
 1805              	 .cfi_def_cfa_offset 4
 1806 002e BD46     	 mov sp,r7
 1807              	.LCFI119:
 1808              	 .cfi_def_cfa_register 13
 1809              	 
 1810 0030 5DF8047B 	 ldr r7,[sp],#4
 1811              	.LCFI120:
 1812              	 .cfi_restore 7
 1813              	 .cfi_def_cfa_offset 0
 1814 0034 7047     	 bx lr
 1815              	 .cfi_endproc
 1816              	.LFE197:
 1818 0036 00BF     	 .section .text.XMC_DMA_CH_EnableEvent,"ax",%progbits
 1819              	 .align 2
 1820              	 .global XMC_DMA_CH_EnableEvent
 1821              	 .thumb
 1822              	 .thumb_func
 1824              	XMC_DMA_CH_EnableEvent:
 1825              	.LFB198:
 474:../Libraries/XMCLib/src/xmc_dma.c **** 
 475:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable GPDMA event */
 476:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 477:../Libraries/XMCLib/src/xmc_dma.c **** {
 1826              	 .loc 2 477 0
 1827              	 .cfi_startproc
 1828              	 
 1829              	 
 1830              	 
 1831 0000 80B4     	 push {r7}
 1832              	.LCFI121:
 1833              	 .cfi_def_cfa_offset 4
 1834              	 .cfi_offset 7,-4
 1835 0002 87B0     	 sub sp,sp,#28
 1836              	.LCFI122:
 1837              	 .cfi_def_cfa_offset 32
 1838 0004 00AF     	 add r7,sp,#0
 1839              	.LCFI123:
 1840              	 .cfi_def_cfa_register 7
 1841 0006 F860     	 str r0,[r7,#12]
 1842 0008 0B46     	 mov r3,r1
 1843 000a 7A60     	 str r2,[r7,#4]
 1844 000c FB72     	 strb r3,[r7,#11]
 478:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 479:../Libraries/XMCLib/src/xmc_dma.c **** 
 480:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1845              	 .loc 2 480 0
 1846 000e 0023     	 movs r3,#0
 1847 0010 7B61     	 str r3,[r7,#20]
 1848 0012 14E0     	 b .L98
 1849              	.L100:
 481:../Libraries/XMCLib/src/xmc_dma.c ****   {
 482:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1850              	 .loc 2 482 0
 1851 0014 7B69     	 ldr r3,[r7,#20]
 1852 0016 7A68     	 ldr r2,[r7,#4]
 1853 0018 22FA03F3 	 lsr r3,r2,r3
 1854 001c 03F00103 	 and r3,r3,#1
 1855 0020 002B     	 cmp r3,#0
 1856 0022 09D0     	 beq .L99
 483:../Libraries/XMCLib/src/xmc_dma.c ****     {
 484:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x101UL << channel);
 1857              	 .loc 2 484 0
 1858 0024 7B69     	 ldr r3,[r7,#20]
 1859 0026 5A00     	 lsls r2,r3,#1
 1860 0028 FB7A     	 ldrb r3,[r7,#11]
 1861 002a 40F20111 	 movw r1,#257
 1862 002e 9940     	 lsls r1,r1,r3
 1863 0030 FB68     	 ldr r3,[r7,#12]
 1864 0032 C432     	 adds r2,r2,#196
 1865 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1866              	.L99:
 480:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1867              	 .loc 2 480 0 discriminator 2
 1868 0038 7B69     	 ldr r3,[r7,#20]
 1869 003a 0133     	 adds r3,r3,#1
 1870 003c 7B61     	 str r3,[r7,#20]
 1871              	.L98:
 480:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1872              	 .loc 2 480 0 is_stmt 0 discriminator 1
 1873 003e 7B69     	 ldr r3,[r7,#20]
 1874 0040 042B     	 cmp r3,#4
 1875 0042 E7D9     	 bls .L100
 485:../Libraries/XMCLib/src/xmc_dma.c ****     }
 486:../Libraries/XMCLib/src/xmc_dma.c ****   }
 487:../Libraries/XMCLib/src/xmc_dma.c **** }
 1876              	 .loc 2 487 0 is_stmt 1
 1877 0044 1C37     	 adds r7,r7,#28
 1878              	.LCFI124:
 1879              	 .cfi_def_cfa_offset 4
 1880 0046 BD46     	 mov sp,r7
 1881              	.LCFI125:
 1882              	 .cfi_def_cfa_register 13
 1883              	 
 1884 0048 5DF8047B 	 ldr r7,[sp],#4
 1885              	.LCFI126:
 1886              	 .cfi_restore 7
 1887              	 .cfi_def_cfa_offset 0
 1888 004c 7047     	 bx lr
 1889              	 .cfi_endproc
 1890              	.LFE198:
 1892 004e 00BF     	 .section .text.XMC_DMA_CH_DisableEvent,"ax",%progbits
 1893              	 .align 2
 1894              	 .global XMC_DMA_CH_DisableEvent
 1895              	 .thumb
 1896              	 .thumb_func
 1898              	XMC_DMA_CH_DisableEvent:
 1899              	.LFB199:
 488:../Libraries/XMCLib/src/xmc_dma.c **** 
 489:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable GPDMA event */
 490:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableEvent(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 491:../Libraries/XMCLib/src/xmc_dma.c **** {
 1900              	 .loc 2 491 0
 1901              	 .cfi_startproc
 1902              	 
 1903              	 
 1904              	 
 1905 0000 80B4     	 push {r7}
 1906              	.LCFI127:
 1907              	 .cfi_def_cfa_offset 4
 1908              	 .cfi_offset 7,-4
 1909 0002 87B0     	 sub sp,sp,#28
 1910              	.LCFI128:
 1911              	 .cfi_def_cfa_offset 32
 1912 0004 00AF     	 add r7,sp,#0
 1913              	.LCFI129:
 1914              	 .cfi_def_cfa_register 7
 1915 0006 F860     	 str r0,[r7,#12]
 1916 0008 0B46     	 mov r3,r1
 1917 000a 7A60     	 str r2,[r7,#4]
 1918 000c FB72     	 strb r3,[r7,#11]
 492:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 493:../Libraries/XMCLib/src/xmc_dma.c **** 
 494:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1919              	 .loc 2 494 0
 1920 000e 0023     	 movs r3,#0
 1921 0010 7B61     	 str r3,[r7,#20]
 1922 0012 14E0     	 b .L102
 1923              	.L104:
 495:../Libraries/XMCLib/src/xmc_dma.c ****   {
 496:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & ((uint32_t)0x1UL << event_idx))
 1924              	 .loc 2 496 0
 1925 0014 7B69     	 ldr r3,[r7,#20]
 1926 0016 7A68     	 ldr r2,[r7,#4]
 1927 0018 22FA03F3 	 lsr r3,r2,r3
 1928 001c 03F00103 	 and r3,r3,#1
 1929 0020 002B     	 cmp r3,#0
 1930 0022 09D0     	 beq .L103
 497:../Libraries/XMCLib/src/xmc_dma.c ****     {
 498:../Libraries/XMCLib/src/xmc_dma.c ****       dma->MASKCHEV[event_idx * 2UL] = ((uint32_t)0x100UL << channel);
 1931              	 .loc 2 498 0
 1932 0024 7B69     	 ldr r3,[r7,#20]
 1933 0026 5A00     	 lsls r2,r3,#1
 1934 0028 FB7A     	 ldrb r3,[r7,#11]
 1935 002a 4FF48071 	 mov r1,#256
 1936 002e 9940     	 lsls r1,r1,r3
 1937 0030 FB68     	 ldr r3,[r7,#12]
 1938 0032 C432     	 adds r2,r2,#196
 1939 0034 43F82210 	 str r1,[r3,r2,lsl#2]
 1940              	.L103:
 494:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1941              	 .loc 2 494 0 discriminator 2
 1942 0038 7B69     	 ldr r3,[r7,#20]
 1943 003a 0133     	 adds r3,r3,#1
 1944 003c 7B61     	 str r3,[r7,#20]
 1945              	.L102:
 494:../Libraries/XMCLib/src/xmc_dma.c ****   {
 1946              	 .loc 2 494 0 is_stmt 0 discriminator 1
 1947 003e 7B69     	 ldr r3,[r7,#20]
 1948 0040 042B     	 cmp r3,#4
 1949 0042 E7D9     	 bls .L104
 499:../Libraries/XMCLib/src/xmc_dma.c ****     }
 500:../Libraries/XMCLib/src/xmc_dma.c ****   }
 501:../Libraries/XMCLib/src/xmc_dma.c **** }
 1950              	 .loc 2 501 0 is_stmt 1
 1951 0044 1C37     	 adds r7,r7,#28
 1952              	.LCFI130:
 1953              	 .cfi_def_cfa_offset 4
 1954 0046 BD46     	 mov sp,r7
 1955              	.LCFI131:
 1956              	 .cfi_def_cfa_register 13
 1957              	 
 1958 0048 5DF8047B 	 ldr r7,[sp],#4
 1959              	.LCFI132:
 1960              	 .cfi_restore 7
 1961              	 .cfi_def_cfa_offset 0
 1962 004c 7047     	 bx lr
 1963              	 .cfi_endproc
 1964              	.LFE199:
 1966 004e 00BF     	 .section .text.XMC_DMA_CH_ClearEventStatus,"ax",%progbits
 1967              	 .align 2
 1968              	 .global XMC_DMA_CH_ClearEventStatus
 1969              	 .thumb
 1970              	 .thumb_func
 1972              	XMC_DMA_CH_ClearEventStatus:
 1973              	.LFB200:
 502:../Libraries/XMCLib/src/xmc_dma.c **** 
 503:../Libraries/XMCLib/src/xmc_dma.c **** /* Clear GPDMA event */
 504:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearEventStatus(XMC_DMA_t *const dma, const uint8_t channel, const uint32_t event)
 505:../Libraries/XMCLib/src/xmc_dma.c **** {
 1974              	 .loc 2 505 0
 1975              	 .cfi_startproc
 1976              	 
 1977              	 
 1978              	 
 1979 0000 80B4     	 push {r7}
 1980              	.LCFI133:
 1981              	 .cfi_def_cfa_offset 4
 1982              	 .cfi_offset 7,-4
 1983 0002 87B0     	 sub sp,sp,#28
 1984              	.LCFI134:
 1985              	 .cfi_def_cfa_offset 32
 1986 0004 00AF     	 add r7,sp,#0
 1987              	.LCFI135:
 1988              	 .cfi_def_cfa_register 7
 1989 0006 F860     	 str r0,[r7,#12]
 1990 0008 0B46     	 mov r3,r1
 1991 000a 7A60     	 str r2,[r7,#4]
 1992 000c FB72     	 strb r3,[r7,#11]
 506:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 507:../Libraries/XMCLib/src/xmc_dma.c **** 
 508:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 1993              	 .loc 2 508 0
 1994 000e 0023     	 movs r3,#0
 1995 0010 7B61     	 str r3,[r7,#20]
 1996 0012 13E0     	 b .L106
 1997              	.L108:
 509:../Libraries/XMCLib/src/xmc_dma.c ****   {
 510:../Libraries/XMCLib/src/xmc_dma.c ****     if (event & (uint32_t)((uint32_t)0x1UL << event_idx))
 1998              	 .loc 2 510 0
 1999 0014 7B69     	 ldr r3,[r7,#20]
 2000 0016 7A68     	 ldr r2,[r7,#4]
 2001 0018 22FA03F3 	 lsr r3,r2,r3
 2002 001c 03F00103 	 and r3,r3,#1
 2003 0020 002B     	 cmp r3,#0
 2004 0022 08D0     	 beq .L107
 511:../Libraries/XMCLib/src/xmc_dma.c ****     {
 512:../Libraries/XMCLib/src/xmc_dma.c ****       dma->CLEARCHEV[event_idx * 2UL] = ((uint32_t)0x1UL << channel);
 2005              	 .loc 2 512 0
 2006 0024 7B69     	 ldr r3,[r7,#20]
 2007 0026 5A00     	 lsls r2,r3,#1
 2008 0028 FB7A     	 ldrb r3,[r7,#11]
 2009 002a 0121     	 movs r1,#1
 2010 002c 9940     	 lsls r1,r1,r3
 2011 002e FB68     	 ldr r3,[r7,#12]
 2012 0030 CE32     	 adds r2,r2,#206
 2013 0032 43F82210 	 str r1,[r3,r2,lsl#2]
 2014              	.L107:
 508:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2015              	 .loc 2 508 0 discriminator 2
 2016 0036 7B69     	 ldr r3,[r7,#20]
 2017 0038 0133     	 adds r3,r3,#1
 2018 003a 7B61     	 str r3,[r7,#20]
 2019              	.L106:
 508:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2020              	 .loc 2 508 0 is_stmt 0 discriminator 1
 2021 003c 7B69     	 ldr r3,[r7,#20]
 2022 003e 042B     	 cmp r3,#4
 2023 0040 E8D9     	 bls .L108
 513:../Libraries/XMCLib/src/xmc_dma.c ****     }
 514:../Libraries/XMCLib/src/xmc_dma.c ****   }
 515:../Libraries/XMCLib/src/xmc_dma.c **** 
 516:../Libraries/XMCLib/src/xmc_dma.c **** }
 2024              	 .loc 2 516 0 is_stmt 1
 2025 0042 1C37     	 adds r7,r7,#28
 2026              	.LCFI136:
 2027              	 .cfi_def_cfa_offset 4
 2028 0044 BD46     	 mov sp,r7
 2029              	.LCFI137:
 2030              	 .cfi_def_cfa_register 13
 2031              	 
 2032 0046 5DF8047B 	 ldr r7,[sp],#4
 2033              	.LCFI138:
 2034              	 .cfi_restore 7
 2035              	 .cfi_def_cfa_offset 0
 2036 004a 7047     	 bx lr
 2037              	 .cfi_endproc
 2038              	.LFE200:
 2040              	 .section .text.XMC_DMA_CH_GetEventStatus,"ax",%progbits
 2041              	 .align 2
 2042              	 .global XMC_DMA_CH_GetEventStatus
 2043              	 .thumb
 2044              	 .thumb_func
 2046              	XMC_DMA_CH_GetEventStatus:
 2047              	.LFB201:
 517:../Libraries/XMCLib/src/xmc_dma.c **** 
 518:../Libraries/XMCLib/src/xmc_dma.c **** /* Get GPDMA event status */
 519:../Libraries/XMCLib/src/xmc_dma.c **** uint32_t XMC_DMA_CH_GetEventStatus(XMC_DMA_t *const dma, const uint8_t channel)
 520:../Libraries/XMCLib/src/xmc_dma.c **** {
 2048              	 .loc 2 520 0
 2049              	 .cfi_startproc
 2050              	 
 2051              	 
 2052              	 
 2053 0000 80B4     	 push {r7}
 2054              	.LCFI139:
 2055              	 .cfi_def_cfa_offset 4
 2056              	 .cfi_offset 7,-4
 2057 0002 85B0     	 sub sp,sp,#20
 2058              	.LCFI140:
 2059              	 .cfi_def_cfa_offset 24
 2060 0004 00AF     	 add r7,sp,#0
 2061              	.LCFI141:
 2062              	 .cfi_def_cfa_register 7
 2063 0006 7860     	 str r0,[r7,#4]
 2064 0008 0B46     	 mov r3,r1
 2065 000a FB70     	 strb r3,[r7,#3]
 521:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event_idx;
 522:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t status = 0UL;
 2066              	 .loc 2 522 0
 2067 000c 0023     	 movs r3,#0
 2068 000e BB60     	 str r3,[r7,#8]
 523:../Libraries/XMCLib/src/xmc_dma.c **** 
 524:../Libraries/XMCLib/src/xmc_dma.c ****   for(event_idx = 0UL; event_idx < DMA_EVENT_MAX; ++event_idx)
 2069              	 .loc 2 524 0
 2070 0010 0023     	 movs r3,#0
 2071 0012 FB60     	 str r3,[r7,#12]
 2072 0014 18E0     	 b .L110
 2073              	.L113:
 525:../Libraries/XMCLib/src/xmc_dma.c ****   {
 526:../Libraries/XMCLib/src/xmc_dma.c ****     status |= (uint32_t)((dma->STATUSCHEV[event_idx * 2UL] & (uint32_t)((uint32_t)0x1UL << (uint32_
 2074              	 .loc 2 526 0
 2075 0016 FB68     	 ldr r3,[r7,#12]
 2076 0018 5A00     	 lsls r2,r3,#1
 2077 001a 7B68     	 ldr r3,[r7,#4]
 2078 001c BA32     	 adds r2,r2,#186
 2079 001e 53F82220 	 ldr r2,[r3,r2,lsl#2]
 2080 0022 FB78     	 ldrb r3,[r7,#3]
 2081 0024 22FA03F3 	 lsr r3,r2,r3
 2082 0028 03F00103 	 and r3,r3,#1
 2083 002c 002B     	 cmp r3,#0
 2084 002e 04D0     	 beq .L111
 2085              	 .loc 2 526 0 is_stmt 0 discriminator 1
 2086 0030 FB68     	 ldr r3,[r7,#12]
 2087 0032 0122     	 movs r2,#1
 2088 0034 02FA03F3 	 lsl r3,r2,r3
 2089 0038 00E0     	 b .L112
 2090              	.L111:
 2091              	 .loc 2 526 0 discriminator 2
 2092 003a 0023     	 movs r3,#0
 2093              	.L112:
 2094              	 .loc 2 526 0 discriminator 4
 2095 003c BA68     	 ldr r2,[r7,#8]
 2096 003e 1343     	 orrs r3,r3,r2
 2097 0040 BB60     	 str r3,[r7,#8]
 524:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2098              	 .loc 2 524 0 is_stmt 1 discriminator 4
 2099 0042 FB68     	 ldr r3,[r7,#12]
 2100 0044 0133     	 adds r3,r3,#1
 2101 0046 FB60     	 str r3,[r7,#12]
 2102              	.L110:
 524:../Libraries/XMCLib/src/xmc_dma.c ****   {
 2103              	 .loc 2 524 0 is_stmt 0 discriminator 2
 2104 0048 FB68     	 ldr r3,[r7,#12]
 2105 004a 042B     	 cmp r3,#4
 2106 004c E3D9     	 bls .L113
 527:../Libraries/XMCLib/src/xmc_dma.c ****                          ((uint32_t)0x1UL << event_idx) : (uint32_t)0UL);
 528:../Libraries/XMCLib/src/xmc_dma.c ****   }
 529:../Libraries/XMCLib/src/xmc_dma.c **** 
 530:../Libraries/XMCLib/src/xmc_dma.c ****   return status;
 2107              	 .loc 2 530 0 is_stmt 1
 2108 004e BB68     	 ldr r3,[r7,#8]
 531:../Libraries/XMCLib/src/xmc_dma.c **** }
 2109              	 .loc 2 531 0
 2110 0050 1846     	 mov r0,r3
 2111 0052 1437     	 adds r7,r7,#20
 2112              	.LCFI142:
 2113              	 .cfi_def_cfa_offset 4
 2114 0054 BD46     	 mov sp,r7
 2115              	.LCFI143:
 2116              	 .cfi_def_cfa_register 13
 2117              	 
 2118 0056 5DF8047B 	 ldr r7,[sp],#4
 2119              	.LCFI144:
 2120              	 .cfi_restore 7
 2121              	 .cfi_def_cfa_offset 0
 2122 005a 7047     	 bx lr
 2123              	 .cfi_endproc
 2124              	.LFE201:
 2126              	 .section .text.XMC_DMA_CH_EnableSourceGather,"ax",%progbits
 2127              	 .align 2
 2128              	 .global XMC_DMA_CH_EnableSourceGather
 2129              	 .thumb
 2130              	 .thumb_func
 2132              	XMC_DMA_CH_EnableSourceGather:
 2133              	.LFB202:
 532:../Libraries/XMCLib/src/xmc_dma.c **** 
 533:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source gather */
 534:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceGather(XMC_DMA_t *const dma, const uint8_t channel, uint32_t interval, 
 535:../Libraries/XMCLib/src/xmc_dma.c **** {
 2134              	 .loc 2 535 0
 2135              	 .cfi_startproc
 2136              	 
 2137              	 
 2138              	 
 2139 0000 80B4     	 push {r7}
 2140              	.LCFI145:
 2141              	 .cfi_def_cfa_offset 4
 2142              	 .cfi_offset 7,-4
 2143 0002 85B0     	 sub sp,sp,#20
 2144              	.LCFI146:
 2145              	 .cfi_def_cfa_offset 24
 2146 0004 00AF     	 add r7,sp,#0
 2147              	.LCFI147:
 2148              	 .cfi_def_cfa_register 7
 2149 0006 F860     	 str r0,[r7,#12]
 2150 0008 7A60     	 str r2,[r7,#4]
 2151 000a 1A46     	 mov r2,r3
 2152 000c 0B46     	 mov r3,r1
 2153 000e FB72     	 strb r3,[r7,#11]
 2154 0010 1346     	 mov r3,r2
 2155 0012 3B81     	 strh r3,[r7,#8]
 536:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2156              	 .loc 2 536 0
 2157 0014 FB7A     	 ldrb r3,[r7,#11]
 2158 0016 FA7A     	 ldrb r2,[r7,#11]
 2159 0018 F968     	 ldr r1,[r7,#12]
 2160 001a 5820     	 movs r0,#88
 2161 001c 00FB02F2 	 mul r2,r0,r2
 2162 0020 0A44     	 add r2,r2,r1
 2163 0022 1832     	 adds r2,r2,#24
 2164 0024 1268     	 ldr r2,[r2]
 2165 0026 42F40032 	 orr r2,r2,#131072
 2166 002a F968     	 ldr r1,[r7,#12]
 2167 002c 5820     	 movs r0,#88
 2168 002e 00FB03F3 	 mul r3,r0,r3
 2169 0032 0B44     	 add r3,r3,r1
 2170 0034 1833     	 adds r3,r3,#24
 2171 0036 1A60     	 str r2,[r3]
 537:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].SGR = ((uint32_t)interval << GPDMA0_CH_SGR_SGI_Pos) | ((uint32_t)count << GPDMA0
 2172              	 .loc 2 537 0
 2173 0038 FB7A     	 ldrb r3,[r7,#11]
 2174 003a 3A89     	 ldrh r2,[r7,#8]
 2175 003c 1105     	 lsls r1,r2,#20
 2176 003e 7A68     	 ldr r2,[r7,#4]
 2177 0040 0A43     	 orrs r2,r2,r1
 2178 0042 F968     	 ldr r1,[r7,#12]
 2179 0044 5820     	 movs r0,#88
 2180 0046 00FB03F3 	 mul r3,r0,r3
 2181 004a 0B44     	 add r3,r3,r1
 2182 004c 4833     	 adds r3,r3,#72
 2183 004e 1A60     	 str r2,[r3]
 538:../Libraries/XMCLib/src/xmc_dma.c **** }
 2184              	 .loc 2 538 0
 2185 0050 1437     	 adds r7,r7,#20
 2186              	.LCFI148:
 2187              	 .cfi_def_cfa_offset 4
 2188 0052 BD46     	 mov sp,r7
 2189              	.LCFI149:
 2190              	 .cfi_def_cfa_register 13
 2191              	 
 2192 0054 5DF8047B 	 ldr r7,[sp],#4
 2193              	.LCFI150:
 2194              	 .cfi_restore 7
 2195              	 .cfi_def_cfa_offset 0
 2196 0058 7047     	 bx lr
 2197              	 .cfi_endproc
 2198              	.LFE202:
 2200 005a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceGather,"ax",%progbits
 2201              	 .align 2
 2202              	 .global XMC_DMA_CH_DisableSourceGather
 2203              	 .thumb
 2204              	 .thumb_func
 2206              	XMC_DMA_CH_DisableSourceGather:
 2207              	.LFB203:
 539:../Libraries/XMCLib/src/xmc_dma.c **** 
 540:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source gather */
 541:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceGather(XMC_DMA_t *const dma, const uint8_t channel)
 542:../Libraries/XMCLib/src/xmc_dma.c **** {
 2208              	 .loc 2 542 0
 2209              	 .cfi_startproc
 2210              	 
 2211              	 
 2212              	 
 2213 0000 80B4     	 push {r7}
 2214              	.LCFI151:
 2215              	 .cfi_def_cfa_offset 4
 2216              	 .cfi_offset 7,-4
 2217 0002 83B0     	 sub sp,sp,#12
 2218              	.LCFI152:
 2219              	 .cfi_def_cfa_offset 16
 2220 0004 00AF     	 add r7,sp,#0
 2221              	.LCFI153:
 2222              	 .cfi_def_cfa_register 7
 2223 0006 7860     	 str r0,[r7,#4]
 2224 0008 0B46     	 mov r3,r1
 2225 000a FB70     	 strb r3,[r7,#3]
 543:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_SRC_GATHER_EN_Msk;
 2226              	 .loc 2 543 0
 2227 000c FB78     	 ldrb r3,[r7,#3]
 2228 000e FA78     	 ldrb r2,[r7,#3]
 2229 0010 7968     	 ldr r1,[r7,#4]
 2230 0012 5820     	 movs r0,#88
 2231 0014 00FB02F2 	 mul r2,r0,r2
 2232 0018 0A44     	 add r2,r2,r1
 2233 001a 1832     	 adds r2,r2,#24
 2234 001c 1268     	 ldr r2,[r2]
 2235 001e 22F40032 	 bic r2,r2,#131072
 2236 0022 7968     	 ldr r1,[r7,#4]
 2237 0024 5820     	 movs r0,#88
 2238 0026 00FB03F3 	 mul r3,r0,r3
 2239 002a 0B44     	 add r3,r3,r1
 2240 002c 1833     	 adds r3,r3,#24
 2241 002e 1A60     	 str r2,[r3]
 544:../Libraries/XMCLib/src/xmc_dma.c **** }
 2242              	 .loc 2 544 0
 2243 0030 0C37     	 adds r7,r7,#12
 2244              	.LCFI154:
 2245              	 .cfi_def_cfa_offset 4
 2246 0032 BD46     	 mov sp,r7
 2247              	.LCFI155:
 2248              	 .cfi_def_cfa_register 13
 2249              	 
 2250 0034 5DF8047B 	 ldr r7,[sp],#4
 2251              	.LCFI156:
 2252              	 .cfi_restore 7
 2253              	 .cfi_def_cfa_offset 0
 2254 0038 7047     	 bx lr
 2255              	 .cfi_endproc
 2256              	.LFE203:
 2258 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationScatter,"ax",%progbits
 2259              	 .align 2
 2260              	 .global XMC_DMA_CH_EnableDestinationScatter
 2261              	 .thumb
 2262              	 .thumb_func
 2264              	XMC_DMA_CH_EnableDestinationScatter:
 2265              	.LFB204:
 545:../Libraries/XMCLib/src/xmc_dma.c **** 
 546:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination scatter */
 547:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel, uint32_t inte
 548:../Libraries/XMCLib/src/xmc_dma.c **** {
 2266              	 .loc 2 548 0
 2267              	 .cfi_startproc
 2268              	 
 2269              	 
 2270              	 
 2271 0000 80B4     	 push {r7}
 2272              	.LCFI157:
 2273              	 .cfi_def_cfa_offset 4
 2274              	 .cfi_offset 7,-4
 2275 0002 85B0     	 sub sp,sp,#20
 2276              	.LCFI158:
 2277              	 .cfi_def_cfa_offset 24
 2278 0004 00AF     	 add r7,sp,#0
 2279              	.LCFI159:
 2280              	 .cfi_def_cfa_register 7
 2281 0006 F860     	 str r0,[r7,#12]
 2282 0008 7A60     	 str r2,[r7,#4]
 2283 000a 1A46     	 mov r2,r3
 2284 000c 0B46     	 mov r3,r1
 2285 000e FB72     	 strb r3,[r7,#11]
 2286 0010 1346     	 mov r3,r2
 2287 0012 3B81     	 strh r3,[r7,#8]
 549:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL |= (uint32_t)GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2288              	 .loc 2 549 0
 2289 0014 FB7A     	 ldrb r3,[r7,#11]
 2290 0016 FA7A     	 ldrb r2,[r7,#11]
 2291 0018 F968     	 ldr r1,[r7,#12]
 2292 001a 5820     	 movs r0,#88
 2293 001c 00FB02F2 	 mul r2,r0,r2
 2294 0020 0A44     	 add r2,r2,r1
 2295 0022 1832     	 adds r2,r2,#24
 2296 0024 1268     	 ldr r2,[r2]
 2297 0026 42F48022 	 orr r2,r2,#262144
 2298 002a F968     	 ldr r1,[r7,#12]
 2299 002c 5820     	 movs r0,#88
 2300 002e 00FB03F3 	 mul r3,r0,r3
 2301 0032 0B44     	 add r3,r3,r1
 2302 0034 1833     	 adds r3,r3,#24
 2303 0036 1A60     	 str r2,[r3]
 550:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].DSR = ((uint32_t)interval << GPDMA0_CH_DSR_DSI_Pos) | ((uint32_t)count << GPDMA0
 2304              	 .loc 2 550 0
 2305 0038 FB7A     	 ldrb r3,[r7,#11]
 2306 003a 3A89     	 ldrh r2,[r7,#8]
 2307 003c 1105     	 lsls r1,r2,#20
 2308 003e 7A68     	 ldr r2,[r7,#4]
 2309 0040 0A43     	 orrs r2,r2,r1
 2310 0042 F968     	 ldr r1,[r7,#12]
 2311 0044 5820     	 movs r0,#88
 2312 0046 00FB03F3 	 mul r3,r0,r3
 2313 004a 0B44     	 add r3,r3,r1
 2314 004c 5033     	 adds r3,r3,#80
 2315 004e 1A60     	 str r2,[r3]
 551:../Libraries/XMCLib/src/xmc_dma.c **** }
 2316              	 .loc 2 551 0
 2317 0050 1437     	 adds r7,r7,#20
 2318              	.LCFI160:
 2319              	 .cfi_def_cfa_offset 4
 2320 0052 BD46     	 mov sp,r7
 2321              	.LCFI161:
 2322              	 .cfi_def_cfa_register 13
 2323              	 
 2324 0054 5DF8047B 	 ldr r7,[sp],#4
 2325              	.LCFI162:
 2326              	 .cfi_restore 7
 2327              	 .cfi_def_cfa_offset 0
 2328 0058 7047     	 bx lr
 2329              	 .cfi_endproc
 2330              	.LFE204:
 2332 005a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationScatter,"ax",%progbits
 2333              	 .align 2
 2334              	 .global XMC_DMA_CH_DisableDestinationScatter
 2335              	 .thumb
 2336              	 .thumb_func
 2338              	XMC_DMA_CH_DisableDestinationScatter:
 2339              	.LFB205:
 552:../Libraries/XMCLib/src/xmc_dma.c **** 
 553:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination scatter */
 554:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationScatter(XMC_DMA_t *const dma, const uint8_t channel)
 555:../Libraries/XMCLib/src/xmc_dma.c **** {
 2340              	 .loc 2 555 0
 2341              	 .cfi_startproc
 2342              	 
 2343              	 
 2344              	 
 2345 0000 80B4     	 push {r7}
 2346              	.LCFI163:
 2347              	 .cfi_def_cfa_offset 4
 2348              	 .cfi_offset 7,-4
 2349 0002 83B0     	 sub sp,sp,#12
 2350              	.LCFI164:
 2351              	 .cfi_def_cfa_offset 16
 2352 0004 00AF     	 add r7,sp,#0
 2353              	.LCFI165:
 2354              	 .cfi_def_cfa_register 7
 2355 0006 7860     	 str r0,[r7,#4]
 2356 0008 0B46     	 mov r3,r1
 2357 000a FB70     	 strb r3,[r7,#3]
 556:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~GPDMA0_CH_CTLL_DST_SCATTER_EN_Msk;
 2358              	 .loc 2 556 0
 2359 000c FB78     	 ldrb r3,[r7,#3]
 2360 000e FA78     	 ldrb r2,[r7,#3]
 2361 0010 7968     	 ldr r1,[r7,#4]
 2362 0012 5820     	 movs r0,#88
 2363 0014 00FB02F2 	 mul r2,r0,r2
 2364 0018 0A44     	 add r2,r2,r1
 2365 001a 1832     	 adds r2,r2,#24
 2366 001c 1268     	 ldr r2,[r2]
 2367 001e 22F48022 	 bic r2,r2,#262144
 2368 0022 7968     	 ldr r1,[r7,#4]
 2369 0024 5820     	 movs r0,#88
 2370 0026 00FB03F3 	 mul r3,r0,r3
 2371 002a 0B44     	 add r3,r3,r1
 2372 002c 1833     	 adds r3,r3,#24
 2373 002e 1A60     	 str r2,[r3]
 557:../Libraries/XMCLib/src/xmc_dma.c **** }
 2374              	 .loc 2 557 0
 2375 0030 0C37     	 adds r7,r7,#12
 2376              	.LCFI166:
 2377              	 .cfi_def_cfa_offset 4
 2378 0032 BD46     	 mov sp,r7
 2379              	.LCFI167:
 2380              	 .cfi_def_cfa_register 13
 2381              	 
 2382 0034 5DF8047B 	 ldr r7,[sp],#4
 2383              	.LCFI168:
 2384              	 .cfi_restore 7
 2385              	 .cfi_def_cfa_offset 0
 2386 0038 7047     	 bx lr
 2387              	 .cfi_endproc
 2388              	.LFE205:
 2390 003a 00BF     	 .section .text.XMC_DMA_CH_TriggerSourceRequest,"ax",%progbits
 2391              	 .align 2
 2392              	 .global XMC_DMA_CH_TriggerSourceRequest
 2393              	 .thumb
 2394              	 .thumb_func
 2396              	XMC_DMA_CH_TriggerSourceRequest:
 2397              	.LFB206:
 558:../Libraries/XMCLib/src/xmc_dma.c **** 
 559:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger source request */
 560:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerSourceRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DMA_CH_
 561:../Libraries/XMCLib/src/xmc_dma.c **** {
 2398              	 .loc 2 561 0
 2399              	 .cfi_startproc
 2400              	 
 2401              	 
 2402              	 
 2403 0000 80B4     	 push {r7}
 2404              	.LCFI169:
 2405              	 .cfi_def_cfa_offset 4
 2406              	 .cfi_offset 7,-4
 2407 0002 83B0     	 sub sp,sp,#12
 2408              	.LCFI170:
 2409              	 .cfi_def_cfa_offset 16
 2410 0004 00AF     	 add r7,sp,#0
 2411              	.LCFI171:
 2412              	 .cfi_def_cfa_register 7
 2413 0006 7860     	 str r0,[r7,#4]
 2414 0008 0846     	 mov r0,r1
 2415 000a 1146     	 mov r1,r2
 2416 000c 1A46     	 mov r2,r3
 2417 000e 0346     	 mov r3,r0
 2418 0010 FB70     	 strb r3,[r7,#3]
 2419 0012 0B46     	 mov r3,r1
 2420 0014 BB70     	 strb r3,[r7,#2]
 2421 0016 1346     	 mov r3,r2
 2422 0018 7B70     	 strb r3,[r7,#1]
 562:../Libraries/XMCLib/src/xmc_dma.c ****   if ((uint32_t)type == (uint32_t)XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2423              	 .loc 2 562 0
 2424 001a BB78     	 ldrb r3,[r7,#2]
 2425 001c 002B     	 cmp r3,#0
 2426 001e 06D1     	 bne .L120
 563:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 564:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQSRCREG = ((uint32_t)0x101UL << channel);
 2427              	 .loc 2 564 0
 2428 0020 FB78     	 ldrb r3,[r7,#3]
 2429 0022 40F20112 	 movw r2,#257
 2430 0026 9A40     	 lsls r2,r2,r3
 2431 0028 7B68     	 ldr r3,[r7,#4]
 2432 002a C3F87823 	 str r2,[r3,#888]
 2433              	.L120:
 565:../Libraries/XMCLib/src/xmc_dma.c ****   }
 566:../Libraries/XMCLib/src/xmc_dma.c **** 
 567:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2434              	 .loc 2 567 0
 2435 002e 7B78     	 ldrb r3,[r7,#1]
 2436 0030 002B     	 cmp r3,#0
 2437 0032 06D0     	 beq .L121
 568:../Libraries/XMCLib/src/xmc_dma.c ****   {
 569:../Libraries/XMCLib/src/xmc_dma.c ****   dma->LSTSRCREG = (uint32_t)0x101UL << channel;
 2438              	 .loc 2 569 0
 2439 0034 FB78     	 ldrb r3,[r7,#3]
 2440 0036 40F20112 	 movw r2,#257
 2441 003a 9A40     	 lsls r2,r2,r3
 2442 003c 7B68     	 ldr r3,[r7,#4]
 2443 003e C3F88823 	 str r2,[r3,#904]
 2444              	.L121:
 570:../Libraries/XMCLib/src/xmc_dma.c ****   }
 571:../Libraries/XMCLib/src/xmc_dma.c ****   
 572:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQSRCREG = (uint32_t)0x101UL << channel;
 2445              	 .loc 2 572 0
 2446 0042 FB78     	 ldrb r3,[r7,#3]
 2447 0044 40F20112 	 movw r2,#257
 2448 0048 9A40     	 lsls r2,r2,r3
 2449 004a 7B68     	 ldr r3,[r7,#4]
 2450 004c C3F86823 	 str r2,[r3,#872]
 573:../Libraries/XMCLib/src/xmc_dma.c **** }
 2451              	 .loc 2 573 0
 2452 0050 0C37     	 adds r7,r7,#12
 2453              	.LCFI172:
 2454              	 .cfi_def_cfa_offset 4
 2455 0052 BD46     	 mov sp,r7
 2456              	.LCFI173:
 2457              	 .cfi_def_cfa_register 13
 2458              	 
 2459 0054 5DF8047B 	 ldr r7,[sp],#4
 2460              	.LCFI174:
 2461              	 .cfi_restore 7
 2462              	 .cfi_def_cfa_offset 0
 2463 0058 7047     	 bx lr
 2464              	 .cfi_endproc
 2465              	.LFE206:
 2467 005a 00BF     	 .section .text.XMC_DMA_CH_TriggerDestinationRequest,"ax",%progbits
 2468              	 .align 2
 2469              	 .global XMC_DMA_CH_TriggerDestinationRequest
 2470              	 .thumb
 2471              	 .thumb_func
 2473              	XMC_DMA_CH_TriggerDestinationRequest:
 2474              	.LFB207:
 574:../Libraries/XMCLib/src/xmc_dma.c **** 
 575:../Libraries/XMCLib/src/xmc_dma.c **** /* Trigger destination request */
 576:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_TriggerDestinationRequest(XMC_DMA_t *const dma, const uint8_t channel, const XMC_DM
 577:../Libraries/XMCLib/src/xmc_dma.c **** {
 2475              	 .loc 2 577 0
 2476              	 .cfi_startproc
 2477              	 
 2478              	 
 2479              	 
 2480 0000 80B4     	 push {r7}
 2481              	.LCFI175:
 2482              	 .cfi_def_cfa_offset 4
 2483              	 .cfi_offset 7,-4
 2484 0002 83B0     	 sub sp,sp,#12
 2485              	.LCFI176:
 2486              	 .cfi_def_cfa_offset 16
 2487 0004 00AF     	 add r7,sp,#0
 2488              	.LCFI177:
 2489              	 .cfi_def_cfa_register 7
 2490 0006 7860     	 str r0,[r7,#4]
 2491 0008 0846     	 mov r0,r1
 2492 000a 1146     	 mov r1,r2
 2493 000c 1A46     	 mov r2,r3
 2494 000e 0346     	 mov r3,r0
 2495 0010 FB70     	 strb r3,[r7,#3]
 2496 0012 0B46     	 mov r3,r1
 2497 0014 BB70     	 strb r3,[r7,#2]
 2498 0016 1346     	 mov r3,r2
 2499 0018 7B70     	 strb r3,[r7,#1]
 578:../Libraries/XMCLib/src/xmc_dma.c ****   if(type == XMC_DMA_CH_TRANSACTION_TYPE_SINGLE)
 2500              	 .loc 2 578 0
 2501 001a BB78     	 ldrb r3,[r7,#2]
 2502 001c 002B     	 cmp r3,#0
 2503 001e 06D1     	 bne .L123
 579:../Libraries/XMCLib/src/xmc_dma.c ****   {  
 580:../Libraries/XMCLib/src/xmc_dma.c ****     dma->SGLREQDSTREG = (uint32_t)0x101UL << channel;
 2504              	 .loc 2 580 0
 2505 0020 FB78     	 ldrb r3,[r7,#3]
 2506 0022 40F20112 	 movw r2,#257
 2507 0026 9A40     	 lsls r2,r2,r3
 2508 0028 7B68     	 ldr r3,[r7,#4]
 2509 002a C3F88023 	 str r2,[r3,#896]
 2510              	.L123:
 581:../Libraries/XMCLib/src/xmc_dma.c ****   }
 582:../Libraries/XMCLib/src/xmc_dma.c **** 
 583:../Libraries/XMCLib/src/xmc_dma.c ****   if (last == true)
 2511              	 .loc 2 583 0
 2512 002e 7B78     	 ldrb r3,[r7,#1]
 2513 0030 002B     	 cmp r3,#0
 2514 0032 06D0     	 beq .L124
 584:../Libraries/XMCLib/src/xmc_dma.c ****   {
 585:../Libraries/XMCLib/src/xmc_dma.c ****     dma->LSTDSTREG = (uint32_t)0x101UL << channel;
 2515              	 .loc 2 585 0
 2516 0034 FB78     	 ldrb r3,[r7,#3]
 2517 0036 40F20112 	 movw r2,#257
 2518 003a 9A40     	 lsls r2,r2,r3
 2519 003c 7B68     	 ldr r3,[r7,#4]
 2520 003e C3F89023 	 str r2,[r3,#912]
 2521              	.L124:
 586:../Libraries/XMCLib/src/xmc_dma.c ****   }
 587:../Libraries/XMCLib/src/xmc_dma.c **** 
 588:../Libraries/XMCLib/src/xmc_dma.c ****   dma->REQDSTREG = (uint32_t)0x101UL << channel;
 2522              	 .loc 2 588 0
 2523 0042 FB78     	 ldrb r3,[r7,#3]
 2524 0044 40F20112 	 movw r2,#257
 2525 0048 9A40     	 lsls r2,r2,r3
 2526 004a 7B68     	 ldr r3,[r7,#4]
 2527 004c C3F87023 	 str r2,[r3,#880]
 589:../Libraries/XMCLib/src/xmc_dma.c **** }
 2528              	 .loc 2 589 0
 2529 0050 0C37     	 adds r7,r7,#12
 2530              	.LCFI178:
 2531              	 .cfi_def_cfa_offset 4
 2532 0052 BD46     	 mov sp,r7
 2533              	.LCFI179:
 2534              	 .cfi_def_cfa_register 13
 2535              	 
 2536 0054 5DF8047B 	 ldr r7,[sp],#4
 2537              	.LCFI180:
 2538              	 .cfi_restore 7
 2539              	 .cfi_def_cfa_offset 0
 2540 0058 7047     	 bx lr
 2541              	 .cfi_endproc
 2542              	.LFE207:
 2544 005a 00BF     	 .section .text.XMC_DMA_CH_EnableSourceAddressReload,"ax",%progbits
 2545              	 .align 2
 2546              	 .global XMC_DMA_CH_EnableSourceAddressReload
 2547              	 .thumb
 2548              	 .thumb_func
 2550              	XMC_DMA_CH_EnableSourceAddressReload:
 2551              	.LFB208:
 590:../Libraries/XMCLib/src/xmc_dma.c **** 
 591:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable source address reload */
 592:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 593:../Libraries/XMCLib/src/xmc_dma.c **** {
 2552              	 .loc 2 593 0
 2553              	 .cfi_startproc
 2554              	 
 2555              	 
 2556              	 
 2557 0000 80B4     	 push {r7}
 2558              	.LCFI181:
 2559              	 .cfi_def_cfa_offset 4
 2560              	 .cfi_offset 7,-4
 2561 0002 83B0     	 sub sp,sp,#12
 2562              	.LCFI182:
 2563              	 .cfi_def_cfa_offset 16
 2564 0004 00AF     	 add r7,sp,#0
 2565              	.LCFI183:
 2566              	 .cfi_def_cfa_register 7
 2567 0006 7860     	 str r0,[r7,#4]
 2568 0008 0B46     	 mov r3,r1
 2569 000a FB70     	 strb r3,[r7,#3]
 594:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2570              	 .loc 2 594 0
 2571 000c FB78     	 ldrb r3,[r7,#3]
 2572 000e FA78     	 ldrb r2,[r7,#3]
 2573 0010 7968     	 ldr r1,[r7,#4]
 2574 0012 5820     	 movs r0,#88
 2575 0014 00FB02F2 	 mul r2,r0,r2
 2576 0018 0A44     	 add r2,r2,r1
 2577 001a 4032     	 adds r2,r2,#64
 2578 001c 1268     	 ldr r2,[r2]
 2579 001e 42F08042 	 orr r2,r2,#1073741824
 2580 0022 7968     	 ldr r1,[r7,#4]
 2581 0024 5820     	 movs r0,#88
 2582 0026 00FB03F3 	 mul r3,r0,r3
 2583 002a 0B44     	 add r3,r3,r1
 2584 002c 4033     	 adds r3,r3,#64
 2585 002e 1A60     	 str r2,[r3]
 595:../Libraries/XMCLib/src/xmc_dma.c **** }
 2586              	 .loc 2 595 0
 2587 0030 0C37     	 adds r7,r7,#12
 2588              	.LCFI184:
 2589              	 .cfi_def_cfa_offset 4
 2590 0032 BD46     	 mov sp,r7
 2591              	.LCFI185:
 2592              	 .cfi_def_cfa_register 13
 2593              	 
 2594 0034 5DF8047B 	 ldr r7,[sp],#4
 2595              	.LCFI186:
 2596              	 .cfi_restore 7
 2597              	 .cfi_def_cfa_offset 0
 2598 0038 7047     	 bx lr
 2599              	 .cfi_endproc
 2600              	.LFE208:
 2602 003a 00BF     	 .section .text.XMC_DMA_CH_DisableSourceAddressReload,"ax",%progbits
 2603              	 .align 2
 2604              	 .global XMC_DMA_CH_DisableSourceAddressReload
 2605              	 .thumb
 2606              	 .thumb_func
 2608              	XMC_DMA_CH_DisableSourceAddressReload:
 2609              	.LFB209:
 596:../Libraries/XMCLib/src/xmc_dma.c **** 
 597:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable source address reload */
 598:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableSourceAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 599:../Libraries/XMCLib/src/xmc_dma.c **** {
 2610              	 .loc 2 599 0
 2611              	 .cfi_startproc
 2612              	 
 2613              	 
 2614              	 
 2615 0000 80B4     	 push {r7}
 2616              	.LCFI187:
 2617              	 .cfi_def_cfa_offset 4
 2618              	 .cfi_offset 7,-4
 2619 0002 83B0     	 sub sp,sp,#12
 2620              	.LCFI188:
 2621              	 .cfi_def_cfa_offset 16
 2622 0004 00AF     	 add r7,sp,#0
 2623              	.LCFI189:
 2624              	 .cfi_def_cfa_register 7
 2625 0006 7860     	 str r0,[r7,#4]
 2626 0008 0B46     	 mov r3,r1
 2627 000a FB70     	 strb r3,[r7,#3]
 600:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_SRC_Msk;
 2628              	 .loc 2 600 0
 2629 000c FB78     	 ldrb r3,[r7,#3]
 2630 000e FA78     	 ldrb r2,[r7,#3]
 2631 0010 7968     	 ldr r1,[r7,#4]
 2632 0012 5820     	 movs r0,#88
 2633 0014 00FB02F2 	 mul r2,r0,r2
 2634 0018 0A44     	 add r2,r2,r1
 2635 001a 4032     	 adds r2,r2,#64
 2636 001c 1268     	 ldr r2,[r2]
 2637 001e 22F08042 	 bic r2,r2,#1073741824
 2638 0022 7968     	 ldr r1,[r7,#4]
 2639 0024 5820     	 movs r0,#88
 2640 0026 00FB03F3 	 mul r3,r0,r3
 2641 002a 0B44     	 add r3,r3,r1
 2642 002c 4033     	 adds r3,r3,#64
 2643 002e 1A60     	 str r2,[r3]
 601:../Libraries/XMCLib/src/xmc_dma.c **** }
 2644              	 .loc 2 601 0
 2645 0030 0C37     	 adds r7,r7,#12
 2646              	.LCFI190:
 2647              	 .cfi_def_cfa_offset 4
 2648 0032 BD46     	 mov sp,r7
 2649              	.LCFI191:
 2650              	 .cfi_def_cfa_register 13
 2651              	 
 2652 0034 5DF8047B 	 ldr r7,[sp],#4
 2653              	.LCFI192:
 2654              	 .cfi_restore 7
 2655              	 .cfi_def_cfa_offset 0
 2656 0038 7047     	 bx lr
 2657              	 .cfi_endproc
 2658              	.LFE209:
 2660 003a 00BF     	 .section .text.XMC_DMA_CH_EnableDestinationAddressReload,"ax",%progbits
 2661              	 .align 2
 2662              	 .global XMC_DMA_CH_EnableDestinationAddressReload
 2663              	 .thumb
 2664              	 .thumb_func
 2666              	XMC_DMA_CH_EnableDestinationAddressReload:
 2667              	.LFB210:
 602:../Libraries/XMCLib/src/xmc_dma.c **** 
 603:../Libraries/XMCLib/src/xmc_dma.c **** /* Enable destination address reload */
 604:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_EnableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 605:../Libraries/XMCLib/src/xmc_dma.c **** {
 2668              	 .loc 2 605 0
 2669              	 .cfi_startproc
 2670              	 
 2671              	 
 2672              	 
 2673 0000 80B4     	 push {r7}
 2674              	.LCFI193:
 2675              	 .cfi_def_cfa_offset 4
 2676              	 .cfi_offset 7,-4
 2677 0002 83B0     	 sub sp,sp,#12
 2678              	.LCFI194:
 2679              	 .cfi_def_cfa_offset 16
 2680 0004 00AF     	 add r7,sp,#0
 2681              	.LCFI195:
 2682              	 .cfi_def_cfa_register 7
 2683 0006 7860     	 str r0,[r7,#4]
 2684 0008 0B46     	 mov r3,r1
 2685 000a FB70     	 strb r3,[r7,#3]
 606:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL |= (uint32_t)GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2686              	 .loc 2 606 0
 2687 000c FB78     	 ldrb r3,[r7,#3]
 2688 000e FA78     	 ldrb r2,[r7,#3]
 2689 0010 7968     	 ldr r1,[r7,#4]
 2690 0012 5820     	 movs r0,#88
 2691 0014 00FB02F2 	 mul r2,r0,r2
 2692 0018 0A44     	 add r2,r2,r1
 2693 001a 4032     	 adds r2,r2,#64
 2694 001c 1268     	 ldr r2,[r2]
 2695 001e 42F00042 	 orr r2,r2,#-2147483648
 2696 0022 7968     	 ldr r1,[r7,#4]
 2697 0024 5820     	 movs r0,#88
 2698 0026 00FB03F3 	 mul r3,r0,r3
 2699 002a 0B44     	 add r3,r3,r1
 2700 002c 4033     	 adds r3,r3,#64
 2701 002e 1A60     	 str r2,[r3]
 607:../Libraries/XMCLib/src/xmc_dma.c **** }
 2702              	 .loc 2 607 0
 2703 0030 0C37     	 adds r7,r7,#12
 2704              	.LCFI196:
 2705              	 .cfi_def_cfa_offset 4
 2706 0032 BD46     	 mov sp,r7
 2707              	.LCFI197:
 2708              	 .cfi_def_cfa_register 13
 2709              	 
 2710 0034 5DF8047B 	 ldr r7,[sp],#4
 2711              	.LCFI198:
 2712              	 .cfi_restore 7
 2713              	 .cfi_def_cfa_offset 0
 2714 0038 7047     	 bx lr
 2715              	 .cfi_endproc
 2716              	.LFE210:
 2718 003a 00BF     	 .section .text.XMC_DMA_CH_DisableDestinationAddressReload,"ax",%progbits
 2719              	 .align 2
 2720              	 .global XMC_DMA_CH_DisableDestinationAddressReload
 2721              	 .thumb
 2722              	 .thumb_func
 2724              	XMC_DMA_CH_DisableDestinationAddressReload:
 2725              	.LFB211:
 608:../Libraries/XMCLib/src/xmc_dma.c **** 
 609:../Libraries/XMCLib/src/xmc_dma.c **** /* Disable destination address reload */
 610:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_DisableDestinationAddressReload(XMC_DMA_t *const dma, const uint8_t channel)
 611:../Libraries/XMCLib/src/xmc_dma.c **** {
 2726              	 .loc 2 611 0
 2727              	 .cfi_startproc
 2728              	 
 2729              	 
 2730              	 
 2731 0000 80B4     	 push {r7}
 2732              	.LCFI199:
 2733              	 .cfi_def_cfa_offset 4
 2734              	 .cfi_offset 7,-4
 2735 0002 83B0     	 sub sp,sp,#12
 2736              	.LCFI200:
 2737              	 .cfi_def_cfa_offset 16
 2738 0004 00AF     	 add r7,sp,#0
 2739              	.LCFI201:
 2740              	 .cfi_def_cfa_register 7
 2741 0006 7860     	 str r0,[r7,#4]
 2742 0008 0B46     	 mov r3,r1
 2743 000a FB70     	 strb r3,[r7,#3]
 612:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~GPDMA0_CH_CFGL_RELOAD_DST_Msk;
 2744              	 .loc 2 612 0
 2745 000c FB78     	 ldrb r3,[r7,#3]
 2746 000e FA78     	 ldrb r2,[r7,#3]
 2747 0010 7968     	 ldr r1,[r7,#4]
 2748 0012 5820     	 movs r0,#88
 2749 0014 00FB02F2 	 mul r2,r0,r2
 2750 0018 0A44     	 add r2,r2,r1
 2751 001a 4032     	 adds r2,r2,#64
 2752 001c 1268     	 ldr r2,[r2]
 2753 001e 22F00042 	 bic r2,r2,#-2147483648
 2754 0022 7968     	 ldr r1,[r7,#4]
 2755 0024 5820     	 movs r0,#88
 2756 0026 00FB03F3 	 mul r3,r0,r3
 2757 002a 0B44     	 add r3,r3,r1
 2758 002c 4033     	 adds r3,r3,#64
 2759 002e 1A60     	 str r2,[r3]
 613:../Libraries/XMCLib/src/xmc_dma.c **** }
 2760              	 .loc 2 613 0
 2761 0030 0C37     	 adds r7,r7,#12
 2762              	.LCFI202:
 2763              	 .cfi_def_cfa_offset 4
 2764 0032 BD46     	 mov sp,r7
 2765              	.LCFI203:
 2766              	 .cfi_def_cfa_register 13
 2767              	 
 2768 0034 5DF8047B 	 ldr r7,[sp],#4
 2769              	.LCFI204:
 2770              	 .cfi_restore 7
 2771              	 .cfi_def_cfa_offset 0
 2772 0038 7047     	 bx lr
 2773              	 .cfi_endproc
 2774              	.LFE211:
 2776 003a 00BF     	 .section .text.XMC_DMA_CH_RequestLastMultiblockTransfer,"ax",%progbits
 2777              	 .align 2
 2778              	 .global XMC_DMA_CH_RequestLastMultiblockTransfer
 2779              	 .thumb
 2780              	 .thumb_func
 2782              	XMC_DMA_CH_RequestLastMultiblockTransfer:
 2783              	.LFB212:
 614:../Libraries/XMCLib/src/xmc_dma.c **** 
 615:../Libraries/XMCLib/src/xmc_dma.c **** /* Request last multi-block transfer */
 616:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_RequestLastMultiblockTransfer(XMC_DMA_t *const dma, const uint8_t channel)
 617:../Libraries/XMCLib/src/xmc_dma.c **** {
 2784              	 .loc 2 617 0
 2785              	 .cfi_startproc
 2786              	 
 2787              	 
 2788              	 
 2789 0000 80B4     	 push {r7}
 2790              	.LCFI205:
 2791              	 .cfi_def_cfa_offset 4
 2792              	 .cfi_offset 7,-4
 2793 0002 83B0     	 sub sp,sp,#12
 2794              	.LCFI206:
 2795              	 .cfi_def_cfa_offset 16
 2796 0004 00AF     	 add r7,sp,#0
 2797              	.LCFI207:
 2798              	 .cfi_def_cfa_register 7
 2799 0006 7860     	 str r0,[r7,#4]
 2800 0008 0B46     	 mov r3,r1
 2801 000a FB70     	 strb r3,[r7,#3]
 618:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CFGL &= (uint32_t)~(GPDMA0_CH_CFGL_RELOAD_SRC_Msk | GPDMA0_CH_CFGL_RELOAD_DST_Ms
 2802              	 .loc 2 618 0
 2803 000c FB78     	 ldrb r3,[r7,#3]
 2804 000e FA78     	 ldrb r2,[r7,#3]
 2805 0010 7968     	 ldr r1,[r7,#4]
 2806 0012 5820     	 movs r0,#88
 2807 0014 00FB02F2 	 mul r2,r0,r2
 2808 0018 0A44     	 add r2,r2,r1
 2809 001a 4032     	 adds r2,r2,#64
 2810 001c 1268     	 ldr r2,[r2]
 2811 001e 22F04042 	 bic r2,r2,#-1073741824
 2812 0022 7968     	 ldr r1,[r7,#4]
 2813 0024 5820     	 movs r0,#88
 2814 0026 00FB03F3 	 mul r3,r0,r3
 2815 002a 0B44     	 add r3,r3,r1
 2816 002c 4033     	 adds r3,r3,#64
 2817 002e 1A60     	 str r2,[r3]
 619:../Libraries/XMCLib/src/xmc_dma.c ****   dma->CH[channel].CTLL &= (uint32_t)~(GPDMA0_CH_CTLL_LLP_SRC_EN_Msk | GPDMA0_CH_CTLL_LLP_DST_EN_Ms
 2818              	 .loc 2 619 0
 2819 0030 FB78     	 ldrb r3,[r7,#3]
 2820 0032 FA78     	 ldrb r2,[r7,#3]
 2821 0034 7968     	 ldr r1,[r7,#4]
 2822 0036 5820     	 movs r0,#88
 2823 0038 00FB02F2 	 mul r2,r0,r2
 2824 003c 0A44     	 add r2,r2,r1
 2825 003e 1832     	 adds r2,r2,#24
 2826 0040 1268     	 ldr r2,[r2]
 2827 0042 22F0C052 	 bic r2,r2,#402653184
 2828 0046 7968     	 ldr r1,[r7,#4]
 2829 0048 5820     	 movs r0,#88
 2830 004a 00FB03F3 	 mul r3,r0,r3
 2831 004e 0B44     	 add r3,r3,r1
 2832 0050 1833     	 adds r3,r3,#24
 2833 0052 1A60     	 str r2,[r3]
 620:../Libraries/XMCLib/src/xmc_dma.c **** }
 2834              	 .loc 2 620 0
 2835 0054 0C37     	 adds r7,r7,#12
 2836              	.LCFI208:
 2837              	 .cfi_def_cfa_offset 4
 2838 0056 BD46     	 mov sp,r7
 2839              	.LCFI209:
 2840              	 .cfi_def_cfa_register 13
 2841              	 
 2842 0058 5DF8047B 	 ldr r7,[sp],#4
 2843              	.LCFI210:
 2844              	 .cfi_restore 7
 2845              	 .cfi_def_cfa_offset 0
 2846 005c 7047     	 bx lr
 2847              	 .cfi_endproc
 2848              	.LFE212:
 2850 005e 00BF     	 .section .text.XMC_DMA_CH_SetEventHandler,"ax",%progbits
 2851              	 .align 2
 2852              	 .global XMC_DMA_CH_SetEventHandler
 2853              	 .thumb
 2854              	 .thumb_func
 2856              	XMC_DMA_CH_SetEventHandler:
 2857              	.LFB213:
 621:../Libraries/XMCLib/src/xmc_dma.c **** 
 622:../Libraries/XMCLib/src/xmc_dma.c **** /* Set event handler */
 623:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_SetEventHandler(XMC_DMA_t *const dma, const uint8_t channel, XMC_DMA_CH_EVENT_HANDL
 624:../Libraries/XMCLib/src/xmc_dma.c **** {
 2858              	 .loc 2 624 0
 2859              	 .cfi_startproc
 2860              	 
 2861              	 
 2862              	 
 2863 0000 80B4     	 push {r7}
 2864              	.LCFI211:
 2865              	 .cfi_def_cfa_offset 4
 2866              	 .cfi_offset 7,-4
 2867 0002 85B0     	 sub sp,sp,#20
 2868              	.LCFI212:
 2869              	 .cfi_def_cfa_offset 24
 2870 0004 00AF     	 add r7,sp,#0
 2871              	.LCFI213:
 2872              	 .cfi_def_cfa_register 7
 2873 0006 F860     	 str r0,[r7,#12]
 2874 0008 0B46     	 mov r3,r1
 2875 000a 7A60     	 str r2,[r7,#4]
 2876 000c FB72     	 strb r3,[r7,#11]
 625:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 626:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 2877              	 .loc 2 626 0
 2878 000e FB68     	 ldr r3,[r7,#12]
 2879 0010 094A     	 ldr r2,.L133
 2880 0012 9342     	 cmp r3,r2
 2881 0014 05D1     	 bne .L131
 627:../Libraries/XMCLib/src/xmc_dma.c ****   {
 628:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 629:../Libraries/XMCLib/src/xmc_dma.c ****     dma0_event_handlers[channel] = event_handler;
 2882              	 .loc 2 629 0
 2883 0016 FB7A     	 ldrb r3,[r7,#11]
 2884 0018 0849     	 ldr r1,.L133+4
 2885 001a 7A68     	 ldr r2,[r7,#4]
 2886 001c 41F82320 	 str r2,[r1,r3,lsl#2]
 2887 0020 04E0     	 b .L130
 2888              	.L131:
 630:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 631:../Libraries/XMCLib/src/xmc_dma.c ****   }
 632:../Libraries/XMCLib/src/xmc_dma.c ****   else
 633:../Libraries/XMCLib/src/xmc_dma.c ****   {
 634:../Libraries/XMCLib/src/xmc_dma.c ****     dma1_event_handlers[channel] = event_handler;
 2889              	 .loc 2 634 0
 2890 0022 FB7A     	 ldrb r3,[r7,#11]
 2891 0024 0649     	 ldr r1,.L133+8
 2892 0026 7A68     	 ldr r2,[r7,#4]
 2893 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 2894              	.L130:
 635:../Libraries/XMCLib/src/xmc_dma.c ****   }
 636:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 637:../Libraries/XMCLib/src/xmc_dma.c **** }
 2895              	 .loc 2 637 0
 2896 002c 1437     	 adds r7,r7,#20
 2897              	.LCFI214:
 2898              	 .cfi_def_cfa_offset 4
 2899 002e BD46     	 mov sp,r7
 2900              	.LCFI215:
 2901              	 .cfi_def_cfa_register 13
 2902              	 
 2903 0030 5DF8047B 	 ldr r7,[sp],#4
 2904              	.LCFI216:
 2905              	 .cfi_restore 7
 2906              	 .cfi_def_cfa_offset 0
 2907 0034 7047     	 bx lr
 2908              	.L134:
 2909 0036 00BF     	 .align 2
 2910              	.L133:
 2911 0038 00400150 	 .word 1342259200
 2912 003c 00000000 	 .word dma0_event_handlers
 2913 0040 00000000 	 .word dma1_event_handlers
 2914              	 .cfi_endproc
 2915              	.LFE213:
 2917              	 .section .text.XMC_DMA_CH_ClearSourcePeripheralRequest,"ax",%progbits
 2918              	 .align 2
 2919              	 .global XMC_DMA_CH_ClearSourcePeripheralRequest
 2920              	 .thumb
 2921              	 .thumb_func
 2923              	XMC_DMA_CH_ClearSourcePeripheralRequest:
 2924              	.LFB214:
 638:../Libraries/XMCLib/src/xmc_dma.c **** 
 639:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearSourcePeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 640:../Libraries/XMCLib/src/xmc_dma.c **** {
 2925              	 .loc 2 640 0
 2926              	 .cfi_startproc
 2927              	 
 2928              	 
 2929 0000 80B5     	 push {r7,lr}
 2930              	.LCFI217:
 2931              	 .cfi_def_cfa_offset 8
 2932              	 .cfi_offset 7,-8
 2933              	 .cfi_offset 14,-4
 2934 0002 84B0     	 sub sp,sp,#16
 2935              	.LCFI218:
 2936              	 .cfi_def_cfa_offset 24
 2937 0004 00AF     	 add r7,sp,#0
 2938              	.LCFI219:
 2939              	 .cfi_def_cfa_register 7
 2940 0006 7860     	 str r0,[r7,#4]
 2941 0008 0B46     	 mov r3,r1
 2942 000a FB70     	 strb r3,[r7,#3]
 641:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 642:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_SRC_PER_Msk) >> GPDMA0_CH_CFGH_SRC_PER_Pos;
 2943              	 .loc 2 642 0
 2944 000c FB78     	 ldrb r3,[r7,#3]
 2945 000e 7A68     	 ldr r2,[r7,#4]
 2946 0010 5821     	 movs r1,#88
 2947 0012 01FB03F3 	 mul r3,r1,r3
 2948 0016 1344     	 add r3,r3,r2
 2949 0018 4033     	 adds r3,r3,#64
 2950 001a 5B68     	 ldr r3,[r3,#4]
 2951 001c 03F4F063 	 and r3,r3,#1920
 2952 0020 DB09     	 lsrs r3,r3,#7
 2953 0022 FB60     	 str r3,[r7,#12]
 643:../Libraries/XMCLib/src/xmc_dma.c **** 
 644:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 2954              	 .loc 2 644 0
 2955 0024 FB68     	 ldr r3,[r7,#12]
 2956 0026 DBB2     	 uxtb r3,r3
 2957 0028 7868     	 ldr r0,[r7,#4]
 2958 002a 1946     	 mov r1,r3
 2959 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 645:../Libraries/XMCLib/src/xmc_dma.c **** }
 2960              	 .loc 2 645 0
 2961 0030 1037     	 adds r7,r7,#16
 2962              	.LCFI220:
 2963              	 .cfi_def_cfa_offset 8
 2964 0032 BD46     	 mov sp,r7
 2965              	.LCFI221:
 2966              	 .cfi_def_cfa_register 13
 2967              	 
 2968 0034 80BD     	 pop {r7,pc}
 2969              	 .cfi_endproc
 2970              	.LFE214:
 2972 0036 00BF     	 .section .text.XMC_DMA_CH_ClearDestinationPeripheralRequest,"ax",%progbits
 2973              	 .align 2
 2974              	 .global XMC_DMA_CH_ClearDestinationPeripheralRequest
 2975              	 .thumb
 2976              	 .thumb_func
 2978              	XMC_DMA_CH_ClearDestinationPeripheralRequest:
 2979              	.LFB215:
 646:../Libraries/XMCLib/src/xmc_dma.c **** 
 647:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_CH_ClearDestinationPeripheralRequest(XMC_DMA_t *const dma, uint8_t channel)
 648:../Libraries/XMCLib/src/xmc_dma.c **** {
 2980              	 .loc 2 648 0
 2981              	 .cfi_startproc
 2982              	 
 2983              	 
 2984 0000 80B5     	 push {r7,lr}
 2985              	.LCFI222:
 2986              	 .cfi_def_cfa_offset 8
 2987              	 .cfi_offset 7,-8
 2988              	 .cfi_offset 14,-4
 2989 0002 84B0     	 sub sp,sp,#16
 2990              	.LCFI223:
 2991              	 .cfi_def_cfa_offset 24
 2992 0004 00AF     	 add r7,sp,#0
 2993              	.LCFI224:
 2994              	 .cfi_def_cfa_register 7
 2995 0006 7860     	 str r0,[r7,#4]
 2996 0008 0B46     	 mov r3,r1
 2997 000a FB70     	 strb r3,[r7,#3]
 649:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t line;
 650:../Libraries/XMCLib/src/xmc_dma.c ****   line = (dma->CH[channel].CFGH & GPDMA0_CH_CFGH_DEST_PER_Msk) >> GPDMA0_CH_CFGH_DEST_PER_Pos;
 2998              	 .loc 2 650 0
 2999 000c FB78     	 ldrb r3,[r7,#3]
 3000 000e 7A68     	 ldr r2,[r7,#4]
 3001 0010 5821     	 movs r1,#88
 3002 0012 01FB03F3 	 mul r3,r1,r3
 3003 0016 1344     	 add r3,r3,r2
 3004 0018 4033     	 adds r3,r3,#64
 3005 001a 5B68     	 ldr r3,[r3,#4]
 3006 001c 03F4F043 	 and r3,r3,#30720
 3007 0020 DB0A     	 lsrs r3,r3,#11
 3008 0022 FB60     	 str r3,[r7,#12]
 651:../Libraries/XMCLib/src/xmc_dma.c **** 
 652:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_ClearRequestLine(dma, (uint8_t)line);
 3009              	 .loc 2 652 0
 3010 0024 FB68     	 ldr r3,[r7,#12]
 3011 0026 DBB2     	 uxtb r3,r3
 3012 0028 7868     	 ldr r0,[r7,#4]
 3013 002a 1946     	 mov r1,r3
 3014 002c FFF7FEFF 	 bl XMC_DMA_ClearRequestLine
 653:../Libraries/XMCLib/src/xmc_dma.c **** }
 3015              	 .loc 2 653 0
 3016 0030 1037     	 adds r7,r7,#16
 3017              	.LCFI225:
 3018              	 .cfi_def_cfa_offset 8
 3019 0032 BD46     	 mov sp,r7
 3020              	.LCFI226:
 3021              	 .cfi_def_cfa_register 13
 3022              	 
 3023 0034 80BD     	 pop {r7,pc}
 3024              	 .cfi_endproc
 3025              	.LFE215:
 3027 0036 00BF     	 .section .text.XMC_DMA_IRQHandler,"ax",%progbits
 3028              	 .align 2
 3029              	 .global XMC_DMA_IRQHandler
 3030              	 .thumb
 3031              	 .thumb_func
 3033              	XMC_DMA_IRQHandler:
 3034              	.LFB216:
 654:../Libraries/XMCLib/src/xmc_dma.c **** 
 655:../Libraries/XMCLib/src/xmc_dma.c **** /* Default DMA IRQ handler */
 656:../Libraries/XMCLib/src/xmc_dma.c **** void XMC_DMA_IRQHandler(XMC_DMA_t *const dma)
 657:../Libraries/XMCLib/src/xmc_dma.c **** {
 3035              	 .loc 2 657 0
 3036              	 .cfi_startproc
 3037              	 
 3038              	 
 3039 0000 80B5     	 push {r7,lr}
 3040              	.LCFI227:
 3041              	 .cfi_def_cfa_offset 8
 3042              	 .cfi_offset 7,-8
 3043              	 .cfi_offset 14,-4
 3044 0002 88B0     	 sub sp,sp,#32
 3045              	.LCFI228:
 3046              	 .cfi_def_cfa_offset 40
 3047 0004 00AF     	 add r7,sp,#0
 3048              	.LCFI229:
 3049              	 .cfi_def_cfa_register 7
 3050 0006 7860     	 str r0,[r7,#4]
 658:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t event;
 659:../Libraries/XMCLib/src/xmc_dma.c ****   int32_t channel;
 660:../Libraries/XMCLib/src/xmc_dma.c ****   uint32_t mask;
 661:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t *dma_event_handlers;
 662:../Libraries/XMCLib/src/xmc_dma.c ****   XMC_DMA_CH_EVENT_HANDLER_t event_handler;
 663:../Libraries/XMCLib/src/xmc_dma.c **** 
 664:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 665:../Libraries/XMCLib/src/xmc_dma.c ****   if (dma == XMC_DMA0)
 3051              	 .loc 2 665 0
 3052 0008 7B68     	 ldr r3,[r7,#4]
 3053 000a 824A     	 ldr r2,.L170
 3054 000c 9342     	 cmp r3,r2
 3055 000e 02D1     	 bne .L138
 666:../Libraries/XMCLib/src/xmc_dma.c ****   {
 667:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 668:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma0_event_handlers;
 3056              	 .loc 2 668 0
 3057 0010 814B     	 ldr r3,.L170+4
 3058 0012 BB61     	 str r3,[r7,#24]
 3059 0014 01E0     	 b .L139
 3060              	.L138:
 669:../Libraries/XMCLib/src/xmc_dma.c **** #if defined(GPDMA1)
 670:../Libraries/XMCLib/src/xmc_dma.c ****   }
 671:../Libraries/XMCLib/src/xmc_dma.c ****   else
 672:../Libraries/XMCLib/src/xmc_dma.c ****   {
 673:../Libraries/XMCLib/src/xmc_dma.c ****     dma_event_handlers = dma1_event_handlers;
 3061              	 .loc 2 673 0
 3062 0016 814B     	 ldr r3,.L170+8
 3063 0018 BB61     	 str r3,[r7,#24]
 3064              	.L139:
 674:../Libraries/XMCLib/src/xmc_dma.c ****   }
 675:../Libraries/XMCLib/src/xmc_dma.c **** #endif
 676:../Libraries/XMCLib/src/xmc_dma.c ****   
 677:../Libraries/XMCLib/src/xmc_dma.c ****   event = XMC_DMA_GetEventStatus(dma);
 3065              	 .loc 2 677 0
 3066 001a 7868     	 ldr r0,[r7,#4]
 3067 001c FFF7FEFF 	 bl XMC_DMA_GetEventStatus
 3068 0020 7861     	 str r0,[r7,#20]
 678:../Libraries/XMCLib/src/xmc_dma.c ****   channel = 0;
 3069              	 .loc 2 678 0
 3070 0022 0023     	 movs r3,#0
 3071 0024 FB61     	 str r3,[r7,#28]
 679:../Libraries/XMCLib/src/xmc_dma.c **** 
 680:../Libraries/XMCLib/src/xmc_dma.c ****   if ((event & (uint32_t)XMC_DMA_CH_EVENT_ERROR) != (uint32_t)0UL)
 3072              	 .loc 2 680 0
 3073 0026 7B69     	 ldr r3,[r7,#20]
 3074 0028 03F01003 	 and r3,r3,#16
 3075 002c 002B     	 cmp r3,#0
 3076 002e 2BD0     	 beq .L140
 681:../Libraries/XMCLib/src/xmc_dma.c ****   {
 682:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsErrorStatus(dma);
 3077              	 .loc 2 682 0
 3078 0030 7868     	 ldr r0,[r7,#4]
 3079 0032 FFF7FEFF 	 bl XMC_DMA_GetChannelsErrorStatus
 3080 0036 7861     	 str r0,[r7,#20]
 683:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3081              	 .loc 2 683 0
 3082 0038 21E0     	 b .L141
 3083              	.L145:
 684:../Libraries/XMCLib/src/xmc_dma.c ****     {
 685:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3084              	 .loc 2 685 0
 3085 003a 0122     	 movs r2,#1
 3086 003c FB69     	 ldr r3,[r7,#28]
 3087 003e 02FA03F3 	 lsl r3,r2,r3
 3088 0042 3B61     	 str r3,[r7,#16]
 686:../Libraries/XMCLib/src/xmc_dma.c ****       if ((event & mask) != 0)
 3089              	 .loc 2 686 0
 3090 0044 7A69     	 ldr r2,[r7,#20]
 3091 0046 3B69     	 ldr r3,[r7,#16]
 3092 0048 1340     	 ands r3,r3,r2
 3093 004a 002B     	 cmp r3,#0
 3094 004c 14D0     	 beq .L142
 687:../Libraries/XMCLib/src/xmc_dma.c ****       {
 688:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_ERROR);
 3095              	 .loc 2 688 0
 3096 004e FB69     	 ldr r3,[r7,#28]
 3097 0050 DBB2     	 uxtb r3,r3
 3098 0052 7868     	 ldr r0,[r7,#4]
 3099 0054 1946     	 mov r1,r3
 3100 0056 1022     	 movs r2,#16
 3101 0058 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 689:../Libraries/XMCLib/src/xmc_dma.c **** 
 690:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 691:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3102              	 .loc 2 691 0
 3103 005c FB69     	 ldr r3,[r7,#28]
 3104 005e 9B00     	 lsls r3,r3,#2
 3105 0060 BA69     	 ldr r2,[r7,#24]
 3106 0062 1344     	 add r3,r3,r2
 3107 0064 1B68     	 ldr r3,[r3]
 3108 0066 FB60     	 str r3,[r7,#12]
 692:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3109              	 .loc 2 692 0
 3110 0068 FB68     	 ldr r3,[r7,#12]
 3111 006a 002B     	 cmp r3,#0
 3112 006c 03D0     	 beq .L143
 693:../Libraries/XMCLib/src/xmc_dma.c ****         {
 694:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_ERROR);
 3113              	 .loc 2 694 0
 3114 006e FB68     	 ldr r3,[r7,#12]
 3115 0070 1020     	 movs r0,#16
 3116 0072 9847     	 blx r3
 695:../Libraries/XMCLib/src/xmc_dma.c ****         }
 696:../Libraries/XMCLib/src/xmc_dma.c ****        
 697:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3117              	 .loc 2 697 0
 3118 0074 07E0     	 b .L144
 3119              	.L143:
 3120 0076 06E0     	 b .L144
 3121              	.L142:
 698:../Libraries/XMCLib/src/xmc_dma.c ****       }
 699:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3122              	 .loc 2 699 0
 3123 0078 FB69     	 ldr r3,[r7,#28]
 3124 007a 0133     	 adds r3,r3,#1
 3125 007c FB61     	 str r3,[r7,#28]
 3126              	.L141:
 683:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3127              	 .loc 2 683 0
 3128 007e 7B69     	 ldr r3,[r7,#20]
 3129 0080 002B     	 cmp r3,#0
 3130 0082 DAD1     	 bne .L145
 3131 0084 C3E0     	 b .L137
 3132              	.L144:
 3133 0086 C2E0     	 b .L137
 3134              	.L140:
 700:../Libraries/XMCLib/src/xmc_dma.c ****     }
 701:../Libraries/XMCLib/src/xmc_dma.c ****   }
 702:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3135              	 .loc 2 702 0
 3136 0088 7B69     	 ldr r3,[r7,#20]
 3137 008a 03F00103 	 and r3,r3,#1
 3138 008e 002B     	 cmp r3,#0
 3139 0090 2BD0     	 beq .L147
 703:../Libraries/XMCLib/src/xmc_dma.c ****   {
 704:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsTransferCompleteStatus(dma);
 3140              	 .loc 2 704 0
 3141 0092 7868     	 ldr r0,[r7,#4]
 3142 0094 FFF7FEFF 	 bl XMC_DMA_GetChannelsTransferCompleteStatus
 3143 0098 7861     	 str r0,[r7,#20]
 705:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3144              	 .loc 2 705 0
 3145 009a 21E0     	 b .L148
 3146              	.L152:
 706:../Libraries/XMCLib/src/xmc_dma.c ****     {
 707:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3147              	 .loc 2 707 0
 3148 009c 0122     	 movs r2,#1
 3149 009e FB69     	 ldr r3,[r7,#28]
 3150 00a0 02FA03F3 	 lsl r3,r2,r3
 3151 00a4 3B61     	 str r3,[r7,#16]
 708:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3152              	 .loc 2 708 0
 3153 00a6 7A69     	 ldr r2,[r7,#20]
 3154 00a8 3B69     	 ldr r3,[r7,#16]
 3155 00aa 1340     	 ands r3,r3,r2
 3156 00ac 002B     	 cmp r3,#0
 3157 00ae 14D0     	 beq .L149
 709:../Libraries/XMCLib/src/xmc_dma.c ****       {
 710:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_TR
 3158              	 .loc 2 710 0
 3159 00b0 FB69     	 ldr r3,[r7,#28]
 3160 00b2 DBB2     	 uxtb r3,r3
 3161 00b4 7868     	 ldr r0,[r7,#4]
 3162 00b6 1946     	 mov r1,r3
 3163 00b8 0F22     	 movs r2,#15
 3164 00ba FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 711:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_BL
 712:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 713:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 714:../Libraries/XMCLib/src/xmc_dma.c **** 
 715:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 716:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3165              	 .loc 2 716 0
 3166 00be FB69     	 ldr r3,[r7,#28]
 3167 00c0 9B00     	 lsls r3,r3,#2
 3168 00c2 BA69     	 ldr r2,[r7,#24]
 3169 00c4 1344     	 add r3,r3,r2
 3170 00c6 1B68     	 ldr r3,[r3]
 3171 00c8 FB60     	 str r3,[r7,#12]
 717:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3172              	 .loc 2 717 0
 3173 00ca FB68     	 ldr r3,[r7,#12]
 3174 00cc 002B     	 cmp r3,#0
 3175 00ce 03D0     	 beq .L150
 718:../Libraries/XMCLib/src/xmc_dma.c ****         {
 719:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_TRANSFER_COMPLETE);
 3176              	 .loc 2 719 0
 3177 00d0 FB68     	 ldr r3,[r7,#12]
 3178 00d2 0120     	 movs r0,#1
 3179 00d4 9847     	 blx r3
 720:../Libraries/XMCLib/src/xmc_dma.c ****         }
 721:../Libraries/XMCLib/src/xmc_dma.c **** 																	  
 722:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3180              	 .loc 2 722 0
 3181 00d6 07E0     	 b .L151
 3182              	.L150:
 3183 00d8 06E0     	 b .L151
 3184              	.L149:
 723:../Libraries/XMCLib/src/xmc_dma.c ****       }
 724:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3185              	 .loc 2 724 0
 3186 00da FB69     	 ldr r3,[r7,#28]
 3187 00dc 0133     	 adds r3,r3,#1
 3188 00de FB61     	 str r3,[r7,#28]
 3189              	.L148:
 705:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3190              	 .loc 2 705 0
 3191 00e0 7B69     	 ldr r3,[r7,#20]
 3192 00e2 002B     	 cmp r3,#0
 3193 00e4 DAD1     	 bne .L152
 3194 00e6 92E0     	 b .L137
 3195              	.L151:
 3196 00e8 91E0     	 b .L137
 3197              	.L147:
 725:../Libraries/XMCLib/src/xmc_dma.c ****     }
 726:../Libraries/XMCLib/src/xmc_dma.c ****   }
 727:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE) != (uint32_t)0UL)
 3198              	 .loc 2 727 0
 3199 00ea 7B69     	 ldr r3,[r7,#20]
 3200 00ec 03F00203 	 and r3,r3,#2
 3201 00f0 002B     	 cmp r3,#0
 3202 00f2 2BD0     	 beq .L153
 728:../Libraries/XMCLib/src/xmc_dma.c ****   {
 729:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsBlockCompleteStatus(dma);
 3203              	 .loc 2 729 0
 3204 00f4 7868     	 ldr r0,[r7,#4]
 3205 00f6 FFF7FEFF 	 bl XMC_DMA_GetChannelsBlockCompleteStatus
 3206 00fa 7861     	 str r0,[r7,#20]
 730:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3207              	 .loc 2 730 0
 3208 00fc 21E0     	 b .L154
 3209              	.L158:
 731:../Libraries/XMCLib/src/xmc_dma.c ****     {
 732:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3210              	 .loc 2 732 0
 3211 00fe 0122     	 movs r2,#1
 3212 0100 FB69     	 ldr r3,[r7,#28]
 3213 0102 02FA03F3 	 lsl r3,r2,r3
 3214 0106 3B61     	 str r3,[r7,#16]
 733:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3215              	 .loc 2 733 0
 3216 0108 7A69     	 ldr r2,[r7,#20]
 3217 010a 3B69     	 ldr r3,[r7,#16]
 3218 010c 1340     	 ands r3,r3,r2
 3219 010e 002B     	 cmp r3,#0
 3220 0110 14D0     	 beq .L155
 734:../Libraries/XMCLib/src/xmc_dma.c ****       {
 735:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)((uint32_t)XMC_DMA_CH_EVENT_BL
 3221              	 .loc 2 735 0
 3222 0112 FB69     	 ldr r3,[r7,#28]
 3223 0114 DBB2     	 uxtb r3,r3
 3224 0116 7868     	 ldr r0,[r7,#4]
 3225 0118 1946     	 mov r1,r3
 3226 011a 0E22     	 movs r2,#14
 3227 011c FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 736:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_SR
 737:../Libraries/XMCLib/src/xmc_dma.c ****                                                                       (uint32_t)XMC_DMA_CH_EVENT_DS
 738:../Libraries/XMCLib/src/xmc_dma.c **** 
 739:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 740:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3228              	 .loc 2 740 0
 3229 0120 FB69     	 ldr r3,[r7,#28]
 3230 0122 9B00     	 lsls r3,r3,#2
 3231 0124 BA69     	 ldr r2,[r7,#24]
 3232 0126 1344     	 add r3,r3,r2
 3233 0128 1B68     	 ldr r3,[r3]
 3234 012a FB60     	 str r3,[r7,#12]
 741:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3235              	 .loc 2 741 0
 3236 012c FB68     	 ldr r3,[r7,#12]
 3237 012e 002B     	 cmp r3,#0
 3238 0130 03D0     	 beq .L156
 742:../Libraries/XMCLib/src/xmc_dma.c ****         {
 743:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_BLOCK_TRANSFER_COMPLETE);
 3239              	 .loc 2 743 0
 3240 0132 FB68     	 ldr r3,[r7,#12]
 3241 0134 0220     	 movs r0,#2
 3242 0136 9847     	 blx r3
 744:../Libraries/XMCLib/src/xmc_dma.c ****         }
 745:../Libraries/XMCLib/src/xmc_dma.c **** 
 746:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3243              	 .loc 2 746 0
 3244 0138 07E0     	 b .L157
 3245              	.L156:
 3246 013a 06E0     	 b .L157
 3247              	.L155:
 747:../Libraries/XMCLib/src/xmc_dma.c ****       }
 748:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3248              	 .loc 2 748 0
 3249 013c FB69     	 ldr r3,[r7,#28]
 3250 013e 0133     	 adds r3,r3,#1
 3251 0140 FB61     	 str r3,[r7,#28]
 3252              	.L154:
 730:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3253              	 .loc 2 730 0
 3254 0142 7B69     	 ldr r3,[r7,#20]
 3255 0144 002B     	 cmp r3,#0
 3256 0146 DAD1     	 bne .L158
 3257 0148 61E0     	 b .L137
 3258              	.L157:
 3259 014a 60E0     	 b .L137
 3260              	.L153:
 749:../Libraries/XMCLib/src/xmc_dma.c ****     }
 750:../Libraries/XMCLib/src/xmc_dma.c ****   }
 751:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3261              	 .loc 2 751 0
 3262 014c 7B69     	 ldr r3,[r7,#20]
 3263 014e 03F00403 	 and r3,r3,#4
 3264 0152 002B     	 cmp r3,#0
 3265 0154 2BD0     	 beq .L159
 752:../Libraries/XMCLib/src/xmc_dma.c ****   {
 753:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsSourceTransactionCompleteStatus(dma);
 3266              	 .loc 2 753 0
 3267 0156 7868     	 ldr r0,[r7,#4]
 3268 0158 FFF7FEFF 	 bl XMC_DMA_GetChannelsSourceTransactionCompleteStatus
 3269 015c 7861     	 str r0,[r7,#20]
 754:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3270              	 .loc 2 754 0
 3271 015e 21E0     	 b .L160
 3272              	.L164:
 755:../Libraries/XMCLib/src/xmc_dma.c ****     {
 756:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3273              	 .loc 2 756 0
 3274 0160 0122     	 movs r2,#1
 3275 0162 FB69     	 ldr r3,[r7,#28]
 3276 0164 02FA03F3 	 lsl r3,r2,r3
 3277 0168 3B61     	 str r3,[r7,#16]
 757:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3278              	 .loc 2 757 0
 3279 016a 7A69     	 ldr r2,[r7,#20]
 3280 016c 3B69     	 ldr r3,[r7,#16]
 3281 016e 1340     	 ands r3,r3,r2
 3282 0170 002B     	 cmp r3,#0
 3283 0172 14D0     	 beq .L161
 758:../Libraries/XMCLib/src/xmc_dma.c ****       {
 759:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_SRC_TRANSACTI
 3284              	 .loc 2 759 0
 3285 0174 FB69     	 ldr r3,[r7,#28]
 3286 0176 DBB2     	 uxtb r3,r3
 3287 0178 7868     	 ldr r0,[r7,#4]
 3288 017a 1946     	 mov r1,r3
 3289 017c 0422     	 movs r2,#4
 3290 017e FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 760:../Libraries/XMCLib/src/xmc_dma.c **** 
 761:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 762:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3291              	 .loc 2 762 0
 3292 0182 FB69     	 ldr r3,[r7,#28]
 3293 0184 9B00     	 lsls r3,r3,#2
 3294 0186 BA69     	 ldr r2,[r7,#24]
 3295 0188 1344     	 add r3,r3,r2
 3296 018a 1B68     	 ldr r3,[r3]
 3297 018c FB60     	 str r3,[r7,#12]
 763:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3298              	 .loc 2 763 0
 3299 018e FB68     	 ldr r3,[r7,#12]
 3300 0190 002B     	 cmp r3,#0
 3301 0192 03D0     	 beq .L162
 764:../Libraries/XMCLib/src/xmc_dma.c ****         {
 765:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_SRC_TRANSACTION_COMPLETE);
 3302              	 .loc 2 765 0
 3303 0194 FB68     	 ldr r3,[r7,#12]
 3304 0196 0420     	 movs r0,#4
 3305 0198 9847     	 blx r3
 766:../Libraries/XMCLib/src/xmc_dma.c ****         }
 767:../Libraries/XMCLib/src/xmc_dma.c ****         
 768:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3306              	 .loc 2 768 0
 3307 019a 07E0     	 b .L163
 3308              	.L162:
 3309 019c 06E0     	 b .L163
 3310              	.L161:
 769:../Libraries/XMCLib/src/xmc_dma.c ****       }
 770:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3311              	 .loc 2 770 0
 3312 019e FB69     	 ldr r3,[r7,#28]
 3313 01a0 0133     	 adds r3,r3,#1
 3314 01a2 FB61     	 str r3,[r7,#28]
 3315              	.L160:
 754:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3316              	 .loc 2 754 0
 3317 01a4 7B69     	 ldr r3,[r7,#20]
 3318 01a6 002B     	 cmp r3,#0
 3319 01a8 DAD1     	 bne .L164
 3320 01aa 30E0     	 b .L137
 3321              	.L163:
 3322 01ac 2FE0     	 b .L137
 3323              	.L159:
 771:../Libraries/XMCLib/src/xmc_dma.c ****     }
 772:../Libraries/XMCLib/src/xmc_dma.c ****   }
 773:../Libraries/XMCLib/src/xmc_dma.c ****   else if ((event & (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE) != (uint32_t)0UL)
 3324              	 .loc 2 773 0
 3325 01ae 7B69     	 ldr r3,[r7,#20]
 3326 01b0 03F00803 	 and r3,r3,#8
 3327 01b4 002B     	 cmp r3,#0
 3328 01b6 2AD0     	 beq .L137
 774:../Libraries/XMCLib/src/xmc_dma.c ****   {
 775:../Libraries/XMCLib/src/xmc_dma.c ****     event = XMC_DMA_GetChannelsDestinationTransactionCompleteStatus(dma);
 3329              	 .loc 2 775 0
 3330 01b8 7868     	 ldr r0,[r7,#4]
 3331 01ba FFF7FEFF 	 bl XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
 3332 01be 7861     	 str r0,[r7,#20]
 776:../Libraries/XMCLib/src/xmc_dma.c ****     while (event != 0)
 3333              	 .loc 2 776 0
 3334 01c0 21E0     	 b .L165
 3335              	.L169:
 777:../Libraries/XMCLib/src/xmc_dma.c ****     {
 778:../Libraries/XMCLib/src/xmc_dma.c ****       mask = (uint32_t)1U << channel;
 3336              	 .loc 2 778 0
 3337 01c2 0122     	 movs r2,#1
 3338 01c4 FB69     	 ldr r3,[r7,#28]
 3339 01c6 02FA03F3 	 lsl r3,r2,r3
 3340 01ca 3B61     	 str r3,[r7,#16]
 779:../Libraries/XMCLib/src/xmc_dma.c ****       if (event & mask)
 3341              	 .loc 2 779 0
 3342 01cc 7A69     	 ldr r2,[r7,#20]
 3343 01ce 3B69     	 ldr r3,[r7,#16]
 3344 01d0 1340     	 ands r3,r3,r2
 3345 01d2 002B     	 cmp r3,#0
 3346 01d4 14D0     	 beq .L166
 780:../Libraries/XMCLib/src/xmc_dma.c ****       {
 781:../Libraries/XMCLib/src/xmc_dma.c ****         XMC_DMA_CH_ClearEventStatus(dma, (uint8_t)channel, (uint32_t)XMC_DMA_CH_EVENT_DST_TRANSACTI
 3347              	 .loc 2 781 0
 3348 01d6 FB69     	 ldr r3,[r7,#28]
 3349 01d8 DBB2     	 uxtb r3,r3
 3350 01da 7868     	 ldr r0,[r7,#4]
 3351 01dc 1946     	 mov r1,r3
 3352 01de 0822     	 movs r2,#8
 3353 01e0 FFF7FEFF 	 bl XMC_DMA_CH_ClearEventStatus
 782:../Libraries/XMCLib/src/xmc_dma.c **** 
 783:../Libraries/XMCLib/src/xmc_dma.c ****         /* Call user callback to handle event */
 784:../Libraries/XMCLib/src/xmc_dma.c ****         event_handler = dma_event_handlers[channel];
 3354              	 .loc 2 784 0
 3355 01e4 FB69     	 ldr r3,[r7,#28]
 3356 01e6 9B00     	 lsls r3,r3,#2
 3357 01e8 BA69     	 ldr r2,[r7,#24]
 3358 01ea 1344     	 add r3,r3,r2
 3359 01ec 1B68     	 ldr r3,[r3]
 3360 01ee FB60     	 str r3,[r7,#12]
 785:../Libraries/XMCLib/src/xmc_dma.c ****         if (event_handler != NULL)
 3361              	 .loc 2 785 0
 3362 01f0 FB68     	 ldr r3,[r7,#12]
 3363 01f2 002B     	 cmp r3,#0
 3364 01f4 03D0     	 beq .L167
 786:../Libraries/XMCLib/src/xmc_dma.c ****         {
 787:../Libraries/XMCLib/src/xmc_dma.c ****           event_handler(XMC_DMA_CH_EVENT_DST_TRANSACTION_COMPLETE);
 3365              	 .loc 2 787 0
 3366 01f6 FB68     	 ldr r3,[r7,#12]
 3367 01f8 0820     	 movs r0,#8
 3368 01fa 9847     	 blx r3
 788:../Libraries/XMCLib/src/xmc_dma.c ****         }      
 789:../Libraries/XMCLib/src/xmc_dma.c **** 
 790:../Libraries/XMCLib/src/xmc_dma.c ****         break;
 3369              	 .loc 2 790 0
 3370 01fc 07E0     	 b .L168
 3371              	.L167:
 3372 01fe 06E0     	 b .L168
 3373              	.L166:
 791:../Libraries/XMCLib/src/xmc_dma.c ****       }
 792:../Libraries/XMCLib/src/xmc_dma.c ****       ++channel;
 3374              	 .loc 2 792 0
 3375 0200 FB69     	 ldr r3,[r7,#28]
 3376 0202 0133     	 adds r3,r3,#1
 3377 0204 FB61     	 str r3,[r7,#28]
 3378              	.L165:
 776:../Libraries/XMCLib/src/xmc_dma.c ****     {
 3379              	 .loc 2 776 0
 3380 0206 7B69     	 ldr r3,[r7,#20]
 3381 0208 002B     	 cmp r3,#0
 3382 020a DAD1     	 bne .L169
 3383 020c FFE7     	 b .L137
 3384              	.L168:
 3385              	.L137:
 793:../Libraries/XMCLib/src/xmc_dma.c ****     }
 794:../Libraries/XMCLib/src/xmc_dma.c ****   }
 795:../Libraries/XMCLib/src/xmc_dma.c ****   else
 796:../Libraries/XMCLib/src/xmc_dma.c ****   {
 797:../Libraries/XMCLib/src/xmc_dma.c ****     /* no active interrupt was found? */
 798:../Libraries/XMCLib/src/xmc_dma.c ****   }
 799:../Libraries/XMCLib/src/xmc_dma.c **** 
 800:../Libraries/XMCLib/src/xmc_dma.c **** }
 3386              	 .loc 2 800 0
 3387 020e 2037     	 adds r7,r7,#32
 3388              	.LCFI230:
 3389              	 .cfi_def_cfa_offset 8
 3390 0210 BD46     	 mov sp,r7
 3391              	.LCFI231:
 3392              	 .cfi_def_cfa_register 13
 3393              	 
 3394 0212 80BD     	 pop {r7,pc}
 3395              	.L171:
 3396              	 .align 2
 3397              	.L170:
 3398 0214 00400150 	 .word 1342259200
 3399 0218 00000000 	 .word dma0_event_handlers
 3400 021c 00000000 	 .word dma1_event_handlers
 3401              	 .cfi_endproc
 3402              	.LFE216:
 3404              	 .text
 3405              	.Letext0:
 3406              	 .file 3 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 3407              	 .file 4 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 3408              	 .file 5 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 3409              	 .file 6 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc4_scu.h"
 3410              	 .file 7 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include/core_cm4.h"
 3411              	 .file 8 "C:/Users/emob/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_dma.c
    {standard input}:20     .text.XMC_DMA_GetEventStatus:00000000 $t
    {standard input}:24     .text.XMC_DMA_GetEventStatus:00000000 XMC_DMA_GetEventStatus
    {standard input}:64     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 $t
    {standard input}:68     .text.XMC_DMA_GetChannelsTransferCompleteStatus:00000000 XMC_DMA_GetChannelsTransferCompleteStatus
    {standard input}:107    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 $t
    {standard input}:111    .text.XMC_DMA_GetChannelsBlockCompleteStatus:00000000 XMC_DMA_GetChannelsBlockCompleteStatus
    {standard input}:150    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 $t
    {standard input}:154    .text.XMC_DMA_GetChannelsSourceTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsSourceTransactionCompleteStatus
    {standard input}:193    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 $t
    {standard input}:197    .text.XMC_DMA_GetChannelsDestinationTransactionCompleteStatus:00000000 XMC_DMA_GetChannelsDestinationTransactionCompleteStatus
    {standard input}:236    .text.XMC_DMA_GetChannelsErrorStatus:00000000 $t
    {standard input}:240    .text.XMC_DMA_GetChannelsErrorStatus:00000000 XMC_DMA_GetChannelsErrorStatus
                            *COM*:00000020 dma0_event_handlers
                            *COM*:00000010 dma1_event_handlers
    {standard input}:281    .text.XMC_DMA_Init:00000000 $t
    {standard input}:286    .text.XMC_DMA_Init:00000000 XMC_DMA_Init
    {standard input}:326    .text.XMC_DMA_Enable:00000000 XMC_DMA_Enable
    {standard input}:321    .text.XMC_DMA_Enable:00000000 $t
    {standard input}:374    .text.XMC_DMA_Enable:0000002c $d
    {standard input}:381    .text.XMC_DMA_Disable:00000000 $t
    {standard input}:386    .text.XMC_DMA_Disable:00000000 XMC_DMA_Disable
    {standard input}:434    .text.XMC_DMA_Disable:0000002c $d
    {standard input}:441    .text.XMC_DMA_IsEnabled:00000000 $t
    {standard input}:446    .text.XMC_DMA_IsEnabled:00000000 XMC_DMA_IsEnabled
    {standard input}:543    .text.XMC_DMA_IsEnabled:00000088 $d
    {standard input}:550    .text.XMC_DMA_EnableRequestLine:00000000 $t
    {standard input}:555    .text.XMC_DMA_EnableRequestLine:00000000 XMC_DMA_EnableRequestLine
    {standard input}:658    .text.XMC_DMA_EnableRequestLine:00000090 $d
    {standard input}:664    .text.XMC_DMA_DisableRequestLine:00000000 $t
    {standard input}:669    .text.XMC_DMA_DisableRequestLine:00000000 XMC_DMA_DisableRequestLine
    {standard input}:733    .text.XMC_DMA_DisableRequestLine:0000004c $d
    {standard input}:739    .text.XMC_DMA_ClearRequestLine:00000000 $t
    {standard input}:744    .text.XMC_DMA_ClearRequestLine:00000000 XMC_DMA_ClearRequestLine
    {standard input}:826    .text.XMC_DMA_ClearRequestLine:00000070 $d
    {standard input}:832    .text.XMC_DMA_GetOverrunStatus:00000000 $t
    {standard input}:837    .text.XMC_DMA_GetOverrunStatus:00000000 XMC_DMA_GetOverrunStatus
    {standard input}:907    .text.XMC_DMA_GetOverrunStatus:00000058 $d
    {standard input}:913    .text.XMC_DMA_ClearOverrunStatus:00000000 $t
    {standard input}:918    .text.XMC_DMA_ClearOverrunStatus:00000000 XMC_DMA_ClearOverrunStatus
    {standard input}:974    .text.XMC_DMA_ClearOverrunStatus:0000003c $d
    {standard input}:980    .text.XMC_DMA_CH_Disable:00000000 $t
    {standard input}:985    .text.XMC_DMA_CH_Disable:00000000 XMC_DMA_CH_Disable
    {standard input}:1039   .text.XMC_DMA_CH_IsEnabled:00000000 $t
    {standard input}:1044   .text.XMC_DMA_CH_IsEnabled:00000000 XMC_DMA_CH_IsEnabled
    {standard input}:1093   .text.XMC_DMA_CH_Init:00000000 $t
    {standard input}:1098   .text.XMC_DMA_CH_Init:00000000 XMC_DMA_CH_Init
    {standard input}:1972   .text.XMC_DMA_CH_ClearEventStatus:00000000 XMC_DMA_CH_ClearEventStatus
    {standard input}:1414   .text.XMC_DMA_CH_Init:00000250 $d
    {standard input}:1423   .text.XMC_DMA_CH_Init:00000274 $t
    {standard input}:1557   .text.XMC_DMA_CH_Init:0000037c $d
    {standard input}:1560   .text.XMC_DMA_CH_Init:00000380 $t
    {standard input}:1646   .text.XMC_DMA_CH_Suspend:00000000 $t
    {standard input}:1651   .text.XMC_DMA_CH_Suspend:00000000 XMC_DMA_CH_Suspend
    {standard input}:1704   .text.XMC_DMA_CH_Resume:00000000 $t
    {standard input}:1709   .text.XMC_DMA_CH_Resume:00000000 XMC_DMA_CH_Resume
    {standard input}:1762   .text.XMC_DMA_CH_IsSuspended:00000000 $t
    {standard input}:1767   .text.XMC_DMA_CH_IsSuspended:00000000 XMC_DMA_CH_IsSuspended
    {standard input}:1819   .text.XMC_DMA_CH_EnableEvent:00000000 $t
    {standard input}:1824   .text.XMC_DMA_CH_EnableEvent:00000000 XMC_DMA_CH_EnableEvent
    {standard input}:1893   .text.XMC_DMA_CH_DisableEvent:00000000 $t
    {standard input}:1898   .text.XMC_DMA_CH_DisableEvent:00000000 XMC_DMA_CH_DisableEvent
    {standard input}:1967   .text.XMC_DMA_CH_ClearEventStatus:00000000 $t
    {standard input}:2041   .text.XMC_DMA_CH_GetEventStatus:00000000 $t
    {standard input}:2046   .text.XMC_DMA_CH_GetEventStatus:00000000 XMC_DMA_CH_GetEventStatus
    {standard input}:2127   .text.XMC_DMA_CH_EnableSourceGather:00000000 $t
    {standard input}:2132   .text.XMC_DMA_CH_EnableSourceGather:00000000 XMC_DMA_CH_EnableSourceGather
    {standard input}:2201   .text.XMC_DMA_CH_DisableSourceGather:00000000 $t
    {standard input}:2206   .text.XMC_DMA_CH_DisableSourceGather:00000000 XMC_DMA_CH_DisableSourceGather
    {standard input}:2259   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 $t
    {standard input}:2264   .text.XMC_DMA_CH_EnableDestinationScatter:00000000 XMC_DMA_CH_EnableDestinationScatter
    {standard input}:2333   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 $t
    {standard input}:2338   .text.XMC_DMA_CH_DisableDestinationScatter:00000000 XMC_DMA_CH_DisableDestinationScatter
    {standard input}:2391   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 $t
    {standard input}:2396   .text.XMC_DMA_CH_TriggerSourceRequest:00000000 XMC_DMA_CH_TriggerSourceRequest
    {standard input}:2468   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 $t
    {standard input}:2473   .text.XMC_DMA_CH_TriggerDestinationRequest:00000000 XMC_DMA_CH_TriggerDestinationRequest
    {standard input}:2545   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 $t
    {standard input}:2550   .text.XMC_DMA_CH_EnableSourceAddressReload:00000000 XMC_DMA_CH_EnableSourceAddressReload
    {standard input}:2603   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 $t
    {standard input}:2608   .text.XMC_DMA_CH_DisableSourceAddressReload:00000000 XMC_DMA_CH_DisableSourceAddressReload
    {standard input}:2661   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 $t
    {standard input}:2666   .text.XMC_DMA_CH_EnableDestinationAddressReload:00000000 XMC_DMA_CH_EnableDestinationAddressReload
    {standard input}:2719   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 $t
    {standard input}:2724   .text.XMC_DMA_CH_DisableDestinationAddressReload:00000000 XMC_DMA_CH_DisableDestinationAddressReload
    {standard input}:2777   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 $t
    {standard input}:2782   .text.XMC_DMA_CH_RequestLastMultiblockTransfer:00000000 XMC_DMA_CH_RequestLastMultiblockTransfer
    {standard input}:2851   .text.XMC_DMA_CH_SetEventHandler:00000000 $t
    {standard input}:2856   .text.XMC_DMA_CH_SetEventHandler:00000000 XMC_DMA_CH_SetEventHandler
    {standard input}:2911   .text.XMC_DMA_CH_SetEventHandler:00000038 $d
    {standard input}:2918   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 $t
    {standard input}:2923   .text.XMC_DMA_CH_ClearSourcePeripheralRequest:00000000 XMC_DMA_CH_ClearSourcePeripheralRequest
    {standard input}:2973   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 $t
    {standard input}:2978   .text.XMC_DMA_CH_ClearDestinationPeripheralRequest:00000000 XMC_DMA_CH_ClearDestinationPeripheralRequest
    {standard input}:3028   .text.XMC_DMA_IRQHandler:00000000 $t
    {standard input}:3033   .text.XMC_DMA_IRQHandler:00000000 XMC_DMA_IRQHandler
    {standard input}:3398   .text.XMC_DMA_IRQHandler:00000214 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_SCU_RESET_DeassertPeripheralReset
XMC_SCU_RESET_AssertPeripheralReset
XMC_SCU_RESET_IsPeripheralResetAsserted
