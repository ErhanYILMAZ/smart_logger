   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "can_node.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.XMC_CAN_NODE_SetEventNodePointer,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	XMC_CAN_NODE_SetEventNodePointer:
  25              	.LFB172:
  26              	 .file 1 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc_can.h"
   1:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
   2:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @file xmc_can.h
   3:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @date 2017-11-09
   4:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
   5:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @cond
   6:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
   7:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library 
   8:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
   9:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  10:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * All rights reserved.                        
  11:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                             
  12:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * following conditions are met:   
  14:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  15:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer.                        
  17:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  18:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  21:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  24:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                                                                              
  32:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
  35:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  36:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Change History
  37:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * --------------
  38:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  39:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-02-20:
  40:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Initial <br>
  41:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Documentation improved <br>
  42:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  43:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-05-20:
  44:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New elements have added in XMC_CAN_MO_t data structure <br>
  45:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_MO_Config() signature has changed <br>
  46:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - XMC_CAN_STATUS_t enum structure has updated. <br>
  47:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  48:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-06-20:
  49:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New APIs added: XMC_CAN_NODE_ClearStatus(),XMC_CAN_MO_ReceiveData(), XMC_CAN_GATEWAY_InitD
  50:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  51:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *      
  52:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-07-09:
  53:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - New API added: XMC_CAN_NODE_Enable. <br>
  54:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  55:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-01:
  56:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Removed fCANB clock support <br>
  57:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  58:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2015-09-15:
  59:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added "xmc_can_map.h" include <br>
  60:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  61:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-07:
  62:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_IsPanelControlReady()
  63:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
  64:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2017-11-09:
  65:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Added XMC_CAN_InitEx() and XMC_CAN_NODE_NominalBitTimeConfigureEx()
  66:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Make XMC_CAN_GetBaudrateClockSource(), XMC_CAN_SetBaudrateClockSource() and XMC_CAN_GetBau
  67:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  68:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Details of use for node configuration related APIs</b><br>
  69:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Please use the XMC_CAN_NODE_SetInitBit() and XMC_CAN_NODE_EnableConfigurationChange() before cal
  70:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * related APIs.
  71:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange() and  XMC_CAN_NODE_ResetInitBit() can be called for dis
  72:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * change and enable the node for communication afterwards.
  73:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Do not use this when configuring the nominal bit time with XMC_CAN_NODE_NominalBitTimeConfigure(
  74:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable/Disable node configuration change is taken in account.
  75:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  76:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * <b>Example Usage:</b>
  77:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @code
  78:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //disabling the Node
  79:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit(CAN_NODE0)
  80:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //allowing the configuration change
  81:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(CAN_NODE0)
  82:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //Node configuration
  83:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_FrameCounterConfigure(CAN_NODE0,&can_node_frame_counter);
  84:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack(CAN_NODE0)
  85:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //disable configuration
  86:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange(CAN_NODE0)
  87:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * //Enabling node for communication
  88:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit(CAN_NODE0)
  89:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @endcode
  90:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  91:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 2016-06-20:
  92:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *     - Fixed bug in XMC_CAN_MO_Config() <br>  
  93:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @endcond
  94:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
  95:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
  96:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
  97:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #ifndef XMC_CAN_H
  98:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_H
  99:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * HEADER FILES
 102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_common.h"
 104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(CAN)
 106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_scu.h"
 108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include "xmc_can_map.h"
 109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #include <string.h>
 110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup XMClib XMC Peripheral Library
 113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @addtogroup CAN
 118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @brief Controller Area Network Controller (CAN) driver for the XMC microcontroller family.
 119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * CAN driver provides transfer of CAN frames in accordance with CAN specificetion V2.0 B (active).
 121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * can receive and transmit standard frames with 11-bit identifiers as well as extended frames with
 122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * All CAN nodes share a common set of message objects. Each message object can be individually all
 123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * CAN nodes. 
 124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Besides serving as a storage container for incoming and outgoing frames, message objects can be 
 125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * gateways between 
 126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * the CAN nodes or to setup a FIFO buffer. The CAN module provides Analyzer mode,Loop-back mode an
 127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * node analysis.
 128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The driver is divided into five sections:
 130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN Global features:
 131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure module frequency using function XMC_CAN_Init().
 132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Module interrupt using configuration structure XMC_CAN_NODE_INTERRUPT_TRI
 133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_EventTrigger().
 134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_NODE features:
 136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to set baud rate by configuration structure XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t and
 137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    function XMC_CAN_NODE_NominalBitTimeConfigure().
 138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure loop-back mode using fuction XMC_CAN_NODE_EnableLoopBack().
 139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure CAN Node analyzer using function XMC_CAN_NODE_SetAnalyzerMode().
 140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows CAN node events enable/ disable by enum structure XMC_CAN_NODE_EVENT_t and functions X
 141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    and XMC_CAN_NODE_DisableEvent().
 142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides bit timming analysis, configuration structure XMC_CAN_NODE_FRAME_COUNTER_t and funct
 143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *    XMC_CAN_NODE_FrameCounterConfigure(). 
 144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_MO features:
 146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object initialization by configuration structure XMC_CAN_MO_t and function XMC
 147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows transfer of message objects using functions XMC_CAN_MO_Transmit() and XMC_CAN_MO_Recei
 148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure Single Data Transfer and Single Transmit Trial using functions 
 149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_EnableSingleTransmitTrial() and XMC_CAN_MO_EnableSingleTransmitTrial().
 150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows to configure MO events using function XMC_CAN_MO_EnableEvent(). 
 151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_FIFO features:
 153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Allows message object FIFO structure by configuration structure XMC_CAN_FIFO_CONFIG_t and fun
 154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_TXFIFO_ConfigMOBaseObject() , XMC_CAN_RXFIFO_ConfigMOBaseObject() and XMC_CAN_TXFIFO_Tra
 155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par CAN_GATEWAY features:
 157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * -# Provides Gateway mode, configuration structure XMC_CAN_GATEWAY_CONFIG_t and function XMC_CAN_
 158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @{
 160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * MACROS
 164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Pos (18U)   /**< Standard Identifier bitposition */
 166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define XMC_CAN_MO_MOAR_STDID_Msk ((0x000007FFUL) << XMC_CAN_MO_MOAR_STDID_Pos) /**< Standard Ident
 168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_NODE_NIPR_Msk         (0x7UL) /**< Node event mask */
 170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #define CAN_MO_MOIPR_Msk          (0x7U)  /**< Message Object event mask */
 172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * ENUMS
 175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Defines the status of CAN, to verify the CAN related API calls. Use type \a XMC_CAN_STATUS_t fo
 178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_STATUS
 180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_SUCCESS,           /**< Driver accepted application request*/
 182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_ERROR,             /**< Returned when unknown error occurred */
 183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_BUSY,              /**< Driver is busy and can not handle request*/
 184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_NOT_ACCEPTABLE, /**< Message object type not allowed*/
 185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_STATUS_MO_DISABLED       /**< Returned if Message object is disabled */
 186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_STATUS_t;
 187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN module Panel Commands . Use type \a XMC_CAN_PANCMD_t for this enum.
 190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_PANCMD
 192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_INIT_LIST = 1U,              /**< Command to initialize a list */
 194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_ALLOCATE = 2U,        /**< Command to activate static allocation */
 195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_ALLOCATE = 3U,       /**< Command to activate dynamic allocation */
 196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEFORE = 4U,   /**< Remove a message object from the list and insert
 198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEFORE = 5U,  /**< Command to activate dynamic allocation */
 199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_STATIC_INSERT_BEHIND = 6U,   /**< Command to activate dynamic allocation */
 200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_PANCMD_DYNAMIC_INSERT_BEHIND = 7U   /**< Command to activate dynamic allocation */
 201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_PANCMD_t;
 202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines loop Back Mode, to enable/disable an in-system test of the MultiCAN module .
 205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Use type \a XMC_CAN_LOOKBACKMODE_t for this enum.
 206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_LOOKBACKMODE
 208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_ENABLED,   /**< Each CAN node can be connected to the internal CAN bus  */
 210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_LOOKBACKMODE_DISABLED   /**< Each CAN node can be connected to the external CAN bus */
 211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_LOOKBACKMODE_t;
 212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Message Object direction. Use type \a XMC_CAN_MO_TYPE_t for this enum.
 215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_TYPE
 217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_RECMSGOBJ,   /**< Receive Message Object selected */
 219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_TRANSMSGOBJ  /**< Transmit Message Object selected */
 220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_TYPE_t;
 221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines Data frame types. Use type \a XMC_CAN_FRAME_TYPE_t for this enum.
 224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_TYPE
 226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_STANDARD_11BITS, /**< Standard type identifier*/
 228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_TYPE_EXTENDED_29BITS  /**< Extended type identifier*/
 229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_TYPE_t;
 230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines arbitration mode for transmit acceptance filtering. Use type \a XMC_CAN_ARBITRATION_MODE
 234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_ARBITRATION_MODE
 236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_1 = 1U,   /**< Transmit acceptance based in the order(p
 238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_IDE_DIR_BASED_PRIO_2 = 2U, /**< Transmit acceptance filtering is based o
 239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_ARBITRATION_MODE_ORDER_BASED_PRIO_3 = 3U    /**< Transmit acceptance based in the order *
 240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_ARBITRATION_MODE_t;
 241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the operation mode of the frame counter. Use type \a XMC_CAN_FRAME_COUNT_MODE_t for this
 244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_FRAME_COUNT_MODE
 246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE = 0U,       /**< Frame Count Mode */
 248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_TIME_STAMP = 1U,  /**< The frame counter is incremented with the beginni
 249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_FRAME_COUNT_MODE_BIT_TIMING = 2U   /**< Used for baud rate detection and analysis of the 
 250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FRAME_COUNT_MODE_t;
 251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Divider Modes. Use type \a XMC_CAN_DM_t for this enum.
 254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_DM
 256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_NORMAL = 1U,      /**< Normal divider mode */
 258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_FRACTIONAL = 2U,  /**< Fractional divider mode */
 259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_DM_OFF = 3U          /**< Divider Mode in off-state*/
 260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_DM_t;
 261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object set status. Use type \a XMC_CAN_MO_SET_STATUS_t for th
 264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_SET_STATUS
 266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_PENDING = CAN_MO_MOCTR_SETRXPND_Msk,     /**< Set receive pending */
 268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_PENDING = CAN_MO_MOCTR_SETTXPND_Msk,     /**< Set transmit pending */
 269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_UPDATING = CAN_MO_MOCTR_SETRXUPD_Msk,    /**< Set receive updating */
 270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_NEW_DATA = CAN_MO_MOCTR_SETNEWDAT_Msk,      /**< Set new data */
 271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_SETMSGLST_Msk,  /**< Set message lost */
 272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_SETMSGVAL_Msk, /**< Set message valid */
 273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_SETRTSEL_Msk, /**< Set transmit/receive selec
 274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_RX_ENABLE = CAN_MO_MOCTR_SETRXEN_Msk,       /**< Set receive enable */
 275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_REQUEST = CAN_MO_MOCTR_SETTXRQ_Msk,      /**< Set transmit request */
 276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_SETTXEN0_Msk,     /**< Set transmit enable 0 */
 277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_SETTXEN1_Msk,     /**< Set transmit enable 1 */
 278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_SET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_SETDIR_Msk /**< Set message direction */
 279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_SET_STATUS_t;
 280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object reset status. Use type \a XMC_CAN_MO_RESET_STATUS_t fo
 283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_RESET_STATUS
 285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_PENDING = CAN_MO_MOCTR_RESRXPND_Msk,     /**< Reset receive pending */
 287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_PENDING = CAN_MO_MOCTR_RESTXPND_Msk,     /**< Reset transmit pending *
 288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_UPDATING = CAN_MO_MOCTR_RESRXUPD_Msk,    /**< Reset receive updating *
 289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_NEW_DATA = CAN_MO_MOCTR_RESNEWDAT_Msk,      /**< Reset new data */
 290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_LOST = CAN_MO_MOCTR_RESMSGLST_Msk,  /**< Reset message lost */
 291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_VALID = CAN_MO_MOCTR_RESMSGVAL_Msk, /**< Reset message valid */
 292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_TX_SELECTED = CAN_MO_MOCTR_RESRTSEL_Msk, /**< Reset transmit/receive s
 293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_RX_ENABLE = CAN_MO_MOCTR_RESRXEN_Msk,       /**< Reset receive enable */
 294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_REQUEST = CAN_MO_MOCTR_RESTXRQ_Msk,      /**< Reset transmit request *
 295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE0 = CAN_MO_MOCTR_RESTXEN0_Msk,     /**< Reset transmit enable 0 
 296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_TX_ENABLE1 = CAN_MO_MOCTR_RESTXEN1_Msk,     /**< Reset transmit enable 1 
 297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_RESET_STATUS_MESSAGE_DIRECTION = CAN_MO_MOCTR_RESDIR_Msk /**< Reset message direction 
 298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_RESET_STATUS_t;
 299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object status. Use type \a XMC_CAN_MO_STATUS_t for this enum.
 302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_STATUS
 304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_PENDING = CAN_MO_MOSTAT_RXPND_Msk,                   /**< Defines message ha
 306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_PENDING = CAN_MO_MOSTAT_TXPND_Msk,                   /**< Defines message ha
 307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_UPDATING = CAN_MO_MOSTAT_RXUPD_Msk,                  /**< Defines Message id
 308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_NEW_DATA = CAN_MO_MOSTAT_NEWDAT_Msk,                    /**< Defines no update 
 309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_LOST = CAN_MO_MOSTAT_MSGLST_Msk,                /**< CAN message is los
 310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_VALID = CAN_MO_MOSTAT_MSGVAL_Msk,               /**< Message valid */
 311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_TX_SELECTED = CAN_MO_MOSTAT_RTSEL_Msk,               /**< Transmit/Receive s
 312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_RX_ENABLE = CAN_MO_MOSTAT_RXEN_Msk,                     /**< Receive enable */
 313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_REQUEST = CAN_MO_MOSTAT_TXRQ_Msk,                    /**< Transmit request *
 314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE0 = CAN_MO_MOSTAT_TXEN0_Msk,                   /**< Transmit enable 0 
 315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_TX_ENABLE1 = CAN_MO_MOSTAT_TXEN1_Msk,                   /**< Transmit enable 1 
 316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_MESSAGE_DIRECTION = CAN_MO_MOSTAT_DIR_Msk,              /**< Message direction 
 317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_LIST = CAN_MO_MOSTAT_LIST_Msk,                          /**< List allocation */
 318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_PREVIOUS_MO = CAN_MO_MOSTAT_PPREV_Msk,     /**< Pointer to previous 
 319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_STATUS_POINTER_TO_NEXT_MO = (int32_t)CAN_MO_MOSTAT_PNEXT_Msk   /**< Pointer to next Me
 320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_STATUS_t;
 321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node status. Use type \a XMC_CAN_NODE_STATUS_t for this enum.
 324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_STATUS
 326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LAST_ERROR_CODE = CAN_NODE_NSR_LEC_Msk,       /**< Last Error Code */
 328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_TX_OK = CAN_NODE_NSR_TXOK_Msk,                /**< Message transmitted succes
 329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_RX_OK = CAN_NODE_NSR_RXOK_Msk,                /**< Message received successfu
 330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ALERT_WARNING = CAN_NODE_NSR_ALERT_Msk,       /**< Alert warning */
 331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_ERROR_WARNING_STATUS = CAN_NODE_NSR_EWRN_Msk, /**< Error warning status */
 332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_BUS_OFF= CAN_NODE_NSR_BOFF_Msk,       /**< Bus-off status */
 333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_LENGTH_ERROR = CAN_NODE_NSR_LLE_Msk,     /**< List length error */
 334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_LIST_OBJECT_ERROR = CAN_NODE_NSR_LOE_Msk,     /**< List object error */
 335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_STATUS_SUSPENDED_ACK = CAN_NODE_NSR_SUSACK_Msk       /**< Suspend Acknowledge */
 337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_STATUS_t;
 339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node control like initialization, node disable and analyzer mode .
 342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_NODE_CONTROL_t for this enum.
 343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_CONTROL
 345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_NODE_INIT = CAN_NODE_NCR_INIT_Msk,            /**< Node initialization */
 347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_TX_INT_ENABLE = CAN_NODE_NCR_TRIE_Msk,        /**< Transfer event enable */
 348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_LEC_INT_ENABLE = CAN_NODE_NCR_LECIE_Msk,      /**< LEC Indicated Error Event
 349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_ALERT_INT_ENABLE = CAN_NODE_NCR_ALIE_Msk,     /**< Alert Event Enable */
 350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_DISABLE = CAN_NODE_NCR_CANDIS_Msk,        /**< CAN disable */
 351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CONF_CHANGE_ENABLE= CAN_NODE_NCR_CCE_Msk,     /**< Configuration change enab
 352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_CAN_ANALYZER_NODEDE = CAN_NODE_NCR_CALM_Msk,  /**< CAN Analyzer mode */
 353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
 354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_CONTROL_SUSPENDED_ENABLE = CAN_NODE_NCR_SUSEN_Msk     /**< Suspend Enable */
 355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_CONTROL_t;
 357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Node events. Use type \a XMC_CAN_NODE_EVENT_t for this enum.
 360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_EVENT
 362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_TX_INT = CAN_NODE_NCR_TRIE_Msk,   /**< Node Transfer OK Event */
 364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_ALERT = CAN_NODE_NCR_ALIE_Msk,    /**< Node Alert Event */
 365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_LEC = CAN_NODE_NCR_LECIE_Msk,     /**< Last Error code Event */
 366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_EVENT_CFCIE = CAN_NODE_NFCR_CFCIE_Msk   /**< CAN Frame Count Event  */
 367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_EVENT_t;
 368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN node pointer events position. Use type \a XMC_CAN_NODE_POINTER_EVENT_
 371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_POINTER_EVENT
 373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_ALERT = CAN_NODE_NIPR_ALINP_Pos,           /**< Node Alert Event node 
 375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_LEC = CAN_NODE_NIPR_LECINP_Pos,            /**< Last Error code Event 
 376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK = CAN_NODE_NIPR_TRINP_Pos,     /**< Transmit Event node po
 377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER = CAN_NODE_NIPR_CFCINP_Pos   /**< CAN Frame Count Event 
 378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_POINTER_EVENT_t;
 379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object event node pointer position. Use type \a XMC_CAN_MO_POINTER_EVENT_t f
 382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_POINTER_EVENT
 384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_TRANSMIT = CAN_MO_MOIPR_TXINP_Pos,     /**< Transmit Event node pointer 
 386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_POINTER_EVENT_RECEIVE = CAN_MO_MOIPR_RXINP_Pos       /**< Receive Event node pointer *
 387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_POINTER_EVENT_t;
 388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines mask value for CAN Message Object event type. Use type \a XMC_CAN_MO_EVENT_t for this en
 391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_MO_EVENT
 393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_TRANSMIT = CAN_MO_MOFCR_TXIE_Msk,  /**< Message Object transmit event */
 395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_RECEIVE = CAN_MO_MOFCR_RXIE_Msk,   /**< Message Object receive event */
 396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_EVENT_OVERFLOW = CAN_MO_MOFCR_OVIE_Msk,  /**< Message Object overflow event */
 397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_EVENT_t;
 398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the possible receive inputs. Use type \a XMC_CAN_NODE_RECEIVE_INPUT_t for this enum.
 401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_RECEIVE_INPUT
 403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCA,   /**< CAN Receive Input A */
 405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCB,   /**< CAN Receive Input B */
 406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCC,   /**< CAN Receive Input C */
 407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCD,   /**< CAN Receive Input D */
 408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCE,   /**< CAN Receive Input E */
 409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCF,   /**< CAN Receive Input F */
 410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCG,   /**< CAN Receive Input G */
 411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_RECEIVE_INPUT_RXDCH    /**< CAN Receive Input H */
 412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_RECEIVE_INPUT_t;
 413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error transfer direction. Use type \a XMC_CAN_NODE_LAST_ERROR_DIR_t for this enum.
 416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_DIR
 418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_RECEPCION,    /**< The last error occurred while the CAN n
 420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_DIR_WHILE_NODE_TRANSMISSION  /**< The last error occurred while the CAN n
 421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_DIR_t;
 422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines last error increment. Use type \a XMC_CAN_NODE_LAST_ERROR_INC_t for this enum.
 426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_LAST_ERROR_INC
 428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_1, /**< The last error led to an error counter increment of 1. */
 430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_LAST_ERROR_INC_8  /**< The last error led to an error counter increment of 8. */
 431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_LAST_ERROR_INC_t;
 432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines interrupt request on interrupt output line INT_O[n]. Use type \a XMC_CAN_NODE_INTERRUPT_
 435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_NODE_INTERRUPT_TRIGGER
 437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_0 = 0x1U,
 439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_1 = 0x2U,
 440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_2 = 0x4U,
 441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_3 = 0x8U,
 442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_4 = 0x16U,
 443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_5 = 0x32U,
 444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_6 = 0x64U,
 445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_INTR_TRIGGER_7 = 0x128U,
 446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_INTERRUPT_TRIGGER_t;
 447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines the Clock source used for the MCAN baudrate generator 
 450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef enum XMC_CAN_CANCLKSRC
 452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {  
 453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if (UC_FAMILY == XMC4)
 455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_MCLK = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock. 
 458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FOHP = 0x2U, /**< Use high performance oscillator (fOHP) as MCAN baudrate gener
 460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_CANCLKSRC_FPERI = 0x1U, /**< Use peripheral clock as MCAN baudrate generator input clock.
 462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_CANCLKSRC_t;
 464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * DATA STRUCTURES
 467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN node Nominal Bit Time. Use type \a XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t for this s
 470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG
 472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t can_frequency;       /**< Frequency of the CAN module(fCAN). \a can_frequency shall be r
 474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint32_t baudrate;          /**< Specifies the node baud rate. Unit: baud \a baudrate shall be ra
 475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sample_point;      /**< Sample point is used to compensate mismatch between transmitter 
 476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    the synchronization segment. Sample point. Range = [0, 10000] with respect [0%, 
 477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint16_t sjw;               /**< (Re) Synchronization Jump Width. Range:0-3 */
 478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t;
 479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines base, top and bottom of CAN Message Object FIFO Structure. Use type \a XMC_CAN_FIFO_CONF
 482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * A FIFO consists of one base object and n slave objects.
 483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_FIFO_CONFIG
 485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_bottom;    /**< points to the first element(slave object) in a FIFO structure.Range 
 487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_top;     /**< points to the last element(slave object) in a FIFO structure. Range :0
 488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t fifo_base;    /**< points to the actual target object(Base object) within a FIFO/Gateway 
 489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_FIFO_CONFIG_t;
 490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Gateway FIFO structure and provides additional options for gateway destination objec
 493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Use type \a XMC_CAN_GATEWAY_CONFIG_t for this structure.
 494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_GATEWAY_CONFIG
 496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_bottom;       /**< points to the first element(gateway destination object) in a F
 498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_top;        /**< points to the last element(gateway destination object) in a FIFO
 499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t gateway_base;       /**< points to the actual target object within a FIFO/Gateway structu
 500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_frame_send;   /**< TXRQ updated in the gateway destination object after the int
 501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object */
 502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_identifier_copy;   /**< The identifier of the gateway source object (after storing t
 503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                          to the gateway destination object. */
 504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_length_code_copy; /**< Data length code of the gateway source object (after sto
 506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                            gateway destination object */
 507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   bool gateway_data_copy;  /**< Data fields in registers MODATALn and MODATAHn of the gateway sourc
 508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                 are copied to the gateway destination.*/
 509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_GATEWAY_CONFIG_t;
 511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** * Defines CAN Global Initialization structure
 514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_GLOBAL_TypeDef XMC_CAN_t;
 516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard start*/
 518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma push
 520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma anon_unions
 521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning 586
 523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines frame counter configuration. Use type \a XMC_CAN_NODE_FRAME_COUNTER_t for this structure
 527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It provides configuration of frame counter that counts transmitted/received CAN frames or obtain
 528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * when a frame has been started to transmit or be received by the CAN node.
 529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_NODE_FRAME_COUNTER
 531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 16;
 536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_selection:3;   /**<   Defines function of the frame counter  */
 537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_frame_count_mode:2;      /**<   Determines the operation mode of the frame count
 538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t : 11;
 539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t nfcr;
 541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_NODE_FRAME_COUNTER_t;
 544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *Defines Node Runtime structure.
 547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** */
 548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef CAN_NODE_TypeDef  XMC_CAN_NODE_t;            /**<  pointer to the Node CAN register */
 549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Defines CAN Message Object runtime elements. Use type \a XMC_CAN_MO_t for this structure.
 552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** typedef struct XMC_CAN_MO
 554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   CAN_MO_TypeDef *can_mo_ptr;                     /**< Pointer to the Message Object CAN register *
 556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_identifier:29;            /**< standard (11 bit)/Extended (29 bit) message ident
 559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mode:1;                /**< Standard/Extended identifier support */
 560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_priority:2;               /**< Arbitration Mode/Priority */
 561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_ar;
 563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     struct{
 566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_id_mask:29;              /**< CAN Identifier of Message Object */
 567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_ide_mask:1;              /**< Identifier Extension Bit of Message Object */
 568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     };
 569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****     uint32_t mo_amr;
 570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   };
 571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   uint8_t can_data_length;                        /**< Message data length, Range:0-8 */
 572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   union{
 574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint8_t can_data_byte[8];                 /**< Each position of the array represents a data b
 576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint16_t can_data_word[4];                /**< Each position of the array represents a 16 bit
 577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint32_t can_data[2];                     /**< can_data[0] lower 4 bytes of the data. can_dat
 578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                               of the data */
 579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       uint64_t can_data_long;                   /** Data of the Message Object*/
 580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****       };
 581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_MO_TYPE_t can_mo_type;                  /**<  Message Type */
 583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** } XMC_CAN_MO_t;
 585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /*Anonymous structure/union guard end*/
 586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(__CC_ARM)
 587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma pop
 588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #elif defined(__TASKING__)
 589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   #pragma warning restore
 590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**************************************************************************************************
 592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API Prototypes
 593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  **************************************************************************************************
 594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #ifdef __cplusplus
 595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** extern "C" {
 596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Disables CAN module. In disabled state, no registers of CAN module can be read or written excep
 607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_Enable()\n\n\n
 610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Disable(XMC_CAN_t *const obj);
 614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *         for details.
 619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Enables CAN module and initializes all CAN registers to reset values. It is required to re-conf
 624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  before any data transfer. It configures CAN_CLC.DISR bit.
 625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_Disable()\n\n\n
 628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Enable(XMC_CAN_t *const obj);
 632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node_num  CAN node number,Range : 0-2
 639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param mo_num  CAN Message Object number,Range : 0-63
 640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Allocates Message Object from free list to node list. Each \a node_num is linked to one unique 
 645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  A CAN node performs message transfer only with the \a mo_num message objects that are allocated
 646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  It configures PANCTR register.
 647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_AllocateMOtoNodeList(XMC_CAN_t *const obj, const uint8_t node_num, const uint8_t mo_nu
 654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *       for details.
 659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Ready status of list controller
 661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns ready status of the list controller
 664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_PanelControl()
 667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE bool XMC_CAN_IsPanelControlReady(XMC_CAN_t *const obj)
 670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (bool)((obj->PANCTR & (CAN_PANCTR_BUSY_Msk | CAN_PANCTR_RBUSY_Msk)) == 0);
 672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param pancmd panal command selection. Refer @ref XMC_CAN_PANCMD_t for valid values.
 680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg1   Panel Argument 1,Range : 0-2
 681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param arg2   Panel Argument 2, Range : 0-63
 682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 685:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 686:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures the panel command and panel arguments. A panel operation consists of a command code 
 687:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  panel arguments (PANAR1, PANAR2). Commands that have a return value deliver it to the PANAR1 bi
 688:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  return an error flag deliver it to bit 31 of the Panel Control Register, this means bit 7 of PA
 689:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  panel argument PANAR1,\a arg2 represents panel argument PANAR2 and \a pancmd represents command
 690:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  register.
 691:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 692:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 693:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 694:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 695:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 696:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 697:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_PanelControl(XMC_CAN_t *const obj,
 698:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_PANCMD_t pancmd,
 699:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg1,
 700:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                       const uint8_t arg2)
 701:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 702:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->PANCTR = (((uint32_t)pancmd << CAN_PANCTR_PANCMD_Pos) & (uint32_t)CAN_PANCTR_PANCMD_Msk) |
 703:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg1 << CAN_PANCTR_PANAR1_Pos) & (uint32_t)CAN_PANCTR_PANAR1_Msk) |
 704:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****             (((uint32_t)arg2 << CAN_PANCTR_PANAR2_Pos) & (uint32_t)CAN_PANCTR_PANAR2_Msk);
 705:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 706:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 707:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 708:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 709:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 710:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 711:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 712:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 713:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_requestr  Interrupt trigger number selection. Refer @ref XMC_CAN_NODE_INTERRUPT_T
 714:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *               Multiple interrupt trigger events can be ORed.
 715:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 716:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 717:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 718:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 719:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures multiple interrupt requests with a single write operation. \a service_requestr repre
 720:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  request or multiple.It configures MITR register.
 721:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 722:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 723:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  None
 724:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 725:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 726:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 727:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_EventTrigger(XMC_CAN_t *const obj,const XMC_CAN_NODE_INTERRUPT_TRIGGER
 728:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 729:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   obj->MITR = ((uint32_t)service_requestr << CAN_MITR_IT_Pos) & (uint32_t)CAN_MITR_IT_Msk;
 730:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 731:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 732:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 733:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 734:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 735:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 736:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 737:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 738:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source
 739:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). 
 740:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        The can_frequency shall be an integer divisor of the CAN clock source frequency (fPERI/fM
 741:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        it should be selected such that if fulfills the minimum operating frequency specified in 
 742:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        In addition the can_frequency shall be an integer multiple of the baudrate.
 743:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        Max. value: Max. clock source frequency, i.e. if using fOHP and using a XTAL of 20MHz the
 744:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 745:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Actual frequency
 746:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 747:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 748:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_Init() configures clock rate of the module timer clock fCAN. 
 749:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that only the normal divider is used to avoid jitter.
 750:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * In addition the actual achievable frequency is returned.
 751:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 752:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 753:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Altering CAN module \a can_frequency shall affects baud rate, call XMC_CAN_NODE_NominalBitTimeCo
 754:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 755:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 756:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 757:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx()\n\n\n
 758:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 759:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 760:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_InitEx(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 761:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 762:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 763:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 764:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 765:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 766:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Baudrate generator clock source
 767:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 768:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 769:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns CAN baudrate generator clock source
 770:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 771:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 772:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 773:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 774:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_CANCLKSRC_t XMC_CAN_GetBaudrateClockSource(XMC_CAN_t *const obj);
 775:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 776:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 777:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 778:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 779:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 780:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 781:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * 
 782:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 783:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Sets CAN baudrate generator clock source
 784:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 785:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 786:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 787:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 788:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_SetBaudrateClockSource(XMC_CAN_t *const obj,const XMC_CAN_CANCLKSRC_t source);
 789:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 790:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 791:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 792:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 793:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 794:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return baudrate generator input clock frequency 
 795:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 796:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 797:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Gets CAN baudrate generator input clock frequency
 798:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 799:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use only for XMC1400 series and XMC47/4800 series projects
 800:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 801:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 802:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** uint32_t XMC_CAN_GetBaudrateClockFrequency(XMC_CAN_t *const obj);
 803:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 804:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if defined(MULTICAN_PLUS) || defined(DOXYGEN)
 805:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 806:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 807:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param obj Pointer pointing to XMC_CAN Global Initialization structure. Defines CAN global regis
 808:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *        for details.
 809:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 810:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param clksrc CAN module frequency clock source.
 811:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_frequency CAN module frequency(fCAN). Max. value: Max. clock source frequency, i.e. i
 812:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use clksrc parameter only for XMC1400 series and XMC47/4800 series projects, otherwise omi
 813:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 814:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 815:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 816:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 817:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures clock rate of the module timer clock fCAN. Altering CAN module \a can_frequency shall
 818:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_NominalBitTimeConfigure() or XMC_CAN_NODE_NominalBitTimeConfigureEx() to confi
 819:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures FDR register.
 820:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 821:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Use XMC_CAN_InitEx() for new projects. XMC_CAN_Init() is kept for backward compatibility r
 822:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 823:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_NominalBitTimeConfigure(), XMC_CAN_NODE_NominalBitTimeConfigureEx(), XMC_CAN_InitEx
 825:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 826:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 827:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, XMC_CAN_CANCLKSRC_t clksrc, uint32_t can_frequency);
 828:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
 829:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_Init(XMC_CAN_t *const obj, uint32_t can_frequency);
 830:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
 831:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 832:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 833:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 834:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
 835:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 836:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 837:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 838:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 839:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Initializes CAN message object. Initialization includes configuring Message Object identifier ty
 840:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * identifier value, Message Object type, and transfer requests. It configures FDR register.
 841:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 842:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 844:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 845:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 846:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_MO_Config(const XMC_CAN_MO_t *const can_mo);
 847:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 848:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /* NODE APIs */
 849:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 850:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 851:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 852:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node      Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers.
 853:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param ptr_event     CAN_NODE interrupt pointer position. Refer @ref XMC_CAN_NODE_POINTER_EVENT_
 854:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request Interrupt service request number. Range : 0-7
 855:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 856:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 857:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 858:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 859:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures node interrupt pointer \a service_request for CAN Node events \a ptr_event. It confi
 860:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 861:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 863:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 864:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 865:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 866:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetEventNodePointer(XMC_CAN_NODE_t *const can_node,
 867:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_POINTER_EVENT_t ptr_event,
 868:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const uint32_t service_request)
 869:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
  27              	 .loc 1 869 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 85B0     	 sub sp,sp,#20
  37              	.LCFI1:
  38              	 .cfi_def_cfa_offset 24
  39 0004 00AF     	 add r7,sp,#0
  40              	.LCFI2:
  41              	 .cfi_def_cfa_register 7
  42 0006 F860     	 str r0,[r7,#12]
  43 0008 0B46     	 mov r3,r1
  44 000a 7A60     	 str r2,[r7,#4]
  45 000c FB72     	 strb r3,[r7,#11]
 870:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NIPR = (uint32_t)((can_node->NIPR) & ~(uint32_t)(CAN_NODE_NIPR_Msk << (uint32_t)ptr_eve
  46              	 .loc 1 870 0
  47 000e FB68     	 ldr r3,[r7,#12]
  48 0010 9A68     	 ldr r2,[r3,#8]
  49 0012 FB7A     	 ldrb r3,[r7,#11]
  50 0014 0721     	 movs r1,#7
  51 0016 01FA03F3 	 lsl r3,r1,r3
  52 001a DB43     	 mvns r3,r3
  53 001c 1A40     	 ands r2,r2,r3
  54 001e FB7A     	 ldrb r3,[r7,#11]
  55 0020 7968     	 ldr r1,[r7,#4]
  56 0022 01FA03F3 	 lsl r3,r1,r3
  57 0026 1A43     	 orrs r2,r2,r3
  58 0028 FB68     	 ldr r3,[r7,#12]
  59 002a 9A60     	 str r2,[r3,#8]
 871:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
  60              	 .loc 1 871 0
  61 002c 1437     	 adds r7,r7,#20
  62              	.LCFI3:
  63              	 .cfi_def_cfa_offset 4
  64 002e BD46     	 mov sp,r7
  65              	.LCFI4:
  66              	 .cfi_def_cfa_register 13
  67              	 
  68 0030 5DF8047B 	 ldr r7,[sp],#4
  69              	.LCFI5:
  70              	 .cfi_restore 7
  71              	 .cfi_def_cfa_offset 0
  72 0034 7047     	 bx lr
  73              	 .cfi_endproc
  74              	.LFE172:
  76 0036 00BF     	 .section .text.XMC_CAN_NODE_SetReceiveInput,"ax",%progbits
  77              	 .align 2
  78              	 .thumb
  79              	 .thumb_func
  81              	XMC_CAN_NODE_SetReceiveInput:
  82              	.LFB173:
 872:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 873:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 874:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 875:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 876:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 877:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 878:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 879:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 880:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 881:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 882:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 883:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 884:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 885:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 886:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 887:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 888:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 889:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_NominalBitTimeConfigure(XMC_CAN_NODE_t *const can_node,
 890:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                           const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_b
 891:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 892:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 893:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 894:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node    Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers. Range :CA
 895:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_bit_time  Nominal bit time configuration data structure. Refer @ref XMC_CAN_NODE_NOMI
 896:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 897:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return Status on the sucess setting the desired bitrate XMC_CAN_STATUS_t
 898:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 899:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 900:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Similar to XMC_CAN_NODE_NominalBitTimeConfigure() configures the CAN node baudrate. 
 901:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The difference being that allows bitrates below 100kpbs.
 902:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Consider using the new API for new projects. XMC_CAN_NODE_NominalBitTimeConfigure() is kep
 903:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 904:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures CAN node Baudrate. \a can_bit_time specifies required baudrate for a specified \a can
 905:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NBTR register.
 906:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 907:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
 908:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_InitEx()
 909:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 910:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 911:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** int32_t XMC_CAN_NODE_NominalBitTimeConfigureEx(XMC_CAN_NODE_t *const can_node,
 912:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                                const XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const 
 913:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 914:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 915:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 916:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param input    CAN receive input selection. Refer @ref XMC_CAN_NODE_RECEIVE_INPUT_t for details
 917:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 918:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 919:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 920:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 921:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \a input specifies CAN input receive pin. This API Configures NPCRx register,it is required to c
 922:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange(), before configuring NPCRx register, call XMC_CAN_NODE_D
 923:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after configuring NPCRx register. CAN input receive pins which falls under analog port pins 
 924:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_GPIO_EnableDigitalInput(),to enable digital pad.
 925:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 926:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Related APIs:</b><BR>
 927:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
 928:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 929:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 930:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 931:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 932:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 933:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 934:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveInput(XMC_CAN_NODE_t *const can_node,
 935:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                               const XMC_CAN_NODE_RECEIVE_INPUT_t input)
 936:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
  83              	 .loc 1 936 0
  84              	 .cfi_startproc
  85              	 
  86              	 
  87              	 
  88 0000 80B4     	 push {r7}
  89              	.LCFI6:
  90              	 .cfi_def_cfa_offset 4
  91              	 .cfi_offset 7,-4
  92 0002 83B0     	 sub sp,sp,#12
  93              	.LCFI7:
  94              	 .cfi_def_cfa_offset 16
  95 0004 00AF     	 add r7,sp,#0
  96              	.LCFI8:
  97              	 .cfi_def_cfa_register 7
  98 0006 7860     	 str r0,[r7,#4]
  99 0008 0B46     	 mov r3,r1
 100 000a FB70     	 strb r3,[r7,#3]
 937:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 101              	 .loc 1 937 0
 102 000c 7B68     	 ldr r3,[r7,#4]
 103 000e DB68     	 ldr r3,[r3,#12]
 104 0010 23F00702 	 bic r2,r3,#7
 938:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)input << CAN_NODE_NPCR_RXSEL_Pos) & (uint32_t)CAN_NODE_NPCR_RXSEL_Ms
 105              	 .loc 1 938 0
 106 0014 FB78     	 ldrb r3,[r7,#3]
 107 0016 03F00703 	 and r3,r3,#7
 937:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR = ((can_node->NPCR) & ~(uint32_t)(CAN_NODE_NPCR_RXSEL_Msk)) |
 108              	 .loc 1 937 0
 109 001a 1A43     	 orrs r2,r2,r3
 110 001c 7B68     	 ldr r3,[r7,#4]
 111 001e DA60     	 str r2,[r3,#12]
 939:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 112              	 .loc 1 939 0
 113 0020 0C37     	 adds r7,r7,#12
 114              	.LCFI9:
 115              	 .cfi_def_cfa_offset 4
 116 0022 BD46     	 mov sp,r7
 117              	.LCFI10:
 118              	 .cfi_def_cfa_register 13
 119              	 
 120 0024 5DF8047B 	 ldr r7,[sp],#4
 121              	.LCFI11:
 122              	 .cfi_restore 7
 123              	 .cfi_def_cfa_offset 0
 124 0028 7047     	 bx lr
 125              	 .cfi_endproc
 126              	.LFE173:
 128 002a 00BF     	 .section .text.XMC_CAN_NODE_EnableLoopBack,"ax",%progbits
 129              	 .align 2
 130              	 .thumb
 131              	 .thumb_func
 133              	XMC_CAN_NODE_EnableLoopBack:
 134              	.LFB174:
 940:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 941:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 942:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 943:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node  Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_
 944:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 945:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 946:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 947:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 948:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable Node \a can_node in Loop-Back Mode. A Node is connected to an internal (virtual) loop-bac
 949:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * nodes which are in Loop- Back Mode are connected to this virtual CAN bus so that they can commun
 950:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * other internally. The external transmit line is forced recessive in Loop-Back Mode. This API Con
 951:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 952:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration configuration.
 953:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 954:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 955:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_DisableLoopBack().
 956:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 957:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
 958:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NPCRx can be written only if bit NCRx.CCE is set.
 959:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 960:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 961:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 962:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableLoopBack(XMC_CAN_NODE_t *const can_node)
 963:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 135              	 .loc 1 963 0
 136              	 .cfi_startproc
 137              	 
 138              	 
 139              	 
 140 0000 80B4     	 push {r7}
 141              	.LCFI12:
 142              	 .cfi_def_cfa_offset 4
 143              	 .cfi_offset 7,-4
 144 0002 83B0     	 sub sp,sp,#12
 145              	.LCFI13:
 146              	 .cfi_def_cfa_offset 16
 147 0004 00AF     	 add r7,sp,#0
 148              	.LCFI14:
 149              	 .cfi_def_cfa_register 7
 150 0006 7860     	 str r0,[r7,#4]
 964:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR |= (uint32_t)CAN_NODE_NPCR_LBM_Msk;
 151              	 .loc 1 964 0
 152 0008 7B68     	 ldr r3,[r7,#4]
 153 000a DB68     	 ldr r3,[r3,#12]
 154 000c 43F48072 	 orr r2,r3,#256
 155 0010 7B68     	 ldr r3,[r7,#4]
 156 0012 DA60     	 str r2,[r3,#12]
 965:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 157              	 .loc 1 965 0
 158 0014 0C37     	 adds r7,r7,#12
 159              	.LCFI15:
 160              	 .cfi_def_cfa_offset 4
 161 0016 BD46     	 mov sp,r7
 162              	.LCFI16:
 163              	 .cfi_def_cfa_register 13
 164              	 
 165 0018 5DF8047B 	 ldr r7,[sp],#4
 166              	.LCFI17:
 167              	 .cfi_restore 7
 168              	 .cfi_def_cfa_offset 0
 169 001c 7047     	 bx lr
 170              	 .cfi_endproc
 171              	.LFE174:
 173 001e 00BF     	 .section .text.XMC_CAN_NODE_GetStatus,"ax",%progbits
 174              	 .align 2
 175              	 .thumb
 176              	 .thumb_func
 178              	XMC_CAN_NODE_GetStatus:
 179              	.LFB184:
 966:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 967:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 968:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 969:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 970:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 971:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
 972:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 973:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
 974:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Disable Node Loop-Back Mode, disables internal (virtual) loop-back CAN bus. This API Configures 
 975:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Call XMC_CAN_NODE_EnableConfigurationChange() API before NPCRx configuration, same way XMC_CAN_N
 976:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * API after NPCRx configuration.
 977:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 978:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>]
 979:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableLoopBack()
 980:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 981:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 982:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
 983:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * NPCRx can be written only if bit NCRx.CCE is set.
 984:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 985:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
 986:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 987:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableLoopBack(XMC_CAN_NODE_t *const can_node)
 988:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 989:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NPCR &= ~(uint32_t)CAN_NODE_NPCR_LBM_Msk;
 990:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 991:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 992:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
 993:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
 994:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 995:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
 996:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
 997:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
 998:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
 999:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1000:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1001:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1002:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Enable CAN Node events. It configures NFCR register.
1003:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1004:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1005:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableEvent()
1006:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1007:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1008:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1009:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_EnableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1010:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1011:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1012:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1013:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1014:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1015:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param event    CAN node event mask value. Refer @ref XMC_CAN_NODE_EVENT_t structure for valid v
1016:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *           multiple events can be ORed.
1017:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1018:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1019:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1020:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1021:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Disable CAN Node events. It configures NFCR register.
1022:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1023:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1024:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableEvent()
1025:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1026:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1027:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1028:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** void XMC_CAN_NODE_DisableEvent(XMC_CAN_NODE_t *const can_node, const XMC_CAN_NODE_EVENT_t event);
1029:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1030:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1031:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1032:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1033:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1034:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1035:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_DIR_t Last error transfer direction. Refer @ref XMC_CAN_NODE_LAS
1036:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1037:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1038:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns NODE Last Error occurred during Transmit/receive direction. It returns value of NFCR reg
1039:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1040:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1041:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferInc()\n\n\n
1042:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1043:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1044:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1045:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_DIR_t XMC_CAN_NODE_GetLastErrTransferDir(XMC_CAN_NODE_t *co
1046:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1047:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_DIR_t)(((node->NECNT) & CAN_NODE_NECNT_LETD_Msk) >> CAN_NODE_NECN
1048:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1049:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1050:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1051:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1052:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1053:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_NODE0
1054:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1055:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_NODE_LAST_ERROR_INC_t Last error transfer increment. Refer @ref XMC_CAN_NODE_LAS
1056:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1057:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1058:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns NODE Last Error Transfer Increment. It returns value of NFCR register.
1059:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1060:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1061:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetLastErrTransferDir()\n\n\n
1062:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1063:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1064:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1065:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE XMC_CAN_NODE_LAST_ERROR_INC_t XMC_CAN_NODE_GetLastErrTransferInc(XMC_CAN_NODE_t *co
1066:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1067:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (XMC_CAN_NODE_LAST_ERROR_INC_t)(((node->NECNT) & CAN_NODE_NECNT_LEINC_Msk)>> CAN_NODE_NECN
1068:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1069:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1070:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1071:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1072:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1073:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1074:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param  error_warning_level  Error Warning level value. Range :0-255.
1075:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1076:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1077:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1078:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1079:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures error warning level in order to set the corresponding error warning bit EWRN. It conf
1080:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * into NECNT register. Before this configuration call XMC_CAN_NODE_EnableConfigurationChange() API
1081:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1082:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1083:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetErrorWarningLevel()\n\n\n
1084:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1085:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1086:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1087:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1088:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1089:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1090:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetErrorWarningLevel(XMC_CAN_NODE_t *const can_node, uint8_t erro
1091:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1092:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_EWRNLVL_Msk)) |
1093:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)error_warning_level << CAN_NODE_NECNT_EWRNLVL_Pos) & (uint32_t)CAN_
1094:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1095:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1096:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1097:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1098:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1099:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_tec  transmit error counter value. Range :0-255
1101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Transmit error counter. It configures \a can_tec into NECNT register. Before this co
1106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_EnableConfigurationChange() API.
1107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetTransmitErrorCounter()\n\n\n
1110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  \par<b>Note:</b><br>
1112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t c
1118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_TEC_Msk)) |
1120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                     (((uint32_t)can_tec << CAN_NODE_NECNT_TEC_Pos) & (uint32_t)CAN_NODE_NECNT_TEC_M
1121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_rec  receive error counter value. Range :0-255
1128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Receive Error Counter. It configures \a can_rec into NECNT register. Before this conf
1133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange() API.
1134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetReceiveErrorCounter()\n\n\n
1137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node, uint8_t ca
1144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  can_node->NECNT = ((can_node->NECNT) & ~(uint32_t)(CAN_NODE_NECNT_REC_Msk)) |
1146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                    (((uint32_t)can_rec << CAN_NODE_NECNT_REC_Pos) & (uint32_t)CAN_NODE_NECNT_REC_Ms
1147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t Error Warning Level. Range :0 - 255
1155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns error warning level. This determines the threshold value (warning level, default 96) to
1158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  to set the corresponding error warning bit EWRN. It reads NECNT register.
1159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetErrorWarningLevel()\n\n\n
1162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetErrorWarningLevel(XMC_CAN_NODE_t *const can_node)
1167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_EWRNLVL_Msk) >> CAN_NODE_NECNT_EWR
1169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t transmit error counter value. Range :0 - 255
1177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Transmit Error Counter value. If the Bitstream Processor detects an error while a trans
1180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  running, the Transmit Error Counter is incremented by 8. An increment of 1 is used when the err
1181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  reported by an external CAN node via an Error Frame generation. It reads NECNT register.
1182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetTransmitErrorCounter()
1185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Note:</b><br>
1187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  NECNTx can be written only if bit NCRx.CCE is set.
1188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetTransmitErrorCounter(XMC_CAN_NODE_t *const can_node)
1192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_TEC_Msk) >> CAN_NODE_NECNT_TEC_Po
1194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint8_t  receive error counter value.
1202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Receive Error Counter value. It reads NECNT register.
1205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetReceiveErrorCounter()
1208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint8_t XMC_CAN_NODE_GetReceiveErrorCounter(XMC_CAN_NODE_t *const can_node)
1212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (uint8_t)((uint32_t)((can_node->NECNT)  & CAN_NODE_NECNT_REC_Msk) >> CAN_NODE_NECNT_REC_Po
1214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current status of the node.
1222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Returns errors status as well as successfully transferred CAN frames status.
1225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_NODE_ClearStatus()
1228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_NODE_GetStatus(XMC_CAN_NODE_t *const can_node)
1232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 180              	 .loc 1 1232 0
 181              	 .cfi_startproc
 182              	 
 183              	 
 184              	 
 185 0000 80B4     	 push {r7}
 186              	.LCFI18:
 187              	 .cfi_def_cfa_offset 4
 188              	 .cfi_offset 7,-4
 189 0002 83B0     	 sub sp,sp,#12
 190              	.LCFI19:
 191              	 .cfi_def_cfa_offset 16
 192 0004 00AF     	 add r7,sp,#0
 193              	.LCFI20:
 194              	 .cfi_def_cfa_register 7
 195 0006 7860     	 str r0,[r7,#4]
1233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_node->NSR));
 196              	 .loc 1 1233 0
 197 0008 7B68     	 ldr r3,[r7,#4]
 198 000a 5B68     	 ldr r3,[r3,#4]
1234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 199              	 .loc 1 1234 0
 200 000c 1846     	 mov r0,r3
 201 000e 0C37     	 adds r7,r7,#12
 202              	.LCFI21:
 203              	 .cfi_def_cfa_offset 4
 204 0010 BD46     	 mov sp,r7
 205              	.LCFI22:
 206              	 .cfi_def_cfa_register 13
 207              	 
 208 0012 5DF8047B 	 ldr r7,[sp],#4
 209              	.LCFI23:
 210              	 .cfi_restore 7
 211              	 .cfi_def_cfa_offset 0
 212 0016 7047     	 bx lr
 213              	 .cfi_endproc
 214              	.LFE184:
 216              	 .section .text.XMC_CAN_NODE_ClearStatus,"ax",%progbits
 217              	 .align 2
 218              	 .thumb
 219              	 .thumb_func
 221              	XMC_CAN_NODE_ClearStatus:
 222              	.LFB185:
1235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_status Status to clear.Refer @ref XMC_CAN_NODE_STATUS_t for valid values.
1240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Clear errors status as well as successfully transferred CAN frames status.
1245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_GetStatus()
1248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ClearStatus(XMC_CAN_NODE_t *const can_node,XMC_CAN_NODE_STATUS_t 
1252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 223              	 .loc 1 1252 0
 224              	 .cfi_startproc
 225              	 
 226              	 
 227              	 
 228 0000 80B4     	 push {r7}
 229              	.LCFI24:
 230              	 .cfi_def_cfa_offset 4
 231              	 .cfi_offset 7,-4
 232 0002 83B0     	 sub sp,sp,#12
 233              	.LCFI25:
 234              	 .cfi_def_cfa_offset 16
 235 0004 00AF     	 add r7,sp,#0
 236              	.LCFI26:
 237              	 .cfi_def_cfa_register 7
 238 0006 7860     	 str r0,[r7,#4]
 239 0008 0B46     	 mov r3,r1
 240 000a 7B80     	 strh r3,[r7,#2]
1253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****    can_node->NSR &= ~(uint32_t)can_node_status;
 241              	 .loc 1 1253 0
 242 000c 7B68     	 ldr r3,[r7,#4]
 243 000e 5A68     	 ldr r2,[r3,#4]
 244 0010 7B88     	 ldrh r3,[r7,#2]
 245 0012 DB43     	 mvns r3,r3
 246 0014 1A40     	 ands r2,r2,r3
 247 0016 7B68     	 ldr r3,[r7,#4]
 248 0018 5A60     	 str r2,[r3,#4]
1254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 249              	 .loc 1 1254 0
 250 001a 0C37     	 adds r7,r7,#12
 251              	.LCFI27:
 252              	 .cfi_def_cfa_offset 4
 253 001c BD46     	 mov sp,r7
 254              	.LCFI28:
 255              	 .cfi_def_cfa_register 13
 256              	 
 257 001e 5DF8047B 	 ldr r7,[sp],#4
 258              	.LCFI29:
 259              	 .cfi_restore 7
 260              	 .cfi_def_cfa_offset 0
 261 0022 7047     	 bx lr
 262              	 .cfi_endproc
 263              	.LFE185:
 265              	 .section .text.XMC_CAN_NODE_EnableConfigurationChange,"ax",%progbits
 266              	 .align 2
 267              	 .thumb
 268              	 .thumb_func
 270              	XMC_CAN_NODE_EnableConfigurationChange:
 271              	.LFB186:
1255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Allow to change the configuration of the CAN node, like bit timing, CAN bus transmit/receive por
1265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * counters read. It configures NCRx.CCE bit.
1266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related APIs:</b><BR>
1268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_DisableConfigurationChange()
1269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 272              	 .loc 1 1273 0
 273              	 .cfi_startproc
 274              	 
 275              	 
 276              	 
 277 0000 80B4     	 push {r7}
 278              	.LCFI30:
 279              	 .cfi_def_cfa_offset 4
 280              	 .cfi_offset 7,-4
 281 0002 83B0     	 sub sp,sp,#12
 282              	.LCFI31:
 283              	 .cfi_def_cfa_offset 16
 284 0004 00AF     	 add r7,sp,#0
 285              	.LCFI32:
 286              	 .cfi_def_cfa_register 7
 287 0006 7860     	 str r0,[r7,#4]
1274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CCE_Msk;
 288              	 .loc 1 1274 0
 289 0008 7B68     	 ldr r3,[r7,#4]
 290 000a 1B68     	 ldr r3,[r3]
 291 000c 43F04002 	 orr r2,r3,#64
 292 0010 7B68     	 ldr r3,[r7,#4]
 293 0012 1A60     	 str r2,[r3]
1275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 294              	 .loc 1 1275 0
 295 0014 0C37     	 adds r7,r7,#12
 296              	.LCFI33:
 297              	 .cfi_def_cfa_offset 4
 298 0016 BD46     	 mov sp,r7
 299              	.LCFI34:
 300              	 .cfi_def_cfa_register 13
 301              	 
 302 0018 5DF8047B 	 ldr r7,[sp],#4
 303              	.LCFI35:
 304              	 .cfi_restore 7
 305              	 .cfi_def_cfa_offset 0
 306 001c 7047     	 bx lr
 307              	 .cfi_endproc
 308              	.LFE186:
 310 001e 00BF     	 .section .text.XMC_CAN_NODE_DisableConfigurationChange,"ax",%progbits
 311              	 .align 2
 312              	 .thumb
 313              	 .thumb_func
 315              	XMC_CAN_NODE_DisableConfigurationChange:
 316              	.LFB187:
1276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Forbid to change the configuration of the CAN node. It configures NCRx.CCE bit.
1286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_EnableConfigurationChange()
1289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableConfigurationChange(XMC_CAN_NODE_t *const can_node)
1293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 317              	 .loc 1 1293 0
 318              	 .cfi_startproc
 319              	 
 320              	 
 321              	 
 322 0000 80B4     	 push {r7}
 323              	.LCFI36:
 324              	 .cfi_def_cfa_offset 4
 325              	 .cfi_offset 7,-4
 326 0002 83B0     	 sub sp,sp,#12
 327              	.LCFI37:
 328              	 .cfi_def_cfa_offset 16
 329 0004 00AF     	 add r7,sp,#0
 330              	.LCFI38:
 331              	 .cfi_def_cfa_register 7
 332 0006 7860     	 str r0,[r7,#4]
1294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CCE_Msk;
 333              	 .loc 1 1294 0
 334 0008 7B68     	 ldr r3,[r7,#4]
 335 000a 1B68     	 ldr r3,[r3]
 336 000c 23F04002 	 bic r2,r3,#64
 337 0010 7B68     	 ldr r3,[r7,#4]
 338 0012 1A60     	 str r2,[r3]
1295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 339              	 .loc 1 1295 0
 340 0014 0C37     	 adds r7,r7,#12
 341              	.LCFI39:
 342              	 .cfi_def_cfa_offset 4
 343 0016 BD46     	 mov sp,r7
 344              	.LCFI40:
 345              	 .cfi_def_cfa_register 13
 346              	 
 347 0018 5DF8047B 	 ldr r7,[sp],#4
 348              	.LCFI41:
 349              	 .cfi_restore 7
 350              	 .cfi_def_cfa_offset 0
 351 001c 7047     	 bx lr
 352              	 .cfi_endproc
 353              	.LFE187:
 355 001e 00BF     	 .section .text.XMC_CAN_NODE_SetInitBit,"ax",%progbits
 356              	 .align 2
 357              	 .thumb
 358              	 .thumb_func
 360              	XMC_CAN_NODE_SetInitBit:
 361              	.LFB188:
1296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Disable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node e
1307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ResetInitBit()
1311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetInitBit(XMC_CAN_NODE_t *const can_node)
1315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 362              	 .loc 1 1315 0
 363              	 .cfi_startproc
 364              	 
 365              	 
 366              	 
 367 0000 80B4     	 push {r7}
 368              	.LCFI42:
 369              	 .cfi_def_cfa_offset 4
 370              	 .cfi_offset 7,-4
 371 0002 83B0     	 sub sp,sp,#12
 372              	.LCFI43:
 373              	 .cfi_def_cfa_offset 16
 374 0004 00AF     	 add r7,sp,#0
 375              	.LCFI44:
 376              	 .cfi_def_cfa_register 7
 377 0006 7860     	 str r0,[r7,#4]
1316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_INIT_Msk;
 378              	 .loc 1 1316 0
 379 0008 7B68     	 ldr r3,[r7,#4]
 380 000a 1B68     	 ldr r3,[r3]
 381 000c 43F00102 	 orr r2,r3,#1
 382 0010 7B68     	 ldr r3,[r7,#4]
 383 0012 1A60     	 str r2,[r3]
1317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 384              	 .loc 1 1317 0
 385 0014 0C37     	 adds r7,r7,#12
 386              	.LCFI45:
 387              	 .cfi_def_cfa_offset 4
 388 0016 BD46     	 mov sp,r7
 389              	.LCFI46:
 390              	 .cfi_def_cfa_register 13
 391              	 
 392 0018 5DF8047B 	 ldr r7,[sp],#4
 393              	.LCFI47:
 394              	 .cfi_restore 7
 395              	 .cfi_def_cfa_offset 0
 396 001c 7047     	 bx lr
 397              	 .cfi_endproc
 398              	.LFE188:
 400 001e 00BF     	 .section .text.XMC_CAN_NODE_ResetInitBit,"ax",%progbits
 401              	 .align 2
 402              	 .thumb
 403              	 .thumb_func
 405              	XMC_CAN_NODE_ResetInitBit:
 406              	.LFB189:
1318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN node participation in CAN traffic. Bit INIT is automatically set when the CAN node en
1327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * state. It configures NCR.INIT bit.
1328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetInitBit()
1331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ResetInitBit(XMC_CAN_NODE_t *const can_node)
1334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 407              	 .loc 1 1334 0
 408              	 .cfi_startproc
 409              	 
 410              	 
 411              	 
 412 0000 80B4     	 push {r7}
 413              	.LCFI48:
 414              	 .cfi_def_cfa_offset 4
 415              	 .cfi_offset 7,-4
 416 0002 83B0     	 sub sp,sp,#12
 417              	.LCFI49:
 418              	 .cfi_def_cfa_offset 16
 419 0004 00AF     	 add r7,sp,#0
 420              	.LCFI50:
 421              	 .cfi_def_cfa_register 7
 422 0006 7860     	 str r0,[r7,#4]
1335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_INIT_Msk;
 423              	 .loc 1 1335 0
 424 0008 7B68     	 ldr r3,[r7,#4]
 425 000a 1B68     	 ldr r3,[r3]
 426 000c 23F00102 	 bic r2,r3,#1
 427 0010 7B68     	 ldr r3,[r7,#4]
 428 0012 1A60     	 str r2,[r3]
1336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 429              	 .loc 1 1336 0
 430 0014 0C37     	 adds r7,r7,#12
 431              	.LCFI51:
 432              	 .cfi_def_cfa_offset 4
 433 0016 BD46     	 mov sp,r7
 434              	.LCFI52:
 435              	 .cfi_def_cfa_register 13
 436              	 
 437 0018 5DF8047B 	 ldr r7,[sp],#4
 438              	.LCFI53:
 439              	 .cfi_restore 7
 440              	 .cfi_def_cfa_offset 0
 441 001c 7047     	 bx lr
 442              	 .cfi_endproc
 443              	.LFE189:
 445 001e 00BF     	 .section .text.XMC_CAN_MO_SetEventNodePointer,"ax",%progbits
 446              	 .align 2
 447              	 .thumb
 448              	 .thumb_func
 450              	XMC_CAN_MO_SetEventNodePointer:
 451              	.LFB197:
1337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable the CAN node, starts the participation in CAN traffic. It configures NCR.CANDIS and the N
1346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Enable(XMC_CAN_NODE_t *const can_node)
1352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   XMC_CAN_NODE_ResetInitBit(can_node);
1355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Disable the CAN node, terminates participation in CAN traffic. It configures NCR.CANDIS bit.
1365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_Disable(XMC_CAN_NODE_t *const can_node)
1371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CANDIS_Msk;
1373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configure CAN node in Analyzer Mode. This means that messages may be received, but not transmitt
1382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * is sent on the CAN bus upon frame reception. Active-error flags are sent recessive instead of do
1383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The transmit line is continuously held at recessive (1) level. XMC_CAN_NODE_SetInitBit() should 
1384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * set / reset AnalyzerMode. It configures NCR.CALM bit.
1385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_ReSetAnalyzerMode()
1388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_SetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_CALM_Msk;
1395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Reset the Analyzer mode. CAN node is no more in Analyzer Mode. Please refer XMC_CAN_NODE_SetAnal
1405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * It configures NCR.CALM bit. XMC_CAN_NODE_SetInitBit() should be called before set / reset Analyz
1406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_NODE_SetAnalyzerMode()
1409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_ReSetAnalyzerMode(XMC_CAN_NODE_t *const can_node)
1413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR &= ~(uint32_t)CAN_NODE_NCR_CALM_Msk;
1415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #if !defined(MULTICAN_PLUS)
1418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Trigger the suspension of the CAN node. An OCDS(on chip debug support) suspend trigger disables 
1425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * soon as the CAN node becomes bus-idle or bus-off, bit INIT is internally forced to 1 to disable 
1426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * The actual value of bit INIT remains unchanged. It configures NCR.SUSEN bit
1427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *\par<b>Note:</b><br>
1432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Bit SUSEN is reset via OCDS(on chip debug support) Reset.
1433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_EnableSuspend(XMC_CAN_NODE_t *const can_node)
1437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_SUSEN_Msk;
1439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #else
1441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Disables the transmission on CAN node x as soon as bus-idle is reached.
1448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @note Only available for XMC1400,XMC4800 and XMC4700 series
1453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_DisableTransmit(XMC_CAN_NODE_t *const can_node)
1456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NCR |= (uint32_t)CAN_NODE_NCR_TXDIS_Msk;
1458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** #endif
1460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node_init frame counter mode selection. Refer @ref XMC_CAN_NODE_FRAME_COUNTER_t for v
1466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures frame counter functions. Each CAN \a can_node is equipped with a frame counter that c
1471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * CAN frames or obtains information about the time when a frame has been started to transmit or be
1472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * node. It configures NFCR register.
1473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_NODE_FrameCounterConfigure(XMC_CAN_NODE_t *const can_node,
1480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                         const XMC_CAN_NODE_FRAME_COUNTER_t *const can_node_init)
1481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_node->NFCR = (can_node->NFCR & ~(uint32_t)(CAN_NODE_NFCR_CFMOD_Msk |
1483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                        CAN_NODE_NFCR_CFSEL_Msk)) |
1484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                     can_node_init->nfcr;
1485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_node Pointer Pointing to CAN_NODE Structure. Defines CAN_NODE registers, Range :CAN_N
1491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint16_t current value of the CAN frame counter. Range :0-65535
1493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns the frame counter value \a can_node of the CAN node. In Frame Count Mode (CFMOD = 00B),
1496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  count value. In Time Stamp Mode (CFMOD = 01B), this API returns the captured bit time count val
1497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  the start of a new frame. In all Bit Timing Analysis Modes (CFMOD = 10B), this API always retur
1498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  fCLC clock cycles (measurement result) minus 1.
1499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint16_t XMC_CAN_NODE_GetCANFrameCounter(XMC_CAN_NODE_t *const can_node)
1506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return (uint16_t)(((uint32_t)(can_node->NFCR & CAN_NODE_NFCR_CFC_Msk) >> CAN_NODE_NFCR_CFC_Pos));
1508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                      /*MO APIs*/
1511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Data to be transmitted and data length code.
1522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_Config()\n\n\n
1525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_UpdateData(const XMC_CAN_MO_t *const can_mo);
1530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures transmit request for sending data frame. It configures MOCTR register. Data shall be
1539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  using XMC_CAN_MO_UpdateData() before calling this API.
1540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_UpdateData()\n\n\n
1543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Transmit(const XMC_CAN_MO_t *const can_mo);
1547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_Receive(XMC_CAN_MO_t *can_mo);
1564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return XMC_CAN_STATUS_t CAN Node status. Refer @ref XMC_CAN_STATUS_t structure for details.
1570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Reads the Message Object data bytes, into message pointer passed as input parameter \a can_mo.
1573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  can_data[0] of can_mo holds lower 4 bytes, can_data[1] of can_mo holds higher 4 bytes.
1574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** XMC_CAN_STATUS_t XMC_CAN_MO_ReceiveData (XMC_CAN_MO_t *can_mo);
1580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo       Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure 
1582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo_ptr_int   Message Object event node pointer selection. Refer @ref XMC_CAN_MO_POINT
1583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *                for valid values.
1584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param service_request interrupt output line of multiCAN module.
1585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Configures Message Object event node pointer with \a service_request number. It configures MOIPR
1590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetEventNodePointer(const XMC_CAN_MO_t *const can_mo,
1597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                                 const XMC_CAN_MO_POINTER_EVENT_t can_mo_ptr_int,
1598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                                 const uint32_t service_request)
1599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 452              	 .loc 1 1599 0
 453              	 .cfi_startproc
 454              	 
 455              	 
 456              	 
 457 0000 80B4     	 push {r7}
 458              	.LCFI54:
 459              	 .cfi_def_cfa_offset 4
 460              	 .cfi_offset 7,-4
 461 0002 85B0     	 sub sp,sp,#20
 462              	.LCFI55:
 463              	 .cfi_def_cfa_offset 24
 464 0004 00AF     	 add r7,sp,#0
 465              	.LCFI56:
 466              	 .cfi_def_cfa_register 7
 467 0006 F860     	 str r0,[r7,#12]
 468 0008 0B46     	 mov r3,r1
 469 000a 7A60     	 str r2,[r7,#4]
 470 000c FB72     	 strb r3,[r7,#11]
1600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 471              	 .loc 1 1600 0
 472 000e FB68     	 ldr r3,[r7,#12]
 473 0010 1B68     	 ldr r3,[r3]
 474 0012 FA68     	 ldr r2,[r7,#12]
 475 0014 1268     	 ldr r2,[r2]
 476 0016 9168     	 ldr r1,[r2,#8]
 477 0018 FA7A     	 ldrb r2,[r7,#11]
 478 001a 0720     	 movs r0,#7
 479 001c 00FA02F2 	 lsl r2,r0,r2
 480 0020 D243     	 mvns r2,r2
 481 0022 1140     	 ands r1,r1,r2
1601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                           (service_request << (uint32_t)can_mo_ptr_int);
 482              	 .loc 1 1601 0
 483 0024 FA7A     	 ldrb r2,[r7,#11]
 484 0026 7868     	 ldr r0,[r7,#4]
 485 0028 00FA02F2 	 lsl r2,r0,r2
1600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOIPR = ((can_mo->can_mo_ptr->MOIPR ) & ~(uint32_t)((uint32_t)CAN_MO_MOIPR_Ms
 486              	 .loc 1 1600 0
 487 002c 0A43     	 orrs r2,r2,r1
 488 002e 9A60     	 str r2,[r3,#8]
1602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 489              	 .loc 1 1602 0
 490 0030 1437     	 adds r7,r7,#20
 491              	.LCFI57:
 492              	 .cfi_def_cfa_offset 4
 493 0032 BD46     	 mov sp,r7
 494              	.LCFI58:
 495              	 .cfi_def_cfa_register 13
 496              	 
 497 0034 5DF8047B 	 ldr r7,[sp],#4
 498              	.LCFI59:
 499              	 .cfi_restore 7
 500              	 .cfi_def_cfa_offset 0
 501 0038 7047     	 bx lr
 502              	 .cfi_endproc
 503              	.LFE197:
 505 003a 00BF     	 .section .text.XMC_CAN_MO_GetStatus,"ax",%progbits
 506              	 .align 2
 507              	 .thumb
 508              	 .thumb_func
 510              	XMC_CAN_MO_GetStatus:
 511              	.LFB198:
1603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return uint32_t Current Message Object status.
1608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Returns Message Object status, that indicates message object transfer status and message object
1611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  information such as the number of the current message object predecessor and successor message 
1612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  the list number to which the message object is assigned.
1613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE uint32_t XMC_CAN_MO_GetStatus(const XMC_CAN_MO_t *const can_mo)
1620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 512              	 .loc 1 1620 0
 513              	 .cfi_startproc
 514              	 
 515              	 
 516              	 
 517 0000 80B4     	 push {r7}
 518              	.LCFI60:
 519              	 .cfi_def_cfa_offset 4
 520              	 .cfi_offset 7,-4
 521 0002 83B0     	 sub sp,sp,#12
 522              	.LCFI61:
 523              	 .cfi_def_cfa_offset 16
 524 0004 00AF     	 add r7,sp,#0
 525              	.LCFI62:
 526              	 .cfi_def_cfa_register 7
 527 0006 7860     	 str r0,[r7,#4]
1621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   return ((can_mo->can_mo_ptr->MOSTAT));
 528              	 .loc 1 1621 0
 529 0008 7B68     	 ldr r3,[r7,#4]
 530 000a 1B68     	 ldr r3,[r3]
 531 000c DB69     	 ldr r3,[r3,#28]
1622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 532              	 .loc 1 1622 0
 533 000e 1846     	 mov r0,r3
 534 0010 0C37     	 adds r7,r7,#12
 535              	.LCFI63:
 536              	 .cfi_def_cfa_offset 4
 537 0012 BD46     	 mov sp,r7
 538              	.LCFI64:
 539              	 .cfi_def_cfa_register 13
 540              	 
 541 0014 5DF8047B 	 ldr r7,[sp],#4
 542              	.LCFI65:
 543              	 .cfi_restore 7
 544              	 .cfi_def_cfa_offset 0
 545 0018 7047     	 bx lr
 546              	 .cfi_endproc
 547              	.LFE198:
 549 001a 00BF     	 .section .text.XMC_CAN_MO_ResetStatus,"ax",%progbits
 550              	 .align 2
 551              	 .thumb
 552              	 .thumb_func
 554              	XMC_CAN_MO_ResetStatus:
 555              	.LFB200:
1623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_SET_STATUS_t for detail
1628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *         Multiple enums can be ORed.
1629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Configures Message Object set Status. It configures MOCTR register.
1633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * XMC_CAN_MO_ResetStatus()\n\n\n
1636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_SetStatus(const XMC_CAN_MO_t *const can_mo, const uint32_t mask)
1640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
1641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
1642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
1643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param mask   Message Object set status selection. Refer @ref XMC_CAN_MO_RESET_STATUS_t for deta
1648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *             Multiple enums can be ORed.
1649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  Clears Message Object interrupt events. It configures MOCTR register.
1653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * None
1656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_ResetStatus(const XMC_CAN_MO_t *const can_mo,const uint32_t mask)
1660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 556              	 .loc 1 1660 0
 557              	 .cfi_startproc
 558              	 
 559              	 
 560              	 
 561 0000 80B4     	 push {r7}
 562              	.LCFI66:
 563              	 .cfi_def_cfa_offset 4
 564              	 .cfi_offset 7,-4
 565 0002 83B0     	 sub sp,sp,#12
 566              	.LCFI67:
 567              	 .cfi_def_cfa_offset 16
 568 0004 00AF     	 add r7,sp,#0
 569              	.LCFI68:
 570              	 .cfi_def_cfa_register 7
 571 0006 7860     	 str r0,[r7,#4]
 572 0008 3960     	 str r1,[r7]
1661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOCTR = mask;
 573              	 .loc 1 1661 0
 574 000a 7B68     	 ldr r3,[r7,#4]
 575 000c 1B68     	 ldr r3,[r3]
 576 000e 3A68     	 ldr r2,[r7]
 577 0010 DA61     	 str r2,[r3,#28]
1662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 578              	 .loc 1 1662 0
 579 0012 0C37     	 adds r7,r7,#12
 580              	.LCFI69:
 581              	 .cfi_def_cfa_offset 4
 582 0014 BD46     	 mov sp,r7
 583              	.LCFI70:
 584              	 .cfi_def_cfa_register 13
 585              	 
 586 0016 5DF8047B 	 ldr r7,[sp],#4
 587              	.LCFI71:
 588              	 .cfi_restore 7
 589              	 .cfi_def_cfa_offset 0
 590 001a 7047     	 bx lr
 591              	 .cfi_endproc
 592              	.LFE200:
 594              	 .section .text.XMC_CAN_MO_EnableEvent,"ax",%progbits
 595              	 .align 2
 596              	 .thumb
 597              	 .thumb_func
 599              	XMC_CAN_MO_EnableEvent:
 600              	.LFB201:
1663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** /**
1667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param can_mo Pointer to Message Object structure. Refer @ref XMC_CAN_MO_t data structure for de
1668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @param event  CAN node Message Object event selection. Refer @ref XMC_CAN_MO_EVENT_t for details
1669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * @return None
1671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Description:</b><br>
1673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * Enable CAN Message Object events. \a event can be ORed multiple Message Object events. It config
1674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  * \par<b>Related API's:</b><br>
1676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *  XMC_CAN_MO_DisableEvent()
1677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  *
1678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****  */
1679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** 
1680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** __STATIC_INLINE void XMC_CAN_MO_EnableEvent(const XMC_CAN_MO_t *const can_mo,
1681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****                                         const uint32_t event)
1682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** {
 601              	 .loc 1 1682 0
 602              	 .cfi_startproc
 603              	 
 604              	 
 605              	 
 606 0000 80B4     	 push {r7}
 607              	.LCFI72:
 608              	 .cfi_def_cfa_offset 4
 609              	 .cfi_offset 7,-4
 610 0002 83B0     	 sub sp,sp,#12
 611              	.LCFI73:
 612              	 .cfi_def_cfa_offset 16
 613 0004 00AF     	 add r7,sp,#0
 614              	.LCFI74:
 615              	 .cfi_def_cfa_register 7
 616 0006 7860     	 str r0,[r7,#4]
 617 0008 3960     	 str r1,[r7]
1683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h ****   can_mo->can_mo_ptr->MOFCR |= event;
 618              	 .loc 1 1683 0
 619 000a 7B68     	 ldr r3,[r7,#4]
 620 000c 1B68     	 ldr r3,[r3]
 621 000e 7A68     	 ldr r2,[r7,#4]
 622 0010 1268     	 ldr r2,[r2]
 623 0012 1168     	 ldr r1,[r2]
 624 0014 3A68     	 ldr r2,[r7]
 625 0016 0A43     	 orrs r2,r2,r1
 626 0018 1A60     	 str r2,[r3]
1684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_can.h **** }
 627              	 .loc 1 1684 0
 628 001a 0C37     	 adds r7,r7,#12
 629              	.LCFI75:
 630              	 .cfi_def_cfa_offset 4
 631 001c BD46     	 mov sp,r7
 632              	.LCFI76:
 633              	 .cfi_def_cfa_register 13
 634              	 
 635 001e 5DF8047B 	 ldr r7,[sp],#4
 636              	.LCFI77:
 637              	 .cfi_restore 7
 638              	 .cfi_def_cfa_offset 0
 639 0022 7047     	 bx lr
 640              	 .cfi_endproc
 641              	.LFE201:
 643              	 .section .text.CAN_NODE_MO_EnableTxEvent,"ax",%progbits
 644              	 .align 2
 645              	 .thumb
 646              	 .thumb_func
 648              	CAN_NODE_MO_EnableTxEvent:
 649              	.LFB234:
 650              	 .file 2 "../Dave/Generated/CAN_NODE/can_node.h"
   1:../Dave/Generated/CAN_NODE/can_node.h **** /**
   2:../Dave/Generated/CAN_NODE/can_node.h ****  * @file can_node.h
   3:../Dave/Generated/CAN_NODE/can_node.h ****  * @date 2016-06-20
   4:../Dave/Generated/CAN_NODE/can_node.h ****  *
   5:../Dave/Generated/CAN_NODE/can_node.h ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.h ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.h ****  *
   8:../Dave/Generated/CAN_NODE/can_node.h ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.h ****  * CAN_NODE v4.1.16 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.h ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.h ****  *
  13:../Dave/Generated/CAN_NODE/can_node.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.h ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.h ****  *
  16:../Dave/Generated/CAN_NODE/can_node.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.h ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.h ****  *
  19:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.h ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.h ****  *
  22:../Dave/Generated/CAN_NODE/can_node.h ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.h ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.h ****  *
  25:../Dave/Generated/CAN_NODE/can_node.h ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.h ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.h ****  *
  28:../Dave/Generated/CAN_NODE/can_node.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.h ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.h ****  *
  36:../Dave/Generated/CAN_NODE/can_node.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.h ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.h ****  *
  40:../Dave/Generated/CAN_NODE/can_node.h ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.h ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.h ****  *
  43:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.h ****  *
  46:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.h ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(),CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSta
  49:../Dave/Generated/CAN_NODE/can_node.h ****  *
  50:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-18:
  51:../Dave/Generated/CAN_NODE/can_node.h ****  *     - LLD version check is removed.<br>
  52:../Dave/Generated/CAN_NODE/can_node.h ****  *     - Version check added for XMCLib dependency.<br>
  53:../Dave/Generated/CAN_NODE/can_node.h ****  *
  54:../Dave/Generated/CAN_NODE/can_node.h ****  * 2015-06-30:
  55:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New APIs are added: CAN_NODE_Enable() and CAN_NODE_Disable() to enable and disable CAN nod
  56:../Dave/Generated/CAN_NODE/can_node.h ****  *         from participating CAN traffic. <br>
  57:../Dave/Generated/CAN_NODE/can_node.h ****  *
  58:../Dave/Generated/CAN_NODE/can_node.h ****  * 2016-06-20:
  59:../Dave/Generated/CAN_NODE/can_node.h ****  *     - New API added: CAN_NODE_MO_UpdateID() to update the message object identifier.
  60:../Dave/Generated/CAN_NODE/can_node.h ****  *
  61:../Dave/Generated/CAN_NODE/can_node.h ****  * @endcond
  62:../Dave/Generated/CAN_NODE/can_node.h ****  *
  63:../Dave/Generated/CAN_NODE/can_node.h ****  */
  64:../Dave/Generated/CAN_NODE/can_node.h **** 
  65:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
  66:../Dave/Generated/CAN_NODE/can_node.h ****  * HEADER FILES
  67:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  68:../Dave/Generated/CAN_NODE/can_node.h **** 
  69:../Dave/Generated/CAN_NODE/can_node.h **** #ifndef CAN_NODE_H
  70:../Dave/Generated/CAN_NODE/can_node.h **** #define CAN_NODE_H
  71:../Dave/Generated/CAN_NODE/can_node.h **** 
  72:../Dave/Generated/CAN_NODE/can_node.h **** #include <xmc_can.h>
  73:../Dave/Generated/CAN_NODE/can_node.h **** #include <xmc_gpio.h>
  74:../Dave/Generated/CAN_NODE/can_node.h **** #include "../GLOBAL_CAN/global_can.h"
  75:../Dave/Generated/CAN_NODE/can_node.h **** #include "can_node_conf.h"
  76:../Dave/Generated/CAN_NODE/can_node.h **** #include <DAVE_common.h>
  77:../Dave/Generated/CAN_NODE/can_node.h **** 
  78:../Dave/Generated/CAN_NODE/can_node.h ****  /*************************************************************************************************
  79:../Dave/Generated/CAN_NODE/can_node.h ****  * MACROS
  80:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  81:../Dave/Generated/CAN_NODE/can_node.h **** 
  82:../Dave/Generated/CAN_NODE/can_node.h **** #if (!((XMC_LIB_MAJOR_VERSION == 2U) && \
  83:../Dave/Generated/CAN_NODE/can_node.h ****        (XMC_LIB_MINOR_VERSION >= 0U) && \
  84:../Dave/Generated/CAN_NODE/can_node.h ****        (XMC_LIB_PATCH_VERSION >= 0U)))
  85:../Dave/Generated/CAN_NODE/can_node.h **** #error "CAN_NODE requires XMC Peripheral Library v2.0.0 or higher"
  86:../Dave/Generated/CAN_NODE/can_node.h **** #endif
  87:../Dave/Generated/CAN_NODE/can_node.h **** 
  88:../Dave/Generated/CAN_NODE/can_node.h ****  /*************************************************************************************************
  89:../Dave/Generated/CAN_NODE/can_node.h ****  * ENUMS
  90:../Dave/Generated/CAN_NODE/can_node.h ****  **************************************************************************************************
  91:../Dave/Generated/CAN_NODE/can_node.h **** /**
  92:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_enumerations
  93:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
  94:../Dave/Generated/CAN_NODE/can_node.h ****  */
  95:../Dave/Generated/CAN_NODE/can_node.h **** 
  96:../Dave/Generated/CAN_NODE/can_node.h **** /**
  97:../Dave/Generated/CAN_NODE/can_node.h ****  *  Enum to describe the possible status values, returned
  98:../Dave/Generated/CAN_NODE/can_node.h ****  *  by CAN APIs.
  99:../Dave/Generated/CAN_NODE/can_node.h ****  */
 100:../Dave/Generated/CAN_NODE/can_node.h **** typedef enum CAN_NODE_STATUS
 101:../Dave/Generated/CAN_NODE/can_node.h **** {
 102:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_SUCCESS = 0, /**< APP success state */
 103:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_FAILURE,  /**< Returned when unknown error occurred */
 104:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_BUSY,      /**< CAN_NODE is busy and can not handle request*/
 105:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_NOT_ACCEPTABLE,/**< Message object type not allowed*/
 106:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_STATUS_MO_DISABLED  /**< Returned if Message object is disabled */
 107:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_STATUS_t;
 108:../Dave/Generated/CAN_NODE/can_node.h **** 
 109:../Dave/Generated/CAN_NODE/can_node.h **** 
 110:../Dave/Generated/CAN_NODE/can_node.h **** /**
 111:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 112:../Dave/Generated/CAN_NODE/can_node.h ****  */
 113:../Dave/Generated/CAN_NODE/can_node.h **** 
 114:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 115:../Dave/Generated/CAN_NODE/can_node.h **** * DATA STRUCTURES
 116:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 117:../Dave/Generated/CAN_NODE/can_node.h **** 
 118:../Dave/Generated/CAN_NODE/can_node.h **** /**
 119:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_datastructures
 120:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 121:../Dave/Generated/CAN_NODE/can_node.h ****  */
 122:../Dave/Generated/CAN_NODE/can_node.h **** 
 123:../Dave/Generated/CAN_NODE/can_node.h **** /**
 124:../Dave/Generated/CAN_NODE/can_node.h ****  * This is the data structure to hold the configured port and pin numbers for CAN_NODE.
 125:../Dave/Generated/CAN_NODE/can_node.h ****  *
 126:../Dave/Generated/CAN_NODE/can_node.h ****  */
 127:../Dave/Generated/CAN_NODE/can_node.h **** 
 128:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_GPIO
 129:../Dave/Generated/CAN_NODE/can_node.h **** {
 130:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_GPIO_PORT_t  *const port; /**< Pointer to port hardware register to select for CAN communicat
 131:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t  pin;    /**< Configured CAN Tx/Rx pin number */
 132:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_GPIO_t;
 133:../Dave/Generated/CAN_NODE/can_node.h **** 
 134:../Dave/Generated/CAN_NODE/can_node.h **** /**
 135:../Dave/Generated/CAN_NODE/can_node.h ****  *    Node events service request structure for CAN_NODE.
 136:../Dave/Generated/CAN_NODE/can_node.h ****  *    To enable the events user explicitly connect the signals to INTERUPT APP.
 137:../Dave/Generated/CAN_NODE/can_node.h ****  */
 138:../Dave/Generated/CAN_NODE/can_node.h **** typedef const struct CAN_NODE_SR
 139:../Dave/Generated/CAN_NODE/can_node.h **** {
 140:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t alert_event_sr;      /**< Alert event service request  */
 141:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t lec_event_sr;        /**< LEC event service request  */
 142:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t txok_event_sr;       /**< Transmit OK event service request  */
 143:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t framecount_event_sr; /**< Frame count event service request  */
 144:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_SR_t;
 145:../Dave/Generated/CAN_NODE/can_node.h **** 
 146:../Dave/Generated/CAN_NODE/can_node.h **** /**
 147:../Dave/Generated/CAN_NODE/can_node.h ****  *   Message object structure for CAN_NODE APP
 148:../Dave/Generated/CAN_NODE/can_node.h ****  */
 149:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE_LMO
 150:../Dave/Generated/CAN_NODE/can_node.h **** {
 151:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_t *mo_ptr;        /**< CAN message object pointer */
 152:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t number;              /**< Consumed CAN message object number */
 153:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t tx_sr;               /**< CAN message object transmit service request */
 154:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t rx_sr;               /**< CAN message object receive service request */
 155:../Dave/Generated/CAN_NODE/can_node.h ****   const bool tx_event_enable;  /**< GUI configured value for CAN message object transmit event chec
 156:../Dave/Generated/CAN_NODE/can_node.h ****   const bool rx_event_enable;  /**< GUI configured value for CAN message object receive event check
 157:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_LMO_t;
 158:../Dave/Generated/CAN_NODE/can_node.h **** 
 159:../Dave/Generated/CAN_NODE/can_node.h **** /**
 160:../Dave/Generated/CAN_NODE/can_node.h ****  *  Initialization data structure for CAN_NODE APP
 161:../Dave/Generated/CAN_NODE/can_node.h ****  */
 162:../Dave/Generated/CAN_NODE/can_node.h **** typedef struct CAN_NODE
 163:../Dave/Generated/CAN_NODE/can_node.h **** {
 164:../Dave/Generated/CAN_NODE/can_node.h ****   GLOBAL_CAN_t *const global_ptr;                    /**< Global CAN pointer */
 165:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_t *const node_ptr;                    /**< Consumed CAN node pointer */
 166:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *baudrate_config; /**< Pointer to bit time configuration s
 167:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_LMO_t *lmobj_ptr[32];                     /**< Array of pointer to logical message objec
 168:../Dave/Generated/CAN_NODE/can_node.h ****   CAN_NODE_SR_t *node_sr_ptr;                        /**< Node service request  */
 169:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_out;          /**< GPIO structure for CAN transmit pin  */
 170:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_out_config;   /**< GPIO configuration structure for CAN tran
 171:../Dave/Generated/CAN_NODE/can_node.h ****   const CAN_NODE_GPIO_t    *const gpio_in;           /**< GPIO structure for CAN receive pin  */
 172:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_GPIO_CONFIG_t  *const gpio_in_config;    /**< GPIO configuration structure for CAN rece
 173:../Dave/Generated/CAN_NODE/can_node.h ****   const XMC_CAN_NODE_RECEIVE_INPUT_t rx_signal;      /**< Possible input type for CAN receive pin *
 174:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t node_num;                                  /**< Consumed CAN node number */
 175:../Dave/Generated/CAN_NODE/can_node.h ****   uint8_t mo_count;                                  /**< GUI configured value Consumed CAN MO coun
 176:../Dave/Generated/CAN_NODE/can_node.h ****   bool lec_event_enable;                       /**< GUI configured value for LEC event check box  *
 177:../Dave/Generated/CAN_NODE/can_node.h ****   bool txok_event_enable;                      /**< GUI configured value for transmit OK event chec
 178:../Dave/Generated/CAN_NODE/can_node.h ****   bool alert_event_enable;                     /**< GUI configured value for alert event check box 
 179:../Dave/Generated/CAN_NODE/can_node.h ****   bool framecount_event_enable;                /**< GUI configured value for frame count event chec
 180:../Dave/Generated/CAN_NODE/can_node.h ****   bool loopback_enable;                        /**< GUI configured value for loop back enable check
 181:../Dave/Generated/CAN_NODE/can_node.h **** 
 182:../Dave/Generated/CAN_NODE/can_node.h **** } CAN_NODE_t;
 183:../Dave/Generated/CAN_NODE/can_node.h **** 
 184:../Dave/Generated/CAN_NODE/can_node.h **** /**
 185:../Dave/Generated/CAN_NODE/can_node.h ****  * @}
 186:../Dave/Generated/CAN_NODE/can_node.h ****  */
 187:../Dave/Generated/CAN_NODE/can_node.h **** 
 188:../Dave/Generated/CAN_NODE/can_node.h **** /**************************************************************************************************
 189:../Dave/Generated/CAN_NODE/can_node.h **** * API Prototypes
 190:../Dave/Generated/CAN_NODE/can_node.h **** ***************************************************************************************************
 191:../Dave/Generated/CAN_NODE/can_node.h **** /* Support for C++ codebase */
 192:../Dave/Generated/CAN_NODE/can_node.h **** #ifdef __cplusplus
 193:../Dave/Generated/CAN_NODE/can_node.h **** extern "C" {
 194:../Dave/Generated/CAN_NODE/can_node.h **** #endif
 195:../Dave/Generated/CAN_NODE/can_node.h **** 
 196:../Dave/Generated/CAN_NODE/can_node.h **** /**
 197:../Dave/Generated/CAN_NODE/can_node.h ****  * @ingroup CAN_NODE_apidoc
 198:../Dave/Generated/CAN_NODE/can_node.h ****  * @{
 199:../Dave/Generated/CAN_NODE/can_node.h ****  */
 200:../Dave/Generated/CAN_NODE/can_node.h **** 
 201:../Dave/Generated/CAN_NODE/can_node.h **** /**
 202:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to read the CAN_NODE APP version.
 203:../Dave/Generated/CAN_NODE/can_node.h ****  *
 204:../Dave/Generated/CAN_NODE/can_node.h ****  * @return DAVE_APP_VERSION_t Structure that contains the members
 205:../Dave/Generated/CAN_NODE/can_node.h ****  *         major, minor and patch values.
 206:../Dave/Generated/CAN_NODE/can_node.h ****  *
 207:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 208:../Dave/Generated/CAN_NODE/can_node.h ****  * The function can be used to check application software compatibility with a
 209:../Dave/Generated/CAN_NODE/can_node.h ****  * specific version of the APP.
 210:../Dave/Generated/CAN_NODE/can_node.h ****  *
 211:../Dave/Generated/CAN_NODE/can_node.h ****  *
 212:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 213:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 214:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 215:../Dave/Generated/CAN_NODE/can_node.h ****  *
 216:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 217:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 218:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 219:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_APP_VERSION_t can_version;
 220:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 221:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 222:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 223:../Dave/Generated/CAN_NODE/can_node.h ****  *       can_version = CAN_NODE_GetAppVersion();
 224:../Dave/Generated/CAN_NODE/can_node.h ****  *       if ((can_version.major == 4U) &&
 225:../Dave/Generated/CAN_NODE/can_node.h ****  *          (can_version.minor == 1U))
 226:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 227:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code
 228:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 229:../Dave/Generated/CAN_NODE/can_node.h ****  *       else
 230:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 231:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Probably, not the right version.
 232:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 233:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 234:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 235:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 236:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 237:../Dave/Generated/CAN_NODE/can_node.h ****  *
 238:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 239:../Dave/Generated/CAN_NODE/can_node.h ****  *
 240:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 241:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 242:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 243:../Dave/Generated/CAN_NODE/can_node.h ****  */
 244:../Dave/Generated/CAN_NODE/can_node.h **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion(void);
 245:../Dave/Generated/CAN_NODE/can_node.h **** 
 246:../Dave/Generated/CAN_NODE/can_node.h **** /**
 247:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN node by configuring the baud rate,
 248:../Dave/Generated/CAN_NODE/can_node.h ****  *        can bus type(External or internal) and message objects.
 249:../Dave/Generated/CAN_NODE/can_node.h ****  *
 250:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 251:../Dave/Generated/CAN_NODE/can_node.h ****  * @return CAN_NODE_STATUS_t CAN_NODE_STATUS_SUCCESS: if the initialization succeeds.<BR>
 252:../Dave/Generated/CAN_NODE/can_node.h ****  *                           CAN_NODE_STATUS_FAILURE  : for failure case.<BR>
 253:../Dave/Generated/CAN_NODE/can_node.h ****  *
 254:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 255:../Dave/Generated/CAN_NODE/can_node.h ****  * This function internally calls GLOBAL_CAN_Init() API to configure peripheral frequency
 256:../Dave/Generated/CAN_NODE/can_node.h ****  * to enable CAN communication. API configures loop back mode or external CAN bus, message objects
 257:../Dave/Generated/CAN_NODE/can_node.h ****  *  based on the settings and enables configured event flags and service request values.
 258:../Dave/Generated/CAN_NODE/can_node.h ****  *
 259:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 260:../Dave/Generated/CAN_NODE/can_node.h ****  *
 261:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 262:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 263:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 264:../Dave/Generated/CAN_NODE/can_node.h ****  *
 265:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 266:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 267:../Dave/Generated/CAN_NODE/can_node.h ****  *     CAN_NODE_STATUS_t init_status;
 268:../Dave/Generated/CAN_NODE/can_node.h ****  *      // DAVE_Init() internally calls CAN_NODE_Init()
 269:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = CAN_NODE_Init(&CAN_NODE_0);
 270:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == CAN_NODE_STATUS_SUCCESS)
 271:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 272:../Dave/Generated/CAN_NODE/can_node.h ****  *
 273:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code
 274:../Dave/Generated/CAN_NODE/can_node.h ****  *
 275:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 276:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 277:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 278:../Dave/Generated/CAN_NODE/can_node.h ****  *
 279:../Dave/Generated/CAN_NODE/can_node.h ****  *      // Failed to initialize the CAN peripheral
 280:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 281:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 282:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 283:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 284:../Dave/Generated/CAN_NODE/can_node.h ****  *
 285:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 286:../Dave/Generated/CAN_NODE/can_node.h ****  *
 287:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 288:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 289:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 290:../Dave/Generated/CAN_NODE/can_node.h ****  */
 291:../Dave/Generated/CAN_NODE/can_node.h **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t *handle);
 292:../Dave/Generated/CAN_NODE/can_node.h **** 
 293:../Dave/Generated/CAN_NODE/can_node.h **** /**
 294:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to initialize the CAN message object. It configures message type,
 295:../Dave/Generated/CAN_NODE/can_node.h ****  *         message ID type, Identifier value, mask bits, required data length.<br>
 296:../Dave/Generated/CAN_NODE/can_node.h ****  *         It also configures the transmit and receive events for the message object.<br>
 297:../Dave/Generated/CAN_NODE/can_node.h ****  *
 298:../Dave/Generated/CAN_NODE/can_node.h ****  * @param lmo_ptr is a handle with pointers to static and dynamic content of message object.@ref CA
 299:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.
 300:../Dave/Generated/CAN_NODE/can_node.h ****  *
 301:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 302:../Dave/Generated/CAN_NODE/can_node.h ****  *
 303:../Dave/Generated/CAN_NODE/can_node.h ****  *  It configures message type to transmit / receive message object, message ID type to standard / 
 304:../Dave/Generated/CAN_NODE/can_node.h ****  *         Identifier value, mask bits,required data length for the transmit message object.
 305:../Dave/Generated/CAN_NODE/can_node.h ****  *  It also enables configured event flags for message objects.
 306:../Dave/Generated/CAN_NODE/can_node.h ****  *  To achieve this functionality API calls XMC_CAN_MO_Config().
 307:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 308:../Dave/Generated/CAN_NODE/can_node.h ****  *
 309:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 310:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 311:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 312:../Dave/Generated/CAN_NODE/can_node.h ****  *
 313:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 314:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 315:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 316:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 317:../Dave/Generated/CAN_NODE/can_node.h ****  *     XMC_CAN_MO_t *MO_Ptr;
 318:../Dave/Generated/CAN_NODE/can_node.h ****  *
 319:../Dave/Generated/CAN_NODE/can_node.h ****  *     MO_Ptr = HandlePtr1->lmobj_ptr[0]->mo_ptr;   //'0' refers to first message object configured
 320:../Dave/Generated/CAN_NODE/can_node.h ****  *                                                   // for the selected can node
 321:../Dave/Generated/CAN_NODE/can_node.h ****  *
 322:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init(); //CAN_NODE_Init();
 323:../Dave/Generated/CAN_NODE/can_node.h ****  *
 324:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 325:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 326:../Dave/Generated/CAN_NODE/can_node.h ****  *
 327:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Application code.
 328:../Dave/Generated/CAN_NODE/can_node.h ****  *
 329:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_mo_type = XMC_CAN_MO_TYPE_TRANSMSGOBJ;  //Configure message object type as tra
 330:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_id_mode = XMC_CAN_FRAME_TYPE_STANDARD_11BITS; //configure MO identifier type
 331:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data_length = 8; // Configure CAN transmit MO data length field
 332:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[1] = 0xAAAA5555;  // Configure Higher 4 bytes of Data
 333:../Dave/Generated/CAN_NODE/can_node.h ****  *       MO_Ptr->can_data[0] = 0xAAAA5555;  // Configure Lower 4 bytes of Data
 334:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Runtime change the MO configuration
 335:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Init(HandlePtr1->lmobj_ptr[0]);
 336:../Dave/Generated/CAN_NODE/can_node.h ****  *
 337:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 338:../Dave/Generated/CAN_NODE/can_node.h ****  *     else
 339:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 340:../Dave/Generated/CAN_NODE/can_node.h ****  *       // CAN initialization failed
 341:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 342:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 343:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 344:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 345:../Dave/Generated/CAN_NODE/can_node.h ****  *
 346:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 347:../Dave/Generated/CAN_NODE/can_node.h ****  *
 348:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 349:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 350:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 351:../Dave/Generated/CAN_NODE/can_node.h ****  */
 352:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr);
 353:../Dave/Generated/CAN_NODE/can_node.h **** 
 354:../Dave/Generated/CAN_NODE/can_node.h **** /**
 355:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to configures the CAN bit time by using SJW, sample point and can frequency.<br>
 356:../Dave/Generated/CAN_NODE/can_node.h ****  *
 357:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t
 358:../Dave/Generated/CAN_NODE/can_node.h ****  * @param baudrate  is the required baud rate for the CAN node.
 359:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sample_point is the sample point for the bit time.<br>
 360:../Dave/Generated/CAN_NODE/can_node.h ****  *        \b Range: 0% to 100% of the total bit time.<br>
 361:../Dave/Generated/CAN_NODE/can_node.h ****  * @param sjw is the (synchronization jump width) time quanta for resynchronizations.<br>
 362:../Dave/Generated/CAN_NODE/can_node.h ****  *
 363:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 364:../Dave/Generated/CAN_NODE/can_node.h ****  *
 365:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 366:../Dave/Generated/CAN_NODE/can_node.h ****  *
 367:../Dave/Generated/CAN_NODE/can_node.h ****  * This function configures the CAN node bit time by updating synchronous jump width,
 368:../Dave/Generated/CAN_NODE/can_node.h ****  *      baud rate prescaler(BRP),sample point, divider mode, and time segment values to
 369:../Dave/Generated/CAN_NODE/can_node.h ****  *      the node bit timing register(NBTR). To achieve this functionality
 370:../Dave/Generated/CAN_NODE/can_node.h ****  *      API calls XMC_CAN_NODE_NominalBitTimeConfigure().
 371:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 372:../Dave/Generated/CAN_NODE/can_node.h ****  *
 373:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 374:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 375:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 376:../Dave/Generated/CAN_NODE/can_node.h ****  *
 377:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 378:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 379:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 380:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 381:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t new_baudrate = 1000000;  // in Hz
 382:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint16_t new_sampe_point = 80;
 383:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint8_t new_sjw = 2;
 384:../Dave/Generated/CAN_NODE/can_node.h ****  *
 385:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 386:../Dave/Generated/CAN_NODE/can_node.h ****  *     // DAVE_Init() internally calls CAN_NODE_Init()
 387:../Dave/Generated/CAN_NODE/can_node.h ****  *     //CAN_NODE_Init() internally calls CAN_NODE_ConfigBaudrate()
 388:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 389:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 390:../Dave/Generated/CAN_NODE/can_node.h ****  *       //  Application code ........
 391:../Dave/Generated/CAN_NODE/can_node.h ****  *
 392:../Dave/Generated/CAN_NODE/can_node.h ****  *       // For run time baud rate configuration change
 393:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure new baud rate to 1MHz
 394:../Dave/Generated/CAN_NODE/can_node.h ****  *
 395:../Dave/Generated/CAN_NODE/can_node.h ****  *       XMC_CAN_NODE_SetInitBit(HandlePtr1->node_ptr);
 396:../Dave/Generated/CAN_NODE/can_node.h ****  *
 397:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_ConfigBaudrate(HandlePtr1, new_baudrate, new_sampe_point,new_sjw);
 398:../Dave/Generated/CAN_NODE/can_node.h ****  *
 399:../Dave/Generated/CAN_NODE/can_node.h ****  *       XMC_CAN_NODE_ResetInitBit(HandlePtr1->node_ptr);
 400:../Dave/Generated/CAN_NODE/can_node.h ****  *
 401:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 402:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 403:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 404:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 405:../Dave/Generated/CAN_NODE/can_node.h ****  *
 406:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 407:../Dave/Generated/CAN_NODE/can_node.h ****  *
 408:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 409:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 410:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 411:../Dave/Generated/CAN_NODE/can_node.h ****  */
 412:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 413:../Dave/Generated/CAN_NODE/can_node.h **** 
 414:../Dave/Generated/CAN_NODE/can_node.h **** 
 415:../Dave/Generated/CAN_NODE/can_node.h **** /**
 416:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable the node events like node alert, LEC, Transfer OK, frame counter overf
 417:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t<br>
 418:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to enable. @ref XMC_CAN_NODE_EVENT_t <br>
 419:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 420:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None <BR>
 421:../Dave/Generated/CAN_NODE/can_node.h ****  *
 422:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 423:../Dave/Generated/CAN_NODE/can_node.h ****  * This function check the node event flags which are enabled through GUI. If the flags are configu
 424:../Dave/Generated/CAN_NODE/can_node.h ****  * then API enables the related CAN node events.
 425:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 426:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 427:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 428:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 429:../Dave/Generated/CAN_NODE/can_node.h ****  * This API enables the above events by configuring NCR register.
 430:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_EnableEvent().
 431:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 432:../Dave/Generated/CAN_NODE/can_node.h ****  *
 433:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 434:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 435:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 436:../Dave/Generated/CAN_NODE/can_node.h ****  *
 437:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 438:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 439:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 440:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 441:../Dave/Generated/CAN_NODE/can_node.h ****  *
 442:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 443:../Dave/Generated/CAN_NODE/can_node.h ****  *     //DAVE_Init();   internally calls CAN_NODE_Init()
 444:../Dave/Generated/CAN_NODE/can_node.h ****  *     //CAN_NODE_Init() internally calls CAN_NODE_EnableEvent()
 445:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 446:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 447:../Dave/Generated/CAN_NODE/can_node.h ****  *
 448:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code ..
 449:../Dave/Generated/CAN_NODE/can_node.h ****  *
 450:../Dave/Generated/CAN_NODE/can_node.h ****  *       // enable the events during run time....
 451:../Dave/Generated/CAN_NODE/can_node.h ****  *       //  enable LEC event
 452:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 453:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Alert event
 454:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 455:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Transmit OK event
 456:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 457:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable CFCIE event
 458:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 459:../Dave/Generated/CAN_NODE/can_node.h ****  *
 460:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code...
 461:../Dave/Generated/CAN_NODE/can_node.h ****  *
 462:../Dave/Generated/CAN_NODE/can_node.h ****  *
 463:../Dave/Generated/CAN_NODE/can_node.h ****  *
 464:../Dave/Generated/CAN_NODE/can_node.h ****  *        // disable the events by calling CAN_NODE_DisableEvent() API
 465:../Dave/Generated/CAN_NODE/can_node.h ****  *
 466:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 467:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 468:../Dave/Generated/CAN_NODE/can_node.h ****  *     while (1)
 469:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 470:../Dave/Generated/CAN_NODE/can_node.h ****  *
 471:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 472:../Dave/Generated/CAN_NODE/can_node.h ****  *
 473:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 474:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 475:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 476:../Dave/Generated/CAN_NODE/can_node.h ****  */
 477:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 478:../Dave/Generated/CAN_NODE/can_node.h **** 
 479:../Dave/Generated/CAN_NODE/can_node.h **** /**
 480:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable the selected node events like node alert, LEC, Transfer OK, frame cou
 481:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t.<br>
 482:../Dave/Generated/CAN_NODE/can_node.h ****  * @param  node_event is the required node event to disable. @ref XMC_CAN_NODE_EVENT_t <br>
 483:../Dave/Generated/CAN_NODE/can_node.h ****  *         \b Note:  Multiple events can not be combined using \a OR operation.
 484:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 485:../Dave/Generated/CAN_NODE/can_node.h ****  *
 486:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 487:../Dave/Generated/CAN_NODE/can_node.h ****  *
 488:../Dave/Generated/CAN_NODE/can_node.h ****  * This function disables the CAN node events. Using the API following node events can be disabled,
 489:../Dave/Generated/CAN_NODE/can_node.h ****  * 1. XMC_CAN_NODE_EVENT_TX_INT
 490:../Dave/Generated/CAN_NODE/can_node.h ****  * 2. XMC_CAN_NODE_EVENT_LEC
 491:../Dave/Generated/CAN_NODE/can_node.h ****  * 3. XMC_CAN_NODE_EVENT_ALERT
 492:../Dave/Generated/CAN_NODE/can_node.h ****  * 4. XMC_CAN_NODE_EVENT_CFCIE
 493:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_DisableEvent().
 494:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 495:../Dave/Generated/CAN_NODE/can_node.h ****  *
 496:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 497:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 498:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 499:../Dave/Generated/CAN_NODE/can_node.h ****  *
 500:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 501:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 502:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 503:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1= &CAN_NODE_0;
 504:../Dave/Generated/CAN_NODE/can_node.h ****  *
 505:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 506:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 507:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 508:../Dave/Generated/CAN_NODE/can_node.h ****  *
 509:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code..
 510:../Dave/Generated/CAN_NODE/can_node.h ****  *
 511:../Dave/Generated/CAN_NODE/can_node.h ****  *        //  enable LEC event
 512:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 513:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Alert event
 514:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 515:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable Transmit OK event
 516:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 517:../Dave/Generated/CAN_NODE/can_node.h ****  *        // enable CFCIE event
 518:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_EnableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 519:../Dave/Generated/CAN_NODE/can_node.h ****  *
 520:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code
 521:../Dave/Generated/CAN_NODE/can_node.h ****  *
 522:../Dave/Generated/CAN_NODE/can_node.h ****  *
 523:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling LEC event
 524:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_ALERT);
 525:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling Alert event
 526:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_LEC);
 527:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling Transmit OK event
 528:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_TX_INT);
 529:../Dave/Generated/CAN_NODE/can_node.h ****  *        // For disabling CFCIE event
 530:../Dave/Generated/CAN_NODE/can_node.h ****  *        CAN_NODE_DisableEvent(HandlePtr1,XMC_CAN_NODE_EVENT_CFCIE);
 531:../Dave/Generated/CAN_NODE/can_node.h ****  *
 532:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 533:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 534:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 535:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 536:../Dave/Generated/CAN_NODE/can_node.h ****  *
 537:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 538:../Dave/Generated/CAN_NODE/can_node.h ****  *
 539:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 540:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 541:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 542:../Dave/Generated/CAN_NODE/can_node.h ****  */
 543:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event);
 544:../Dave/Generated/CAN_NODE/can_node.h **** 
 545:../Dave/Generated/CAN_NODE/can_node.h **** /**
 546:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to retrieve the current status of the can node.
 547:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.
 548:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t
 549:../Dave/Generated/CAN_NODE/can_node.h ****  * @return status of type uint32_t.<BR>
 550:../Dave/Generated/CAN_NODE/can_node.h ****  *
 551:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 552:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 553:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 554:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 555:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 556:../Dave/Generated/CAN_NODE/can_node.h ****  *
 557:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 558:../Dave/Generated/CAN_NODE/can_node.h ****  *
 559:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 560:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 561:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 562:../Dave/Generated/CAN_NODE/can_node.h ****  *
 563:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 564:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 565:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 566:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 567:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t status;
 568:../Dave/Generated/CAN_NODE/can_node.h ****  *
 569:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 570:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 571:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 572:../Dave/Generated/CAN_NODE/can_node.h ****  *
 573:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Transmit MO data
 574:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 575:../Dave/Generated/CAN_NODE/can_node.h ****  *
 576:../Dave/Generated/CAN_NODE/can_node.h ****  *       status = CAN_NODE_GetStatus(HandlePtr1);
 577:../Dave/Generated/CAN_NODE/can_node.h ****  *       if (status & XMC_CAN_NODE_STATUS_TX_OK)
 578:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 579:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Message transmitted successfully
 580:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 581:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 582:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 583:../Dave/Generated/CAN_NODE/can_node.h ****  *         // node alert warning event enabled
 584:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 585:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 586:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 587:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Bus off error
 588:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 589:../Dave/Generated/CAN_NODE/can_node.h ****  *
 590:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 591:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 592:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 593:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 594:../Dave/Generated/CAN_NODE/can_node.h ****  *
 595:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 596:../Dave/Generated/CAN_NODE/can_node.h ****  *
 597:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 598:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 599:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 600:../Dave/Generated/CAN_NODE/can_node.h ****  */
 601:../Dave/Generated/CAN_NODE/can_node.h **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t *handle);
 602:../Dave/Generated/CAN_NODE/can_node.h **** 
 603:../Dave/Generated/CAN_NODE/can_node.h **** 
 604:../Dave/Generated/CAN_NODE/can_node.h **** /**
 605:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to reset / clear the specific status of the can node.
 606:../Dave/Generated/CAN_NODE/can_node.h ****  *        It contains error information as well as successfully transferred CAN frames status.<br>
 607:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_node_status  is a node status enum. @ref XMC_CAN_NODE_STATUS_t <br>
 608:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle  is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 609:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 610:../Dave/Generated/CAN_NODE/can_node.h ****  *
 611:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 612:../Dave/Generated/CAN_NODE/can_node.h ****  * Status provides an overview about the current state of the respective CAN node,
 613:../Dave/Generated/CAN_NODE/can_node.h ****  * comprising information about CAN transfers, CAN node status and error conditions.
 614:../Dave/Generated/CAN_NODE/can_node.h ****  * It reads NSR (node status register)register.
 615:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_NODE_GetStatus().
 616:../Dave/Generated/CAN_NODE/can_node.h ****  *
 617:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 618:../Dave/Generated/CAN_NODE/can_node.h ****  *
 619:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 620:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 621:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 622:../Dave/Generated/CAN_NODE/can_node.h ****  *
 623:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 624:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 625:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 626:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 627:../Dave/Generated/CAN_NODE/can_node.h ****  *     uint32_t status;
 628:../Dave/Generated/CAN_NODE/can_node.h ****  *
 629:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 630:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 631:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 632:../Dave/Generated/CAN_NODE/can_node.h ****  *
 633:../Dave/Generated/CAN_NODE/can_node.h ****  *       //Transmit MO data
 634:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 635:../Dave/Generated/CAN_NODE/can_node.h ****  *
 636:../Dave/Generated/CAN_NODE/can_node.h ****  *       status = CAN_NODE_GetStatus(HandlePtr1);
 637:../Dave/Generated/CAN_NODE/can_node.h ****  *       if (status & XMC_CAN_NODE_STATUS_TX_OK)
 638:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 639:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Message transmitted successfully
 640:../Dave/Generated/CAN_NODE/can_node.h ****  *         CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_TX_OK);
 641:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code..
 642:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 643:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_ALERT_WARNING)
 644:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 645:../Dave/Generated/CAN_NODE/can_node.h ****  *         // node alert warning event enabled
 646:../Dave/Generated/CAN_NODE/can_node.h ****  *         CAN_NODE_ClearStatus(HandlePtr1,XMC_CAN_NODE_STATUS_ALERT_WARNING);
 647:../Dave/Generated/CAN_NODE/can_node.h ****  *         // Application code..
 648:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 649:../Dave/Generated/CAN_NODE/can_node.h ****  *       else if (status & XMC_CAN_NODE_STATUS_BUS_OFF)
 650:../Dave/Generated/CAN_NODE/can_node.h ****  *       {
 651:../Dave/Generated/CAN_NODE/can_node.h ****  *         //Bus off error
 652:../Dave/Generated/CAN_NODE/can_node.h ****  *       }
 653:../Dave/Generated/CAN_NODE/can_node.h ****  *
 654:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 655:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 656:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 657:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 658:../Dave/Generated/CAN_NODE/can_node.h ****  *
 659:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 660:../Dave/Generated/CAN_NODE/can_node.h ****  *
 661:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 662:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 663:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 664:../Dave/Generated/CAN_NODE/can_node.h ****  */
 665:../Dave/Generated/CAN_NODE/can_node.h **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status);
 666:../Dave/Generated/CAN_NODE/can_node.h **** 
 667:../Dave/Generated/CAN_NODE/can_node.h **** /**
 668:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable CAN node for participation in CAN traffic.<br>
 669:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 670:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 671:../Dave/Generated/CAN_NODE/can_node.h ****  *
 672:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 673:../Dave/Generated/CAN_NODE/can_node.h ****  * Enables the CAN node for participation in the CAN traffic by configuring NCR.INIT and NCR.CANDIS
 674:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 675:../Dave/Generated/CAN_NODE/can_node.h ****  *
 676:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 677:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 678:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 679:../Dave/Generated/CAN_NODE/can_node.h ****  *
 680:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 681:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 682:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 683:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 684:../Dave/Generated/CAN_NODE/can_node.h ****  *
 685:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 686:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 687:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 688:../Dave/Generated/CAN_NODE/can_node.h ****  *
 689:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 690:../Dave/Generated/CAN_NODE/can_node.h ****  *
 691:../Dave/Generated/CAN_NODE/can_node.h ****  *
 692:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Disable CAN node from participating in CAN traffic.
 693:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Disable(HandlePtr1);
 694:../Dave/Generated/CAN_NODE/can_node.h ****  *
 695:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 696:../Dave/Generated/CAN_NODE/can_node.h ****  *
 697:../Dave/Generated/CAN_NODE/can_node.h ****  *
 698:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable CAN node for participating in CAN traffic.
 699:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Enable(HandlePtr1);
 700:../Dave/Generated/CAN_NODE/can_node.h ****  *
 701:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 702:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 703:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 704:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 705:../Dave/Generated/CAN_NODE/can_node.h ****  *
 706:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 707:../Dave/Generated/CAN_NODE/can_node.h ****  *
 708:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 709:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 710:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 711:../Dave/Generated/CAN_NODE/can_node.h ****  */
 712:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Enable(const CAN_NODE_t *handle)
 713:../Dave/Generated/CAN_NODE/can_node.h **** {
 714:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Enable: null pointer", handle != NULL);
 715:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Enable(handle->node_ptr);
 716:../Dave/Generated/CAN_NODE/can_node.h **** }
 717:../Dave/Generated/CAN_NODE/can_node.h **** 
 718:../Dave/Generated/CAN_NODE/can_node.h **** /**
 719:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to disable CAN node from participating in CAN traffic.<br>
 720:../Dave/Generated/CAN_NODE/can_node.h ****  * @param handle is a pointer pointing to APP data structure.@ref CAN_NODE_t <br>
 721:../Dave/Generated/CAN_NODE/can_node.h ****  * @return none.<BR>
 722:../Dave/Generated/CAN_NODE/can_node.h ****  *
 723:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 724:../Dave/Generated/CAN_NODE/can_node.h ****  * Disables the CAN node from participating in the CAN traffic by configuring NCR.CANDIS bit.
 725:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 726:../Dave/Generated/CAN_NODE/can_node.h ****  *
 727:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 728:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 729:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 730:../Dave/Generated/CAN_NODE/can_node.h ****  *
 731:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 732:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 733:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 734:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 735:../Dave/Generated/CAN_NODE/can_node.h ****  *
 736:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 737:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 738:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 739:../Dave/Generated/CAN_NODE/can_node.h ****  *
 740:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 741:../Dave/Generated/CAN_NODE/can_node.h ****  *
 742:../Dave/Generated/CAN_NODE/can_node.h ****  *
 743:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Disable CAN node from participating in CAN traffic.
 744:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Disable(HandlePtr1);
 745:../Dave/Generated/CAN_NODE/can_node.h ****  *
 746:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code..
 747:../Dave/Generated/CAN_NODE/can_node.h ****  *
 748:../Dave/Generated/CAN_NODE/can_node.h ****  *
 749:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable CAN node for participating in CAN traffic.
 750:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_Enable(HandlePtr1);
 751:../Dave/Generated/CAN_NODE/can_node.h ****  *
 752:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 753:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 754:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 755:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 756:../Dave/Generated/CAN_NODE/can_node.h ****  *
 757:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 758:../Dave/Generated/CAN_NODE/can_node.h ****  *
 759:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 760:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 761:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 762:../Dave/Generated/CAN_NODE/can_node.h ****  */
 763:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_Disable(const CAN_NODE_t *handle)
 764:../Dave/Generated/CAN_NODE/can_node.h **** {
 765:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_Disable: null pointer", handle != NULL);
 766:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_NODE_Disable(handle->node_ptr);
 767:../Dave/Generated/CAN_NODE/can_node.h **** }
 768:../Dave/Generated/CAN_NODE/can_node.h **** 
 769:../Dave/Generated/CAN_NODE/can_node.h **** /**
 770:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO transmit event for the selected logical message object.
 771:../Dave/Generated/CAN_NODE/can_node.h ****  *         It sets the TXIE bit of the MOFCR register.
 772:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure.@ref CAN_NODE_LMO_t<br>
 773:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 774:../Dave/Generated/CAN_NODE/can_node.h ****  *
 775:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 776:../Dave/Generated/CAN_NODE/can_node.h ****  *
 777:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO transmit event for the selected logical message object.
 778:../Dave/Generated/CAN_NODE/can_node.h ****  * It configures MOFCR register. To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 779:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 780:../Dave/Generated/CAN_NODE/can_node.h ****  *
 781:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 782:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 783:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 784:../Dave/Generated/CAN_NODE/can_node.h ****  *
 785:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 786:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 787:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 788:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 789:../Dave/Generated/CAN_NODE/can_node.h ****  *
 790:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 791:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 792:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 793:../Dave/Generated/CAN_NODE/can_node.h ****  *
 794:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Enable the transmit event for the selected message object.
 795:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_EnableTxEvent(HandlePtr1->lmobj_ptr[0]);
 796:../Dave/Generated/CAN_NODE/can_node.h ****  *
 797:../Dave/Generated/CAN_NODE/can_node.h ****  *       //transmit data from the message object.
 798:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_Transmit(HandlePtr1->lmobj_ptr[0]);
 799:../Dave/Generated/CAN_NODE/can_node.h ****  *
 800:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure the interrupt APP and connect the transmit signal of the message object to NV
 801:../Dave/Generated/CAN_NODE/can_node.h ****  *       //After the successful transmission of message object, transmit event will be generated.
 802:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Application code
 803:../Dave/Generated/CAN_NODE/can_node.h ****  *
 804:../Dave/Generated/CAN_NODE/can_node.h ****  *
 805:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 806:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 807:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 808:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 809:../Dave/Generated/CAN_NODE/can_node.h ****  *
 810:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 811:../Dave/Generated/CAN_NODE/can_node.h ****  *
 812:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 813:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 814:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 815:../Dave/Generated/CAN_NODE/can_node.h ****  */
 816:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableTxEvent(const CAN_NODE_LMO_t *const can_lmo)
 817:../Dave/Generated/CAN_NODE/can_node.h **** {
 651              	 .loc 2 817 0
 652              	 .cfi_startproc
 653              	 
 654              	 
 655 0000 80B5     	 push {r7,lr}
 656              	.LCFI78:
 657              	 .cfi_def_cfa_offset 8
 658              	 .cfi_offset 7,-8
 659              	 .cfi_offset 14,-4
 660 0002 82B0     	 sub sp,sp,#8
 661              	.LCFI79:
 662              	 .cfi_def_cfa_offset 16
 663 0004 00AF     	 add r7,sp,#0
 664              	.LCFI80:
 665              	 .cfi_def_cfa_register 7
 666 0006 7860     	 str r0,[r7,#4]
 818:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableTxEvent: null pointer", can_lmo != NULL);
 819:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_TRANSMIT);
 667              	 .loc 2 819 0
 668 0008 7B68     	 ldr r3,[r7,#4]
 669 000a 1B68     	 ldr r3,[r3]
 670 000c 1846     	 mov r0,r3
 671 000e 4FF40031 	 mov r1,#131072
 672 0012 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 820:../Dave/Generated/CAN_NODE/can_node.h **** }
 673              	 .loc 2 820 0
 674 0016 0837     	 adds r7,r7,#8
 675              	.LCFI81:
 676              	 .cfi_def_cfa_offset 8
 677 0018 BD46     	 mov sp,r7
 678              	.LCFI82:
 679              	 .cfi_def_cfa_register 13
 680              	 
 681 001a 80BD     	 pop {r7,pc}
 682              	 .cfi_endproc
 683              	.LFE234:
 685              	 .section .text.CAN_NODE_MO_EnableRxEvent,"ax",%progbits
 686              	 .align 2
 687              	 .thumb
 688              	 .thumb_func
 690              	CAN_NODE_MO_EnableRxEvent:
 691              	.LFB235:
 821:../Dave/Generated/CAN_NODE/can_node.h **** 
 822:../Dave/Generated/CAN_NODE/can_node.h **** /**
 823:../Dave/Generated/CAN_NODE/can_node.h ****  * @brief Function to enable MO receive event for the selected logical message object.
 824:../Dave/Generated/CAN_NODE/can_node.h ****  *        It sets the RXIE bit of the MOFCR register. The event will be generated after
 825:../Dave/Generated/CAN_NODE/can_node.h ****                reception of a CAN message.<br>
 826:../Dave/Generated/CAN_NODE/can_node.h ****  * @param can_lmo is a pointer to a logical message object structure @ref CAN_NODE_LMO_t.
 827:../Dave/Generated/CAN_NODE/can_node.h ****  * @return None.<BR>
 828:../Dave/Generated/CAN_NODE/can_node.h ****  *
 829:../Dave/Generated/CAN_NODE/can_node.h ****  * \par<b>Description:</b><br>
 830:../Dave/Generated/CAN_NODE/can_node.h ****  *
 831:../Dave/Generated/CAN_NODE/can_node.h ****  * This function to enable the MO receive event for the selected logical message object.
 832:../Dave/Generated/CAN_NODE/can_node.h ****  * The event is generated after reception of a CAN message.
 833:../Dave/Generated/CAN_NODE/can_node.h ****  * To achieve this functionality API calls XMC_CAN_MO_EnableEvent().
 834:../Dave/Generated/CAN_NODE/can_node.h ****  * <BR>
 835:../Dave/Generated/CAN_NODE/can_node.h ****  *
 836:../Dave/Generated/CAN_NODE/can_node.h ****  * Example Usage:
 837:../Dave/Generated/CAN_NODE/can_node.h ****  * @code
 838:../Dave/Generated/CAN_NODE/can_node.h ****  *   #include <DAVE.h>         //Declarations from DAVE Code Generation (includes SFR declaration)
 839:../Dave/Generated/CAN_NODE/can_node.h ****  *
 840:../Dave/Generated/CAN_NODE/can_node.h ****  *   int main(void)
 841:../Dave/Generated/CAN_NODE/can_node.h ****  *   {
 842:../Dave/Generated/CAN_NODE/can_node.h ****  *     DAVE_STATUS_t init_status;
 843:../Dave/Generated/CAN_NODE/can_node.h ****  *     const CAN_NODE_t *HandlePtr1 = &CAN_NODE_0;
 844:../Dave/Generated/CAN_NODE/can_node.h ****  *
 845:../Dave/Generated/CAN_NODE/can_node.h ****  *     init_status = DAVE_Init();
 846:../Dave/Generated/CAN_NODE/can_node.h ****  *     if (init_status == DAVE_STATUS_SUCCESS)
 847:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 848:../Dave/Generated/CAN_NODE/can_node.h ****  *
 849:../Dave/Generated/CAN_NODE/can_node.h ****  *
 850:../Dave/Generated/CAN_NODE/can_node.h ****  *       CAN_NODE_MO_EnableRxEvent(HandlePtr1->lmobj_ptr[0]);
 851:../Dave/Generated/CAN_NODE/can_node.h ****  *
 852:../Dave/Generated/CAN_NODE/can_node.h ****  *        // Application code
 853:../Dave/Generated/CAN_NODE/can_node.h ****  *
 854:../Dave/Generated/CAN_NODE/can_node.h ****  *
 855:../Dave/Generated/CAN_NODE/can_node.h ****  *       // Configure the interrupt APP and connect the receive signal of the message object to NVI
 856:../Dave/Generated/CAN_NODE/can_node.h ****  *       //After the successful reception of message object, receive event will be generated.
 857:../Dave/Generated/CAN_NODE/can_node.h ****  *
 858:../Dave/Generated/CAN_NODE/can_node.h ****  *
 859:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 860:../Dave/Generated/CAN_NODE/can_node.h ****  *     // More code here
 861:../Dave/Generated/CAN_NODE/can_node.h ****  *     while(1)
 862:../Dave/Generated/CAN_NODE/can_node.h ****  *     {
 863:../Dave/Generated/CAN_NODE/can_node.h ****  *
 864:../Dave/Generated/CAN_NODE/can_node.h ****  *     }
 865:../Dave/Generated/CAN_NODE/can_node.h ****  *
 866:../Dave/Generated/CAN_NODE/can_node.h ****  *     return (1);
 867:../Dave/Generated/CAN_NODE/can_node.h ****  *  }
 868:../Dave/Generated/CAN_NODE/can_node.h ****  *  @endcode
 869:../Dave/Generated/CAN_NODE/can_node.h ****  */
 870:../Dave/Generated/CAN_NODE/can_node.h **** 
 871:../Dave/Generated/CAN_NODE/can_node.h **** __STATIC_INLINE void CAN_NODE_MO_EnableRxEvent(const CAN_NODE_LMO_t *const can_lmo)
 872:../Dave/Generated/CAN_NODE/can_node.h **** {
 692              	 .loc 2 872 0
 693              	 .cfi_startproc
 694              	 
 695              	 
 696 0000 80B5     	 push {r7,lr}
 697              	.LCFI83:
 698              	 .cfi_def_cfa_offset 8
 699              	 .cfi_offset 7,-8
 700              	 .cfi_offset 14,-4
 701 0002 82B0     	 sub sp,sp,#8
 702              	.LCFI84:
 703              	 .cfi_def_cfa_offset 16
 704 0004 00AF     	 add r7,sp,#0
 705              	.LCFI85:
 706              	 .cfi_def_cfa_register 7
 707 0006 7860     	 str r0,[r7,#4]
 873:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_ASSERT("CAN_NODE_MO_EnableRxEvent: null pointer", can_lmo != NULL);
 874:../Dave/Generated/CAN_NODE/can_node.h ****   XMC_CAN_MO_EnableEvent(can_lmo->mo_ptr,XMC_CAN_MO_EVENT_RECEIVE);
 708              	 .loc 2 874 0
 709 0008 7B68     	 ldr r3,[r7,#4]
 710 000a 1B68     	 ldr r3,[r3]
 711 000c 1846     	 mov r0,r3
 712 000e 4FF48031 	 mov r1,#65536
 713 0012 FFF7FEFF 	 bl XMC_CAN_MO_EnableEvent
 875:../Dave/Generated/CAN_NODE/can_node.h **** }
 714              	 .loc 2 875 0
 715 0016 0837     	 adds r7,r7,#8
 716              	.LCFI86:
 717              	 .cfi_def_cfa_offset 8
 718 0018 BD46     	 mov sp,r7
 719              	.LCFI87:
 720              	 .cfi_def_cfa_register 13
 721              	 
 722 001a 80BD     	 pop {r7,pc}
 723              	 .cfi_endproc
 724              	.LFE235:
 726              	 .section .text.CAN_NODE_SetNodeEvents,"ax",%progbits
 727              	 .align 2
 728              	 .thumb
 729              	 .thumb_func
 731              	CAN_NODE_SetNodeEvents:
 732              	.LFB239:
 733              	 .file 3 "../Dave/Generated/CAN_NODE/can_node.c"
   1:../Dave/Generated/CAN_NODE/can_node.c **** /**
   2:../Dave/Generated/CAN_NODE/can_node.c ****  * @file can_node.c
   3:../Dave/Generated/CAN_NODE/can_node.c ****  * @date 2015-06-30
   4:../Dave/Generated/CAN_NODE/can_node.c ****  *
   5:../Dave/Generated/CAN_NODE/can_node.c ****  * NOTE:
   6:../Dave/Generated/CAN_NODE/can_node.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/CAN_NODE/can_node.c ****  *
   8:../Dave/Generated/CAN_NODE/can_node.c ****  * @cond
   9:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  10:../Dave/Generated/CAN_NODE/can_node.c ****  * CAN_NODE v4.1.16 - Configures a Node and MO registers of MultiCAN module. It provides a run-time
  11:../Dave/Generated/CAN_NODE/can_node.c ****  *                   node baud rate and to enable/disable Node and MO events.
  12:../Dave/Generated/CAN_NODE/can_node.c ****  *
  13:../Dave/Generated/CAN_NODE/can_node.c ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  14:../Dave/Generated/CAN_NODE/can_node.c ****  * All rights reserved.
  15:../Dave/Generated/CAN_NODE/can_node.c ****  *
  16:../Dave/Generated/CAN_NODE/can_node.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  17:../Dave/Generated/CAN_NODE/can_node.c ****  * following conditions are met:
  18:../Dave/Generated/CAN_NODE/can_node.c ****  *
  19:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  20:../Dave/Generated/CAN_NODE/can_node.c ****  *   disclaimer.
  21:../Dave/Generated/CAN_NODE/can_node.c ****  *
  22:../Dave/Generated/CAN_NODE/can_node.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  23:../Dave/Generated/CAN_NODE/can_node.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  24:../Dave/Generated/CAN_NODE/can_node.c ****  *
  25:../Dave/Generated/CAN_NODE/can_node.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  26:../Dave/Generated/CAN_NODE/can_node.c ****  *   products derived from this software without specific prior written permission.
  27:../Dave/Generated/CAN_NODE/can_node.c ****  *
  28:../Dave/Generated/CAN_NODE/can_node.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  29:../Dave/Generated/CAN_NODE/can_node.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  30:../Dave/Generated/CAN_NODE/can_node.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  31:../Dave/Generated/CAN_NODE/can_node.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  32:../Dave/Generated/CAN_NODE/can_node.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  33:../Dave/Generated/CAN_NODE/can_node.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  34:../Dave/Generated/CAN_NODE/can_node.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  35:../Dave/Generated/CAN_NODE/can_node.c ****  *
  36:../Dave/Generated/CAN_NODE/can_node.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  37:../Dave/Generated/CAN_NODE/can_node.c ****  * with Infineon Technologies AG (dave@infineon.com).
  38:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  39:../Dave/Generated/CAN_NODE/can_node.c ****  *
  40:../Dave/Generated/CAN_NODE/can_node.c ****  * Change History
  41:../Dave/Generated/CAN_NODE/can_node.c ****  * --------------
  42:../Dave/Generated/CAN_NODE/can_node.c ****  *
  43:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-02-16:
  44:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Initial version<br>
  45:../Dave/Generated/CAN_NODE/can_node.c ****  *
  46:../Dave/Generated/CAN_NODE/can_node.c ****  * 2015-05-12:
  47:../Dave/Generated/CAN_NODE/can_node.c ****  *     - CAN_NODE_EnableEvent() and CAN_NODE_ConfigBaudrate() APIs are included with additional arg
  48:../Dave/Generated/CAN_NODE/can_node.c ****  *     - New APIs are added: CAN_NODE_MO_ReceiveData(), CAN_NODE_MO_ClearStatus(), CAN_NODE_ClearSt
  49:../Dave/Generated/CAN_NODE/can_node.c ****  *
  50:../Dave/Generated/CAN_NODE/can_node.c ****  * 2018-06-21:
  51:../Dave/Generated/CAN_NODE/can_node.c ****  *     - Changed CAN_NODE_Init() to use  XMC_CAN_NODE_NominalBitTimeConfigureEx() to fix issues whe
  52:../Dave/Generated/CAN_NODE/can_node.c ****  * @endcond
  53:../Dave/Generated/CAN_NODE/can_node.c ****  *
  54:../Dave/Generated/CAN_NODE/can_node.c ****  */
  55:../Dave/Generated/CAN_NODE/can_node.c **** 
  56:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  57:../Dave/Generated/CAN_NODE/can_node.c ****  * HEADER FILES
  58:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  59:../Dave/Generated/CAN_NODE/can_node.c **** #include "can_node.h"
  60:../Dave/Generated/CAN_NODE/can_node.c **** 
  61:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  62:../Dave/Generated/CAN_NODE/can_node.c ****  * MACROS
  63:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  64:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MIN_BAUDRATE (100000U)
  65:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_BAUDRATE (1000000U)
  66:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SAMPLE_POINT (100U)
  67:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MAX_SJW    (3U)
  68:../Dave/Generated/CAN_NODE/can_node.c **** #define CAN_NODE_MO_CLEAR_MASK (0x0fffU)
  69:../Dave/Generated/CAN_NODE/can_node.c **** 
  70:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  71:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL DATA
  72:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  73:../Dave/Generated/CAN_NODE/can_node.c **** 
  74:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
  75:../Dave/Generated/CAN_NODE/can_node.c ****  * LOCAL ROUTINES
  76:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
  77:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle);
  78:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle);
  79:../Dave/Generated/CAN_NODE/can_node.c **** 
  80:../Dave/Generated/CAN_NODE/can_node.c **** /**
  81:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to enable the can node events like node alert,LEC,
  82:../Dave/Generated/CAN_NODE/can_node.c ****   *         Transfer OK and Frame counter overflow based on GUI configuration.
  83:../Dave/Generated/CAN_NODE/can_node.c ****   * @param  handle is a pointer pointing to APP data structure.
  84:../Dave/Generated/CAN_NODE/can_node.c ****   * @return None
  85:../Dave/Generated/CAN_NODE/can_node.c ****   */
  86:../Dave/Generated/CAN_NODE/can_node.c **** 
  87:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodeEvents(const CAN_NODE_t *handle)
  88:../Dave/Generated/CAN_NODE/can_node.c **** {
 734              	 .loc 3 88 0
 735              	 .cfi_startproc
 736              	 
 737              	 
 738 0000 80B5     	 push {r7,lr}
 739              	.LCFI88:
 740              	 .cfi_def_cfa_offset 8
 741              	 .cfi_offset 7,-8
 742              	 .cfi_offset 14,-4
 743 0002 84B0     	 sub sp,sp,#16
 744              	.LCFI89:
 745              	 .cfi_def_cfa_offset 24
 746 0004 00AF     	 add r7,sp,#0
 747              	.LCFI90:
 748              	 .cfi_def_cfa_register 7
 749 0006 7860     	 str r0,[r7,#4]
  89:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t lnode_event = 0U;
 750              	 .loc 3 89 0
 751 0008 0023     	 movs r3,#0
 752 000a FB60     	 str r3,[r7,#12]
  90:../Dave/Generated/CAN_NODE/can_node.c **** 
  91:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_lInit: handle null", handle != NULL);
  92:../Dave/Generated/CAN_NODE/can_node.c **** 
  93:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_SetNodePointer(handle); /* set node service pointer */
 753              	 .loc 3 93 0
 754 000c 7868     	 ldr r0,[r7,#4]
 755 000e FFF7FEFF 	 bl CAN_NODE_SetNodePointer
  94:../Dave/Generated/CAN_NODE/can_node.c **** 
  95:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->txok_event_enable == true)
 756              	 .loc 3 95 0
 757 0012 7B68     	 ldr r3,[r7,#4]
 758 0014 93F8A430 	 ldrb r3,[r3,#164]
 759 0018 002B     	 cmp r3,#0
 760 001a 03D0     	 beq .L19
  96:../Dave/Generated/CAN_NODE/can_node.c ****   {
  97:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_TX_INT;
 761              	 .loc 3 97 0
 762 001c FB68     	 ldr r3,[r7,#12]
 763 001e 43F00203 	 orr r3,r3,#2
 764 0022 FB60     	 str r3,[r7,#12]
 765              	.L19:
  98:../Dave/Generated/CAN_NODE/can_node.c ****   }
  99:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->lec_event_enable == true)
 766              	 .loc 3 99 0
 767 0024 7B68     	 ldr r3,[r7,#4]
 768 0026 93F8A330 	 ldrb r3,[r3,#163]
 769 002a 002B     	 cmp r3,#0
 770 002c 03D0     	 beq .L20
 100:../Dave/Generated/CAN_NODE/can_node.c ****   {
 101:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_LEC;
 771              	 .loc 3 101 0
 772 002e FB68     	 ldr r3,[r7,#12]
 773 0030 43F00403 	 orr r3,r3,#4
 774 0034 FB60     	 str r3,[r7,#12]
 775              	.L20:
 102:../Dave/Generated/CAN_NODE/can_node.c ****   }
 103:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->alert_event_enable == true)
 776              	 .loc 3 103 0
 777 0036 7B68     	 ldr r3,[r7,#4]
 778 0038 93F8A530 	 ldrb r3,[r3,#165]
 779 003c 002B     	 cmp r3,#0
 780 003e 03D0     	 beq .L21
 104:../Dave/Generated/CAN_NODE/can_node.c ****   {
 105:../Dave/Generated/CAN_NODE/can_node.c ****     lnode_event |= XMC_CAN_NODE_EVENT_ALERT;
 781              	 .loc 3 105 0
 782 0040 FB68     	 ldr r3,[r7,#12]
 783 0042 43F00803 	 orr r3,r3,#8
 784 0046 FB60     	 str r3,[r7,#12]
 785              	.L21:
 106:../Dave/Generated/CAN_NODE/can_node.c ****   }
 107:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(handle->node_ptr, (XMC_CAN_NODE_EVENT_t)lnode_event);
 786              	 .loc 3 107 0
 787 0048 7B68     	 ldr r3,[r7,#4]
 788 004a 5B68     	 ldr r3,[r3,#4]
 789 004c 1846     	 mov r0,r3
 790 004e F968     	 ldr r1,[r7,#12]
 791 0050 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 108:../Dave/Generated/CAN_NODE/can_node.c **** 
 109:../Dave/Generated/CAN_NODE/can_node.c ****   if (handle->framecount_event_enable == true)
 792              	 .loc 3 109 0
 793 0054 7B68     	 ldr r3,[r7,#4]
 794 0056 93F8A630 	 ldrb r3,[r3,#166]
 795 005a 002B     	 cmp r3,#0
 796 005c 06D0     	 beq .L18
 110:../Dave/Generated/CAN_NODE/can_node.c ****   {
 111:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_NODE_EnableEvent(handle->node_ptr, XMC_CAN_NODE_EVENT_CFCIE);
 797              	 .loc 3 111 0
 798 005e 7B68     	 ldr r3,[r7,#4]
 799 0060 5B68     	 ldr r3,[r3,#4]
 800 0062 1846     	 mov r0,r3
 801 0064 4FF48001 	 mov r1,#4194304
 802 0068 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 803              	.L18:
 112:../Dave/Generated/CAN_NODE/can_node.c ****   }
 113:../Dave/Generated/CAN_NODE/can_node.c **** 
 114:../Dave/Generated/CAN_NODE/can_node.c **** }
 804              	 .loc 3 114 0
 805 006c 1037     	 adds r7,r7,#16
 806              	.LCFI91:
 807              	 .cfi_def_cfa_offset 8
 808 006e BD46     	 mov sp,r7
 809              	.LCFI92:
 810              	 .cfi_def_cfa_register 13
 811              	 
 812 0070 80BD     	 pop {r7,pc}
 813              	 .cfi_endproc
 814              	.LFE239:
 816 0072 00BF     	 .section .text.CAN_NODE_SetNodePointer,"ax",%progbits
 817              	 .align 2
 818              	 .thumb
 819              	 .thumb_func
 821              	CAN_NODE_SetNodePointer:
 822              	.LFB240:
 115:../Dave/Generated/CAN_NODE/can_node.c **** 
 116:../Dave/Generated/CAN_NODE/can_node.c **** /**
 117:../Dave/Generated/CAN_NODE/can_node.c ****   * @brief  Function to set the Node event pointer
 118:../Dave/Generated/CAN_NODE/can_node.c ****   *
 119:../Dave/Generated/CAN_NODE/can_node.c ****   */
 120:../Dave/Generated/CAN_NODE/can_node.c **** 
 121:../Dave/Generated/CAN_NODE/can_node.c **** static void CAN_NODE_SetNodePointer(const CAN_NODE_t *handle)
 122:../Dave/Generated/CAN_NODE/can_node.c **** {
 823              	 .loc 3 122 0
 824              	 .cfi_startproc
 825              	 
 826              	 
 827 0000 80B5     	 push {r7,lr}
 828              	.LCFI93:
 829              	 .cfi_def_cfa_offset 8
 830              	 .cfi_offset 7,-8
 831              	 .cfi_offset 14,-4
 832 0002 82B0     	 sub sp,sp,#8
 833              	.LCFI94:
 834              	 .cfi_def_cfa_offset 16
 835 0004 00AF     	 add r7,sp,#0
 836              	.LCFI95:
 837              	 .cfi_def_cfa_register 7
 838 0006 7860     	 str r0,[r7,#4]
 123:../Dave/Generated/CAN_NODE/can_node.c **** 
 124:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_SetNodePointer: handle null", handle != NULL);
 125:../Dave/Generated/CAN_NODE/can_node.c **** 
 126:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the alert event with the service request number */
 127:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_ALERT,
 839              	 .loc 3 127 0
 840 0008 7B68     	 ldr r3,[r7,#4]
 841 000a 5A68     	 ldr r2,[r3,#4]
 128:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 842              	 .loc 3 128 0
 843 000c 7B68     	 ldr r3,[r7,#4]
 844 000e D3F88C30 	 ldr r3,[r3,#140]
 845 0012 1B78     	 ldrb r3,[r3]
 127:../Dave/Generated/CAN_NODE/can_node.c ****                                                         handle->node_sr_ptr->alert_event_sr);
 846              	 .loc 3 127 0
 847 0014 1046     	 mov r0,r2
 848 0016 0021     	 movs r1,#0
 849 0018 1A46     	 mov r2,r3
 850 001a FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 129:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the LEC event with the service request number */
 130:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_LEC,
 851              	 .loc 3 130 0
 852 001e 7B68     	 ldr r3,[r7,#4]
 853 0020 5A68     	 ldr r2,[r3,#4]
 131:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 854              	 .loc 3 131 0
 855 0022 7B68     	 ldr r3,[r7,#4]
 856 0024 D3F88C30 	 ldr r3,[r3,#140]
 857 0028 5B78     	 ldrb r3,[r3,#1]
 130:../Dave/Generated/CAN_NODE/can_node.c ****                                                          handle->node_sr_ptr->lec_event_sr);
 858              	 .loc 3 130 0
 859 002a 1046     	 mov r0,r2
 860 002c 0421     	 movs r1,#4
 861 002e 1A46     	 mov r2,r3
 862 0030 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 132:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the TXOK event with the service request number */
 133:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_TRANSFER_OK,
 863              	 .loc 3 133 0
 864 0034 7B68     	 ldr r3,[r7,#4]
 865 0036 5A68     	 ldr r2,[r3,#4]
 134:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 866              	 .loc 3 134 0
 867 0038 7B68     	 ldr r3,[r7,#4]
 868 003a D3F88C30 	 ldr r3,[r3,#140]
 869 003e 9B78     	 ldrb r3,[r3,#2]
 133:../Dave/Generated/CAN_NODE/can_node.c ****                                                                handle->node_sr_ptr->txok_event_sr);
 870              	 .loc 3 133 0
 871 0040 1046     	 mov r0,r2
 872 0042 0821     	 movs r1,#8
 873 0044 1A46     	 mov r2,r3
 874 0046 FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 135:../Dave/Generated/CAN_NODE/can_node.c ****   /* Configured the node event pointer for the Frame counter event with the service request number 
 136:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_SetEventNodePointer(handle->node_ptr, XMC_CAN_NODE_POINTER_EVENT_FRAME_COUNTER,
 875              	 .loc 3 136 0
 876 004a 7B68     	 ldr r3,[r7,#4]
 877 004c 5A68     	 ldr r2,[r3,#4]
 137:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 878              	 .loc 3 137 0
 879 004e 7B68     	 ldr r3,[r7,#4]
 880 0050 D3F88C30 	 ldr r3,[r3,#140]
 881 0054 DB78     	 ldrb r3,[r3,#3]
 136:../Dave/Generated/CAN_NODE/can_node.c ****                                                              handle->node_sr_ptr->framecount_event_
 882              	 .loc 3 136 0
 883 0056 1046     	 mov r0,r2
 884 0058 0C21     	 movs r1,#12
 885 005a 1A46     	 mov r2,r3
 886 005c FFF7FEFF 	 bl XMC_CAN_NODE_SetEventNodePointer
 138:../Dave/Generated/CAN_NODE/can_node.c **** 
 139:../Dave/Generated/CAN_NODE/can_node.c **** }
 887              	 .loc 3 139 0
 888 0060 0837     	 adds r7,r7,#8
 889              	.LCFI96:
 890              	 .cfi_def_cfa_offset 8
 891 0062 BD46     	 mov sp,r7
 892              	.LCFI97:
 893              	 .cfi_def_cfa_register 13
 894              	 
 895 0064 80BD     	 pop {r7,pc}
 896              	 .cfi_endproc
 897              	.LFE240:
 899 0066 00BF     	 .section .text.CAN_NODE_GetAppVersion,"ax",%progbits
 900              	 .align 2
 901              	 .global CAN_NODE_GetAppVersion
 902              	 .thumb
 903              	 .thumb_func
 905              	CAN_NODE_GetAppVersion:
 906              	.LFB241:
 140:../Dave/Generated/CAN_NODE/can_node.c **** 
 141:../Dave/Generated/CAN_NODE/can_node.c **** /**************************************************************************************************
 142:../Dave/Generated/CAN_NODE/can_node.c ****  * API IMPLEMENTATION
 143:../Dave/Generated/CAN_NODE/can_node.c ****  **************************************************************************************************
 144:../Dave/Generated/CAN_NODE/can_node.c **** 
 145:../Dave/Generated/CAN_NODE/can_node.c **** /*  API to retrieve the version of the CAN_NODE APP */
 146:../Dave/Generated/CAN_NODE/can_node.c **** DAVE_APP_VERSION_t CAN_NODE_GetAppVersion()
 147:../Dave/Generated/CAN_NODE/can_node.c **** {
 907              	 .loc 3 147 0
 908              	 .cfi_startproc
 909              	 
 910              	 
 911              	 
 912 0000 80B4     	 push {r7}
 913              	.LCFI98:
 914              	 .cfi_def_cfa_offset 4
 915              	 .cfi_offset 7,-4
 916 0002 83B0     	 sub sp,sp,#12
 917              	.LCFI99:
 918              	 .cfi_def_cfa_offset 16
 919 0004 00AF     	 add r7,sp,#0
 920              	.LCFI100:
 921              	 .cfi_def_cfa_register 7
 148:../Dave/Generated/CAN_NODE/can_node.c ****   DAVE_APP_VERSION_t version;
 149:../Dave/Generated/CAN_NODE/can_node.c **** 
 150:../Dave/Generated/CAN_NODE/can_node.c ****   version.major = (uint8_t)CAN_NODE_MAJOR_VERSION;
 922              	 .loc 3 150 0
 923 0006 0423     	 movs r3,#4
 924 0008 3B70     	 strb r3,[r7]
 151:../Dave/Generated/CAN_NODE/can_node.c ****   version.minor = (uint8_t)CAN_NODE_MINOR_VERSION;
 925              	 .loc 3 151 0
 926 000a 0123     	 movs r3,#1
 927 000c 7B70     	 strb r3,[r7,#1]
 152:../Dave/Generated/CAN_NODE/can_node.c ****   version.patch = (uint8_t)CAN_NODE_PATCH_VERSION;
 928              	 .loc 3 152 0
 929 000e 1023     	 movs r3,#16
 930 0010 BB70     	 strb r3,[r7,#2]
 153:../Dave/Generated/CAN_NODE/can_node.c **** 
 154:../Dave/Generated/CAN_NODE/can_node.c ****   return (version);
 931              	 .loc 3 154 0
 932 0012 3B1D     	 adds r3,r7,#4
 933 0014 3A46     	 mov r2,r7
 934 0016 1268     	 ldr r2,[r2]
 935 0018 1146     	 mov r1,r2
 936 001a 1980     	 strh r1,[r3]
 937 001c 0233     	 adds r3,r3,#2
 938 001e 120C     	 lsrs r2,r2,#16
 939 0020 1A70     	 strb r2,[r3]
 940 0022 0023     	 movs r3,#0
 941 0024 3A79     	 ldrb r2,[r7,#4]
 942 0026 62F30703 	 bfi r3,r2,#0,#8
 943 002a 7A79     	 ldrb r2,[r7,#5]
 944 002c 62F30F23 	 bfi r3,r2,#8,#8
 945 0030 BA79     	 ldrb r2,[r7,#6]
 946 0032 62F31743 	 bfi r3,r2,#16,#8
 155:../Dave/Generated/CAN_NODE/can_node.c **** }
 947              	 .loc 3 155 0
 948 0036 1846     	 mov r0,r3
 949 0038 0C37     	 adds r7,r7,#12
 950              	.LCFI101:
 951              	 .cfi_def_cfa_offset 4
 952 003a BD46     	 mov sp,r7
 953              	.LCFI102:
 954              	 .cfi_def_cfa_register 13
 955              	 
 956 003c 5DF8047B 	 ldr r7,[sp],#4
 957              	.LCFI103:
 958              	 .cfi_restore 7
 959              	 .cfi_def_cfa_offset 0
 960 0040 7047     	 bx lr
 961              	 .cfi_endproc
 962              	.LFE241:
 964 0042 00BF     	 .section .text.CAN_NODE_EnableEvent,"ax",%progbits
 965              	 .align 2
 966              	 .global CAN_NODE_EnableEvent
 967              	 .thumb
 968              	 .thumb_func
 970              	CAN_NODE_EnableEvent:
 971              	.LFB242:
 156:../Dave/Generated/CAN_NODE/can_node.c **** 
 157:../Dave/Generated/CAN_NODE/can_node.c **** /* API to enable the can node events like node alert,LEC,Transfer OK and Frame counter overflow. */
 158:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_EnableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 159:../Dave/Generated/CAN_NODE/can_node.c **** {
 972              	 .loc 3 159 0
 973              	 .cfi_startproc
 974              	 
 975              	 
 976 0000 80B5     	 push {r7,lr}
 977              	.LCFI104:
 978              	 .cfi_def_cfa_offset 8
 979              	 .cfi_offset 7,-8
 980              	 .cfi_offset 14,-4
 981 0002 84B0     	 sub sp,sp,#16
 982              	.LCFI105:
 983              	 .cfi_def_cfa_offset 24
 984 0004 00AF     	 add r7,sp,#0
 985              	.LCFI106:
 986              	 .cfi_def_cfa_register 7
 987 0006 7860     	 str r0,[r7,#4]
 988 0008 3960     	 str r1,[r7]
 160:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_EnableEvent: handle null", handle != NULL);
 161:../Dave/Generated/CAN_NODE/can_node.c **** 
 162:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 989              	 .loc 3 162 0
 990 000a 7B68     	 ldr r3,[r7,#4]
 991 000c 5B68     	 ldr r3,[r3,#4]
 992 000e FB60     	 str r3,[r7,#12]
 163:../Dave/Generated/CAN_NODE/can_node.c **** 
 164:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_EnableEvent(can_node,node_event);
 993              	 .loc 3 164 0
 994 0010 F868     	 ldr r0,[r7,#12]
 995 0012 3968     	 ldr r1,[r7]
 996 0014 FFF7FEFF 	 bl XMC_CAN_NODE_EnableEvent
 165:../Dave/Generated/CAN_NODE/can_node.c **** 
 166:../Dave/Generated/CAN_NODE/can_node.c **** }
 997              	 .loc 3 166 0
 998 0018 1037     	 adds r7,r7,#16
 999              	.LCFI107:
 1000              	 .cfi_def_cfa_offset 8
 1001 001a BD46     	 mov sp,r7
 1002              	.LCFI108:
 1003              	 .cfi_def_cfa_register 13
 1004              	 
 1005 001c 80BD     	 pop {r7,pc}
 1006              	 .cfi_endproc
 1007              	.LFE242:
 1009 001e 00BF     	 .section .text.CAN_NODE_ConfigBaudrate,"ax",%progbits
 1010              	 .align 2
 1011              	 .global CAN_NODE_ConfigBaudrate
 1012              	 .thumb
 1013              	 .thumb_func
 1015              	CAN_NODE_ConfigBaudrate:
 1016              	.LFB243:
 167:../Dave/Generated/CAN_NODE/can_node.c **** 
 168:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to configure the baud rate based on UI configuration. */
 169:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ConfigBaudrate(const CAN_NODE_t *handle, uint32_t baudrate, uint16_t sample_point, ui
 170:../Dave/Generated/CAN_NODE/can_node.c **** {
 1017              	 .loc 3 170 0
 1018              	 .cfi_startproc
 1019              	 
 1020              	 
 1021 0000 80B5     	 push {r7,lr}
 1022              	.LCFI109:
 1023              	 .cfi_def_cfa_offset 8
 1024              	 .cfi_offset 7,-8
 1025              	 .cfi_offset 14,-4
 1026 0002 86B0     	 sub sp,sp,#24
 1027              	.LCFI110:
 1028              	 .cfi_def_cfa_offset 32
 1029 0004 00AF     	 add r7,sp,#0
 1030              	.LCFI111:
 1031              	 .cfi_def_cfa_register 7
 1032 0006 F860     	 str r0,[r7,#12]
 1033 0008 B960     	 str r1,[r7,#8]
 1034 000a 1146     	 mov r1,r2
 1035 000c 1A46     	 mov r2,r3
 1036 000e 0B46     	 mov r3,r1
 1037 0010 FB80     	 strh r3,[r7,#6]
 1038 0012 1346     	 mov r3,r2
 1039 0014 7B71     	 strb r3,[r7,#5]
 171:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1040              	 .loc 3 171 0
 1041 0016 FB68     	 ldr r3,[r7,#12]
 1042 0018 5B68     	 ldr r3,[r3,#4]
 1043 001a 7B61     	 str r3,[r7,#20]
 172:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NOMINAL_BIT_TIME_CONFIG_t *const can_bit_time = handle->baudrate_config;
 1044              	 .loc 3 172 0
 1045 001c FB68     	 ldr r3,[r7,#12]
 1046 001e 9B68     	 ldr r3,[r3,#8]
 1047 0020 3B61     	 str r3,[r7,#16]
 173:../Dave/Generated/CAN_NODE/can_node.c **** 
 174:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: handle null", handle != NULL);
 175:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: baud rate invalid", (baudrate >= CAN_NODE_MIN_BAUDRATE)
 176:../Dave/Generated/CAN_NODE/can_node.c **** 		                                                                 && (baudrate <= CAN_NODE_MAX_BAU
 177:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: sample_point invalid", (sample_point >= 0U) &&
 178:../Dave/Generated/CAN_NODE/can_node.c ****                                                                         (sample_point <= CAN_NODE_M
 179:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ConfigBaudrate: Synchronization jump width invalid", (sjw >= 0U) && (sjw <= 
 180:../Dave/Generated/CAN_NODE/can_node.c **** 
 181:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->baudrate = baudrate;
 1048              	 .loc 3 181 0
 1049 0022 3B69     	 ldr r3,[r7,#16]
 1050 0024 BA68     	 ldr r2,[r7,#8]
 1051 0026 5A60     	 str r2,[r3,#4]
 182:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sample_point = (sample_point * CAN_NODE_MAX_SAMPLE_POINT);
 1052              	 .loc 3 182 0
 1053 0028 FB88     	 ldrh r3,[r7,#6]
 1054 002a 1A46     	 mov r2,r3
 1055 002c 9200     	 lsls r2,r2,#2
 1056 002e 1344     	 add r3,r3,r2
 1057 0030 1A46     	 mov r2,r3
 1058 0032 9100     	 lsls r1,r2,#2
 1059 0034 1A46     	 mov r2,r3
 1060 0036 0B46     	 mov r3,r1
 1061 0038 1344     	 add r3,r3,r2
 1062 003a 9B00     	 lsls r3,r3,#2
 1063 003c 9AB2     	 uxth r2,r3
 1064 003e 3B69     	 ldr r3,[r7,#16]
 1065 0040 1A81     	 strh r2,[r3,#8]
 183:../Dave/Generated/CAN_NODE/can_node.c ****   can_bit_time->sjw = (uint16_t)sjw;
 1066              	 .loc 3 183 0
 1067 0042 7B79     	 ldrb r3,[r7,#5]
 1068 0044 9AB2     	 uxth r2,r3
 1069 0046 3B69     	 ldr r3,[r7,#16]
 1070 0048 5A81     	 strh r2,[r3,#10]
 184:../Dave/Generated/CAN_NODE/can_node.c **** 
 185:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_NominalBitTimeConfigure(can_node, can_bit_time);
 1071              	 .loc 3 185 0
 1072 004a 7869     	 ldr r0,[r7,#20]
 1073 004c 3969     	 ldr r1,[r7,#16]
 1074 004e FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigure
 186:../Dave/Generated/CAN_NODE/can_node.c **** }
 1075              	 .loc 3 186 0
 1076 0052 1837     	 adds r7,r7,#24
 1077              	.LCFI112:
 1078              	 .cfi_def_cfa_offset 8
 1079 0054 BD46     	 mov sp,r7
 1080              	.LCFI113:
 1081              	 .cfi_def_cfa_register 13
 1082              	 
 1083 0056 80BD     	 pop {r7,pc}
 1084              	 .cfi_endproc
 1085              	.LFE243:
 1087              	 .section .text.CAN_NODE_MO_Init,"ax",%progbits
 1088              	 .align 2
 1089              	 .global CAN_NODE_MO_Init
 1090              	 .thumb
 1091              	 .thumb_func
 1093              	CAN_NODE_MO_Init:
 1094              	.LFB244:
 187:../Dave/Generated/CAN_NODE/can_node.c **** 
 188:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN MO based on UI configuration. */
 189:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_Init(const CAN_NODE_LMO_t *lmo_ptr)
 190:../Dave/Generated/CAN_NODE/can_node.c **** {
 1095              	 .loc 3 190 0
 1096              	 .cfi_startproc
 1097              	 
 1098              	 
 1099 0000 80B5     	 push {r7,lr}
 1100              	.LCFI114:
 1101              	 .cfi_def_cfa_offset 8
 1102              	 .cfi_offset 7,-8
 1103              	 .cfi_offset 14,-4
 1104 0002 82B0     	 sub sp,sp,#8
 1105              	.LCFI115:
 1106              	 .cfi_def_cfa_offset 16
 1107 0004 00AF     	 add r7,sp,#0
 1108              	.LCFI116:
 1109              	 .cfi_def_cfa_register 7
 1110 0006 7860     	 str r0,[r7,#4]
 191:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Init: lmo_ptr null", lmo_ptr != NULL);
 192:../Dave/Generated/CAN_NODE/can_node.c **** 
 193:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_Config(lmo_ptr->mo_ptr);
 1111              	 .loc 3 193 0
 1112 0008 7B68     	 ldr r3,[r7,#4]
 1113 000a 1B68     	 ldr r3,[r3]
 1114 000c 1846     	 mov r0,r3
 1115 000e FFF7FEFF 	 bl XMC_CAN_MO_Config
 194:../Dave/Generated/CAN_NODE/can_node.c **** 
 195:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->tx_event_enable == true)
 1116              	 .loc 3 195 0
 1117 0012 7B68     	 ldr r3,[r7,#4]
 1118 0014 DB79     	 ldrb r3,[r3,#7]
 1119 0016 002B     	 cmp r3,#0
 1120 0018 0BD0     	 beq .L29
 196:../Dave/Generated/CAN_NODE/can_node.c ****   {
 197:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_TRANSMIT, lmo_ptr->tx_
 1121              	 .loc 3 197 0
 1122 001a 7B68     	 ldr r3,[r7,#4]
 1123 001c 1A68     	 ldr r2,[r3]
 1124 001e 7B68     	 ldr r3,[r7,#4]
 1125 0020 5B79     	 ldrb r3,[r3,#5]
 1126 0022 1046     	 mov r0,r2
 1127 0024 0421     	 movs r1,#4
 1128 0026 1A46     	 mov r2,r3
 1129 0028 FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 198:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableTxEvent(lmo_ptr);
 1130              	 .loc 3 198 0
 1131 002c 7868     	 ldr r0,[r7,#4]
 1132 002e FFF7FEFF 	 bl CAN_NODE_MO_EnableTxEvent
 1133              	.L29:
 199:../Dave/Generated/CAN_NODE/can_node.c ****   }
 200:../Dave/Generated/CAN_NODE/can_node.c ****   if (lmo_ptr->rx_event_enable == true)
 1134              	 .loc 3 200 0
 1135 0032 7B68     	 ldr r3,[r7,#4]
 1136 0034 1B7A     	 ldrb r3,[r3,#8]
 1137 0036 002B     	 cmp r3,#0
 1138 0038 0BD0     	 beq .L28
 201:../Dave/Generated/CAN_NODE/can_node.c ****   {
 202:../Dave/Generated/CAN_NODE/can_node.c ****     XMC_CAN_MO_SetEventNodePointer(lmo_ptr->mo_ptr, XMC_CAN_MO_POINTER_EVENT_RECEIVE, lmo_ptr->rx_s
 1139              	 .loc 3 202 0
 1140 003a 7B68     	 ldr r3,[r7,#4]
 1141 003c 1A68     	 ldr r2,[r3]
 1142 003e 7B68     	 ldr r3,[r7,#4]
 1143 0040 9B79     	 ldrb r3,[r3,#6]
 1144 0042 1046     	 mov r0,r2
 1145 0044 0021     	 movs r1,#0
 1146 0046 1A46     	 mov r2,r3
 1147 0048 FFF7FEFF 	 bl XMC_CAN_MO_SetEventNodePointer
 203:../Dave/Generated/CAN_NODE/can_node.c ****     CAN_NODE_MO_EnableRxEvent(lmo_ptr);
 1148              	 .loc 3 203 0
 1149 004c 7868     	 ldr r0,[r7,#4]
 1150 004e FFF7FEFF 	 bl CAN_NODE_MO_EnableRxEvent
 1151              	.L28:
 204:../Dave/Generated/CAN_NODE/can_node.c ****   }
 205:../Dave/Generated/CAN_NODE/can_node.c **** 
 206:../Dave/Generated/CAN_NODE/can_node.c **** }
 1152              	 .loc 3 206 0
 1153 0052 0837     	 adds r7,r7,#8
 1154              	.LCFI117:
 1155              	 .cfi_def_cfa_offset 8
 1156 0054 BD46     	 mov sp,r7
 1157              	.LCFI118:
 1158              	 .cfi_def_cfa_register 13
 1159              	 
 1160 0056 80BD     	 pop {r7,pc}
 1161              	 .cfi_endproc
 1162              	.LFE244:
 1164              	 .section .text.CAN_NODE_MO_Transmit,"ax",%progbits
 1165              	 .align 2
 1166              	 .global CAN_NODE_MO_Transmit
 1167              	 .thumb
 1168              	 .thumb_func
 1170              	CAN_NODE_MO_Transmit:
 1171              	.LFB245:
 207:../Dave/Generated/CAN_NODE/can_node.c **** 
 208:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to transmit the can MO frame.  */
 209:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Transmit(const CAN_NODE_LMO_t *lmo_ptr)
 210:../Dave/Generated/CAN_NODE/can_node.c **** {
 1172              	 .loc 3 210 0
 1173              	 .cfi_startproc
 1174              	 
 1175              	 
 1176 0000 80B5     	 push {r7,lr}
 1177              	.LCFI119:
 1178              	 .cfi_def_cfa_offset 8
 1179              	 .cfi_offset 7,-8
 1180              	 .cfi_offset 14,-4
 1181 0002 84B0     	 sub sp,sp,#16
 1182              	.LCFI120:
 1183              	 .cfi_def_cfa_offset 24
 1184 0004 00AF     	 add r7,sp,#0
 1185              	.LCFI121:
 1186              	 .cfi_def_cfa_register 7
 1187 0006 7860     	 str r0,[r7,#4]
 211:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1188              	 .loc 3 211 0
 1189 0008 0023     	 movs r3,#0
 1190 000a FB73     	 strb r3,[r7,#15]
 212:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Transmit: lmo_ptr null", lmo_ptr != NULL);
 213:../Dave/Generated/CAN_NODE/can_node.c **** 
 214:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Transmit(lmo_ptr->mo_ptr);
 1191              	 .loc 3 214 0
 1192 000c 7B68     	 ldr r3,[r7,#4]
 1193 000e 1B68     	 ldr r3,[r3]
 1194 0010 1846     	 mov r0,r3
 1195 0012 FFF7FEFF 	 bl XMC_CAN_MO_Transmit
 1196 0016 0346     	 mov r3,r0
 1197 0018 FB73     	 strb r3,[r7,#15]
 215:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1198              	 .loc 3 215 0
 1199 001a FB7B     	 ldrb r3,[r7,#15]
 216:../Dave/Generated/CAN_NODE/can_node.c **** }
 1200              	 .loc 3 216 0
 1201 001c 1846     	 mov r0,r3
 1202 001e 1037     	 adds r7,r7,#16
 1203              	.LCFI122:
 1204              	 .cfi_def_cfa_offset 8
 1205 0020 BD46     	 mov sp,r7
 1206              	.LCFI123:
 1207              	 .cfi_def_cfa_register 13
 1208              	 
 1209 0022 80BD     	 pop {r7,pc}
 1210              	 .cfi_endproc
 1211              	.LFE245:
 1213              	 .section .text.CAN_NODE_MO_Receive,"ax",%progbits
 1214              	 .align 2
 1215              	 .global CAN_NODE_MO_Receive
 1216              	 .thumb
 1217              	 .thumb_func
 1219              	CAN_NODE_MO_Receive:
 1220              	.LFB246:
 217:../Dave/Generated/CAN_NODE/can_node.c **** 
 218:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message from the selected message object. */
 219:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_Receive( CAN_NODE_LMO_t *lmo_ptr)
 220:../Dave/Generated/CAN_NODE/can_node.c **** {
 1221              	 .loc 3 220 0
 1222              	 .cfi_startproc
 1223              	 
 1224              	 
 1225 0000 80B5     	 push {r7,lr}
 1226              	.LCFI124:
 1227              	 .cfi_def_cfa_offset 8
 1228              	 .cfi_offset 7,-8
 1229              	 .cfi_offset 14,-4
 1230 0002 84B0     	 sub sp,sp,#16
 1231              	.LCFI125:
 1232              	 .cfi_def_cfa_offset 24
 1233 0004 00AF     	 add r7,sp,#0
 1234              	.LCFI126:
 1235              	 .cfi_def_cfa_register 7
 1236 0006 7860     	 str r0,[r7,#4]
 221:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1237              	 .loc 3 221 0
 1238 0008 0023     	 movs r3,#0
 1239 000a FB73     	 strb r3,[r7,#15]
 222:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_Receive: lmo_ptr null", lmo_ptr != NULL);
 223:../Dave/Generated/CAN_NODE/can_node.c **** 
 224:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_Receive(lmo_ptr->mo_ptr);
 1240              	 .loc 3 224 0
 1241 000c 7B68     	 ldr r3,[r7,#4]
 1242 000e 1B68     	 ldr r3,[r3]
 1243 0010 1846     	 mov r0,r3
 1244 0012 FFF7FEFF 	 bl XMC_CAN_MO_Receive
 1245 0016 0346     	 mov r3,r0
 1246 0018 FB73     	 strb r3,[r7,#15]
 225:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1247              	 .loc 3 225 0
 1248 001a FB7B     	 ldrb r3,[r7,#15]
 226:../Dave/Generated/CAN_NODE/can_node.c **** }
 1249              	 .loc 3 226 0
 1250 001c 1846     	 mov r0,r3
 1251 001e 1037     	 adds r7,r7,#16
 1252              	.LCFI127:
 1253              	 .cfi_def_cfa_offset 8
 1254 0020 BD46     	 mov sp,r7
 1255              	.LCFI128:
 1256              	 .cfi_def_cfa_register 13
 1257              	 
 1258 0022 80BD     	 pop {r7,pc}
 1259              	 .cfi_endproc
 1260              	.LFE246:
 1262              	 .section .text.CAN_NODE_MO_ReceiveData,"ax",%progbits
 1263              	 .align 2
 1264              	 .global CAN_NODE_MO_ReceiveData
 1265              	 .thumb
 1266              	 .thumb_func
 1268              	CAN_NODE_MO_ReceiveData:
 1269              	.LFB247:
 227:../Dave/Generated/CAN_NODE/can_node.c **** 
 228:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the received CAN message data from the selected message object excluding other 
 229:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_ReceiveData( CAN_NODE_LMO_t *lmo_ptr)
 230:../Dave/Generated/CAN_NODE/can_node.c **** {
 1270              	 .loc 3 230 0
 1271              	 .cfi_startproc
 1272              	 
 1273              	 
 1274 0000 80B5     	 push {r7,lr}
 1275              	.LCFI129:
 1276              	 .cfi_def_cfa_offset 8
 1277              	 .cfi_offset 7,-8
 1278              	 .cfi_offset 14,-4
 1279 0002 84B0     	 sub sp,sp,#16
 1280              	.LCFI130:
 1281              	 .cfi_def_cfa_offset 24
 1282 0004 00AF     	 add r7,sp,#0
 1283              	.LCFI131:
 1284              	 .cfi_def_cfa_register 7
 1285 0006 7860     	 str r0,[r7,#4]
 231:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1286              	 .loc 3 231 0
 1287 0008 0023     	 movs r3,#0
 1288 000a FB73     	 strb r3,[r7,#15]
 232:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ReceiveData: lmo_ptr null", lmo_ptr != NULL);
 233:../Dave/Generated/CAN_NODE/can_node.c **** 
 234:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_ReceiveData(lmo_ptr->mo_ptr);
 1289              	 .loc 3 234 0
 1290 000c 7B68     	 ldr r3,[r7,#4]
 1291 000e 1B68     	 ldr r3,[r3]
 1292 0010 1846     	 mov r0,r3
 1293 0012 FFF7FEFF 	 bl XMC_CAN_MO_ReceiveData
 1294 0016 0346     	 mov r3,r0
 1295 0018 FB73     	 strb r3,[r7,#15]
 235:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1296              	 .loc 3 235 0
 1297 001a FB7B     	 ldrb r3,[r7,#15]
 236:../Dave/Generated/CAN_NODE/can_node.c **** }
 1298              	 .loc 3 236 0
 1299 001c 1846     	 mov r0,r3
 1300 001e 1037     	 adds r7,r7,#16
 1301              	.LCFI132:
 1302              	 .cfi_def_cfa_offset 8
 1303 0020 BD46     	 mov sp,r7
 1304              	.LCFI133:
 1305              	 .cfi_def_cfa_register 13
 1306              	 
 1307 0022 80BD     	 pop {r7,pc}
 1308              	 .cfi_endproc
 1309              	.LFE247:
 1311              	 .section .text.CAN_NODE_MO_UpdateData,"ax",%progbits
 1312              	 .align 2
 1313              	 .global CAN_NODE_MO_UpdateData
 1314              	 .thumb
 1315              	 .thumb_func
 1317              	CAN_NODE_MO_UpdateData:
 1318              	.LFB248:
 237:../Dave/Generated/CAN_NODE/can_node.c **** 
 238:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to updates the data for the CAN Message Object. */
 239:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_MO_UpdateData(const CAN_NODE_LMO_t *const lmo_ptr, uint8_t *array_data)
 240:../Dave/Generated/CAN_NODE/can_node.c **** {
 1319              	 .loc 3 240 0
 1320              	 .cfi_startproc
 1321              	 
 1322              	 
 1323 0000 80B5     	 push {r7,lr}
 1324              	.LCFI134:
 1325              	 .cfi_def_cfa_offset 8
 1326              	 .cfi_offset 7,-8
 1327              	 .cfi_offset 14,-4
 1328 0002 84B0     	 sub sp,sp,#16
 1329              	.LCFI135:
 1330              	 .cfi_def_cfa_offset 24
 1331 0004 00AF     	 add r7,sp,#0
 1332              	.LCFI136:
 1333              	 .cfi_def_cfa_register 7
 1334 0006 7860     	 str r0,[r7,#4]
 1335 0008 3960     	 str r1,[r7]
 241:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1336              	 .loc 3 241 0
 1337 000a 0023     	 movs r3,#0
 1338 000c FB73     	 strb r3,[r7,#15]
 242:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t *data_pointer = (uint32_t*) array_data;
 1339              	 .loc 3 242 0
 1340 000e 3B68     	 ldr r3,[r7]
 1341 0010 BB60     	 str r3,[r7,#8]
 243:../Dave/Generated/CAN_NODE/can_node.c **** 
 244:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_UpdateData: lmo_ptr null", lmo_ptr != NULL);
 245:../Dave/Generated/CAN_NODE/can_node.c **** 
 246:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[0U] = *data_pointer;
 1342              	 .loc 3 246 0
 1343 0012 7B68     	 ldr r3,[r7,#4]
 1344 0014 1B68     	 ldr r3,[r3]
 1345 0016 BA68     	 ldr r2,[r7,#8]
 1346 0018 1268     	 ldr r2,[r2]
 1347 001a 1A61     	 str r2,[r3,#16]
 247:../Dave/Generated/CAN_NODE/can_node.c ****   lmo_ptr->mo_ptr->can_data[1U] = *(data_pointer + 1U);
 1348              	 .loc 3 247 0
 1349 001c 7B68     	 ldr r3,[r7,#4]
 1350 001e 1B68     	 ldr r3,[r3]
 1351 0020 BA68     	 ldr r2,[r7,#8]
 1352 0022 5268     	 ldr r2,[r2,#4]
 1353 0024 5A61     	 str r2,[r3,#20]
 248:../Dave/Generated/CAN_NODE/can_node.c **** 
 249:../Dave/Generated/CAN_NODE/can_node.c ****   status = (CAN_NODE_STATUS_t)XMC_CAN_MO_UpdateData(lmo_ptr->mo_ptr);
 1354              	 .loc 3 249 0
 1355 0026 7B68     	 ldr r3,[r7,#4]
 1356 0028 1B68     	 ldr r3,[r3]
 1357 002a 1846     	 mov r0,r3
 1358 002c FFF7FEFF 	 bl XMC_CAN_MO_UpdateData
 1359 0030 0346     	 mov r3,r0
 1360 0032 FB73     	 strb r3,[r7,#15]
 250:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1361              	 .loc 3 250 0
 1362 0034 FB7B     	 ldrb r3,[r7,#15]
 251:../Dave/Generated/CAN_NODE/can_node.c **** }
 1363              	 .loc 3 251 0
 1364 0036 1846     	 mov r0,r3
 1365 0038 1037     	 adds r7,r7,#16
 1366              	.LCFI137:
 1367              	 .cfi_def_cfa_offset 8
 1368 003a BD46     	 mov sp,r7
 1369              	.LCFI138:
 1370              	 .cfi_def_cfa_register 13
 1371              	 
 1372 003c 80BD     	 pop {r7,pc}
 1373              	 .cfi_endproc
 1374              	.LFE248:
 1376 003e 00BF     	 .section .text.CAN_NODE_MO_GetStatus,"ax",%progbits
 1377              	 .align 2
 1378              	 .global CAN_NODE_MO_GetStatus
 1379              	 .thumb
 1380              	 .thumb_func
 1382              	CAN_NODE_MO_GetStatus:
 1383              	.LFB249:
 252:../Dave/Generated/CAN_NODE/can_node.c **** 
 253:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to reads the status of the CAN Message Object.  */
 254:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_MO_GetStatus(const CAN_NODE_LMO_t *lmo_ptr)
 255:../Dave/Generated/CAN_NODE/can_node.c **** {
 1384              	 .loc 3 255 0
 1385              	 .cfi_startproc
 1386              	 
 1387              	 
 1388 0000 80B5     	 push {r7,lr}
 1389              	.LCFI139:
 1390              	 .cfi_def_cfa_offset 8
 1391              	 .cfi_offset 7,-8
 1392              	 .cfi_offset 14,-4
 1393 0002 84B0     	 sub sp,sp,#16
 1394              	.LCFI140:
 1395              	 .cfi_def_cfa_offset 24
 1396 0004 00AF     	 add r7,sp,#0
 1397              	.LCFI141:
 1398              	 .cfi_def_cfa_register 7
 1399 0006 7860     	 str r0,[r7,#4]
 256:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t status;
 257:../Dave/Generated/CAN_NODE/can_node.c **** 
 258:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_GetStatus: lmo_ptr null", lmo_ptr != NULL);
 259:../Dave/Generated/CAN_NODE/can_node.c **** 
 260:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_MO_GetStatus(lmo_ptr->mo_ptr);
 1400              	 .loc 3 260 0
 1401 0008 7B68     	 ldr r3,[r7,#4]
 1402 000a 1B68     	 ldr r3,[r3]
 1403 000c 1846     	 mov r0,r3
 1404 000e FFF7FEFF 	 bl XMC_CAN_MO_GetStatus
 1405 0012 F860     	 str r0,[r7,#12]
 261:../Dave/Generated/CAN_NODE/can_node.c **** 
 262:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1406              	 .loc 3 262 0
 1407 0014 FB68     	 ldr r3,[r7,#12]
 263:../Dave/Generated/CAN_NODE/can_node.c **** }
 1408              	 .loc 3 263 0
 1409 0016 1846     	 mov r0,r3
 1410 0018 1037     	 adds r7,r7,#16
 1411              	.LCFI142:
 1412              	 .cfi_def_cfa_offset 8
 1413 001a BD46     	 mov sp,r7
 1414              	.LCFI143:
 1415              	 .cfi_def_cfa_register 13
 1416              	 
 1417 001c 80BD     	 pop {r7,pc}
 1418              	 .cfi_endproc
 1419              	.LFE249:
 1421 001e 00BF     	 .section .text.CAN_NODE_MO_ClearStatus,"ax",%progbits
 1422              	 .align 2
 1423              	 .global CAN_NODE_MO_ClearStatus
 1424              	 .thumb
 1425              	 .thumb_func
 1427              	CAN_NODE_MO_ClearStatus:
 1428              	.LFB250:
 264:../Dave/Generated/CAN_NODE/can_node.c **** 
 265:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to clear/ reset the status of the CAN Message Object  */
 266:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_MO_ClearStatus(const CAN_NODE_LMO_t *lmo_ptr, const uint32_t mask)
 267:../Dave/Generated/CAN_NODE/can_node.c **** {
 1429              	 .loc 3 267 0
 1430              	 .cfi_startproc
 1431              	 
 1432              	 
 1433 0000 80B5     	 push {r7,lr}
 1434              	.LCFI144:
 1435              	 .cfi_def_cfa_offset 8
 1436              	 .cfi_offset 7,-8
 1437              	 .cfi_offset 14,-4
 1438 0002 82B0     	 sub sp,sp,#8
 1439              	.LCFI145:
 1440              	 .cfi_def_cfa_offset 16
 1441 0004 00AF     	 add r7,sp,#0
 1442              	.LCFI146:
 1443              	 .cfi_def_cfa_register 7
 1444 0006 7860     	 str r0,[r7,#4]
 1445 0008 3960     	 str r1,[r7]
 268:../Dave/Generated/CAN_NODE/can_node.c **** 
 269:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: lmo_ptr null", lmo_ptr != NULL);
 270:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_MO_ClearStatus: mask invalid", (mask <= CAN_NODE_MO_CLEAR_MASK));
 271:../Dave/Generated/CAN_NODE/can_node.c **** 
 272:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_MO_ResetStatus(lmo_ptr->mo_ptr, mask);
 1446              	 .loc 3 272 0
 1447 000a 7B68     	 ldr r3,[r7,#4]
 1448 000c 1B68     	 ldr r3,[r3]
 1449 000e 1846     	 mov r0,r3
 1450 0010 3968     	 ldr r1,[r7]
 1451 0012 FFF7FEFF 	 bl XMC_CAN_MO_ResetStatus
 273:../Dave/Generated/CAN_NODE/can_node.c **** 
 274:../Dave/Generated/CAN_NODE/can_node.c **** }
 1452              	 .loc 3 274 0
 1453 0016 0837     	 adds r7,r7,#8
 1454              	.LCFI147:
 1455              	 .cfi_def_cfa_offset 8
 1456 0018 BD46     	 mov sp,r7
 1457              	.LCFI148:
 1458              	 .cfi_def_cfa_register 13
 1459              	 
 1460 001a 80BD     	 pop {r7,pc}
 1461              	 .cfi_endproc
 1462              	.LFE250:
 1464              	 .section .text.CAN_NODE_DisableEvent,"ax",%progbits
 1465              	 .align 2
 1466              	 .global CAN_NODE_DisableEvent
 1467              	 .thumb
 1468              	 .thumb_func
 1470              	CAN_NODE_DisableEvent:
 1471              	.LFB251:
 275:../Dave/Generated/CAN_NODE/can_node.c **** 
 276:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to disable the node event  */
 277:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_DisableEvent(const CAN_NODE_t *handle, const XMC_CAN_NODE_EVENT_t node_event)
 278:../Dave/Generated/CAN_NODE/can_node.c **** {
 1472              	 .loc 3 278 0
 1473              	 .cfi_startproc
 1474              	 
 1475              	 
 1476 0000 80B5     	 push {r7,lr}
 1477              	.LCFI149:
 1478              	 .cfi_def_cfa_offset 8
 1479              	 .cfi_offset 7,-8
 1480              	 .cfi_offset 14,-4
 1481 0002 84B0     	 sub sp,sp,#16
 1482              	.LCFI150:
 1483              	 .cfi_def_cfa_offset 24
 1484 0004 00AF     	 add r7,sp,#0
 1485              	.LCFI151:
 1486              	 .cfi_def_cfa_register 7
 1487 0006 7860     	 str r0,[r7,#4]
 1488 0008 3960     	 str r1,[r7]
 279:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1489              	 .loc 3 279 0
 1490 000a 7B68     	 ldr r3,[r7,#4]
 1491 000c 5B68     	 ldr r3,[r3,#4]
 1492 000e FB60     	 str r3,[r7,#12]
 280:../Dave/Generated/CAN_NODE/can_node.c **** 
 281:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_DisableEvent: handle null", handle != NULL);
 282:../Dave/Generated/CAN_NODE/can_node.c **** 
 283:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_DisableEvent(can_node,node_event);
 1493              	 .loc 3 283 0
 1494 0010 F868     	 ldr r0,[r7,#12]
 1495 0012 3968     	 ldr r1,[r7]
 1496 0014 FFF7FEFF 	 bl XMC_CAN_NODE_DisableEvent
 284:../Dave/Generated/CAN_NODE/can_node.c **** 
 285:../Dave/Generated/CAN_NODE/can_node.c **** }
 1497              	 .loc 3 285 0
 1498 0018 1037     	 adds r7,r7,#16
 1499              	.LCFI152:
 1500              	 .cfi_def_cfa_offset 8
 1501 001a BD46     	 mov sp,r7
 1502              	.LCFI153:
 1503              	 .cfi_def_cfa_register 13
 1504              	 
 1505 001c 80BD     	 pop {r7,pc}
 1506              	 .cfi_endproc
 1507              	.LFE251:
 1509 001e 00BF     	 .section .text.CAN_NODE_GetStatus,"ax",%progbits
 1510              	 .align 2
 1511              	 .global CAN_NODE_GetStatus
 1512              	 .thumb
 1513              	 .thumb_func
 1515              	CAN_NODE_GetStatus:
 1516              	.LFB252:
 286:../Dave/Generated/CAN_NODE/can_node.c **** 
 287:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to read the current status of the CAN node  */
 288:../Dave/Generated/CAN_NODE/can_node.c **** uint32_t CAN_NODE_GetStatus(const CAN_NODE_t* handle)
 289:../Dave/Generated/CAN_NODE/can_node.c **** {
 1517              	 .loc 3 289 0
 1518              	 .cfi_startproc
 1519              	 
 1520              	 
 1521 0000 80B5     	 push {r7,lr}
 1522              	.LCFI154:
 1523              	 .cfi_def_cfa_offset 8
 1524              	 .cfi_offset 7,-8
 1525              	 .cfi_offset 14,-4
 1526 0002 84B0     	 sub sp,sp,#16
 1527              	.LCFI155:
 1528              	 .cfi_def_cfa_offset 24
 1529 0004 00AF     	 add r7,sp,#0
 1530              	.LCFI156:
 1531              	 .cfi_def_cfa_register 7
 1532 0006 7860     	 str r0,[r7,#4]
 290:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t  status;
 291:../Dave/Generated/CAN_NODE/can_node.c **** 
 292:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_GetStatus: handle null", handle != NULL);
 293:../Dave/Generated/CAN_NODE/can_node.c **** 
 294:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1533              	 .loc 3 294 0
 1534 0008 7B68     	 ldr r3,[r7,#4]
 1535 000a 5B68     	 ldr r3,[r3,#4]
 1536 000c FB60     	 str r3,[r7,#12]
 295:../Dave/Generated/CAN_NODE/can_node.c **** 
 296:../Dave/Generated/CAN_NODE/can_node.c ****   status = XMC_CAN_NODE_GetStatus(can_node);
 1537              	 .loc 3 296 0
 1538 000e F868     	 ldr r0,[r7,#12]
 1539 0010 FFF7FEFF 	 bl XMC_CAN_NODE_GetStatus
 1540 0014 B860     	 str r0,[r7,#8]
 297:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1541              	 .loc 3 297 0
 1542 0016 BB68     	 ldr r3,[r7,#8]
 298:../Dave/Generated/CAN_NODE/can_node.c **** }
 1543              	 .loc 3 298 0
 1544 0018 1846     	 mov r0,r3
 1545 001a 1037     	 adds r7,r7,#16
 1546              	.LCFI157:
 1547              	 .cfi_def_cfa_offset 8
 1548 001c BD46     	 mov sp,r7
 1549              	.LCFI158:
 1550              	 .cfi_def_cfa_register 13
 1551              	 
 1552 001e 80BD     	 pop {r7,pc}
 1553              	 .cfi_endproc
 1554              	.LFE252:
 1556              	 .section .text.CAN_NODE_ClearStatus,"ax",%progbits
 1557              	 .align 2
 1558              	 .global CAN_NODE_ClearStatus
 1559              	 .thumb
 1560              	 .thumb_func
 1562              	CAN_NODE_ClearStatus:
 1563              	.LFB253:
 299:../Dave/Generated/CAN_NODE/can_node.c **** 
 300:../Dave/Generated/CAN_NODE/can_node.c **** /* Function to clear the current status of the CAN node  */
 301:../Dave/Generated/CAN_NODE/can_node.c **** void CAN_NODE_ClearStatus(const CAN_NODE_t *handle, XMC_CAN_NODE_STATUS_t can_node_status)
 302:../Dave/Generated/CAN_NODE/can_node.c **** {
 1564              	 .loc 3 302 0
 1565              	 .cfi_startproc
 1566              	 
 1567              	 
 1568 0000 80B5     	 push {r7,lr}
 1569              	.LCFI159:
 1570              	 .cfi_def_cfa_offset 8
 1571              	 .cfi_offset 7,-8
 1572              	 .cfi_offset 14,-4
 1573 0002 84B0     	 sub sp,sp,#16
 1574              	.LCFI160:
 1575              	 .cfi_def_cfa_offset 24
 1576 0004 00AF     	 add r7,sp,#0
 1577              	.LCFI161:
 1578              	 .cfi_def_cfa_register 7
 1579 0006 7860     	 str r0,[r7,#4]
 1580 0008 0B46     	 mov r3,r1
 1581 000a 7B80     	 strh r3,[r7,#2]
 303:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_ClearStatus: handle null", handle != NULL);
 304:../Dave/Generated/CAN_NODE/can_node.c **** 
 305:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_t *const can_node = handle->node_ptr;
 1582              	 .loc 3 305 0
 1583 000c 7B68     	 ldr r3,[r7,#4]
 1584 000e 5B68     	 ldr r3,[r3,#4]
 1585 0010 FB60     	 str r3,[r7,#12]
 306:../Dave/Generated/CAN_NODE/can_node.c **** 
 307:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_CAN_NODE_ClearStatus(can_node, can_node_status);
 1586              	 .loc 3 307 0
 1587 0012 7B88     	 ldrh r3,[r7,#2]
 1588 0014 F868     	 ldr r0,[r7,#12]
 1589 0016 1946     	 mov r1,r3
 1590 0018 FFF7FEFF 	 bl XMC_CAN_NODE_ClearStatus
 308:../Dave/Generated/CAN_NODE/can_node.c **** }
 1591              	 .loc 3 308 0
 1592 001c 1037     	 adds r7,r7,#16
 1593              	.LCFI162:
 1594              	 .cfi_def_cfa_offset 8
 1595 001e BD46     	 mov sp,r7
 1596              	.LCFI163:
 1597              	 .cfi_def_cfa_register 13
 1598              	 
 1599 0020 80BD     	 pop {r7,pc}
 1600              	 .cfi_endproc
 1601              	.LFE253:
 1603 0022 00BF     	 .section .text.CAN_NODE_Init,"ax",%progbits
 1604              	 .align 2
 1605              	 .global CAN_NODE_Init
 1606              	 .thumb
 1607              	 .thumb_func
 1609              	CAN_NODE_Init:
 1610              	.LFB254:
 309:../Dave/Generated/CAN_NODE/can_node.c **** 
 310:../Dave/Generated/CAN_NODE/can_node.c **** /*  Function to initialize the CAN node by configuring the baud rate, can bus type (External or int
 311:../Dave/Generated/CAN_NODE/can_node.c ****  *  and message objects.
 312:../Dave/Generated/CAN_NODE/can_node.c ****  */
 313:../Dave/Generated/CAN_NODE/can_node.c **** 
 314:../Dave/Generated/CAN_NODE/can_node.c **** CAN_NODE_STATUS_t CAN_NODE_Init(const CAN_NODE_t* handle)
 315:../Dave/Generated/CAN_NODE/can_node.c **** {
 1611              	 .loc 3 315 0
 1612              	 .cfi_startproc
 1613              	 
 1614              	 
 1615 0000 80B5     	 push {r7,lr}
 1616              	.LCFI164:
 1617              	 .cfi_def_cfa_offset 8
 1618              	 .cfi_offset 7,-8
 1619              	 .cfi_offset 14,-4
 1620 0002 86B0     	 sub sp,sp,#24
 1621              	.LCFI165:
 1622              	 .cfi_def_cfa_offset 32
 1623 0004 00AF     	 add r7,sp,#0
 1624              	.LCFI166:
 1625              	 .cfi_def_cfa_register 7
 1626 0006 7860     	 str r0,[r7,#4]
 316:../Dave/Generated/CAN_NODE/can_node.c ****   CAN_NODE_STATUS_t status = CAN_NODE_STATUS_SUCCESS;
 1627              	 .loc 3 316 0
 1628 0008 0023     	 movs r3,#0
 1629 000a FB75     	 strb r3,[r7,#23]
 317:../Dave/Generated/CAN_NODE/can_node.c ****   uint32_t loop_count;
 318:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_LMO_t *lmo_ptr;
 319:../Dave/Generated/CAN_NODE/can_node.c **** 
 320:../Dave/Generated/CAN_NODE/can_node.c ****   XMC_ASSERT("CAN_NODE_Init: handle null", handle != NULL);
 321:../Dave/Generated/CAN_NODE/can_node.c **** 
 322:../Dave/Generated/CAN_NODE/can_node.c ****   const CAN_NODE_GPIO_t *const lgpio_ptr = handle->gpio_out;
 1630              	 .loc 3 322 0
 1631 000c 7B68     	 ldr r3,[r7,#4]
 1632 000e D3F89030 	 ldr r3,[r3,#144]
 1633 0012 FB60     	 str r3,[r7,#12]
 323:../Dave/Generated/CAN_NODE/can_node.c **** 
 324:../Dave/Generated/CAN_NODE/can_node.c ****   /* Initialize the GLOBAL_CAN APP */
 325:../Dave/Generated/CAN_NODE/can_node.c ****   status  = (CAN_NODE_STATUS_t)GLOBAL_CAN_Init(handle->global_ptr);
 1634              	 .loc 3 325 0
 1635 0014 7B68     	 ldr r3,[r7,#4]
 1636 0016 1B68     	 ldr r3,[r3]
 1637 0018 1846     	 mov r0,r3
 1638 001a FFF7FEFF 	 bl GLOBAL_CAN_Init
 1639 001e 0346     	 mov r3,r0
 1640 0020 FB75     	 strb r3,[r7,#23]
 326:../Dave/Generated/CAN_NODE/can_node.c **** 
 327:../Dave/Generated/CAN_NODE/can_node.c ****   if (status == CAN_NODE_STATUS_SUCCESS)
 1641              	 .loc 3 327 0
 1642 0022 FB7D     	 ldrb r3,[r7,#23]
 1643 0024 002B     	 cmp r3,#0
 1644 0026 40F08280 	 bne .L47
 328:../Dave/Generated/CAN_NODE/can_node.c ****   {
 329:../Dave/Generated/CAN_NODE/can_node.c ****     /* Initialize the GUI configured values for baud rate to NBTR Reg */
 330:../Dave/Generated/CAN_NODE/can_node.c ****     if (XMC_CAN_NODE_NominalBitTimeConfigureEx(handle->node_ptr, handle->baudrate_config) == XMC_CA
 1645              	 .loc 3 330 0
 1646 002a 7B68     	 ldr r3,[r7,#4]
 1647 002c 5A68     	 ldr r2,[r3,#4]
 1648 002e 7B68     	 ldr r3,[r7,#4]
 1649 0030 9B68     	 ldr r3,[r3,#8]
 1650 0032 1046     	 mov r0,r2
 1651 0034 1946     	 mov r1,r3
 1652 0036 FFF7FEFF 	 bl XMC_CAN_NODE_NominalBitTimeConfigureEx
 1653 003a 0346     	 mov r3,r0
 1654 003c 002B     	 cmp r3,#0
 1655 003e 73D1     	 bne .L48
 331:../Dave/Generated/CAN_NODE/can_node.c ****     {
 332:../Dave/Generated/CAN_NODE/can_node.c ****       /* set CCE and INIT bit NCR for node configuration */
 333:../Dave/Generated/CAN_NODE/can_node.c **** 
 334:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_EnableConfigurationChange(handle->node_ptr);
 1656              	 .loc 3 334 0
 1657 0040 7B68     	 ldr r3,[r7,#4]
 1658 0042 5B68     	 ldr r3,[r3,#4]
 1659 0044 1846     	 mov r0,r3
 1660 0046 FFF7FEFF 	 bl XMC_CAN_NODE_EnableConfigurationChange
 335:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_SetInitBit(handle->node_ptr);
 1661              	 .loc 3 335 0
 1662 004a 7B68     	 ldr r3,[r7,#4]
 1663 004c 5B68     	 ldr r3,[r3,#4]
 1664 004e 1846     	 mov r0,r3
 1665 0050 FFF7FEFF 	 bl XMC_CAN_NODE_SetInitBit
 336:../Dave/Generated/CAN_NODE/can_node.c **** 
 337:../Dave/Generated/CAN_NODE/can_node.c ****       if (handle->loopback_enable == true) /* Loop back mode enabled */
 1666              	 .loc 3 337 0
 1667 0054 7B68     	 ldr r3,[r7,#4]
 1668 0056 93F8A730 	 ldrb r3,[r3,#167]
 1669 005a 002B     	 cmp r3,#0
 1670 005c 05D0     	 beq .L49
 338:../Dave/Generated/CAN_NODE/can_node.c ****       {
 339:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_NODE_EnableLoopBack(handle->node_ptr);
 1671              	 .loc 3 339 0
 1672 005e 7B68     	 ldr r3,[r7,#4]
 1673 0060 5B68     	 ldr r3,[r3,#4]
 1674 0062 1846     	 mov r0,r3
 1675 0064 FFF7FEFF 	 bl XMC_CAN_NODE_EnableLoopBack
 1676 0068 18E0     	 b .L50
 1677              	.L49:
 340:../Dave/Generated/CAN_NODE/can_node.c ****       }
 341:../Dave/Generated/CAN_NODE/can_node.c ****       else
 342:../Dave/Generated/CAN_NODE/can_node.c ****       {
 343:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_GPIO_Init(handle->gpio_in->port, handle->gpio_in->pin, handle->gpio_in_config);
 1678              	 .loc 3 343 0
 1679 006a 7B68     	 ldr r3,[r7,#4]
 1680 006c D3F89830 	 ldr r3,[r3,#152]
 1681 0070 1968     	 ldr r1,[r3]
 1682 0072 7B68     	 ldr r3,[r7,#4]
 1683 0074 D3F89830 	 ldr r3,[r3,#152]
 1684 0078 1A79     	 ldrb r2,[r3,#4]
 1685 007a 7B68     	 ldr r3,[r7,#4]
 1686 007c D3F89C30 	 ldr r3,[r3,#156]
 1687 0080 0846     	 mov r0,r1
 1688 0082 1146     	 mov r1,r2
 1689 0084 1A46     	 mov r2,r3
 1690 0086 FFF7FEFF 	 bl XMC_GPIO_Init
 344:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_NODE_SetReceiveInput(handle->node_ptr, handle->rx_signal);
 1691              	 .loc 3 344 0
 1692 008a 7B68     	 ldr r3,[r7,#4]
 1693 008c 5A68     	 ldr r2,[r3,#4]
 1694 008e 7B68     	 ldr r3,[r7,#4]
 1695 0090 93F8A030 	 ldrb r3,[r3,#160]
 1696 0094 1046     	 mov r0,r2
 1697 0096 1946     	 mov r1,r3
 1698 0098 FFF7FEFF 	 bl XMC_CAN_NODE_SetReceiveInput
 1699              	.L50:
 345:../Dave/Generated/CAN_NODE/can_node.c ****       }
 346:../Dave/Generated/CAN_NODE/can_node.c ****       CAN_NODE_SetNodeEvents(handle); /* API to enable node events */
 1700              	 .loc 3 346 0
 1701 009c 7868     	 ldr r0,[r7,#4]
 1702 009e FFF7FEFF 	 bl CAN_NODE_SetNodeEvents
 347:../Dave/Generated/CAN_NODE/can_node.c **** 
 348:../Dave/Generated/CAN_NODE/can_node.c ****       for (loop_count = 0U; loop_count < handle->mo_count; loop_count++)
 1703              	 .loc 3 348 0
 1704 00a2 0023     	 movs r3,#0
 1705 00a4 3B61     	 str r3,[r7,#16]
 1706 00a6 19E0     	 b .L51
 1707              	.L52:
 349:../Dave/Generated/CAN_NODE/can_node.c ****       {
 350:../Dave/Generated/CAN_NODE/can_node.c ****         lmo_ptr = handle->lmobj_ptr[loop_count];
 1708              	 .loc 3 350 0 discriminator 3
 1709 00a8 7A68     	 ldr r2,[r7,#4]
 1710 00aa 3B69     	 ldr r3,[r7,#16]
 1711 00ac 0233     	 adds r3,r3,#2
 1712 00ae 9B00     	 lsls r3,r3,#2
 1713 00b0 1344     	 add r3,r3,r2
 1714 00b2 5B68     	 ldr r3,[r3,#4]
 1715 00b4 BB60     	 str r3,[r7,#8]
 351:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_CAN_AllocateMOtoNodeList(handle->global_ptr->canglobal_ptr, handle->node_num, lmo_ptr->
 1716              	 .loc 3 351 0 discriminator 3
 1717 00b6 7B68     	 ldr r3,[r7,#4]
 1718 00b8 1B68     	 ldr r3,[r3]
 1719 00ba 5968     	 ldr r1,[r3,#4]
 1720 00bc 7B68     	 ldr r3,[r7,#4]
 1721 00be 93F8A120 	 ldrb r2,[r3,#161]
 1722 00c2 BB68     	 ldr r3,[r7,#8]
 1723 00c4 1B79     	 ldrb r3,[r3,#4]
 1724 00c6 0846     	 mov r0,r1
 1725 00c8 1146     	 mov r1,r2
 1726 00ca 1A46     	 mov r2,r3
 1727 00cc FFF7FEFF 	 bl XMC_CAN_AllocateMOtoNodeList
 352:../Dave/Generated/CAN_NODE/can_node.c ****         CAN_NODE_MO_Init(lmo_ptr);
 1728              	 .loc 3 352 0 discriminator 3
 1729 00d0 B868     	 ldr r0,[r7,#8]
 1730 00d2 FFF7FEFF 	 bl CAN_NODE_MO_Init
 348:../Dave/Generated/CAN_NODE/can_node.c ****       {
 1731              	 .loc 3 348 0 discriminator 3
 1732 00d6 3B69     	 ldr r3,[r7,#16]
 1733 00d8 0133     	 adds r3,r3,#1
 1734 00da 3B61     	 str r3,[r7,#16]
 1735              	.L51:
 348:../Dave/Generated/CAN_NODE/can_node.c ****       {
 1736              	 .loc 3 348 0 is_stmt 0 discriminator 1
 1737 00dc 7B68     	 ldr r3,[r7,#4]
 1738 00de 93F8A230 	 ldrb r3,[r3,#162]
 1739 00e2 1A46     	 mov r2,r3
 1740 00e4 3B69     	 ldr r3,[r7,#16]
 1741 00e6 9A42     	 cmp r2,r3
 1742 00e8 DED8     	 bhi .L52
 353:../Dave/Generated/CAN_NODE/can_node.c ****       }
 354:../Dave/Generated/CAN_NODE/can_node.c ****       /* reset CCE and INIT bit NCR for node configuration */
 355:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_DisableConfigurationChange(handle->node_ptr);
 1743              	 .loc 3 355 0 is_stmt 1
 1744 00ea 7B68     	 ldr r3,[r7,#4]
 1745 00ec 5B68     	 ldr r3,[r3,#4]
 1746 00ee 1846     	 mov r0,r3
 1747 00f0 FFF7FEFF 	 bl XMC_CAN_NODE_DisableConfigurationChange
 356:../Dave/Generated/CAN_NODE/can_node.c ****       XMC_CAN_NODE_ResetInitBit(handle->node_ptr);
 1748              	 .loc 3 356 0
 1749 00f4 7B68     	 ldr r3,[r7,#4]
 1750 00f6 5B68     	 ldr r3,[r3,#4]
 1751 00f8 1846     	 mov r0,r3
 1752 00fa FFF7FEFF 	 bl XMC_CAN_NODE_ResetInitBit
 357:../Dave/Generated/CAN_NODE/can_node.c ****       if (handle->loopback_enable == false)
 1753              	 .loc 3 357 0
 1754 00fe 7B68     	 ldr r3,[r7,#4]
 1755 0100 93F8A730 	 ldrb r3,[r3,#167]
 1756 0104 83F00103 	 eor r3,r3,#1
 1757 0108 DBB2     	 uxtb r3,r3
 1758 010a 002B     	 cmp r3,#0
 1759 010c 11D0     	 beq .L55
 358:../Dave/Generated/CAN_NODE/can_node.c ****       {
 359:../Dave/Generated/CAN_NODE/can_node.c ****         /* CAN transmit pin configuration */
 360:../Dave/Generated/CAN_NODE/can_node.c ****         XMC_GPIO_Init(lgpio_ptr->port, lgpio_ptr->pin, handle->gpio_out_config);
 1760              	 .loc 3 360 0
 1761 010e FB68     	 ldr r3,[r7,#12]
 1762 0110 1968     	 ldr r1,[r3]
 1763 0112 FB68     	 ldr r3,[r7,#12]
 1764 0114 1A79     	 ldrb r2,[r3,#4]
 1765 0116 7B68     	 ldr r3,[r7,#4]
 1766 0118 D3F89430 	 ldr r3,[r3,#148]
 1767 011c 0846     	 mov r0,r1
 1768 011e 1146     	 mov r1,r2
 1769 0120 1A46     	 mov r2,r3
 1770 0122 FFF7FEFF 	 bl XMC_GPIO_Init
 1771 0126 04E0     	 b .L55
 1772              	.L48:
 361:../Dave/Generated/CAN_NODE/can_node.c ****       }
 362:../Dave/Generated/CAN_NODE/can_node.c ****     }
 363:../Dave/Generated/CAN_NODE/can_node.c ****     else
 364:../Dave/Generated/CAN_NODE/can_node.c ****     {
 365:../Dave/Generated/CAN_NODE/can_node.c ****       status = CAN_NODE_STATUS_FAILURE;
 1773              	 .loc 3 365 0
 1774 0128 0123     	 movs r3,#1
 1775 012a FB75     	 strb r3,[r7,#23]
 1776 012c 01E0     	 b .L55
 1777              	.L47:
 366:../Dave/Generated/CAN_NODE/can_node.c ****     }
 367:../Dave/Generated/CAN_NODE/can_node.c ****   }
 368:../Dave/Generated/CAN_NODE/can_node.c ****   else
 369:../Dave/Generated/CAN_NODE/can_node.c ****   {
 370:../Dave/Generated/CAN_NODE/can_node.c ****     status = CAN_NODE_STATUS_FAILURE;
 1778              	 .loc 3 370 0
 1779 012e 0123     	 movs r3,#1
 1780 0130 FB75     	 strb r3,[r7,#23]
 1781              	.L55:
 371:../Dave/Generated/CAN_NODE/can_node.c ****   }
 372:../Dave/Generated/CAN_NODE/can_node.c **** 
 373:../Dave/Generated/CAN_NODE/can_node.c ****   return (status);
 1782              	 .loc 3 373 0
 1783 0132 FB7D     	 ldrb r3,[r7,#23]
 374:../Dave/Generated/CAN_NODE/can_node.c **** }
 1784              	 .loc 3 374 0
 1785 0134 1846     	 mov r0,r3
 1786 0136 1837     	 adds r7,r7,#24
 1787              	.LCFI167:
 1788              	 .cfi_def_cfa_offset 8
 1789 0138 BD46     	 mov sp,r7
 1790              	.LCFI168:
 1791              	 .cfi_def_cfa_register 13
 1792              	 
 1793 013a 80BD     	 pop {r7,pc}
 1794              	 .cfi_endproc
 1795              	.LFE254:
 1797              	 .text
 1798              	.Letext0:
 1799              	 .file 4 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1800              	 .file 5 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1801              	 .file 6 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 1802              	 .file 7 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc_gpio.h"
 1803              	 .file 8 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc4_gpio.h"
 1804              	 .file 9 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Dave/Generated/DAVE_Common.h"
 1805              	 .file 10 "../Dave/Generated/CAN_NODE/../GLOBAL_CAN/global_can.h"
 1806              	 .file 11 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include/core_cm4.h"
 1807              	 .file 12 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 can_node.c
    {standard input}:20     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 $t
    {standard input}:24     .text.XMC_CAN_NODE_SetEventNodePointer:00000000 XMC_CAN_NODE_SetEventNodePointer
    {standard input}:77     .text.XMC_CAN_NODE_SetReceiveInput:00000000 $t
    {standard input}:81     .text.XMC_CAN_NODE_SetReceiveInput:00000000 XMC_CAN_NODE_SetReceiveInput
    {standard input}:129    .text.XMC_CAN_NODE_EnableLoopBack:00000000 $t
    {standard input}:133    .text.XMC_CAN_NODE_EnableLoopBack:00000000 XMC_CAN_NODE_EnableLoopBack
    {standard input}:174    .text.XMC_CAN_NODE_GetStatus:00000000 $t
    {standard input}:178    .text.XMC_CAN_NODE_GetStatus:00000000 XMC_CAN_NODE_GetStatus
    {standard input}:217    .text.XMC_CAN_NODE_ClearStatus:00000000 $t
    {standard input}:221    .text.XMC_CAN_NODE_ClearStatus:00000000 XMC_CAN_NODE_ClearStatus
    {standard input}:266    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 $t
    {standard input}:270    .text.XMC_CAN_NODE_EnableConfigurationChange:00000000 XMC_CAN_NODE_EnableConfigurationChange
    {standard input}:311    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 $t
    {standard input}:315    .text.XMC_CAN_NODE_DisableConfigurationChange:00000000 XMC_CAN_NODE_DisableConfigurationChange
    {standard input}:356    .text.XMC_CAN_NODE_SetInitBit:00000000 $t
    {standard input}:360    .text.XMC_CAN_NODE_SetInitBit:00000000 XMC_CAN_NODE_SetInitBit
    {standard input}:401    .text.XMC_CAN_NODE_ResetInitBit:00000000 $t
    {standard input}:405    .text.XMC_CAN_NODE_ResetInitBit:00000000 XMC_CAN_NODE_ResetInitBit
    {standard input}:446    .text.XMC_CAN_MO_SetEventNodePointer:00000000 $t
    {standard input}:450    .text.XMC_CAN_MO_SetEventNodePointer:00000000 XMC_CAN_MO_SetEventNodePointer
    {standard input}:506    .text.XMC_CAN_MO_GetStatus:00000000 $t
    {standard input}:510    .text.XMC_CAN_MO_GetStatus:00000000 XMC_CAN_MO_GetStatus
    {standard input}:550    .text.XMC_CAN_MO_ResetStatus:00000000 $t
    {standard input}:554    .text.XMC_CAN_MO_ResetStatus:00000000 XMC_CAN_MO_ResetStatus
    {standard input}:595    .text.XMC_CAN_MO_EnableEvent:00000000 $t
    {standard input}:599    .text.XMC_CAN_MO_EnableEvent:00000000 XMC_CAN_MO_EnableEvent
    {standard input}:644    .text.CAN_NODE_MO_EnableTxEvent:00000000 $t
    {standard input}:648    .text.CAN_NODE_MO_EnableTxEvent:00000000 CAN_NODE_MO_EnableTxEvent
    {standard input}:686    .text.CAN_NODE_MO_EnableRxEvent:00000000 $t
    {standard input}:690    .text.CAN_NODE_MO_EnableRxEvent:00000000 CAN_NODE_MO_EnableRxEvent
    {standard input}:727    .text.CAN_NODE_SetNodeEvents:00000000 $t
    {standard input}:731    .text.CAN_NODE_SetNodeEvents:00000000 CAN_NODE_SetNodeEvents
    {standard input}:821    .text.CAN_NODE_SetNodePointer:00000000 CAN_NODE_SetNodePointer
    {standard input}:817    .text.CAN_NODE_SetNodePointer:00000000 $t
    {standard input}:900    .text.CAN_NODE_GetAppVersion:00000000 $t
    {standard input}:905    .text.CAN_NODE_GetAppVersion:00000000 CAN_NODE_GetAppVersion
    {standard input}:965    .text.CAN_NODE_EnableEvent:00000000 $t
    {standard input}:970    .text.CAN_NODE_EnableEvent:00000000 CAN_NODE_EnableEvent
    {standard input}:1010   .text.CAN_NODE_ConfigBaudrate:00000000 $t
    {standard input}:1015   .text.CAN_NODE_ConfigBaudrate:00000000 CAN_NODE_ConfigBaudrate
    {standard input}:1088   .text.CAN_NODE_MO_Init:00000000 $t
    {standard input}:1093   .text.CAN_NODE_MO_Init:00000000 CAN_NODE_MO_Init
    {standard input}:1165   .text.CAN_NODE_MO_Transmit:00000000 $t
    {standard input}:1170   .text.CAN_NODE_MO_Transmit:00000000 CAN_NODE_MO_Transmit
    {standard input}:1214   .text.CAN_NODE_MO_Receive:00000000 $t
    {standard input}:1219   .text.CAN_NODE_MO_Receive:00000000 CAN_NODE_MO_Receive
    {standard input}:1263   .text.CAN_NODE_MO_ReceiveData:00000000 $t
    {standard input}:1268   .text.CAN_NODE_MO_ReceiveData:00000000 CAN_NODE_MO_ReceiveData
    {standard input}:1312   .text.CAN_NODE_MO_UpdateData:00000000 $t
    {standard input}:1317   .text.CAN_NODE_MO_UpdateData:00000000 CAN_NODE_MO_UpdateData
    {standard input}:1377   .text.CAN_NODE_MO_GetStatus:00000000 $t
    {standard input}:1382   .text.CAN_NODE_MO_GetStatus:00000000 CAN_NODE_MO_GetStatus
    {standard input}:1422   .text.CAN_NODE_MO_ClearStatus:00000000 $t
    {standard input}:1427   .text.CAN_NODE_MO_ClearStatus:00000000 CAN_NODE_MO_ClearStatus
    {standard input}:1465   .text.CAN_NODE_DisableEvent:00000000 $t
    {standard input}:1470   .text.CAN_NODE_DisableEvent:00000000 CAN_NODE_DisableEvent
    {standard input}:1510   .text.CAN_NODE_GetStatus:00000000 $t
    {standard input}:1515   .text.CAN_NODE_GetStatus:00000000 CAN_NODE_GetStatus
    {standard input}:1557   .text.CAN_NODE_ClearStatus:00000000 $t
    {standard input}:1562   .text.CAN_NODE_ClearStatus:00000000 CAN_NODE_ClearStatus
    {standard input}:1604   .text.CAN_NODE_Init:00000000 $t
    {standard input}:1609   .text.CAN_NODE_Init:00000000 CAN_NODE_Init
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
XMC_CAN_NODE_EnableEvent
XMC_CAN_NODE_NominalBitTimeConfigure
XMC_CAN_MO_Config
XMC_CAN_MO_Transmit
XMC_CAN_MO_Receive
XMC_CAN_MO_ReceiveData
XMC_CAN_MO_UpdateData
XMC_CAN_NODE_DisableEvent
GLOBAL_CAN_Init
XMC_CAN_NODE_NominalBitTimeConfigureEx
XMC_GPIO_Init
XMC_CAN_AllocateMOtoNodeList
