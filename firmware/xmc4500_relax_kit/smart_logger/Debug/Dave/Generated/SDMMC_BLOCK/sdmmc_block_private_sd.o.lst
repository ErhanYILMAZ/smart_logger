   1              	 .syntax unified
   2              	 .cpu cortex-m4
   3              	 .eabi_attribute 27,3
   4              	 .fpu fpv4-sp-d16
   5              	 .eabi_attribute 20,1
   6              	 .eabi_attribute 21,1
   7              	 .eabi_attribute 23,3
   8              	 .eabi_attribute 24,1
   9              	 .eabi_attribute 25,1
  10              	 .eabi_attribute 26,1
  11              	 .eabi_attribute 30,6
  12              	 .eabi_attribute 34,1
  13              	 .eabi_attribute 18,4
  14              	 .thumb
  15              	 .file "sdmmc_block_private_sd.c"
  16              	 .text
  17              	.Ltext0:
  18              	 .cfi_sections .debug_frame
  19              	 .section .text.__NVIC_GetPriorityGrouping,"ax",%progbits
  20              	 .align 2
  21              	 .thumb
  22              	 .thumb_func
  24              	__NVIC_GetPriorityGrouping:
  25              	.LFB103:
  26              	 .file 1 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include/core_cm4.h"
   1:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**************************************************************************//**
   2:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * @file     core_cm4.h
   3:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * @brief    CMSIS Cortex-M4 Core Peripheral Access Layer Header File
   4:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * @version  V5.0.8
   5:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * @date     04. June 2018
   6:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
   7:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*
   8:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *
  10:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * SPDX-License-Identifier: Apache-2.0
  11:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *
  12:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * not use this file except in compliance with the License.
  14:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * You may obtain a copy of the License at
  15:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *
  16:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *
  18:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * Unless required by applicable law or agreed to in writing, software
  19:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * See the License for the specific language governing permissions and
  22:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  * limitations under the License.
  23:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
  24:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  25:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #if   defined ( __ICCARM__ )
  26:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #pragma system_include         /* treat file as system include file for MISRA check */
  27:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__clang__)
  28:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #pragma clang system_header   /* treat file as system include file */
  29:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
  30:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  31:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_GENERIC
  32:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_GENERIC
  33:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  34:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #include <stdint.h>
  35:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  36:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
  37:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
  38:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
  39:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  40:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
  41:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  42:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   CMSIS violates the following MISRA-C:2004 rules:
  43:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  44:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  45:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****      Function definitions in header files are used to allow 'inlining'.
  46:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  47:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  48:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****      Unions are used for effective representation of core registers.
  49:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  50:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  51:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****      Function-like macros are used to allow more efficient code.
  52:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
  53:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  54:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  55:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
  56:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *                 CMSIS definitions
  57:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
  58:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
  59:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup Cortex_M4
  60:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
  61:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
  62:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  63:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_version.h"
  64:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  65:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* CMSIS CM4 definitions */
  66:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_MAIN  (__CM_CMSIS_VERSION_MAIN)              /*!< \deprecated [31:16] C
  67:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION_SUB   (__CM_CMSIS_VERSION_SUB)               /*!< \deprecated [15:0]  C
  68:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CM4_CMSIS_VERSION       ((__CM4_CMSIS_VERSION_MAIN << 16U) | \
  69:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****                                     __CM4_CMSIS_VERSION_SUB           )  /*!< \deprecated CMSIS HAL
  70:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  71:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CORTEX_M                (4U)                                   /*!< Cortex-M Core */
  72:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  73:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /** __FPU_USED indicates whether an FPU is used or not.
  74:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     For this, __FPU_PRESENT has to be checked prior to making use of FPU specific registers and fun
  75:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
  76:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #if defined ( __CC_ARM )
  77:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TARGET_FPU_VFP
  78:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  79:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  80:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
  81:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
  82:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  83:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  84:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
  85:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  86:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  87:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
  88:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined (__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  89:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARM_PCS_VFP
  90:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
  91:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
  92:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
  93:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #warning "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESEN
  94:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
  95:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
  96:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
  97:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
  98:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
  99:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __GNUC__ )
 101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
 105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
 109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __ICCARM__ )
 113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __ARMVFP__
 114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
 117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
 121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TI_ARM__ )
 125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __TI_VFP_SUPPORT__
 126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
 129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
 133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __TASKING__ )
 137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if defined __FPU_VFP__
 138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
 141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
 145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #elif defined ( __CSMC__ )
 149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #if ( __CSMC__ & 0x400U)
 150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #if defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)
 151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       1U
 152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #else
 153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)
 154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****       #define __FPU_USED       0U
 155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #endif
 156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #else
 157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_USED         0U
 158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
 161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #include "cmsis_compiler.h"               /* CMSIS compiler specific defines */
 163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
 167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
 168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif /* __CORE_CM4_H_GENERIC */
 170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CMSIS_GENERIC
 172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifndef __CORE_CM4_H_DEPENDANT
 174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define __CORE_CM4_H_DEPENDANT
 175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  extern "C" {
 178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
 179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* check device defines and use defaults */
 181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #if defined __CHECK_DEVICE_DEFINES
 182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __CM4_REV
 183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __CM4_REV               0x0000U
 184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__CM4_REV not defined in device header file; using default!"
 185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __FPU_PRESENT
 188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __FPU_PRESENT             0U
 189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__FPU_PRESENT not defined in device header file; using default!"
 190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __MPU_PRESENT
 193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __MPU_PRESENT             0U
 194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __NVIC_PRIO_BITS
 198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __NVIC_PRIO_BITS          3U
 199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef __Vendor_SysTickConfig
 203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define __Vendor_SysTickConfig    0U
 204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
 206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
 207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* IO definitions (access restrictions to peripheral registers) */
 209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     <strong>IO Type Qualifiers</strong> are used
 213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     \li to specify the access to peripheral variables.
 214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     \li for automatic generation of peripheral register debug information.
 215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
 216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef __cplusplus
 217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #else
 219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
 221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* following defines should be used for structure members */
 225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group Cortex_M4 */
 230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
 234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *                 Register Abstraction
 235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   Core Register contain:
 236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register
 237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Register
 238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core SCB Register
 239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Register
 240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Register
 241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core MPU Register
 242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core FPU Register
 243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
 244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
 248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Core Register type definitions.
 253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   struct
 262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
 263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:16;              /*!< bit:  0..15  Reserved */
 264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:7;               /*!< bit: 20..26  Reserved */
 266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } APSR_Type;
 274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* APSR Register Definitions */
 276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Pos                        16U                                            /*!< APSR
 292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define APSR_GE_Msk                        (0xFUL << APSR_GE_Pos)                         /*!< APSR
 293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   struct
 301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
 302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } IPSR_Type;
 307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* IPSR Register Definitions */
 309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   struct
 319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
 320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:1;               /*!< bit:      9  Reserved */
 322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_1:6;                 /*!< bit: 10..15  ICI/IT part 1 */
 323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t GE:4;                       /*!< bit: 16..19  Greater than or Equal flags */
 324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved1:4;               /*!< bit: 20..23  Reserved */
 325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit */
 326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t ICI_IT_2:2;                 /*!< bit: 25..26  ICI/IT part 2 */
 327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } xPSR_Type;
 335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* xPSR Register Definitions */
 337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Pos                  25U                                            /*!< xPSR
 353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_2_Msk                  (3UL << xPSR_ICI_IT_2_Pos)                     /*!< xPSR
 354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Pos                        16U                                            /*!< xPSR
 359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_GE_Msk                        (0xFUL << xPSR_GE_Pos)                         /*!< xPSR
 360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Pos                  10U                                            /*!< xPSR
 362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ICI_IT_1_Msk                  (0x3FUL << xPSR_ICI_IT_1_Pos)                  /*!< xPSR
 363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Union type to access the Control Registers (CONTROL).
 370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef union
 372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   struct
 374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
 375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t FPCA:1;                     /*!< bit:      2  FP extension active flag */
 378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     uint32_t _reserved0:29;              /*!< bit:  3..31  Reserved */
 379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   } b;                                   /*!< Structure used for bit  access */
 380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t w;                            /*!< Type      used for word access */
 381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } CONTROL_Type;
 382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* CONTROL Register Definitions */
 384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Pos                    2U                                            /*!< CONT
 385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_FPCA_Msk                   (1UL << CONTROL_FPCA_Pos)                      /*!< CONT
 386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CORE */
 394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
 398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Type definitions for the NVIC Registers
 400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[24U];
 410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RSERVED1[24U];
 412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[24U];
 414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[24U];
 416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[56U];
 418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[644U];
 420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }  NVIC_Type;
 422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Software Triggered Interrupt Register Definitions */
 424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_NVIC */
 428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control Block Registers
 434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control Block (SCB).
 439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[5U];
 462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } SCB_Type;
 464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB CPUID Register Definitions */
 466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Interrupt Control State Register Definitions */
 482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
 489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Vector Table Offset Register Definitions */
 513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Control Register Definitions */
 539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configuration Control Register Definitions */
 549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB System Handler Control and State Register Definitions */
 568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Configurable Fault Status Register Definitions */
 611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MemManage Fault Status Register (part of SCB Configurable Fault Status Register) */
 621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 7U)               /*!< SCB 
 622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MMARVALID_Msk             (1UL << SCB_CFSR_MMARVALID_Pos)                /*!< SCB 
 623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 5U)               /*!< SCB 
 625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MLSPERR_Msk               (1UL << SCB_CFSR_MLSPERR_Pos)                  /*!< SCB 
 626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Pos               (SCB_SHCSR_MEMFAULTACT_Pos + 4U)               /*!< SCB 
 628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MSTKERR_Msk               (1UL << SCB_CFSR_MSTKERR_Pos)                  /*!< SCB 
 629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Pos             (SCB_SHCSR_MEMFAULTACT_Pos + 3U)               /*!< SCB 
 631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_MUNSTKERR_Msk             (1UL << SCB_CFSR_MUNSTKERR_Pos)                /*!< SCB 
 632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 1U)               /*!< SCB 
 634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DACCVIOL_Msk              (1UL << SCB_CFSR_DACCVIOL_Pos)                 /*!< SCB 
 635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Pos              (SCB_SHCSR_MEMFAULTACT_Pos + 0U)               /*!< SCB 
 637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IACCVIOL_Msk              (1UL /*<< SCB_CFSR_IACCVIOL_Pos*/)             /*!< SCB 
 638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* BusFault Status Register (part of SCB Configurable Fault Status Register) */
 640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 7U)                  /*!< SCB 
 641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_BFARVALID_Msk            (1UL << SCB_CFSR_BFARVALID_Pos)                 /*!< SCB 
 642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 5U)                  /*!< SCB 
 644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_LSPERR_Msk               (1UL << SCB_CFSR_LSPERR_Pos)                    /*!< SCB 
 645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Pos               (SCB_CFSR_BUSFAULTSR_Pos + 4U)                  /*!< SCB 
 647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_STKERR_Msk               (1UL << SCB_CFSR_STKERR_Pos)                    /*!< SCB 
 648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Pos             (SCB_CFSR_BUSFAULTSR_Pos + 3U)                  /*!< SCB 
 650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNSTKERR_Msk             (1UL << SCB_CFSR_UNSTKERR_Pos)                  /*!< SCB 
 651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Pos          (SCB_CFSR_BUSFAULTSR_Pos + 2U)                  /*!< SCB 
 653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IMPRECISERR_Msk          (1UL << SCB_CFSR_IMPRECISERR_Pos)               /*!< SCB 
 654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Pos            (SCB_CFSR_BUSFAULTSR_Pos + 1U)                  /*!< SCB 
 656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_PRECISERR_Msk            (1UL << SCB_CFSR_PRECISERR_Pos)                 /*!< SCB 
 657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Pos              (SCB_CFSR_BUSFAULTSR_Pos + 0U)                  /*!< SCB 
 659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_IBUSERR_Msk              (1UL << SCB_CFSR_IBUSERR_Pos)                   /*!< SCB 
 660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* UsageFault Status Register (part of SCB Configurable Fault Status Register) */
 662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Pos            (SCB_CFSR_USGFAULTSR_Pos + 9U)                  /*!< SCB 
 663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_DIVBYZERO_Msk            (1UL << SCB_CFSR_DIVBYZERO_Pos)                 /*!< SCB 
 664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Pos            (SCB_CFSR_USGFAULTSR_Pos + 8U)                  /*!< SCB 
 666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNALIGNED_Msk            (1UL << SCB_CFSR_UNALIGNED_Pos)                 /*!< SCB 
 667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Pos                 (SCB_CFSR_USGFAULTSR_Pos + 3U)                  /*!< SCB 
 669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_NOCP_Msk                 (1UL << SCB_CFSR_NOCP_Pos)                      /*!< SCB 
 670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Pos                (SCB_CFSR_USGFAULTSR_Pos + 2U)                  /*!< SCB 
 672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVPC_Msk                (1UL << SCB_CFSR_INVPC_Pos)                     /*!< SCB 
 673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Pos             (SCB_CFSR_USGFAULTSR_Pos + 1U)                  /*!< SCB 
 675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_INVSTATE_Msk             (1UL << SCB_CFSR_INVSTATE_Pos)                  /*!< SCB 
 676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Pos           (SCB_CFSR_USGFAULTSR_Pos + 0U)                  /*!< SCB 
 678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_CFSR_UNDEFINSTR_Msk           (1UL << SCB_CFSR_UNDEFINSTR_Pos)                /*!< SCB 
 679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Hard Fault Status Register Definitions */
 681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 685:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 686:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 687:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 688:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 689:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 690:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SCB Debug Fault Status Register Definitions */
 691:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 692:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 693:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 694:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 695:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 696:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 697:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 698:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 699:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 700:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 701:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 702:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 703:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 704:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 705:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 706:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCB */
 707:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 708:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 709:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 710:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 711:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
 712:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 713:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 714:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 715:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 716:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 717:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 718:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 719:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 720:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 721:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 722:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 723:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 724:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } SCnSCB_Type;
 725:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 726:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Interrupt Controller Type Register Definitions */
 727:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 728:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 729:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 730:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Auxiliary Control Register Definitions */
 731:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Pos            9U                                         /*!< ACTLR: 
 732:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISOOFP_Msk           (1UL << SCnSCB_ACTLR_DISOOFP_Pos)           /*!< ACTLR: 
 733:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 734:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Pos            8U                                         /*!< ACTLR: 
 735:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFPCA_Msk           (1UL << SCnSCB_ACTLR_DISFPCA_Pos)           /*!< ACTLR: 
 736:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 737:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 738:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 739:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 740:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 741:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 742:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 743:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 744:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 745:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 746:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SCnotSCB */
 747:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 748:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 749:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 750:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 751:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 752:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the System Timer Registers.
 753:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 754:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 755:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 756:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 757:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the System Timer (SysTick).
 758:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 759:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 760:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 761:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 762:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 763:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 764:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 765:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } SysTick_Type;
 766:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 767:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Control / Status Register Definitions */
 768:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 769:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
 770:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 771:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 772:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 773:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 774:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 775:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 776:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 777:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 778:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 779:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 780:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Reload Register Definitions */
 781:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 782:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 783:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 784:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Current Register Definitions */
 785:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 786:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 787:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 788:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* SysTick Calibration Register Definitions */
 789:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 790:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 791:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 792:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 793:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 794:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 795:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 796:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 797:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 798:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_SysTick */
 799:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 800:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 801:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 802:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 803:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 804:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 805:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 806:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 807:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 808:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 809:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 810:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 811:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 812:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 813:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __OM  union
 814:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
 815:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 816:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 817:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 818:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 819:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[864U];
 820:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 821:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[15U];
 822:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 823:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[15U];
 824:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 825:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[29U];
 826:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
 827:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 828:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 829:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[43U];
 830:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 831:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 832:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[6U];
 833:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 834:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 835:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 836:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 837:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 838:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 839:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 840:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 841:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 842:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 843:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 844:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 845:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } ITM_Type;
 846:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 847:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Privilege Register Definitions */
 848:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 849:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFFFFFFFFUL /*<< ITM_TPR_PRIVMASK_Pos*/)     /*!< ITM 
 850:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 851:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Trace Control Register Definitions */
 852:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 853:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 854:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 855:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 856:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 857:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 858:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 859:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 860:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 861:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 862:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 863:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 864:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 865:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 866:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 867:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 868:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 869:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 870:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 871:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 872:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 873:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 874:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 875:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 876:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 877:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 878:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 879:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Write Register Definitions */
 880:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 881:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 882:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 883:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Read Register Definitions */
 884:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 885:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 886:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 887:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Integration Mode Control Register Definitions */
 888:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 889:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 890:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 891:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ITM Lock Status Register Definitions */
 892:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 893:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 894:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 895:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 896:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 897:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 898:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 899:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 900:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 901:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_ITM */
 902:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 903:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 904:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 905:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
 906:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 907:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 908:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
 909:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 910:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 911:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
 912:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 913:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
 914:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
 915:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 916:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 917:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 918:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 919:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 920:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 921:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 922:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 923:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 924:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 925:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 926:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 927:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
 928:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 929:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 930:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 931:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[1U];
 932:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 933:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 934:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 935:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[1U];
 936:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 937:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 938:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 939:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } DWT_Type;
 940:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 941:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Control Register Definitions */
 942:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 943:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 944:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 945:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 946:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 947:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 948:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 949:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 950:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 951:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 952:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 953:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 954:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 955:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 956:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 957:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 958:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 959:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 960:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 961:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 962:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 963:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 964:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 965:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 966:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 967:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 968:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 969:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 970:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 971:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 972:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 973:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 974:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 975:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 976:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 977:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 978:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 979:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 980:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 981:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 982:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 983:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 984:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 985:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 986:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 987:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 988:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 989:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 990:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 991:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 992:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 993:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 994:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 995:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
 996:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT CPI Count Register Definitions */
 997:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
 998:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 999:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1000:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Exception Overhead Count Register Definitions */
1001:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
1002:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
1003:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1004:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Sleep Count Register Definitions */
1005:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
1006:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
1007:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1008:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT LSU Count Register Definitions */
1009:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
1010:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
1011:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1012:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Folded-instruction Count Register Definitions */
1013:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
1014:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
1015:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1016:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Mask Register Definitions */
1017:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
1018:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
1019:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1020:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* DWT Comparator Function Register Definitions */
1021:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
1022:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
1023:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1024:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
1025:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
1026:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1027:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
1028:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
1029:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1030:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
1031:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
1032:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1033:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
1034:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
1035:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1036:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
1037:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
1038:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1039:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
1040:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
1041:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1042:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
1043:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
1044:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1045:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
1046:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
1047:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1048:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_DWT */
1049:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1050:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1051:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1052:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1053:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
1054:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
1055:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1056:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1057:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1058:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1059:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
1060:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1061:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1062:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1063:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
1064:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
1065:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[2U];
1066:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
1067:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED1[55U];
1068:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
1069:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED2[131U];
1070:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
1071:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
1072:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
1073:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED3[759U];
1074:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER Register */
1075:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1076:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1077:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED4[1U];
1078:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1079:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1080:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1081:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED5[39U];
1082:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1083:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1084:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED7[8U];
1085:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1086:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1087:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } TPI_Type;
1088:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1089:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1090:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1091:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1092:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1093:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Selected Pin Protocol Register Definitions */
1094:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1095:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1096:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1097:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Status Register Definitions */
1098:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1099:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Formatter and Flush Control Register Definitions */
1111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
1112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI TRIGGER Register Definitions */
1118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR2 Register Definitions */
1144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Pos          0U                                         /*!< TPI ITA
1145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY2_Pos*/)   /*!< TPI ITA
1146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Pos          0U                                         /*!< TPI ITA
1148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR2_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR2_ATREADY1_Pos*/)   /*!< TPI ITA
1149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI ITATBCTR0 Register Definitions */
1173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Pos          0U                                         /*!< TPI ITA
1174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY2_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY2_Pos*/)   /*!< TPI ITA
1175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Pos          0U                                         /*!< TPI ITA
1177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITATBCTR0_ATREADY1_Msk         (0x1UL /*<< TPI_ITATBCTR0_ATREADY1_Pos*/)   /*!< TPI ITA
1178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI Integration Mode Control Register Definitions */
1180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_ITCTRL_Mode_Msk                (0x3UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVID Register Definitions */
1184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* TPI DEVTYPE Register Definitions */
1203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Pos             4U                                         /*!< TPI DEV
1204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Pos           0U                                         /*!< TPI DEV
1207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@}*/ /* end of group CMSIS_TPI */
1210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
1232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } MPU_Type;
1237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_RALIASES                  4U
1239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Type Register Definitions */
1241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Control Register Definitions */
1251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Number Register Definitions */
1261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Base Address Register Definitions */
1265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* MPU Region Attribute and Size Register Definitions */
1275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
1291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_MPU */
1306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif /* defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U) */
1307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_FPU     Floating Point Unit (FPU)
1312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Floating Point Unit (FPU)
1313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Floating Point Unit (FPU).
1318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****         uint32_t RESERVED0[1U];
1322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCCR;                  /*!< Offset: 0x004 (R/W)  Floating-Point Context Control R
1323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPCAR;                  /*!< Offset: 0x008 (R/W)  Floating-Point Context Address R
1324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t FPDSCR;                 /*!< Offset: 0x00C (R/W)  Floating-Point Default Status Co
1325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR0;                  /*!< Offset: 0x010 (R/ )  Media and FP Feature Register 0 
1326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IM  uint32_t MVFR1;                  /*!< Offset: 0x014 (R/ )  Media and FP Feature Register 1 
1327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } FPU_Type;
1328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Control Register Definitions */
1330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Pos                31U                                            /*!< FPCC
1331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_ASPEN_Msk                (1UL << FPU_FPCCR_ASPEN_Pos)                   /*!< FPCC
1332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Pos                30U                                            /*!< FPCC
1334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPEN_Msk                (1UL << FPU_FPCCR_LSPEN_Pos)                   /*!< FPCC
1335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Pos                8U                                            /*!< FPCC
1337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MONRDY_Msk               (1UL << FPU_FPCCR_MONRDY_Pos)                  /*!< FPCC
1338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Pos                 6U                                            /*!< FPCC
1340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_BFRDY_Msk                (1UL << FPU_FPCCR_BFRDY_Pos)                   /*!< FPCC
1341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Pos                 5U                                            /*!< FPCC
1343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_MMRDY_Msk                (1UL << FPU_FPCCR_MMRDY_Pos)                   /*!< FPCC
1344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Pos                 4U                                            /*!< FPCC
1346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_HFRDY_Msk                (1UL << FPU_FPCCR_HFRDY_Pos)                   /*!< FPCC
1347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Pos                3U                                            /*!< FPCC
1349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_THREAD_Msk               (1UL << FPU_FPCCR_THREAD_Pos)                  /*!< FPCC
1350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Pos                  1U                                            /*!< FPCC
1352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_USER_Msk                 (1UL << FPU_FPCCR_USER_Pos)                    /*!< FPCC
1353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Pos                0U                                            /*!< FPCC
1355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCCR_LSPACT_Msk               (1UL /*<< FPU_FPCCR_LSPACT_Pos*/)              /*!< FPCC
1356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Context Address Register Definitions */
1358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Pos               3U                                            /*!< FPCA
1359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPCAR_ADDRESS_Msk              (0x1FFFFFFFUL << FPU_FPCAR_ADDRESS_Pos)        /*!< FPCA
1360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Floating-Point Default Status Control Register Definitions */
1362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Pos                 26U                                            /*!< FPDS
1363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_AHP_Msk                 (1UL << FPU_FPDSCR_AHP_Pos)                    /*!< FPDS
1364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Pos                  25U                                            /*!< FPDS
1366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_DN_Msk                  (1UL << FPU_FPDSCR_DN_Pos)                     /*!< FPDS
1367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Pos                  24U                                            /*!< FPDS
1369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_FZ_Msk                  (1UL << FPU_FPDSCR_FZ_Pos)                     /*!< FPDS
1370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Pos               22U                                            /*!< FPDS
1372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_FPDSCR_RMode_Msk               (3UL << FPU_FPDSCR_RMode_Pos)                  /*!< FPDS
1373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 0 Definitions */
1375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Pos    28U                                            /*!< MVFR
1376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_rounding_modes_Msk    (0xFUL << FPU_MVFR0_FP_rounding_modes_Pos)     /*!< MVFR
1377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Pos        24U                                            /*!< MVFR
1379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Short_vectors_Msk        (0xFUL << FPU_MVFR0_Short_vectors_Pos)         /*!< MVFR
1380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Pos          20U                                            /*!< MVFR
1382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Square_root_Msk          (0xFUL << FPU_MVFR0_Square_root_Pos)           /*!< MVFR
1383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Pos               16U                                            /*!< MVFR
1385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Divide_Msk               (0xFUL << FPU_MVFR0_Divide_Pos)                /*!< MVFR
1386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Pos    12U                                            /*!< MVFR
1388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_FP_excep_trapping_Msk    (0xFUL << FPU_MVFR0_FP_excep_trapping_Pos)     /*!< MVFR
1389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Pos      8U                                            /*!< MVFR
1391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Double_precision_Msk     (0xFUL << FPU_MVFR0_Double_precision_Pos)      /*!< MVFR
1392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Pos      4U                                            /*!< MVFR
1394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_Single_precision_Msk     (0xFUL << FPU_MVFR0_Single_precision_Pos)      /*!< MVFR
1395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Pos      0U                                            /*!< MVFR
1397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR0_A_SIMD_registers_Msk     (0xFUL /*<< FPU_MVFR0_A_SIMD_registers_Pos*/)  /*!< MVFR
1398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Media and FP Feature Register 1 Definitions */
1400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Pos         28U                                            /*!< MVFR
1401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_fused_MAC_Msk         (0xFUL << FPU_MVFR1_FP_fused_MAC_Pos)          /*!< MVFR
1402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Pos              24U                                            /*!< MVFR
1404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FP_HPFP_Msk              (0xFUL << FPU_MVFR1_FP_HPFP_Pos)               /*!< MVFR
1405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Pos            4U                                            /*!< MVFR
1407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_D_NaN_mode_Msk           (0xFUL << FPU_MVFR1_D_NaN_mode_Pos)            /*!< MVFR
1408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Pos              0U                                            /*!< MVFR
1410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_MVFR1_FtZ_mode_Msk             (0xFUL /*<< FPU_MVFR1_FtZ_mode_Pos*/)          /*!< MVFR
1411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_FPU */
1413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_core_register
1417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Type definitions for the Core Debug Registers
1419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** typedef struct
1426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** } CoreDebug_Type;
1432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Halting Control and Status Register Definitions */
1434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
1454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Core Register Selector Register Definitions */
1471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Debug Exception and Monitor Control Register Definitions */
1478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_CoreDebug */
1518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of the bit field. This parameter is interpreted as an uint32_t type.
1531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted value.
1532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
1533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define _VAL2FLD(field, value)    (((uint32_t)(value) << field ## _Pos) & field ## _Msk)
1534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] field  Name of the register bit field.
1538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param[in] value  Value of register. This parameter is interpreted as an uint32_t type.
1539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return           Masked and shifted bit field value.
1540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
1541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define _FLD2VAL(field, value)    (((uint32_t)(value) & field ## _Msk) >> field ## _Pos)
1542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} end of group CMSIS_core_bitfield */
1544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup    CMSIS_core_register
1548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup   CMSIS_core_base     Core Definitions
1549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief      Definitions for base addresses, unions, and structures.
1550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* Memory mapping of Core Hardware */
1554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
1568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #if defined (__MPU_PRESENT) && (__MPU_PRESENT == 1U)
1573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif
1576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU_BASE            (SCS_BASE +  0x0F30UL)                    /*!< Floating Point Unit */
1578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define FPU                 ((FPU_Type       *)     FPU_BASE      )   /*!< Floating Point Unit */
1579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*@} */
1581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /*******************************************************************************
1585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  *                Hardware Abstraction Layer
1586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   Core Function Interface contains:
1587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core NVIC Functions
1588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core SysTick Functions
1589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core Debug Functions
1590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   - Core Register Access Functions
1591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  ******************************************************************************/
1592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** */
1595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* ##########################   NVIC functions  #################################### */
1599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \ingroup  CMSIS_Core_FunctionInterface
1601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   @{
1604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_NVIC_VIRTUAL
1607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_NVIC_VIRTUAL_HEADER_FILE
1608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     #define CMSIS_NVIC_VIRTUAL_HEADER_FILE "cmsis_nvic_virtual.h"
1609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_NVIC_VIRTUAL_HEADER_FILE
1611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #else
1612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriorityGrouping    __NVIC_SetPriorityGrouping
1613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriorityGrouping    __NVIC_GetPriorityGrouping
1614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_EnableIRQ              __NVIC_EnableIRQ
1615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetEnableIRQ           __NVIC_GetEnableIRQ
1616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_DisableIRQ             __NVIC_DisableIRQ
1617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPendingIRQ          __NVIC_GetPendingIRQ
1618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPendingIRQ          __NVIC_SetPendingIRQ
1619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_ClearPendingIRQ        __NVIC_ClearPendingIRQ
1620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetActive              __NVIC_GetActive
1621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetPriority            __NVIC_SetPriority
1622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetPriority            __NVIC_GetPriority
1623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SystemReset            __NVIC_SystemReset
1624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif /* CMSIS_NVIC_VIRTUAL */
1625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #ifdef CMSIS_VECTAB_VIRTUAL
1627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #ifndef CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****    #define CMSIS_VECTAB_VIRTUAL_HEADER_FILE "cmsis_vectab_virtual.h"
1629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #endif
1630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #include CMSIS_VECTAB_VIRTUAL_HEADER_FILE
1631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #else
1632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_SetVector              __NVIC_SetVector
1633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   #define NVIC_GetVector              __NVIC_GetVector
1634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #endif  /* (CMSIS_VECTAB_VIRTUAL) */
1635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define NVIC_USER_IRQ_OFFSET          16
1637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /* The following EXC_RETURN values are saved the LR on exception entry */
1640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER         (0xFFFFFFF1UL)     /* return to Handler mode, uses MSP after ret
1641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP      (0xFFFFFFF9UL)     /* return to Thread mode, uses MSP after retu
1642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP      (0xFFFFFFFDUL)     /* return to Thread mode, uses PSP after retu
1643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_HANDLER_FPU     (0xFFFFFFE1UL)     /* return to Handler mode, uses MSP after ret
1644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_MSP_FPU  (0xFFFFFFE9UL)     /* return to Thread mode, uses MSP after retu
1645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** #define EXC_RETURN_THREAD_PSP_FPU  (0xFFFFFFEDUL)     /* return to Thread mode, uses PSP after retu
1646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Priority Grouping
1650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority grouping field using the required unlock sequence.
1651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            Only values from 0..7 are used.
1653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      PriorityGroup  Priority grouping field.
1656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t reg_value;
1660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
1663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
1664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   reg_value  =  (reg_value                                   |
1665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****                 (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key a
1667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   SCB->AIRCR =  reg_value;
1668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Priority Grouping
1673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
1677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
  27              	 .loc 1 1677 0
  28              	 .cfi_startproc
  29              	 
  30              	 
  31              	 
  32 0000 80B4     	 push {r7}
  33              	.LCFI0:
  34              	 .cfi_def_cfa_offset 4
  35              	 .cfi_offset 7,-4
  36 0002 00AF     	 add r7,sp,#0
  37              	.LCFI1:
  38              	 .cfi_def_cfa_register 7
1678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  39              	 .loc 1 1678 0
  40 0004 044B     	 ldr r3,.L3
  41 0006 DB68     	 ldr r3,[r3,#12]
  42 0008 03F4E063 	 and r3,r3,#1792
  43 000c 1B0A     	 lsrs r3,r3,#8
1679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
  44              	 .loc 1 1679 0
  45 000e 1846     	 mov r0,r3
  46 0010 BD46     	 mov sp,r7
  47              	.LCFI2:
  48              	 .cfi_def_cfa_register 13
  49              	 
  50 0012 5DF8047B 	 ldr r7,[sp],#4
  51              	.LCFI3:
  52              	 .cfi_restore 7
  53              	 .cfi_def_cfa_offset 0
  54 0016 7047     	 bx lr
  55              	.L4:
  56              	 .align 2
  57              	.L3:
  58 0018 00ED00E0 	 .word -536810240
  59              	 .cfi_endproc
  60              	.LFE103:
  62              	 .section .text.__NVIC_EnableIRQ,"ax",%progbits
  63              	 .align 2
  64              	 .thumb
  65              	 .thumb_func
  67              	__NVIC_EnableIRQ:
  68              	.LFB104:
1680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Enable Interrupt
1684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Enables a device specific interrupt in the NVIC interrupt controller.
1685:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1686:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1687:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1688:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
1689:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
  69              	 .loc 1 1689 0
  70              	 .cfi_startproc
  71              	 
  72              	 
  73              	 
  74 0000 80B4     	 push {r7}
  75              	.LCFI4:
  76              	 .cfi_def_cfa_offset 4
  77              	 .cfi_offset 7,-4
  78 0002 83B0     	 sub sp,sp,#12
  79              	.LCFI5:
  80              	 .cfi_def_cfa_offset 16
  81 0004 00AF     	 add r7,sp,#0
  82              	.LCFI6:
  83              	 .cfi_def_cfa_register 7
  84 0006 0346     	 mov r3,r0
  85 0008 FB71     	 strb r3,[r7,#7]
1690:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
  86              	 .loc 1 1690 0
  87 000a 97F90730 	 ldrsb r3,[r7,#7]
  88 000e 002B     	 cmp r3,#0
  89 0010 0BDB     	 blt .L5
1691:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1692:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
  90              	 .loc 1 1692 0
  91 0012 0849     	 ldr r1,.L7
  92 0014 97F90730 	 ldrsb r3,[r7,#7]
  93 0018 5B09     	 lsrs r3,r3,#5
  94 001a FA79     	 ldrb r2,[r7,#7]
  95 001c 02F01F02 	 and r2,r2,#31
  96 0020 0120     	 movs r0,#1
  97 0022 00FA02F2 	 lsl r2,r0,r2
  98 0026 41F82320 	 str r2,[r1,r3,lsl#2]
  99              	.L5:
1693:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1694:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
 100              	 .loc 1 1694 0
 101 002a 0C37     	 adds r7,r7,#12
 102              	.LCFI7:
 103              	 .cfi_def_cfa_offset 4
 104 002c BD46     	 mov sp,r7
 105              	.LCFI8:
 106              	 .cfi_def_cfa_register 13
 107              	 
 108 002e 5DF8047B 	 ldr r7,[sp],#4
 109              	.LCFI9:
 110              	 .cfi_restore 7
 111              	 .cfi_def_cfa_offset 0
 112 0032 7047     	 bx lr
 113              	.L8:
 114              	 .align 2
 115              	.L7:
 116 0034 00E100E0 	 .word -536813312
 117              	 .cfi_endproc
 118              	.LFE104:
 120              	 .section .text.__NVIC_ClearPendingIRQ,"ax",%progbits
 121              	 .align 2
 122              	 .thumb
 123              	 .thumb_func
 125              	__NVIC_ClearPendingIRQ:
 126              	.LFB109:
1695:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1696:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1697:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1698:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Enable status
1699:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Returns a device specific interrupt enable status from the NVIC interrupt controller.
1700:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1701:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt is not enabled.
1702:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt is enabled.
1703:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1704:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1705:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetEnableIRQ(IRQn_Type IRQn)
1706:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1707:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1708:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1709:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1710:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1711:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   else
1712:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1713:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1714:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1715:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1716:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1717:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1718:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1719:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Disable Interrupt
1720:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Disables a device specific interrupt in the NVIC interrupt controller.
1721:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1722:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1723:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1724:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
1725:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1726:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1727:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1728:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1729:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     __DSB();
1730:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     __ISB();
1731:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1732:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1733:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1734:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1735:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1736:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Pending Interrupt
1737:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the NVIC pending register and returns the pending bit for the specified device spe
1738:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1739:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not pending.
1740:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is pending.
1741:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1742:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1743:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPendingIRQ(IRQn_Type IRQn)
1744:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1745:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1746:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1747:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1748:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1749:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   else
1750:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1751:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1752:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1753:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1754:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1755:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1756:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1757:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Pending Interrupt
1758:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the pending bit of a device specific interrupt in the NVIC pending register.
1759:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1760:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1761:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1762:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPendingIRQ(IRQn_Type IRQn)
1763:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1764:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1765:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1766:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ISPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
1767:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1768:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1769:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1770:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1771:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1772:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Clear Pending Interrupt
1773:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
1774:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1775:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1776:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1777:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1778:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 127              	 .loc 1 1778 0
 128              	 .cfi_startproc
 129              	 
 130              	 
 131              	 
 132 0000 80B4     	 push {r7}
 133              	.LCFI10:
 134              	 .cfi_def_cfa_offset 4
 135              	 .cfi_offset 7,-4
 136 0002 83B0     	 sub sp,sp,#12
 137              	.LCFI11:
 138              	 .cfi_def_cfa_offset 16
 139 0004 00AF     	 add r7,sp,#0
 140              	.LCFI12:
 141              	 .cfi_def_cfa_register 7
 142 0006 0346     	 mov r3,r0
 143 0008 FB71     	 strb r3,[r7,#7]
1779:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 144              	 .loc 1 1779 0
 145 000a 97F90730 	 ldrsb r3,[r7,#7]
 146 000e 002B     	 cmp r3,#0
 147 0010 0CDB     	 blt .L9
1780:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1781:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 148              	 .loc 1 1781 0
 149 0012 0949     	 ldr r1,.L11
 150 0014 97F90730 	 ldrsb r3,[r7,#7]
 151 0018 5B09     	 lsrs r3,r3,#5
 152 001a FA79     	 ldrb r2,[r7,#7]
 153 001c 02F01F02 	 and r2,r2,#31
 154 0020 0120     	 movs r0,#1
 155 0022 00FA02F2 	 lsl r2,r0,r2
 156 0026 6033     	 adds r3,r3,#96
 157 0028 41F82320 	 str r2,[r1,r3,lsl#2]
 158              	.L9:
1782:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1783:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
 159              	 .loc 1 1783 0
 160 002c 0C37     	 adds r7,r7,#12
 161              	.LCFI13:
 162              	 .cfi_def_cfa_offset 4
 163 002e BD46     	 mov sp,r7
 164              	.LCFI14:
 165              	 .cfi_def_cfa_register 13
 166              	 
 167 0030 5DF8047B 	 ldr r7,[sp],#4
 168              	.LCFI15:
 169              	 .cfi_restore 7
 170              	 .cfi_def_cfa_offset 0
 171 0034 7047     	 bx lr
 172              	.L12:
 173 0036 00BF     	 .align 2
 174              	.L11:
 175 0038 00E100E0 	 .word -536813312
 176              	 .cfi_endproc
 177              	.LFE109:
 179              	 .section .text.__NVIC_SetPriority,"ax",%progbits
 180              	 .align 2
 181              	 .thumb
 182              	 .thumb_func
 184              	__NVIC_SetPriority:
 185              	.LFB111:
1784:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1785:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1786:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1787:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Active Interrupt
1788:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the active register in the NVIC and returns the active bit for the device specific
1789:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Device specific interrupt number.
1790:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             0  Interrupt status is not active.
1791:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             1  Interrupt status is active.
1792:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    IRQn must not be negative.
1793:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1794:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetActive(IRQn_Type IRQn)
1795:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1796:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1797:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1798:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return((uint32_t)(((NVIC->IABR[(((uint32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)IRQn) & 0x1FUL)
1799:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1800:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   else
1801:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1802:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return(0U);
1803:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1804:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1805:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1806:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1807:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1808:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Set Interrupt Priority
1809:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Sets the priority of a device specific interrupt or a processor exception.
1810:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1811:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1812:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]      IRQn  Interrupt number.
1813:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]  priority  Priority to set.
1814:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \note    The priority cannot be set for every processor exception.
1815:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1816:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1817:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 186              	 .loc 1 1817 0
 187              	 .cfi_startproc
 188              	 
 189              	 
 190              	 
 191 0000 80B4     	 push {r7}
 192              	.LCFI16:
 193              	 .cfi_def_cfa_offset 4
 194              	 .cfi_offset 7,-4
 195 0002 83B0     	 sub sp,sp,#12
 196              	.LCFI17:
 197              	 .cfi_def_cfa_offset 16
 198 0004 00AF     	 add r7,sp,#0
 199              	.LCFI18:
 200              	 .cfi_def_cfa_register 7
 201 0006 0346     	 mov r3,r0
 202 0008 3960     	 str r1,[r7]
 203 000a FB71     	 strb r3,[r7,#7]
1818:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
 204              	 .loc 1 1818 0
 205 000c 97F90730 	 ldrsb r3,[r7,#7]
 206 0010 002B     	 cmp r3,#0
 207 0012 0ADB     	 blt .L14
1819:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1820:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 208              	 .loc 1 1820 0
 209 0014 0D49     	 ldr r1,.L16
 210 0016 97F90730 	 ldrsb r3,[r7,#7]
 211 001a 3A68     	 ldr r2,[r7]
 212 001c D2B2     	 uxtb r2,r2
 213 001e 9200     	 lsls r2,r2,#2
 214 0020 D2B2     	 uxtb r2,r2
 215 0022 0B44     	 add r3,r3,r1
 216 0024 83F80023 	 strb r2,[r3,#768]
 217 0028 0AE0     	 b .L13
 218              	.L14:
1821:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1822:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   else
1823:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1824:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (u
 219              	 .loc 1 1824 0
 220 002a 0949     	 ldr r1,.L16+4
 221 002c FB79     	 ldrb r3,[r7,#7]
 222 002e 03F00F03 	 and r3,r3,#15
 223 0032 043B     	 subs r3,r3,#4
 224 0034 3A68     	 ldr r2,[r7]
 225 0036 D2B2     	 uxtb r2,r2
 226 0038 9200     	 lsls r2,r2,#2
 227 003a D2B2     	 uxtb r2,r2
 228 003c 0B44     	 add r3,r3,r1
 229 003e 1A76     	 strb r2,[r3,#24]
 230              	.L13:
1825:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1826:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
 231              	 .loc 1 1826 0
 232 0040 0C37     	 adds r7,r7,#12
 233              	.LCFI19:
 234              	 .cfi_def_cfa_offset 4
 235 0042 BD46     	 mov sp,r7
 236              	.LCFI20:
 237              	 .cfi_def_cfa_register 13
 238              	 
 239 0044 5DF8047B 	 ldr r7,[sp],#4
 240              	.LCFI21:
 241              	 .cfi_restore 7
 242              	 .cfi_def_cfa_offset 0
 243 0048 7047     	 bx lr
 244              	.L17:
 245 004a 00BF     	 .align 2
 246              	.L16:
 247 004c 00E100E0 	 .word -536813312
 248 0050 00ED00E0 	 .word -536810240
 249              	 .cfi_endproc
 250              	.LFE111:
 252              	 .section .text.NVIC_EncodePriority,"ax",%progbits
 253              	 .align 2
 254              	 .thumb
 255              	 .thumb_func
 257              	NVIC_EncodePriority:
 258              	.LFB113:
1827:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1828:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1829:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1830:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Get Interrupt Priority
1831:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Reads the priority of a device specific interrupt or a processor exception.
1832:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            The interrupt number can be positive to specify a device specific interrupt,
1833:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            or negative to specify a processor exception.
1834:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   IRQn  Interrupt number.
1835:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return             Interrupt Priority.
1836:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1837:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1838:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t __NVIC_GetPriority(IRQn_Type IRQn)
1839:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
1840:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1841:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   if ((int32_t)(IRQn) >= 0)
1842:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1843:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)NVIC->IP[((uint32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS)));
1844:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1845:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   else
1846:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   {
1847:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS)));
1848:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   }
1849:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
1850:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1851:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1852:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** /**
1853:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \brief   Encode Priority
1854:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \details Encodes the priority for an interrupt with the given priority group,
1855:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            preemptive priority value, and subpriority value.
1856:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            In case of a conflict between priority grouping and available
1857:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1858:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]     PriorityGroup  Used priority group.
1859:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1860:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1861:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1862:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****  */
1863:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1864:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** {
 259              	 .loc 1 1864 0
 260              	 .cfi_startproc
 261              	 
 262              	 
 263              	 
 264 0000 80B4     	 push {r7}
 265              	.LCFI22:
 266              	 .cfi_def_cfa_offset 4
 267              	 .cfi_offset 7,-4
 268 0002 89B0     	 sub sp,sp,#36
 269              	.LCFI23:
 270              	 .cfi_def_cfa_offset 40
 271 0004 00AF     	 add r7,sp,#0
 272              	.LCFI24:
 273              	 .cfi_def_cfa_register 7
 274 0006 F860     	 str r0,[r7,#12]
 275 0008 B960     	 str r1,[r7,#8]
 276 000a 7A60     	 str r2,[r7,#4]
1865:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
 277              	 .loc 1 1865 0
 278 000c FB68     	 ldr r3,[r7,#12]
 279 000e 03F00703 	 and r3,r3,#7
 280 0012 FB61     	 str r3,[r7,#28]
1866:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t PreemptPriorityBits;
1867:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   uint32_t SubPriorityBits;
1868:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1869:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 281              	 .loc 1 1869 0
 282 0014 FB69     	 ldr r3,[r7,#28]
 283 0016 C3F10703 	 rsb r3,r3,#7
 284 001a 062B     	 cmp r3,#6
 285 001c 28BF     	 it cs
 286 001e 0623     	 movcs r3,#6
 287 0020 BB61     	 str r3,[r7,#24]
1870:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 288              	 .loc 1 1870 0
 289 0022 FB69     	 ldr r3,[r7,#28]
 290 0024 0633     	 adds r3,r3,#6
 291 0026 062B     	 cmp r3,#6
 292 0028 02D9     	 bls .L19
 293              	 .loc 1 1870 0 is_stmt 0 discriminator 1
 294 002a FB69     	 ldr r3,[r7,#28]
 295 002c 013B     	 subs r3,r3,#1
 296 002e 00E0     	 b .L20
 297              	.L19:
 298              	 .loc 1 1870 0 discriminator 2
 299 0030 0023     	 movs r3,#0
 300              	.L20:
 301              	 .loc 1 1870 0 discriminator 4
 302 0032 7B61     	 str r3,[r7,#20]
1871:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** 
1872:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****   return (
1873:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 303              	 .loc 1 1873 0 is_stmt 1 discriminator 4
 304 0034 BB69     	 ldr r3,[r7,#24]
 305 0036 0122     	 movs r2,#1
 306 0038 02FA03F3 	 lsl r3,r2,r3
 307 003c 5A1E     	 subs r2,r3,#1
 308 003e BB68     	 ldr r3,[r7,#8]
 309 0040 1A40     	 ands r2,r2,r3
 310 0042 7B69     	 ldr r3,[r7,#20]
 311 0044 9A40     	 lsls r2,r2,r3
1874:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 312              	 .loc 1 1874 0 discriminator 4
 313 0046 7B69     	 ldr r3,[r7,#20]
 314 0048 0121     	 movs r1,#1
 315 004a 01FA03F3 	 lsl r3,r1,r3
 316 004e 591E     	 subs r1,r3,#1
 317 0050 7B68     	 ldr r3,[r7,#4]
 318 0052 0B40     	 ands r3,r3,r1
1872:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 319              	 .loc 1 1872 0 discriminator 4
 320 0054 1343     	 orrs r3,r3,r2
1875:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h ****          );
1876:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Include\core_cm4.h **** }
 321              	 .loc 1 1876 0 discriminator 4
 322 0056 1846     	 mov r0,r3
 323 0058 2437     	 adds r7,r7,#36
 324              	.LCFI25:
 325              	 .cfi_def_cfa_offset 4
 326 005a BD46     	 mov sp,r7
 327              	.LCFI26:
 328              	 .cfi_def_cfa_register 13
 329              	 
 330 005c 5DF8047B 	 ldr r7,[sp],#4
 331              	.LCFI27:
 332              	 .cfi_restore 7
 333              	 .cfi_def_cfa_offset 0
 334 0060 7047     	 bx lr
 335              	 .cfi_endproc
 336              	.LFE113:
 338 0062 00BF     	 .section .text.XMC_SDMMC_IsAnyErrorEvent,"ax",%progbits
 339              	 .align 2
 340              	 .thumb
 341              	 .thumb_func
 343              	XMC_SDMMC_IsAnyErrorEvent:
 344              	.LFB172:
 345              	 .file 2 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc_sdmmc.h"
   1:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
   2:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
   3:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @file xmc_sdmmc.h
   4:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @date 2018-08-29
   5:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
   6:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @cond
   7:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
   8:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMClib v2.1.20 - XMC Peripheral Driver Library
   9:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  10:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Copyright (c) 2015-2018, Infineon Technologies AG
  11:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * All rights reserved.                        
  12:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                             
  13:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  14:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * following conditions are met:   
  15:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  16:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  17:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer.                        
  18:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  19:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  20:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  21:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 
  22:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  23:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * products derived from this software without specific prior written permission.                  
  24:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  25:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  26:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  27:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  28:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  29:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  30:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  31:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  32:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *                                                                              
  33:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  34:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  35:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  **************************************************************************************************
  36:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  37:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Change History
  38:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * --------------
  39:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  40:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-02-20:
  41:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Initial version
  42:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Documentation updates
  43:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  44:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2015-06-20:
  45:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  46:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  47:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-01-16:
  48:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added the following APIs to the XMC_SDMMC low level driver <br>
  49:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         1) XMC_SDMMC_EnableDelayCmdDatLines <br>
  50:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         2) XMC_SDMMC_DisableDelayCmdDatLines <br>
  51:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         3) XMC_SDMMC_SetDelay <br>
  52:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         4) XMC_SDMMC_EnableHighSpeed <br>
  53:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *         5) XMC_SDMMC_DisableHighSpeed <br>
  54:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  55:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-04-07:
  56:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added XMC_SDMMC_COMMAND_RESPONSE_t <br>
  57:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  58:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2016-07-11:
  59:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Adjust masks for the following functions: <br>
  60:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetBusVoltage <br>
  61:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetDataLineTimeout <br>
  62:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       3) XMC_SDMMC_SDClockFreqSelect <br>
  63:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  64:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2017-02-14:
  65:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added: <br>
  66:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetCardDetectionStatus() <br>
  67:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetCardDetectionSource() <br>
  68:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  69:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2018-08-29:
  70:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - XMC_SDMMC_SetCardDetectionStatus() and XMC_SDMMC_SetCardDetectionSource()
  71:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       Changed for XMC43/XMC47/XMC48 to use SDMMC Write Protection and Card Detection Control reg
  72:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *     - Added for XMC43/XMC47/XMC48:
  73:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       1) XMC_SDMMC_SetWriteProtectionSource()
  74:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *       2) XMC_SDMMC_SetWriteProtectionStatus()
  75:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  76:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
  77:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @endcond
  78:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
  79:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  80:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifndef XMC_SDMMC_H
  81:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_H
  82:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  83:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
  84:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * HEADER FILES
  85:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
  86:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  
  87:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #include "xmc_common.h"
  88:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  89:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
  90:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
  91:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45)
  92:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Pos  0
  93:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSEL_Msk  0x00000001UL
  94:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Pos 4
  95:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_WPSVAL_Msk 0x00000010UL
  96:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Pos  16
  97:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSEL_Msk  0x00010000UL
  98:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Pos 20
  99:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define SDMMC_CON_CDSVAL_Msk 0x00100000UL
 100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup XMClib XMC Peripheral Library
 104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @addtogroup SDMMC
 109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @brief Secure Digital/Multi Media Card (SDMMC) driver for the XMC4500 microcontroller
 110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral provides an interface between SD/SDIO/MMC cards and the AHB. It handles
 112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SD/SDIO protocol at transmission level. It automatically packs data and checks for CRC,
 113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * start/end bits and format correctness. For SD cards, a maximum transfer rate of 24MB/sec is
 114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * supported and for MMC cards, 48MB/sec.
 115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The peripheral can be used for applications that require large storage memory; e.g. Data logging
 117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * firmware updates or an embedded database.
 118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC low level driver provides functions to configure and initialize the SDMMC hardware
 120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * peripheral.
 121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @{
 122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * MACROS
 126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * A convenient symbol for the SDMMC peripheral base address
 130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (SDMMC)
 132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** # define XMC_SDMMC ((XMC_SDMMC_t *)SDMMC_BASE)
 133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** # error 'SDMMC' base peripheral pointer not defined
 135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_MODULE_PTR(p) ((p) == XMC_SDMMC)
 143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid ACMD errors <br>
 146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_ACMD_ERR(v)\
 150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((v == XMC_SDMMC_ACMD12_NOT_EXEC_ERR) ||\
 151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_TIMEOUT_ERR)    ||\
 152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_CRC_ERR)        ||\
 153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_END_BIT_ERR)    ||\
 154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_ACMD_IND_ERR)        ||\
 155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (v == XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR))
 156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid SDCLK divider frequency <br>
 159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_SDCLK_FREQ(f)\
 163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((f == XMC_SDMMC_CLK_DIV_1)           ||\
 164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_2)           ||\
 165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_4)           ||\
 166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_8)           ||\
 167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_16)          ||\
 168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_32)          ||\
 169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_64)          ||\
 170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_128)         ||\
 171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (f == XMC_SDMMC_CLK_DIV_256))
 172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid bus voltage levels <br>
 175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_BUS_VOLTAGE(v)\
 179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   (v == XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS)
 180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check for valid data timeout counter values <br>
 183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(c)\
 187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13) ||\
 188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14) ||\
 189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15) ||\
 190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16) ||\
 191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17) ||\
 192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18) ||\
 193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19) ||\
 194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20) ||\
 195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21) ||\
 196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22) ||\
 197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23) ||\
 198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24) ||\
 199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25) ||\
 200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26) ||\
 201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (c == XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27))
 202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid number of data lines <br>
 205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_LINES(l)\
 209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((l == XMC_SDMMC_DATA_LINES_1)        ||\
 210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_4)        ||\
 211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (l == XMC_SDMMC_DATA_LINES_8))
 212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check data transfer dir: Host to card and vice-versa <br>
 215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_CHECK_DATA_TRANSFER_DIR(d)\
 219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   ((d == XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD)   ||\
 220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****    (d == XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST))
 221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*
 223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Min and max number of delay elements <br>
 224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This macro is used in the LLD for assertion checks (XMC_ASSERT).
 226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MIN_DELAY_ELEMENTS (0U)
 228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #define XMC_SDMMC_MAX_DELAY_ELEMENTS (15U)
 229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ENUMS
 232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Number of data lines for SDMMC data transfer
 236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_LINES
 238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_1 = 0x00U, /**< Single data line mode */
 240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_4 = 0x02U, /**< 4-bit mode */
 241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_LINES_8 = 0x20U  /**< SD 8-bit mode */
 242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_LINES_t;
 243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Valid SD clock frequency divider selection
 246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SDCLK_FREQ_SEL
 248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_1   = 0x00U, /**< Base clock (10 Mhz -> 63 Mhz) */
 250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_2   = 0x01U, /**< Base clock divided by 2 */
 251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_4   = 0x02U, /**< Base clock divided by 4 */
 252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_8   = 0x04U, /**< Base clock divided by 8 */
 253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_16  = 0x08U, /**< Base clock divided by 16 */
 254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_32  = 0x10U, /**< Base clock divided by 32 */
 255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_64  = 0x20U, /**< Base clock divided by 64 */
 256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_128 = 0x40U, /**< Base clock divided by 128 */
 257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CLK_DIV_256 = 0x80U  /**< Base clock divided by 256 */
 258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SDCLK_FREQ_SEL_t;
 259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Status return values for the SDMMC low level driver
 262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_STATUS
 264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_SUCCESS       = 0U, /**< Operation successful */
 266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_CMD_LINE_BUSY,      /**< Command line busy */
 267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_STATUS_DAT_LINE_BUSY       /**< Data line busy */
 268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_STATUS_t;
 269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC events (Normal and error events)
 272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_EVENT
 274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_COMPLETE       = 0x01U, /**< Command complete event */
 276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TX_COMPLETE        = 0x02U, /**< Transmit complete event */
 277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BLOCK_GAP_EVENT    = 0x04U, /**< Block gap event */
 278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_WRITE_READY = 0x10U, /**< Buffer write ready event */
 279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUFFER_READ_READY  = 0x20U, /**< Buffer read ready event */
 280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INS           = 0x40U, /**< Card insert event */
 281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_REMOVAL       = 0x80U, /**< Card removal event */
 282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_INT           = 0x100U, /**< Card INT event */
 283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CARD_ERR           = 0x8000U, /**< Card error interrupt */
 284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_TIMEOUT_ERR    = ((uint32_t)0x01 << 16U),   /**< Command time-out error */
 285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_CRC_ERR        = ((uint32_t)0x02U << 16U),  /**< Command CRC error */
 286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_END_BIT_ERR    = ((uint32_t)0x04U << 16U),  /**< Command end bit error */
 287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_IND_ERR        = ((uint32_t)0x08U << 16U),  /**< Command index error */
 288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TIMEOUT_ERR   = ((uint32_t)0x10U << 16U),  /**< Data time-out error */
 289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_CRC_ERR       = ((uint32_t)0x20U << 16U),  /**< Data CRC error */
 290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_END_BIT_ERR   = ((uint32_t)0x40U << 16U),  /**< Data end bit error */
 291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CURRENT_LIMIT_ERR  = ((uint32_t)0x80U << 16U),  /**< Current limit error */
 292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_ERR           = ((uint32_t)0x100U << 16U), /**< ACMD error */
 293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TARGET_RESP_ERR    = ((uint32_t)0x1000U << 16U) /**< Target response error */
 294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_EVENT_t;
 295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC wakeup events
 298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WAKEUP_EVENT
 300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INT = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INT_Msk, /**< Wakeup on card int
 302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_INS = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_INS_Msk, /**< Wakeup on SD card 
 303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WAKEUP_EN_CARD_REM = SDMMC_WAKEUP_CTRL_WAKEUP_EVENT_EN_REM_Msk  /**< Wakeup SD card rem
 304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WAKEUP_EVENT_t;
 305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC software reset modes
 308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_SW_RESET
 310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RESET_ALL    = SDMMC_SW_RESET_SW_RST_ALL_Msk,      /**< Software reset all */
 312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_CMD_LINE = SDMMC_SW_RESET_SW_RST_CMD_LINE_Msk, /**< Software reset command line 
 313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SW_RST_DAT_LINE = SDMMC_SW_RESET_SW_RST_DAT_LINE_Msk  /**< Software reset data line */
 314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_SW_RESET_t;
 315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CMD12 response errors of Auto CMD12
 318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_ACMD_ERR
 320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD12_NOT_EXEC_ERR = SDMMC_ACMD_ERR_STATUS_ACMD12_NOT_EXEC_ERR_Msk, /**< ACMD12 not ex
 322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_TIMEOUT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_TIMEOUT_ERR_Msk,    /**< ACMD timeout 
 323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_CRC_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_CRC_ERR_Msk,        /**< ACMD CRC erro
 324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_END_BIT_ERR    = SDMMC_ACMD_ERR_STATUS_ACMD_END_BIT_ERR_Msk,    /**< ACMD end bit 
 325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_ACMD_IND_ERR        = SDMMC_ACMD_ERR_STATUS_ACMD_IND_ERR_Msk,        /**< ACMD IND erro
 326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR = SDMMC_ACMD_ERR_STATUS_CMD_NOT_ISSUED_BY_ACMD12_ERR_Msk /
 327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_ACMD_ERR_t;
 328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC response types
 331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_RESPONSE_TYPE
 333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE = 0U, /**< No response */
 335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1,               /**< Response type: R1 */
 336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R1b,              /**< Response type: R1b */
 337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R2,               /**< Response type: R2 */
 338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R3,               /**< Response type: R3 */
 339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R6,               /**< Response type: R6 */
 340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_RESPONSE_TYPE_R7                /**< Response type: R7 */
 341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_TYPE_t;
 342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** * Command response selection
 345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** */
 346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_RESPONSE
 347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_NONE = 0, /**< No Response */
 349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_LONG = 1, /**< Response length 136 */
 350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT = 2, /**< Response length 48 */
 351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_RESPONSE_SHORT_BUSY = 3, /**< Response length 48 check Busy after response */
 352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_RESPONSE_t;
 353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Types of SDMMC commands
 356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_COMMAND_TYPE
 358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_NORMAL  = 0U, /**< Command normal */
 360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_SUSPEND,      /**< Command suspend */
 361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_RESUME,       /**< Command resume */
 362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_COMMAND_TYPE_ABORT         /**< Command abort */
 363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_TYPE_t;
 364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer modes
 367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_TYPE
 369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE        = 0x00U, /**< Transfer mode type: single */
 371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_INFINITE      = 0x20U, /**< Transfer mode type: infinite */
 372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE      = 0x22U, /**< Transfer mode type: multiple */
 373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_STOP_MULTIPLE = 0x22U  /**< Transfer mode type: multiple stop */
 374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_TYPE_t;
 375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Auto command transfer modes
 378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_TRANSFER_MODE_AUTO_CMD
 380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_DISABLED = 0x00U, /**< ACMD mode disabled */
 382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_12                /**< ACMD12 mode */
 383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t;
 384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC bus voltage level
 387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_BUS_VOLTAGE
 389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS = 0x07U /**< 3.3V */
 391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_BUS_VOLTAGE_t;
 392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Data line timeout counter values
 395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DAT_TIMEOUT_COUNTER
 397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_13 = 0U, /**< SDCLK * (2 ^ 13) */
 399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_14 = 1U, /**< SDCLK * (2 ^ 14) */
 400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_15 = 2U, /**< SDCLK * (2 ^ 15) */
 401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_16 = 3U, /**< SDCLK * (2 ^ 16) */
 402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_17 = 4U, /**< SDCLK * (2 ^ 17) */
 403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_18 = 5U, /**< SDCLK * (2 ^ 18) */
 404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_19 = 6U, /**< SDCLK * (2 ^ 19) */
 405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_20 = 7U, /**< SDCLK * (2 ^ 20) */
 406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_21 = 8U, /**< SDCLK * (2 ^ 21) */
 407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_22 = 9U, /**< SDCLK * (2 ^ 22) */
 408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_23 = 10U, /**< SDCLK * (2 ^ 23) */
 409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_24 = 11U, /**< SDCLK * (2 ^ 24) */
 410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_25 = 12U, /**< SDCLK * (2 ^ 25) */
 411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_26 = 13U, /**< SDCLK * (2 ^ 26) */
 412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27 = 14U, /**< SDCLK * (2 ^ 27) */
 413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DAT_TIMEOUT_COUNTER_t;
 414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC data transfer direction
 417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_DATA_TRANSFER_DIR
 419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD = 0U, /**< Host to card */
 421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST       /**< Card to host */
 422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_DATA_TRANSFER_DIR_t;
 423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card detection signal source
 426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_SOURCE
 428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos, /**< P1.10 input pin s
 431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Pos   /**< Software is selec
 432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_PIN = 0 << SDMMC_CON_CDSEL_Pos, /**< P1.10 input pin selected */
 434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_SOURCE_SW = 1 << SDMMC_CON_CDSEL_Pos   /**< Software is selected */
 435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_SOURCE_t;
 437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card detection status when the card detection status source input is set t
 440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_CD_STATUS
 442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45 || defined(DOXYGEN)
 444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos, /**< No card detec
 445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Pos /**< Card detected
 446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_NO_CARD = 0 << SDMMC_CON_CDSVAL_Pos,  /**< No card detected */
 448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_CD_STATUS_INSERTED = 1 << SDMMC_CON_CDSVAL_Pos  /**< Card detected */
 449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CD_STATUS_t;
 451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES != XMC45 || defined(DOXYGEN)
 453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC card write protection signal source
 455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_SOURCE
 458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_PIN = 0 << SDMMC_CON_WPSEL_Pos, /**< P1.1 input pin selected */
 460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_SOURCE_SW = 1 << SDMMC_CON_WPSEL_Pos   /**< Software is selected */
 461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_SOURCE_t;
 462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Used to set the SDMMC card protection status when the card protection status source input is set
 465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only available for XMC4300, XMC4800 and XMC4700 series
 466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef enum XMC_SDMMC_WP_STATUS
 468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_NO_WRITE_PROTECTION = 0 << SDMMC_CON_WPSVAL_Pos, /**< No write protection */
 470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_WP_STATUS_WRITE_PROTECTION = 1 << SDMMC_CON_WPSVAL_Pos     /**< Write protection active
 471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_WP_STATUS_t;
 472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * DATA STRUCTURES
 476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC device structure <br>
 480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure represents a collection of all hardware registers used
 482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * to configure the SDMMC peripheral on the XMC4500 microcontroller. The
 483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers can be accessed with ::XMC_SDMMC.
 484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct
 486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED0;
 488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_SIZE;
 489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  BLOCK_COUNT;
 490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  ARGUMENT1;
 491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  TRANSFER_MODE;
 492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  COMMAND;
 493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESPONSE[4];
 494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  DATA_BUFFER;
 495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  PRESENT_STATE;
 496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   HOST_CTRL;
 497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   POWER_CTRL;
 498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   BLOCK_GAP_CTRL;
 499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   WAKEUP_CTRL;
 500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  CLOCK_CTRL;
 501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   TIMEOUT_CTRL;
 502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint8_t   SW_RESET;
 503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_NORM;
 504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  INT_STATUS_ERR;
 505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_NORM;
 506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_STATUS_ERR;
 507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_NORM;
 508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint16_t  EN_INT_SIGNAL_ERR;
 509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  ACMD_ERR_STATUS;
 510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  RESERVED1[9];
 511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ACMD_ERR_STATUS;
 512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint16_t  FORCE_EVENT_ERR_STATUS;
 513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED2[8];
 514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __O  uint32_t  DEBUG_SEL;
 515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED3[30];
 516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __IO uint32_t  SPI;
 517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint32_t  RESERVED4[2];
 518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   __I  uint16_t  SLOT_INT_STATUS;
 519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_t;
 520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard start */
 522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma push
 524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma anon_unions
 525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning 586
 527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Present state of the SDMMC host controller <br>
 531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure presents a convenient way to obtain the SDMMC peripheral's
 533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * present state information (for example, the write protect pin level). The
 534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetPresentState() API can be used to populate the structure
 535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the state of the SD host controller.
 536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_PRESENT_STATE
 538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint32_t command_inihibit_cmd    : 1; /**< Command: Inhibit command */
 542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t command_inihibit_dat    : 1; /**< Command: Inhibit data */
 543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_line_active     : 1; /**< Data line active */
 544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 5;
 545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_transfer_active   : 1; /**< Write transfer active */
 546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t read_transfer_active    : 1; /**< Read transfer active */
 547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_write_enable   : 1; /**< Buffer write enable */
 548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t buffer_read_enable    : 1; /**< Buffer read enable */
 549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t             : 4;
 550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_inserted       : 1; /**< Card inserted */
 551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_state_stable     : 1; /**< Card state stable */
 552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t card_detect_pin_level   : 1; /**< Card detect pin level */
 553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t write_protect_pin_level : 1; /**< Write protect pin level */
 554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat_3_0_pin_level     : 4; /**< Data 3_0 pin level */
 555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t cmd_line_level          : 1; /**< Command line level */
 556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t dat7_4_pin_level        : 4; /**< Data 7_4 pin level */
 557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t                         : 3;
 558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t b32;
 560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_PRESENT_STATE_t;
 561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer mode configuration
 564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_TRANSFER_MODE
 566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t block_size;
 568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t num_blocks;
 569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_TYPE_t type;
 570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_t auto_cmd;
 571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_DATA_TRANSFER_DIR_t direction;
 572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_TRANSFER_MODE_t;
 573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Represent an SDMMC command <br>
 576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure holds the configuration for an SDMMC command. The SDMMC
 578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * COMMAND register is a 16-bit register which is responsible for enabling
 579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * configuration parameters like command type, response type, index check
 580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * enable (and a few more). Once SDMMC.COMMAND is configured, the
 581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_SendCommand() function can be used to send the command.
 582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef union XMC_SDMMC_COMMAND
 584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   struct
 586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   {
 587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t response_type_sel : 2; /**< Response type select ::XMC_SDMMC_COMMAND_RESPONSE_t */
 588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 1;
 589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t crc_check_en      : 1; /**< Command CRC check enable */
 590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t index_check_en    : 1; /**< Command index check enable */
 591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t dat_present_sel   : 1; /**< Data present select */
 592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_type          : 2; /**< Command type ::XMC_SDMMC_COMMAND_TYPE_t */
 593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t cmd_index         : 6; /**< Command index */
 594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****     uint16_t                   : 2;
 595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   };
 596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint16_t cmd;
 597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_COMMAND_t;
 598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /* Anonymous structure/union guard end */
 600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if defined (__CC_ARM)
 601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma pop
 602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #elif defined (__TASKING__)
 603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   #pragma warning restore
 604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Card response structure
 608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_RESPONSE
 610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_0;
 612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_2;
 613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_4;
 614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint32_t response_6;
 615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_RESPONSE_t;
 616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC configuration data structure <br>
 619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The structure is used to configure the bus width and the clock divider.
 621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** typedef struct XMC_SDMMC_CONFIG
 623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   uint8_t bus_width; /**< SDMMC bus width */
 625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_SDCLK_FREQ_SEL_t clock_divider; /**< SDMMC clock divider */
 626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** } XMC_SDMMC_CONFIG_t;
 627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /*******************************************************************************
 629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * API PROTOTYPES
 630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *******************************************************************************/
 631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #ifdef __cplusplus
 633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** extern "C" {
 634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get power status of the SDMMC peripheral <br>
 642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function checks the SD_BUS_POWER bit-field of the POWER_CTRL register and returns
 645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * a boolean value - "on" or "off".
 646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetPowerStatus(XMC_SDMMC_t *const sdmmc);
 648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC peripheral <br>
 655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function de-asserts the peripheral reset. The peripheral needs to be initialized.
 658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Enable(XMC_SDMMC_t *const sdmmc);
 660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC peripheral <br>
 667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function asserts the peripheral reset.
 670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_Disable(XMC_SDMMC_t *const sdmmc);
 672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to a constant XMC_SDMMC_CONFIG_t structure containing the
 676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *               bus width and clock divider configuration
 677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
 678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Initialize the SDMMC peripheral <br>
 681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the SDMMC peripheral, sets the internal clock divider register
 684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the bus width.
 685:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 686:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_Init(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_CONFIG_t *config);
 687:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 688:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 689:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 690:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 691:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 692:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 693:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 694:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 695:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC normal and error event(s) <br>
 696:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 697:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 698:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function first sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 699:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events. It then
 700:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * sets the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR to enable the
 701:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * interrupt generation for the requested events.
 702:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 703:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 704:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 705:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 706:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 707:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 708:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 709:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 710:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 711:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 712:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable normal and error SDMMC event(s) <br>
 713:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 714:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 715:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the interrupt generation for the requested events by clearing
 716:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the bit-fields of EN_INT_SIGNAL_NORM and EN_INT_SIGNAL_ERR registers.
 717:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 718:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note:</b><br>
 719:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The XMC_SDMMC_DisableEvent() function doesn't reset the the interrupt status. One
 720:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * may still use XMC_SDMMC_GetEvent() to check the status of requested events even if
 721:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the interrupt generation is already disabled.
 722:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 723:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 724:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 725:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 726:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 727:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 728:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 729:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 730:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 731:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 732:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Clear SDMMC event(s) <br>
 733:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 734:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 735:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function clears requested normal/error events by settings the bit-fields of
 736:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the INT_STATUS register. Please check SDMMC_INT_STATUS_NORM in the XMC45000
 737:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * manual for more details.
 738:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 739:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_ClearEvent(XMC_SDMMC_t *const sdmmc, uint32_t event);
 740:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 741:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 742:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 743:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t)
 744:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 745:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 746:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 747:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC event status <br>
 748:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 749:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 750:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of a single requested (normal/error) event by
 751:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * reading the appropriate bit-fields of the INT_STATUS register.
 752:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 753:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** bool XMC_SDMMC_GetEvent(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_EVENT_t event);
 754:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 755:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 756:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 757:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 758:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 759:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 760:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 761:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 762:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable event status <br>
 763:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 764:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 765:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 766:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to enable interrupt status for requested normal/error SDMMC events.
 767:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 768:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_EnableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 769:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 770:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 771:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 772:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (XMC_SDMMC_EVENT_t) or a valid combination of
 773:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 774:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 775:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 776:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 777:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable event status <br>
 778:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 779:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 780:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the bit-fields of EN_INT_STATUS_NORM and EN_INT_STATUS_ERR
 781:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * registers to disable interrupt status for requested normal/error SDMMC events.
 782:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 783:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_DisableEventStatus(XMC_SDMMC_t *const sdmmc, uint32_t event);
 784:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 785:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 786:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 787:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC event (::XMC_SDMMC_EVENT_t) or a valid combination of
 788:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              logically OR'd events
 789:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 790:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 791:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 792:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Trigger SDMMC error events <br>
 793:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 794:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 795:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SDMMC peripheral supports triggering of following error events: <br>
 796:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 797:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_TIMEOUT_ERR, ::XMC_SDMMC_CMD_CRC_ERR, ::XMC_SDMMC_CMD_END_BIT_ERR,
 798:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_CMD_IND_ERR, ::XMC_SDMMC_DATA_TIMEOUT_ERR, ::XMC_SDMMC_DATA_CRC_ERR,
 799:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_DATA_END_BIT_ERR, ::XMC_SDMMC_CURRENT_LIMIT_ERR, ::XMC_SDMMC_ACMD_ERR,
 800:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ::XMC_SDMMC_TARGET_RESP_ERR
 801:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 802:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * For triggering Auto CMD12 error, see XMC_SDMMC_TriggerACMDErr()
 803:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 804:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 805:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 806:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
 807:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 808:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ERR_STATUS |= (uint16_t)(event >> 16U);
 809:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 810:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 811:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 812:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 813:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_CD_SOURCE_t)
 814:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 815:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 816:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 817:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects source for card detection
 818:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 819:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_SOURCE
 820:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 821:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 822:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 823:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 824:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DET_SIGNAL_DETECT_Msk) | 
 825:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 826:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSEL_Msk) | source;
 827:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 828:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 829:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 830:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 831:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 832:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 833:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 834:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_CD_STATUS_t)
 835:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 836:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 837:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 838:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card detection status indicating whether card is inserted or not.
 839:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Generates (card ins or card removal) interrupt when the normal interrupt is enabled.
 840:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_CD_SOURCE_SW <br>
 841:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 842:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 843:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetCardDetectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_CD_STATUS
 844:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 845:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetCardDetectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
 846:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 847:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if UC_SERIES == XMC45
 848:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (sdmmc->HOST_CTRL & (uint32_t)~SDMMC_HOST_CTRL_CARD_DETECT_TEST_LEVEL_Msk) | 
 849:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #else
 850:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_CDSVAL_Msk) | status;
 851:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 852:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 853:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 854:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #if (UC_SERIES != XMC45) || defined(DOXYGEN)
 855:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 856:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 857:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param source A valid SDMMC card detection signal source (::XMC_SDMMC_WP_SOURCE_t)
 858:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 859:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 860:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 861:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Selects input for card write protection status
 862:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 863:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionSource(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_SOUR
 864:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 865:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionSource: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 866:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 867:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSEL_Msk) | source;
 868:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 869:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 870:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 871:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 872:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param status A valid SDMMC card detection status (::XMC_SDMMC_WP_STATUS_t)
 873:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 874:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 875:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 876:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Sets the card write protection status indicating whether card is write protected or not.
 877:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @note Only valid if SDMMC card detection signal source is set to XMC_SDMMC_WP_SOURCE_SW <br>
 878:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 879:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 880:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetWriteProtectionStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_WP_STAT
 881:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 882:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetWriteProtectionStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
 883:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 884:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   *(uint32_t *)SDMMC_CON = (*(uint32_t *)SDMMC_CON & (uint32_t)~SDMMC_CON_WPSVAL_Msk) | status;
 885:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 886:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** #endif
 887:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 888:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 889:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 890:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 891:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 892:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 893:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if any error event has occured <br>
 894:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 895:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 896:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function can typically be used for writing an error interrupt recovery routine.
 897:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Should any error be indicated (If XMC_SDMMC_IsAnyErrorEvent() returns true), the
 898:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * routine may then clear the event after indicating the error event and reset the
 899:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC command and data lines.
 900:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 901:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAnyErrorEvent(XMC_SDMMC_t *const sdmmc)
 902:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 346              	 .loc 2 902 0
 347              	 .cfi_startproc
 348              	 
 349              	 
 350              	 
 351 0000 80B4     	 push {r7}
 352              	.LCFI28:
 353              	 .cfi_def_cfa_offset 4
 354              	 .cfi_offset 7,-4
 355 0002 83B0     	 sub sp,sp,#12
 356              	.LCFI29:
 357              	 .cfi_def_cfa_offset 16
 358 0004 00AF     	 add r7,sp,#0
 359              	.LCFI30:
 360              	 .cfi_def_cfa_register 7
 361 0006 7860     	 str r0,[r7,#4]
 903:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAnyErrorEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
 904:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 905:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->INT_STATUS_ERR);
 362              	 .loc 2 905 0
 363 0008 7B68     	 ldr r3,[r7,#4]
 364 000a 5B8E     	 ldrh r3,[r3,#50]
 365 000c 9BB2     	 uxth r3,r3
 366 000e 002B     	 cmp r3,#0
 367 0010 14BF     	 ite ne
 368 0012 0123     	 movne r3,#1
 369 0014 0023     	 moveq r3,#0
 370 0016 DBB2     	 uxtb r3,r3
 906:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 371              	 .loc 2 906 0
 372 0018 1846     	 mov r0,r3
 373 001a 0C37     	 adds r7,r7,#12
 374              	.LCFI31:
 375              	 .cfi_def_cfa_offset 4
 376 001c BD46     	 mov sp,r7
 377              	.LCFI32:
 378              	 .cfi_def_cfa_register 13
 379              	 
 380 001e 5DF8047B 	 ldr r7,[sp],#4
 381              	.LCFI33:
 382              	 .cfi_restore 7
 383              	 .cfi_def_cfa_offset 0
 384 0022 7047     	 bx lr
 385              	 .cfi_endproc
 386              	.LFE172:
 388              	 .section .text.XMC_SDMMC_GetACMDErrStatus,"ax",%progbits
 389              	 .align 2
 390              	 .thumb
 391              	 .thumb_func
 393              	XMC_SDMMC_GetACMDErrStatus:
 394              	.LFB175:
 907:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 908:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 909:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 910:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 911:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 912:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 913:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 914:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 915:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable wakeup event(s) <br>
 916:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 917:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 918:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables SDMMC wakeup events by setting appropriate bit-fields of the WAKEUP_CTRL
 919:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 920:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 921:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 922:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 923:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 924:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 925:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 926:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 927:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 928:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
 929:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 930:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL |= (uint8_t)event;
 931:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 932:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 933:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 934:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 935:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param event A valid SDMMC wakeup event (::XMC_SDMMC_WAKEUP_EVENT_t) or a valid combination
 936:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd wakeup events
 937:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 938:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 939:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 940:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable wakeup event(s) <br>
 941:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 942:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 943:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables SDMMC wakeup events by clearing appropriate bit-fields of the WAKEUP_CTRL
 944:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * register. <br>
 945:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 946:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * List of supported wakeup events -> Wakeup on: <br>
 947:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) Card interrupt <br>
 948:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) SD card insertion <br>
 949:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) SD card removal <br>
 950:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 951:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableWakeupEvent(XMC_SDMMC_t *const sdmmc, uint32_t event)
 952:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 953:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_DisableWakeupEvent: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
 954:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 955:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->WAKEUP_CTRL &= (uint8_t)~event;
 956:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 957:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 958:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 959:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 960:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t)
 961:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
 962:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 963:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 964:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get status of Auto CMD12 errors <br>
 965:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 966:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 967:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function detects the presence of an Auto CMD12 error. A boolean is returned to
 968:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * indicate if an error is detected.
 969:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 970:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetACMDErrStatus(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_ACMD_ERR_t erro
 971:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 395              	 .loc 2 971 0
 396              	 .cfi_startproc
 397              	 
 398              	 
 399              	 
 400 0000 80B4     	 push {r7}
 401              	.LCFI34:
 402              	 .cfi_def_cfa_offset 4
 403              	 .cfi_offset 7,-4
 404 0002 83B0     	 sub sp,sp,#12
 405              	.LCFI35:
 406              	 .cfi_def_cfa_offset 16
 407 0004 00AF     	 add r7,sp,#0
 408              	.LCFI36:
 409              	 .cfi_def_cfa_register 7
 410 0006 7860     	 str r0,[r7,#4]
 411 0008 0B46     	 mov r3,r1
 412 000a FB70     	 strb r3,[r7,#3]
 972:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
 973:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetACMDErrStatus: Invalid ACMD response error", XMC_SDMMC_CHECK_ACMD_ERR(er
 974:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 975:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->ACMD_ERR_STATUS & (uint16_t)error);
 413              	 .loc 2 975 0
 414 000c 7B68     	 ldr r3,[r7,#4]
 415 000e 9B8F     	 ldrh r3,[r3,#60]
 416 0010 9BB2     	 uxth r3,r3
 417 0012 1A46     	 mov r2,r3
 418 0014 FB78     	 ldrb r3,[r7,#3]
 419 0016 1340     	 ands r3,r3,r2
 420 0018 002B     	 cmp r3,#0
 421 001a 14BF     	 ite ne
 422 001c 0123     	 movne r3,#1
 423 001e 0023     	 moveq r3,#0
 424 0020 DBB2     	 uxtb r3,r3
 976:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 425              	 .loc 2 976 0
 426 0022 1846     	 mov r0,r3
 427 0024 0C37     	 adds r7,r7,#12
 428              	.LCFI37:
 429              	 .cfi_def_cfa_offset 4
 430 0026 BD46     	 mov sp,r7
 431              	.LCFI38:
 432              	 .cfi_def_cfa_register 13
 433              	 
 434 0028 5DF8047B 	 ldr r7,[sp],#4
 435              	.LCFI39:
 436              	 .cfi_restore 7
 437              	 .cfi_def_cfa_offset 0
 438 002c 7047     	 bx lr
 439              	 .cfi_endproc
 440              	.LFE175:
 442 002e 00BF     	 .section .text.XMC_SDMMC_ReadFIFO,"ax",%progbits
 443              	 .align 2
 444              	 .thumb
 445              	 .thumb_func
 447              	XMC_SDMMC_ReadFIFO:
 448              	.LFB177:
 977:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
 978:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
 979:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
 980:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param error A valid SDMMC ACMD error (::XMC_SDMMC_ACMD_ERR_t) or a valid combination
 981:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *              of logically OR'd ACMD error events
 982:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
 983:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 984:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
 985:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Triggers Auto CMD12 error(s) <br>
 986:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 987:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
 988:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function triggers Auto CMD12 error(s) by setting appropriate bit-fields of the
 989:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * FORCE_EVENT_ACMD_ERR_STATUS register.
 990:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
 991:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Related APIs: </b><br>
 992:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_TriggerEvent()
 993:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
 994:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_TriggerACMDErr(XMC_SDMMC_t *const sdmmc, uint32_t error)
 995:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 996:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_TriggerACMDErr: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
 997:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
 998:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->FORCE_EVENT_ACMD_ERR_STATUS |= (uint16_t)error;
 999:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1000:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1001:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1002:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1003:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t The value held in the SDMMC FIFO
1004:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1005:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1006:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to read a single word (32 bits) from the SDMMC FIFO. <br>
1007:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1008:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_ReadFIFO(XMC_SDMMC_t *const sdmmc)
1009:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 449              	 .loc 2 1009 0
 450              	 .cfi_startproc
 451              	 
 452              	 
 453              	 
 454 0000 80B4     	 push {r7}
 455              	.LCFI40:
 456              	 .cfi_def_cfa_offset 4
 457              	 .cfi_offset 7,-4
 458 0002 83B0     	 sub sp,sp,#12
 459              	.LCFI41:
 460              	 .cfi_def_cfa_offset 16
 461 0004 00AF     	 add r7,sp,#0
 462              	.LCFI42:
 463              	 .cfi_def_cfa_register 7
 464 0006 7860     	 str r0,[r7,#4]
1010:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_ReadFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1011:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1012:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->DATA_BUFFER);
 465              	 .loc 2 1012 0
 466 0008 7B68     	 ldr r3,[r7,#4]
 467 000a 1B6A     	 ldr r3,[r3,#32]
1013:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 468              	 .loc 2 1013 0
 469 000c 1846     	 mov r0,r3
 470 000e 0C37     	 adds r7,r7,#12
 471              	.LCFI43:
 472              	 .cfi_def_cfa_offset 4
 473 0010 BD46     	 mov sp,r7
 474              	.LCFI44:
 475              	 .cfi_def_cfa_register 13
 476              	 
 477 0012 5DF8047B 	 ldr r7,[sp],#4
 478              	.LCFI45:
 479              	 .cfi_restore 7
 480              	 .cfi_def_cfa_offset 0
 481 0016 7047     	 bx lr
 482              	 .cfi_endproc
 483              	.LFE177:
 485              	 .section .text.XMC_SDMMC_WriteFIFO,"ax",%progbits
 486              	 .align 2
 487              	 .thumb
 488              	 .thumb_func
 490              	XMC_SDMMC_WriteFIFO:
 491              	.LFB178:
1014:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1015:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1016:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1017:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param data Pointer to a data word (32 bits) that needs to be written to the FIFO
1018:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1019:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1020:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1021:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to write a single word (32 bits) to the SDMMC FIFO. <br>
1022:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1023:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_WriteFIFO(XMC_SDMMC_t *const sdmmc, uint32_t *data)
1024:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 492              	 .loc 2 1024 0
 493              	 .cfi_startproc
 494              	 
 495              	 
 496              	 
 497 0000 80B4     	 push {r7}
 498              	.LCFI46:
 499              	 .cfi_def_cfa_offset 4
 500              	 .cfi_offset 7,-4
 501 0002 83B0     	 sub sp,sp,#12
 502              	.LCFI47:
 503              	 .cfi_def_cfa_offset 16
 504 0004 00AF     	 add r7,sp,#0
 505              	.LCFI48:
 506              	 .cfi_def_cfa_register 7
 507 0006 7860     	 str r0,[r7,#4]
 508 0008 3960     	 str r1,[r7]
1025:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_WriteFIFO: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1026:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1027:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->DATA_BUFFER = *data;
 509              	 .loc 2 1027 0
 510 000a 3B68     	 ldr r3,[r7]
 511 000c 1A68     	 ldr r2,[r3]
 512 000e 7B68     	 ldr r3,[r7,#4]
 513 0010 1A62     	 str r2,[r3,#32]
1028:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 514              	 .loc 2 1028 0
 515 0012 0C37     	 adds r7,r7,#12
 516              	.LCFI49:
 517              	 .cfi_def_cfa_offset 4
 518 0014 BD46     	 mov sp,r7
 519              	.LCFI50:
 520              	 .cfi_def_cfa_register 13
 521              	 
 522 0016 5DF8047B 	 ldr r7,[sp],#4
 523              	.LCFI51:
 524              	 .cfi_restore 7
 525              	 .cfi_def_cfa_offset 0
 526 001a 7047     	 bx lr
 527              	 .cfi_endproc
 528              	.LFE178:
 530              	 .section .text.XMC_SDMMC_BusPowerOn,"ax",%progbits
 531              	 .align 2
 532              	 .thumb
 533              	 .thumb_func
 535              	XMC_SDMMC_BusPowerOn:
 536              	.LFB179:
1029:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1030:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1031:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1032:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1033:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1034:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1035:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable SDMMC bus power <br>
1036:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1037:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1038:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SD_BUS_POWER bit-field in the POWER_CTRL register, enabling the
1039:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power. It may be invoked after enabling the SD clock (XMC_SDMMC_SDClockEnable()).
1040:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1041:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOn(XMC_SDMMC_t *const sdmmc)
1042:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 537              	 .loc 2 1042 0
 538              	 .cfi_startproc
 539              	 
 540              	 
 541              	 
 542 0000 80B4     	 push {r7}
 543              	.LCFI52:
 544              	 .cfi_def_cfa_offset 4
 545              	 .cfi_offset 7,-4
 546 0002 83B0     	 sub sp,sp,#12
 547              	.LCFI53:
 548              	 .cfi_def_cfa_offset 16
 549 0004 00AF     	 add r7,sp,#0
 550              	.LCFI54:
 551              	 .cfi_def_cfa_register 7
 552 0006 7860     	 str r0,[r7,#4]
1043:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOn: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1044:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1045:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL |= (uint8_t)(SDMMC_POWER_CTRL_SD_BUS_POWER_Msk);
 553              	 .loc 2 1045 0
 554 0008 7B68     	 ldr r3,[r7,#4]
 555 000a 93F82930 	 ldrb r3,[r3,#41]
 556 000e DBB2     	 uxtb r3,r3
 557 0010 43F00103 	 orr r3,r3,#1
 558 0014 DAB2     	 uxtb r2,r3
 559 0016 7B68     	 ldr r3,[r7,#4]
 560 0018 83F82920 	 strb r2,[r3,#41]
1046:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 561              	 .loc 2 1046 0
 562 001c 0C37     	 adds r7,r7,#12
 563              	.LCFI55:
 564              	 .cfi_def_cfa_offset 4
 565 001e BD46     	 mov sp,r7
 566              	.LCFI56:
 567              	 .cfi_def_cfa_register 13
 568              	 
 569 0020 5DF8047B 	 ldr r7,[sp],#4
 570              	.LCFI57:
 571              	 .cfi_restore 7
 572              	 .cfi_def_cfa_offset 0
 573 0024 7047     	 bx lr
 574              	 .cfi_endproc
 575              	.LFE179:
 577 0026 00BF     	 .section .text.XMC_SDMMC_Start,"ax",%progbits
 578              	 .align 2
 579              	 .thumb
 580              	 .thumb_func
 582              	XMC_SDMMC_Start:
 583              	.LFB181:
1047:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1048:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1049:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1050:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1051:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1052:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1053:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable SDMMC bus power <br>
1054:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1055:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1056:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SD_BUS_POWER bit-field in the POWER_CTRL register, disabling the
1057:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * bus power.
1058:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1059:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_BusPowerOff(XMC_SDMMC_t *const sdmmc)
1060:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1061:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_BusPowerOff: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1062:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1063:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL &= (uint8_t)~SDMMC_POWER_CTRL_SD_BUS_POWER_Msk;
1064:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1065:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1066:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1067:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1068:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1069:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1070:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1071:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the internal SDMMC clock <br>
1072:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1073:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1074:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function enables the internal clock of the SDMMC peripheral. To check if the
1075:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock is stable, use XMC_SDMMC_GetClockStability().
1076:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1077:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1078:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Invoke XMC_SDMMC_Init() before using this function.
1079:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1080:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Start(XMC_SDMMC_t *const sdmmc)
1081:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 584              	 .loc 2 1081 0
 585              	 .cfi_startproc
 586              	 
 587              	 
 588              	 
 589 0000 80B4     	 push {r7}
 590              	.LCFI58:
 591              	 .cfi_def_cfa_offset 4
 592              	 .cfi_offset 7,-4
 593 0002 83B0     	 sub sp,sp,#12
 594              	.LCFI59:
 595              	 .cfi_def_cfa_offset 16
 596 0004 00AF     	 add r7,sp,#0
 597              	.LCFI60:
 598              	 .cfi_def_cfa_register 7
 599 0006 7860     	 str r0,[r7,#4]
1082:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Start: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1083:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1084:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Enable internal clock */
1085:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
 600              	 .loc 2 1085 0
 601 0008 7B68     	 ldr r3,[r7,#4]
 602 000a 9B8D     	 ldrh r3,[r3,#44]
 603 000c 9BB2     	 uxth r3,r3
 604 000e 43F00103 	 orr r3,r3,#1
 605 0012 9AB2     	 uxth r2,r3
 606 0014 7B68     	 ldr r3,[r7,#4]
 607 0016 9A85     	 strh r2,[r3,#44]
1086:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 608              	 .loc 2 1086 0
 609 0018 0C37     	 adds r7,r7,#12
 610              	.LCFI61:
 611              	 .cfi_def_cfa_offset 4
 612 001a BD46     	 mov sp,r7
 613              	.LCFI62:
 614              	 .cfi_def_cfa_register 13
 615              	 
 616 001c 5DF8047B 	 ldr r7,[sp],#4
 617              	.LCFI63:
 618              	 .cfi_restore 7
 619              	 .cfi_def_cfa_offset 0
 620 0020 7047     	 bx lr
 621              	 .cfi_endproc
 622              	.LFE181:
 624 0022 00BF     	 .section .text.XMC_SDMMC_GetClockStability,"ax",%progbits
 625              	 .align 2
 626              	 .thumb
 627              	 .thumb_func
 629              	XMC_SDMMC_GetClockStability:
 630              	.LFB182:
1087:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1088:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1089:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1090:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1091:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1092:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1093:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check internal clock stability <br>
1094:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1095:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1096:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to check the internal SDMMC clock stability. The function returns a
1097:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * boolean value indicating internal clock stability (true = stable)
1098:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1099:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetClockStability(XMC_SDMMC_t *const sdmmc)
1100:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 631              	 .loc 2 1100 0
 632              	 .cfi_startproc
 633              	 
 634              	 
 635              	 
 636 0000 80B4     	 push {r7}
 637              	.LCFI64:
 638              	 .cfi_def_cfa_offset 4
 639              	 .cfi_offset 7,-4
 640 0002 83B0     	 sub sp,sp,#12
 641              	.LCFI65:
 642              	 .cfi_def_cfa_offset 16
 643 0004 00AF     	 add r7,sp,#0
 644              	.LCFI66:
 645              	 .cfi_def_cfa_register 7
 646 0006 7860     	 str r0,[r7,#4]
1101:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetClockStability: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1102:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1103:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   /* Return clock stability */
1104:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->CLOCK_CTRL & SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_STABLE_Msk);
 647              	 .loc 2 1104 0
 648 0008 7B68     	 ldr r3,[r7,#4]
 649 000a 9B8D     	 ldrh r3,[r3,#44]
 650 000c 9BB2     	 uxth r3,r3
 651 000e 03F00203 	 and r3,r3,#2
 652 0012 002B     	 cmp r3,#0
 653 0014 14BF     	 ite ne
 654 0016 0123     	 movne r3,#1
 655 0018 0023     	 moveq r3,#0
 656 001a DBB2     	 uxtb r3,r3
1105:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 657              	 .loc 2 1105 0
 658 001c 1846     	 mov r0,r3
 659 001e 0C37     	 adds r7,r7,#12
 660              	.LCFI67:
 661              	 .cfi_def_cfa_offset 4
 662 0020 BD46     	 mov sp,r7
 663              	.LCFI68:
 664              	 .cfi_def_cfa_register 13
 665              	 
 666 0022 5DF8047B 	 ldr r7,[sp],#4
 667              	.LCFI69:
 668              	 .cfi_restore 7
 669              	 .cfi_def_cfa_offset 0
 670 0026 7047     	 bx lr
 671              	 .cfi_endproc
 672              	.LFE182:
 674              	 .section .text.XMC_SDMMC_Stop,"ax",%progbits
 675              	 .align 2
 676              	 .thumb
 677              	 .thumb_func
 679              	XMC_SDMMC_Stop:
 680              	.LFB183:
1106:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1107:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1108:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1109:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1110:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1111:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1112:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable internal SDMMC clock <br>
1113:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1114:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1115:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function disables the internal clock of the SDMMC peripheral. The SDMMC registers
1116:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * can still be read and written even if the internal clock is disabled.
1117:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1118:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_Stop(XMC_SDMMC_t *const sdmmc)
1119:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 681              	 .loc 2 1119 0
 682              	 .cfi_startproc
 683              	 
 684              	 
 685              	 
 686 0000 80B4     	 push {r7}
 687              	.LCFI70:
 688              	 .cfi_def_cfa_offset 4
 689              	 .cfi_offset 7,-4
 690 0002 83B0     	 sub sp,sp,#12
 691              	.LCFI71:
 692              	 .cfi_def_cfa_offset 16
 693 0004 00AF     	 add r7,sp,#0
 694              	.LCFI72:
 695              	 .cfi_def_cfa_register 7
 696 0006 7860     	 str r0,[r7,#4]
1120:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_Stop: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1121:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1122:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_INTERNAL_CLOCK_EN_Msk;
 697              	 .loc 2 1122 0
 698 0008 7B68     	 ldr r3,[r7,#4]
 699 000a 9B8D     	 ldrh r3,[r3,#44]
 700 000c 9BB2     	 uxth r3,r3
 701 000e 23F00103 	 bic r3,r3,#1
 702 0012 9AB2     	 uxth r2,r3
 703 0014 7B68     	 ldr r3,[r7,#4]
 704 0016 9A85     	 strh r2,[r3,#44]
1123:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 705              	 .loc 2 1123 0
 706 0018 0C37     	 adds r7,r7,#12
 707              	.LCFI73:
 708              	 .cfi_def_cfa_offset 4
 709 001a BD46     	 mov sp,r7
 710              	.LCFI74:
 711              	 .cfi_def_cfa_register 13
 712              	 
 713 001c 5DF8047B 	 ldr r7,[sp],#4
 714              	.LCFI75:
 715              	 .cfi_restore 7
 716              	 .cfi_def_cfa_offset 0
 717 0020 7047     	 bx lr
 718              	 .cfi_endproc
 719              	.LFE183:
 721 0022 00BF     	 .section .text.XMC_SDMMC_SDClockEnable,"ax",%progbits
 722              	 .align 2
 723              	 .thumb
 724              	 .thumb_func
 726              	XMC_SDMMC_SDClockEnable:
 727              	.LFB184:
1124:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1125:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1126:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1127:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1128:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1129:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1130:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable the SD clock <br>
1131:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1132:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1133:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, enabling the
1134:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be invoked after the internal clock has achieved stability. SD card
1135:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * initialization process may then follow.
1136:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1137:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockEnable(XMC_SDMMC_t *const sdmmc)
1138:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 728              	 .loc 2 1138 0
 729              	 .cfi_startproc
 730              	 
 731              	 
 732              	 
 733 0000 80B4     	 push {r7}
 734              	.LCFI76:
 735              	 .cfi_def_cfa_offset 4
 736              	 .cfi_offset 7,-4
 737 0002 83B0     	 sub sp,sp,#12
 738              	.LCFI77:
 739              	 .cfi_def_cfa_offset 16
 740 0004 00AF     	 add r7,sp,#0
 741              	.LCFI78:
 742              	 .cfi_def_cfa_register 7
 743 0006 7860     	 str r0,[r7,#4]
1139:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockEnable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1140:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1141:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL |= (uint16_t)SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
 744              	 .loc 2 1141 0
 745 0008 7B68     	 ldr r3,[r7,#4]
 746 000a 9B8D     	 ldrh r3,[r3,#44]
 747 000c 9BB2     	 uxth r3,r3
 748 000e 43F00403 	 orr r3,r3,#4
 749 0012 9AB2     	 uxth r2,r3
 750 0014 7B68     	 ldr r3,[r7,#4]
 751 0016 9A85     	 strh r2,[r3,#44]
1142:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 752              	 .loc 2 1142 0
 753 0018 0C37     	 adds r7,r7,#12
 754              	.LCFI79:
 755              	 .cfi_def_cfa_offset 4
 756 001a BD46     	 mov sp,r7
 757              	.LCFI80:
 758              	 .cfi_def_cfa_register 13
 759              	 
 760 001c 5DF8047B 	 ldr r7,[sp],#4
 761              	.LCFI81:
 762              	 .cfi_restore 7
 763              	 .cfi_def_cfa_offset 0
 764 0020 7047     	 bx lr
 765              	 .cfi_endproc
 766              	.LFE184:
 768 0022 00BF     	 .section .text.XMC_SDMMC_SDClockDisable,"ax",%progbits
 769              	 .align 2
 770              	 .thumb
 771              	 .thumb_func
 773              	XMC_SDMMC_SDClockDisable:
 774              	.LFB185:
1143:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1144:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1145:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1146:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1147:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1148:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1149:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable the SD clock <br>
1150:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1151:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1152:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the SDCLOCK_EN bit-field of the CLOCK_CTRL register, disabling the
1153:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock. It can be used alongside a SD card information reset routine (if required).
1154:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1155:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockDisable(XMC_SDMMC_t *const sdmmc)
1156:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 775              	 .loc 2 1156 0
 776              	 .cfi_startproc
 777              	 
 778              	 
 779              	 
 780 0000 80B4     	 push {r7}
 781              	.LCFI82:
 782              	 .cfi_def_cfa_offset 4
 783              	 .cfi_offset 7,-4
 784 0002 83B0     	 sub sp,sp,#12
 785              	.LCFI83:
 786              	 .cfi_def_cfa_offset 16
 787 0004 00AF     	 add r7,sp,#0
 788              	.LCFI84:
 789              	 .cfi_def_cfa_register 7
 790 0006 7860     	 str r0,[r7,#4]
1157:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockDisable: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1158:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1159:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL &= (uint16_t)~SDMMC_CLOCK_CTRL_SDCLOCK_EN_Msk;
 791              	 .loc 2 1159 0
 792 0008 7B68     	 ldr r3,[r7,#4]
 793 000a 9B8D     	 ldrh r3,[r3,#44]
 794 000c 9BB2     	 uxth r3,r3
 795 000e 23F00403 	 bic r3,r3,#4
 796 0012 9AB2     	 uxth r2,r3
 797 0014 7B68     	 ldr r3,[r7,#4]
 798 0016 9A85     	 strh r2,[r3,#44]
1160:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 799              	 .loc 2 1160 0
 800 0018 0C37     	 adds r7,r7,#12
 801              	.LCFI85:
 802              	 .cfi_def_cfa_offset 4
 803 001a BD46     	 mov sp,r7
 804              	.LCFI86:
 805              	 .cfi_def_cfa_register 13
 806              	 
 807 001c 5DF8047B 	 ldr r7,[sp],#4
 808              	.LCFI87:
 809              	 .cfi_restore 7
 810              	 .cfi_def_cfa_offset 0
 811 0020 7047     	 bx lr
 812              	 .cfi_endproc
 813              	.LFE185:
 815 0022 00BF     	 .section .text.XMC_SDMMC_SetSWReset,"ax",%progbits
 816              	 .align 2
 817              	 .thumb
 818              	 .thumb_func
 820              	XMC_SDMMC_SetSWReset:
 821              	.LFB186:
1161:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1162:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1163:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1164:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param reset_mode Reset mode or a bitwise combination of modes
1165:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1166:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1167:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1168:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC software reset request <br>
1169:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1170:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1171:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets in the SDMMC SW_RESET register: <br>
1172:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 1) bit 0 to reset all <br>
1173:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 2) bit 1 to reset CMD line <br>
1174:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3) bit 2 reset DAT line <br>
1175:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1176:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * It is typically used to reset the SD HOST controller's registers.
1177:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1178:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetSWReset(XMC_SDMMC_t *const sdmmc, uint32_t reset_mode)
1179:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 822              	 .loc 2 1179 0
 823              	 .cfi_startproc
 824              	 
 825              	 
 826              	 
 827 0000 80B4     	 push {r7}
 828              	.LCFI88:
 829              	 .cfi_def_cfa_offset 4
 830              	 .cfi_offset 7,-4
 831 0002 83B0     	 sub sp,sp,#12
 832              	.LCFI89:
 833              	 .cfi_def_cfa_offset 16
 834 0004 00AF     	 add r7,sp,#0
 835              	.LCFI90:
 836              	 .cfi_def_cfa_register 7
 837 0006 7860     	 str r0,[r7,#4]
 838 0008 3960     	 str r1,[r7]
1180:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetSWReset: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1181:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1182:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->SW_RESET |= (uint8_t)reset_mode;
 839              	 .loc 2 1182 0
 840 000a 7B68     	 ldr r3,[r7,#4]
 841 000c 93F82F30 	 ldrb r3,[r3,#47]
 842 0010 DAB2     	 uxtb r2,r3
 843 0012 3B68     	 ldr r3,[r7]
 844 0014 DBB2     	 uxtb r3,r3
 845 0016 1343     	 orrs r3,r3,r2
 846 0018 DAB2     	 uxtb r2,r3
 847 001a 7B68     	 ldr r3,[r7,#4]
 848 001c 83F82F20 	 strb r2,[r3,#47]
1183:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 849              	 .loc 2 1183 0
 850 0020 0C37     	 adds r7,r7,#12
 851              	.LCFI91:
 852              	 .cfi_def_cfa_offset 4
 853 0022 BD46     	 mov sp,r7
 854              	.LCFI92:
 855              	 .cfi_def_cfa_register 13
 856              	 
 857 0024 5DF8047B 	 ldr r7,[sp],#4
 858              	.LCFI93:
 859              	 .cfi_restore 7
 860              	 .cfi_def_cfa_offset 0
 861 0028 7047     	 bx lr
 862              	 .cfi_endproc
 863              	.LFE186:
 865 002a 00BF     	 .section .text.XMC_SDMMC_GetSWResetStatus,"ax",%progbits
 866              	 .align 2
 867              	 .thumb
 868              	 .thumb_func
 870              	XMC_SDMMC_GetSWResetStatus:
 871              	.LFB187:
1184:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1185:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1186:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1187:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return Software reset status
1188:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1189:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1190:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get SDMMC software reset status <br>
1191:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1192:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1193:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The SD host takes some time to reset its registers after invoking XMC_SDMMC_SetSWReset().
1194:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Since XMC_SDMMC_SetSWReset() is a non-blocking function, XMC_SDMMC_GetSWResetStatus() has
1195:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * been provided to check the software reset status. The return value needs to be masked
1196:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * with the reset mode (XMC_SDMMC_SW_RESET_t) to get a specific software reset status value.
1197:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1198:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetSWResetStatus(XMC_SDMMC_t *const sdmmc)
1199:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 872              	 .loc 2 1199 0
 873              	 .cfi_startproc
 874              	 
 875              	 
 876              	 
 877 0000 80B4     	 push {r7}
 878              	.LCFI94:
 879              	 .cfi_def_cfa_offset 4
 880              	 .cfi_offset 7,-4
 881 0002 83B0     	 sub sp,sp,#12
 882              	.LCFI95:
 883              	 .cfi_def_cfa_offset 16
 884 0004 00AF     	 add r7,sp,#0
 885              	.LCFI96:
 886              	 .cfi_def_cfa_register 7
 887 0006 7860     	 str r0,[r7,#4]
1200:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetSWResetStatus: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
1201:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1202:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->SW_RESET);
 888              	 .loc 2 1202 0
 889 0008 7B68     	 ldr r3,[r7,#4]
 890 000a 93F82F30 	 ldrb r3,[r3,#47]
 891 000e DBB2     	 uxtb r3,r3
1203:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 892              	 .loc 2 1203 0
 893 0010 1846     	 mov r0,r3
 894 0012 0C37     	 adds r7,r7,#12
 895              	.LCFI97:
 896              	 .cfi_def_cfa_offset 4
 897 0014 BD46     	 mov sp,r7
 898              	.LCFI98:
 899              	 .cfi_def_cfa_register 13
 900              	 
 901 0016 5DF8047B 	 ldr r7,[sp],#4
 902              	.LCFI99:
 903              	 .cfi_restore 7
 904              	 .cfi_def_cfa_offset 0
 905 001a 7047     	 bx lr
 906              	 .cfi_endproc
 907              	.LFE187:
 909              	 .section .text.XMC_SDMMC_IsCommandLineBusy,"ax",%progbits
 910              	 .align 2
 911              	 .thumb
 912              	 .thumb_func
 914              	XMC_SDMMC_IsCommandLineBusy:
 915              	.LFB189:
1204:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1205:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1206:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1207:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return XMC_SDMMC_PRESENT_STATE_t A structure storing the present state of the host controller
1208:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1209:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1210:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the present state of the SDMMC host controller <br>
1211:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1212:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1213:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the values of each bit-field in SDMMC_PRESENT_STATE register
1214:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function call populates an instance of the XMC_SDMMC_PRESENT_STATE_t structure with
1215:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the state of the SD host controller and returns it to the caller.
1216:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1217:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE XMC_SDMMC_PRESENT_STATE_t XMC_SDMMC_GetPresentState(const XMC_SDMMC_t *const sdmmc)
1218:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1219:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_SDMMC_PRESENT_STATE_t result;
1220:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1221:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetPresentState: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
1222:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1223:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   result.b32 = (uint32_t)sdmmc->PRESENT_STATE;
1224:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1225:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return result;
1226:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1227:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1228:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1229:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1230:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC command line status
1231:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1232:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1233:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the command line is busy <br>
1234:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1235:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1236:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the command
1237:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The command line must be free before sending an SDMMC
1238:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1239:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1240:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsCommandLineBusy(XMC_SDMMC_t *const sdmmc)
1241:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 916              	 .loc 2 1241 0
 917              	 .cfi_startproc
 918              	 
 919              	 
 920              	 
 921 0000 80B4     	 push {r7}
 922              	.LCFI100:
 923              	 .cfi_def_cfa_offset 4
 924              	 .cfi_offset 7,-4
 925 0002 83B0     	 sub sp,sp,#12
 926              	.LCFI101:
 927              	 .cfi_def_cfa_offset 16
 928 0004 00AF     	 add r7,sp,#0
 929              	.LCFI102:
 930              	 .cfi_def_cfa_register 7
 931 0006 7860     	 str r0,[r7,#4]
1242:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsCommandLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1243:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1244:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_CMD_Msk);
 932              	 .loc 2 1244 0
 933 0008 7B68     	 ldr r3,[r7,#4]
 934 000a 5B6A     	 ldr r3,[r3,#36]
 935 000c 03F00103 	 and r3,r3,#1
 936 0010 002B     	 cmp r3,#0
 937 0012 14BF     	 ite ne
 938 0014 0123     	 movne r3,#1
 939 0016 0023     	 moveq r3,#0
 940 0018 DBB2     	 uxtb r3,r3
1245:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 941              	 .loc 2 1245 0
 942 001a 1846     	 mov r0,r3
 943 001c 0C37     	 adds r7,r7,#12
 944              	.LCFI103:
 945              	 .cfi_def_cfa_offset 4
 946 001e BD46     	 mov sp,r7
 947              	.LCFI104:
 948              	 .cfi_def_cfa_register 13
 949              	 
 950 0020 5DF8047B 	 ldr r7,[sp],#4
 951              	.LCFI105:
 952              	 .cfi_restore 7
 953              	 .cfi_def_cfa_offset 0
 954 0024 7047     	 bx lr
 955              	 .cfi_endproc
 956              	.LFE189:
 958 0026 00BF     	 .section .text.XMC_SDMMC_IsDataLineBusy,"ax",%progbits
 959              	 .align 2
 960              	 .thumb
 961              	 .thumb_func
 963              	XMC_SDMMC_IsDataLineBusy:
 964              	.LFB190:
1246:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1247:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1248:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1249:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool SDMMC data line status
1250:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1251:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1252:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if the data line is busy <br>
1253:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1254:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1255:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if the data
1256:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * line is busy ("false" otherwise). The data line must be free before sending an SDMMC
1257:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command with XMC_SDMMC_SendCommand().
1258:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1259:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsDataLineBusy(XMC_SDMMC_t *const sdmmc)
1260:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 965              	 .loc 2 1260 0
 966              	 .cfi_startproc
 967              	 
 968              	 
 969              	 
 970 0000 80B4     	 push {r7}
 971              	.LCFI106:
 972              	 .cfi_def_cfa_offset 4
 973              	 .cfi_offset 7,-4
 974 0002 83B0     	 sub sp,sp,#12
 975              	.LCFI107:
 976              	 .cfi_def_cfa_offset 16
 977 0004 00AF     	 add r7,sp,#0
 978              	.LCFI108:
 979              	 .cfi_def_cfa_register 7
 980 0006 7860     	 str r0,[r7,#4]
1261:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsDataLineBusy: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc))
1262:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1263:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_COMMAND_INHIBIT_DAT_Msk);
 981              	 .loc 2 1263 0
 982 0008 7B68     	 ldr r3,[r7,#4]
 983 000a 5B6A     	 ldr r3,[r3,#36]
 984 000c 03F00203 	 and r3,r3,#2
 985 0010 002B     	 cmp r3,#0
 986 0012 14BF     	 ite ne
 987 0014 0123     	 movne r3,#1
 988 0016 0023     	 moveq r3,#0
 989 0018 DBB2     	 uxtb r3,r3
1264:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 990              	 .loc 2 1264 0
 991 001a 1846     	 mov r0,r3
 992 001c 0C37     	 adds r7,r7,#12
 993              	.LCFI109:
 994              	 .cfi_def_cfa_offset 4
 995 001e BD46     	 mov sp,r7
 996              	.LCFI110:
 997              	 .cfi_def_cfa_register 13
 998              	 
 999 0020 5DF8047B 	 ldr r7,[sp],#4
 1000              	.LCFI111:
 1001              	 .cfi_restore 7
 1002              	 .cfi_def_cfa_offset 0
 1003 0024 7047     	 bx lr
 1004              	 .cfi_endproc
 1005              	.LFE190:
 1007 0026 00BF     	 .section .text.XMC_SDMMC_IsAllDataLinesHigh,"ax",%progbits
 1008              	 .align 2
 1009              	 .thumb
 1010              	 .thumb_func
 1012              	XMC_SDMMC_IsAllDataLinesHigh:
 1013              	.LFB191:
1265:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1266:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1267:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1268:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool Status of all data lines
1269:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1270:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1271:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Check if all data line are high <br>
1272:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1273:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1274:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function reads the SDMMC PRESENT_STATE register and returns "true" if all data
1275:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * lines are high. It can be used to handle SDMMC error conditions. For example, if an
1276:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * error event (XMC_SDMMC_IsAnyErrorEvent()) is detected and all data lines are high,
1277:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the user code can conclude that the error is of a "recoverable" type.
1278:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1279:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_IsAllDataLinesHigh(XMC_SDMMC_t *const sdmmc)
1280:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1014              	 .loc 2 1280 0
 1015              	 .cfi_startproc
 1016              	 
 1017              	 
 1018              	 
 1019 0000 80B4     	 push {r7}
 1020              	.LCFI112:
 1021              	 .cfi_def_cfa_offset 4
 1022              	 .cfi_offset 7,-4
 1023 0002 83B0     	 sub sp,sp,#12
 1024              	.LCFI113:
 1025              	 .cfi_def_cfa_offset 16
 1026 0004 00AF     	 add r7,sp,#0
 1027              	.LCFI114:
 1028              	 .cfi_def_cfa_register 7
 1029 0006 7860     	 str r0,[r7,#4]
1281:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_IsAllDataLinesHigh: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1282:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1283:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return ((((sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Msk) >>
 1030              	 .loc 2 1283 0
 1031 0008 7B68     	 ldr r3,[r7,#4]
 1032 000a 5B6A     	 ldr r3,[r3,#36]
 1033 000c 03F47003 	 and r3,r3,#15728640
 1034 0010 1B0D     	 lsrs r3,r3,#20
 1035 0012 0F2B     	 cmp r3,#15
 1036 0014 0CBF     	 ite eq
 1037 0016 0123     	 moveq r3,#1
 1038 0018 0023     	 movne r3,#0
 1039 001a DBB2     	 uxtb r3,r3
1284:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****         SDMMC_PRESENT_STATE_DAT_3_0_PIN_LEVEL_Pos) == 0x0FU) ? true : false);
1285:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1040              	 .loc 2 1285 0
 1041 001c 1846     	 mov r0,r3
 1042 001e 0C37     	 adds r7,r7,#12
 1043              	.LCFI115:
 1044              	 .cfi_def_cfa_offset 4
 1045 0020 BD46     	 mov sp,r7
 1046              	.LCFI116:
 1047              	 .cfi_def_cfa_register 13
 1048              	 
 1049 0022 5DF8047B 	 ldr r7,[sp],#4
 1050              	.LCFI117:
 1051              	 .cfi_restore 7
 1052              	 .cfi_def_cfa_offset 0
 1053 0026 7047     	 bx lr
 1054              	 .cfi_endproc
 1055              	.LFE191:
 1057              	 .section .text.XMC_SDMMC_SDClockFreqSelect,"ax",%progbits
 1058              	 .align 2
 1059              	 .thumb
 1060              	 .thumb_func
 1062              	XMC_SDMMC_SDClockFreqSelect:
 1063              	.LFB201:
1286:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1287:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1288:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1289:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param command A pointer to a constant of type XMC_SDMMC_COMMAND_t, pointing to the command conf
1290:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param arg Command argument
1291:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return ::XMC_SDMMC_STATUS_SUCCESS
1292:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1293:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1294:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Send normal SDMMC command <br>
1295:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1296:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1297:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use this function to send a normal SDMMC command. This non-blocking function sets the
1298:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * ARGUMENT1 and COMMAND registers. It is the user's responsibility to check if the command
1299:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and data lines are busy (XMC_SDMMC_IsDataLineBusy(), XMC_SDMMC_IsCommandLineBusy()).
1300:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1301:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** XMC_SDMMC_STATUS_t XMC_SDMMC_SendCommand(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_COMMAND_t *comma
1302:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1303:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1304:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1305:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t SDMMC command response
1306:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1307:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1308:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response (no Auto command) <br>
1309:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1310:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1311:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns [39:8] bits of the card response. The others are checked automatically
1312:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * by the peripheral. This function can be used with response type R1, R1b, R3, R4, R5, R5b, R6
1313:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * but it doesn't support the retrieving of R1 of Auto CMD 23 and R1b of Auto CMD 12. To get
1314:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * these responses, use XMC_SDMMC_GetAutoCommandResponse().
1315:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1316:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetCommandResponse(XMC_SDMMC_t *const sdmmc)
1317:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1318:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1319:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   
1320:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[0]);
1321:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1322:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1323:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1324:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1325:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Auto command response value
1326:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1327:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1328:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card response of Auto commands <br>
1329:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1330:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1331:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function returns card response [39:8] bits of auto commands: R1 of Auto CMD 23 and
1332:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * R1b of Auto CMD 12.
1333:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1334:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetAutoCommandResponse(const XMC_SDMMC_t *const sdmmc)
1335:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1336:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetAutoCommandResponse: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR
1337:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1338:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (sdmmc->RESPONSE[3]);
1339:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1340:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1341:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1342:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1343:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param response Pointer to structure type XMC_SDMMC_RESPONSE_t to store the full response
1344:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1345:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1346:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1347:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get card R2 response <br>
1348:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1349:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1350:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The R2 response is 120 bits wide. The function reads all peripheral registers and store in
1351:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the response data structure.
1352:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1353:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_GetR2Response(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_RESPONSE_t *const response);
1354:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1355:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1356:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1357:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param transfer_mode Transfer mode configuration
1358:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1359:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1360:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1361:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure data transfer mode <br>
1362:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1363:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1364:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function configures block size, block count, type of data transfer, response type
1365:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * and sets the auto command configuration. Use this function to configure a multi-block
1366:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SDMMC transfer.
1367:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1368:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** void XMC_SDMMC_SetDataTransferMode(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_TRANSFER_MODE_t *const trans
1369:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1370:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1371:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1372:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return uint32_t Number of blocks that need to be transferred
1373:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1374:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1375:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get the number of blocks that need to be transferred <br>
1376:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1377:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1378:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function is valid only for multiple block transfers. The host controller
1379:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * decrements the block count after each block transfer and stops when the count reaches
1380:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * zero. It can only be accessed when no transaction is happening (i.e after a transaction
1381:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * has stopped). This function returns an invalid value during the transfer. <br>
1382:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1383:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When saving transfer context as a result of the suspend command, the number of blocks
1384:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * yet to be transferred can be determined by using this function.
1385:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1386:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE uint32_t XMC_SDMMC_GetTransferBlocksNum(XMC_SDMMC_t *const sdmmc)
1387:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1388:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetTransferBlocksNum: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1389:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1390:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (uint32_t)(sdmmc->BLOCK_COUNT);
1391:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1392:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1393:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1394:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1395:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to enable read wait control, "false" to disable read wait control.
1396:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1397:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1398:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1399:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Configure read wait control <br>
1400:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1401:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1402:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The read wait function is optional for SDIO cards. If the card supports read wait and
1403:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * XMC_SDMMC_GetTransferBlocksNum() is executed, the SDMMC peripheral will stop read data
1404:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * using DAT[2] line. If this feature is not enabled the peripheral has to stop the SD
1405:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * clock to hold read data, restricting commands generation. <br>
1406:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1407:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * When the host driver detects an SD card insertion, it sets this bit according to the
1408:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * CCCR of the SDIO card. If the card does not support read wait, this feature shall
1409:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * never be enabled otherwise a DAT line conflict may occur. If this feature is disabled,
1410:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Suspend/Resume cannot be supported.
1411:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1412:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetReadWaitControl(XMC_SDMMC_t *const sdmmc, bool enabled)
1413:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1414:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetReadWaitControl: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1415:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1416:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_READ_WA
1417:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_READ_WAIT_CT
1418:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1419:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1420:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1421:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1422:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to set stop at block gap, "false" for transfer
1423:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1424:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1425:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1426:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Stop at block gap request <br>
1427:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1428:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1429:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to terminate a transaction execution at the next block gap for
1430:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * non-DMA transfers.
1431:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1432:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetStopAtBlockGap(XMC_SDMMC_t *const sdmmc, bool enabled)
1433:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1434:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetStopAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1435:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1436:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = (uint8_t)((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_STOP_AT
1437:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                     (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_STOP_AT_BLOC
1438:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1439:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1440:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1441:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1442:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param enabled "true" to restart transaction, "false" is ignored
1443:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1444:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1445:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1446:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Issue a continue request <br>
1447:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1448:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1449:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function is used to restart a transaction which was stopped using the "Stop at
1450:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * block gap" request. (XMC_SDMMC_SetStopAtBlockGap())
1451:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1452:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetContinueRequest(XMC_SDMMC_t *const sdmmc, bool enabled)
1453:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1454:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1455:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1456:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL = ((sdmmc->BLOCK_GAP_CTRL & (uint8_t)~SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Msk
1457:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                            (uint8_t)((uint8_t)enabled << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1458:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1459:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1460:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1461:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1462:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return bool
1463:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1464:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1465:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Get continue request <br>
1466:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1467:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1468:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function returns the status of the BLOCK_GAP_CTRL.CONTINUE_REQ bit-field. It
1469:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * returns "true" if the transaction is restarted after a "stop at block gap" request.
1470:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1471:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE bool XMC_SDMMC_GetContinueRequest(XMC_SDMMC_t *const sdmmc)
1472:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1473:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_GetContinueRequest: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1474:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1475:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   return (bool)(sdmmc->BLOCK_GAP_CTRL & (uint8_t)(1U << SDMMC_BLOCK_GAP_CTRL_CONTINUE_REQ_Pos));
1476:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1477:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1478:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1479:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1480:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1481:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1482:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1483:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1484:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable interrupt at block gap <br>
1485:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1486:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1487:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to enable interrupt
1488:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap for a multi-block transfer. This bit is only valid in a 4-bit mode of
1489:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * the SDIO card.
1490:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1491:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc, const XMC_SDMMC_
1492:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1493:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1494:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1495:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1496:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1497:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL |= (uint8_t)SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1498:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1499:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1500:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1501:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1502:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param config A pointer to the SDMMC configuration structure (::XMC_SDMMC_CONFIG_t)
1503:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1504:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1505:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1506:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable interrupt at block gap <br>
1507:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1508:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1509:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function resets the BLOCK_GAP_CTRL.INT_AT_BLOCK_GAP bit-field to disable interrupt
1510:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at block gap. This bit is only valid in a 4-bit mode of the SDIO card.
1511:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1512:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableInterruptAtBlockGap(XMC_SDMMC_t *const sdmmc,
1513:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                           const XMC_SDMMC_CONFIG_t *config)
1514:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1515:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1516:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_
1517:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableInterruptAtBlockGap: This operation is only valid in 4-bit mode",
1518:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****              (config->bus_width == XMC_SDMMC_DATA_LINES_1));
1519:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1520:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->BLOCK_GAP_CTRL &= (uint8_t)~SDMMC_BLOCK_GAP_CTRL_INT_AT_BLOCK_GAP_Msk;
1521:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1522:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1523:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1524:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1525:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param clk Desired clock frequency (::XMC_SDMMC_SDCLK_FREQ_SEL_t)
1526:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1527:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1528:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1529:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SD clock frequency <br>
1530:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1531:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1532:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the frequency of the SD clock
1533:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * pin. The register is programmed with the divisor of the base clock frequency (clk).
1534:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1535:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The following settings are permitted (8-bit divided clock mode): <br>
1536:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 00H: base clock (10MHz->63MHz) <br>
1537:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 01H: base clock divided by 2   <br>
1538:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 10H: base clock divided by 32  <br>
1539:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 02H: base clock divided by 4   <br>
1540:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 04H: base clock divided by 8   <br>
1541:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 08H: base clock divided by 16  <br>
1542:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 20H: base clock divided by 64  <br>
1543:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 40H: base clock divided by 128 <br>
1544:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 80H: base clock divided by 256 <br>
1545:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1546:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Note: </b><br>
1547:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The internal clock should be disabled before updating frequency clock select. Please
1548:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * see section 2.2.14 -> "Clock Control Register" in the SD HOST specification for more
1549:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * information.
1550:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1551:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SDClockFreqSelect(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_SDCLK_FREQ_SEL
1552:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1064              	 .loc 2 1552 0
 1065              	 .cfi_startproc
 1066              	 
 1067              	 
 1068              	 
 1069 0000 80B4     	 push {r7}
 1070              	.LCFI118:
 1071              	 .cfi_def_cfa_offset 4
 1072              	 .cfi_offset 7,-4
 1073 0002 83B0     	 sub sp,sp,#12
 1074              	.LCFI119:
 1075              	 .cfi_def_cfa_offset 16
 1076 0004 00AF     	 add r7,sp,#0
 1077              	.LCFI120:
 1078              	 .cfi_def_cfa_register 7
 1079 0006 7860     	 str r0,[r7,#4]
 1080 0008 0B46     	 mov r3,r1
 1081 000a FB70     	 strb r3,[r7,#3]
1553:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmm
1554:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SDClockFreqSelect: Invalid clock frequency selection", XMC_SDMMC_CHECK_SDCL
1555:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1556:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->CLOCK_CTRL = (uint16_t)((sdmmc->CLOCK_CTRL & (uint32_t)~SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Ms
 1082              	 .loc 2 1556 0
 1083 000c 7B68     	 ldr r3,[r7,#4]
 1084 000e 9B8D     	 ldrh r3,[r3,#44]
 1085 0010 9BB2     	 uxth r3,r3
 1086 0012 DBB2     	 uxtb r3,r3
 1087 0014 9AB2     	 uxth r2,r3
 1088 0016 FB78     	 ldrb r3,[r7,#3]
 1089 0018 9BB2     	 uxth r3,r3
 1090 001a 1B02     	 lsls r3,r3,#8
 1091 001c 9BB2     	 uxth r3,r3
 1092 001e 1343     	 orrs r3,r3,r2
 1093 0020 9AB2     	 uxth r2,r3
 1094 0022 7B68     	 ldr r3,[r7,#4]
 1095 0024 9A85     	 strh r2,[r3,#44]
1557:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                  (uint32_t)(clk << SDMMC_CLOCK_CTRL_SDCLK_FREQ_SEL_Pos));
1558:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1096              	 .loc 2 1558 0
 1097 0026 0C37     	 adds r7,r7,#12
 1098              	.LCFI121:
 1099              	 .cfi_def_cfa_offset 4
 1100 0028 BD46     	 mov sp,r7
 1101              	.LCFI122:
 1102              	 .cfi_def_cfa_register 13
 1103              	 
 1104 002a 5DF8047B 	 ldr r7,[sp],#4
 1105              	.LCFI123:
 1106              	 .cfi_restore 7
 1107              	 .cfi_def_cfa_offset 0
 1108 002e 7047     	 bx lr
 1109              	 .cfi_endproc
 1110              	.LFE201:
 1112              	 .section .text.XMC_SDMMC_SetBusVoltage,"ax",%progbits
 1113              	 .align 2
 1114              	 .thumb
 1115              	 .thumb_func
 1117              	XMC_SDMMC_SetBusVoltage:
 1118              	.LFB202:
1559:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1560:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1561:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1562:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param bus_voltage Desired bus voltage (::XMC_SDMMC_BUS_VOLTAGE_t)
1563:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1564:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1565:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1566:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set SDMMC bus voltage <br>
1567:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1568:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1569:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function sets the CLOCK_CTRL register to configure the bus voltage. Currently,
1570:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * 3.3 volts is the supported voltage level. This function is relevant within the host
1571:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * controller initialization routine.
1572:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1573:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetBusVoltage(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_BUS_VOLTAGE_t bus_
1574:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1119              	 .loc 2 1574 0
 1120              	 .cfi_startproc
 1121              	 
 1122              	 
 1123              	 
 1124 0000 80B4     	 push {r7}
 1125              	.LCFI124:
 1126              	 .cfi_def_cfa_offset 4
 1127              	 .cfi_offset 7,-4
 1128 0002 83B0     	 sub sp,sp,#12
 1129              	.LCFI125:
 1130              	 .cfi_def_cfa_offset 16
 1131 0004 00AF     	 add r7,sp,#0
 1132              	.LCFI126:
 1133              	 .cfi_def_cfa_register 7
 1134 0006 7860     	 str r0,[r7,#4]
 1135 0008 0B46     	 mov r3,r1
 1136 000a FB70     	 strb r3,[r7,#3]
1575:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc));
1576:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetBusVoltage: Invalid bus voltage", XMC_SDMMC_CHECK_BUS_VOLTAGE(bus_voltag
1577:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1578:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->POWER_CTRL = (uint8_t)((sdmmc->POWER_CTRL & (uint32_t)~SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL
 1137              	 .loc 2 1578 0
 1138 000c 7B68     	 ldr r3,[r7,#4]
 1139 000e 93F82930 	 ldrb r3,[r3,#41]
 1140 0012 DBB2     	 uxtb r3,r3
 1141 0014 23F00E03 	 bic r3,r3,#14
 1142 0018 DAB2     	 uxtb r2,r3
 1143 001a FB78     	 ldrb r3,[r7,#3]
 1144 001c 5B00     	 lsls r3,r3,#1
 1145 001e DBB2     	 uxtb r3,r3
 1146 0020 1343     	 orrs r3,r3,r2
 1147 0022 DAB2     	 uxtb r2,r3
 1148 0024 7B68     	 ldr r3,[r7,#4]
 1149 0026 83F82920 	 strb r2,[r3,#41]
1579:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                 (uint32_t)(bus_voltage << SDMMC_POWER_CTRL_SD_BUS_VOLTAGE_SEL_Pos))
1580:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1150              	 .loc 2 1580 0
 1151 002a 0C37     	 adds r7,r7,#12
 1152              	.LCFI127:
 1153              	 .cfi_def_cfa_offset 4
 1154 002c BD46     	 mov sp,r7
 1155              	.LCFI128:
 1156              	 .cfi_def_cfa_register 13
 1157              	 
 1158 002e 5DF8047B 	 ldr r7,[sp],#4
 1159              	.LCFI129:
 1160              	 .cfi_restore 7
 1161              	 .cfi_def_cfa_offset 0
 1162 0032 7047     	 bx lr
 1163              	 .cfi_endproc
 1164              	.LFE202:
 1166              	 .section .text.XMC_SDMMC_SetDataLineTimeout,"ax",%progbits
 1167              	 .align 2
 1168              	 .thumb
 1169              	 .thumb_func
 1171              	XMC_SDMMC_SetDataLineTimeout:
 1172              	.LFB203:
1581:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1582:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1583:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1584:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param timeout Data line timeout value
1585:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1586:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1587:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1588:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data line timeout <br>
1589:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1590:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1591:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the interval by which the data line timeouts are detected. The
1592:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * timeout clock frequency is generated by dividing the SD clock (TMCLK) by the timeout argument.
1593:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * This function must be called before setting the bus voltage (XMC_SDMMC_SetBusVoltage()).
1594:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1595:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataLineTimeout(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DAT_TIMEOUT_C
1596:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1173              	 .loc 2 1596 0
 1174              	 .cfi_startproc
 1175              	 
 1176              	 
 1177              	 
 1178 0000 80B4     	 push {r7}
 1179              	.LCFI130:
 1180              	 .cfi_def_cfa_offset 4
 1181              	 .cfi_offset 7,-4
 1182 0002 83B0     	 sub sp,sp,#12
 1183              	.LCFI131:
 1184              	 .cfi_def_cfa_offset 16
 1185 0004 00AF     	 add r7,sp,#0
 1186              	.LCFI132:
 1187              	 .cfi_def_cfa_register 7
 1188 0006 7860     	 str r0,[r7,#4]
 1189 0008 0B46     	 mov r3,r1
 1190 000a FB70     	 strb r3,[r7,#3]
1597:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdm
1598:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataLineTimeout: Invalid timeout", XMC_SDMMC_CHECK_DAT_TIMEOUT_COUNTER(t
1599:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1600:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TIMEOUT_CTRL = (uint8_t)((sdmmc->TIMEOUT_CTRL & (uint32_t)~SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_
 1191              	 .loc 2 1600 0
 1192 000c 7B68     	 ldr r3,[r7,#4]
 1193 000e 93F82E30 	 ldrb r3,[r3,#46]
 1194 0012 DBB2     	 uxtb r3,r3
 1195 0014 23F00F03 	 bic r3,r3,#15
 1196 0018 DAB2     	 uxtb r2,r3
 1197 001a FB78     	 ldrb r3,[r7,#3]
 1198 001c 1343     	 orrs r3,r3,r2
 1199 001e DAB2     	 uxtb r2,r3
 1200 0020 7B68     	 ldr r3,[r7,#4]
 1201 0022 83F82E20 	 strb r2,[r3,#46]
1601:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(timeout << SDMMC_TIMEOUT_CTRL_DAT_TIMEOUT_CNT_VAL_Pos)
1602:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1202              	 .loc 2 1602 0
 1203 0026 0C37     	 adds r7,r7,#12
 1204              	.LCFI133:
 1205              	 .cfi_def_cfa_offset 4
 1206 0028 BD46     	 mov sp,r7
 1207              	.LCFI134:
 1208              	 .cfi_def_cfa_register 13
 1209              	 
 1210 002a 5DF8047B 	 ldr r7,[sp],#4
 1211              	.LCFI135:
 1212              	 .cfi_restore 7
 1213              	 .cfi_def_cfa_offset 0
 1214 002e 7047     	 bx lr
 1215              	 .cfi_endproc
 1216              	.LFE203:
 1218              	 .section .text.XMC_SDMMC_SetDataTransferWidth,"ax",%progbits
 1219              	 .align 2
 1220              	 .thumb
 1221              	 .thumb_func
 1223              	XMC_SDMMC_SetDataTransferWidth:
 1224              	.LFB204:
1603:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1604:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1605:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1606:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param lines Number of data lines to use  (::XMC_SDMMC_DATA_LINES_t)
1607:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1608:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1609:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1610:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer width <br>
1611:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1612:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1613:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer width. Before using this function, an ACMD6
1614:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * command (with R1 response type) must be sent to switch the bus width.
1615:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1616:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferWidth(XMC_SDMMC_t *const sdmmc, XMC_SDMMC_DATA_LINES_
1617:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1225              	 .loc 2 1617 0
 1226              	 .cfi_startproc
 1227              	 
 1228              	 
 1229              	 
 1230 0000 80B4     	 push {r7}
 1231              	.LCFI136:
 1232              	 .cfi_def_cfa_offset 4
 1233              	 .cfi_offset 7,-4
 1234 0002 83B0     	 sub sp,sp,#12
 1235              	.LCFI137:
 1236              	 .cfi_def_cfa_offset 16
 1237 0004 00AF     	 add r7,sp,#0
 1238              	.LCFI138:
 1239              	 .cfi_def_cfa_register 7
 1240 0006 7860     	 str r0,[r7,#4]
 1241 0008 0B46     	 mov r3,r1
 1242 000a FB70     	 strb r3,[r7,#3]
1618:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(s
1619:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferWidth: Invalid no. of data lines", XMC_SDMMC_CHECK_DATA_LINE
1620:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1621:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL &= (uint8_t)~(XMC_SDMMC_DATA_LINES_1 | XMC_SDMMC_DATA_LINES_4 | XMC_SDMMC_DATA_L
 1243              	 .loc 2 1621 0
 1244 000c 7B68     	 ldr r3,[r7,#4]
 1245 000e 93F82830 	 ldrb r3,[r3,#40]
 1246 0012 DBB2     	 uxtb r3,r3
 1247 0014 23F02203 	 bic r3,r3,#34
 1248 0018 DAB2     	 uxtb r2,r3
 1249 001a 7B68     	 ldr r3,[r7,#4]
 1250 001c 83F82820 	 strb r2,[r3,#40]
1622:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (uint8_t)lines;
 1251              	 .loc 2 1622 0
 1252 0020 7B68     	 ldr r3,[r7,#4]
 1253 0022 93F82830 	 ldrb r3,[r3,#40]
 1254 0026 DAB2     	 uxtb r2,r3
 1255 0028 FB78     	 ldrb r3,[r7,#3]
 1256 002a 1343     	 orrs r3,r3,r2
 1257 002c DAB2     	 uxtb r2,r3
 1258 002e 7B68     	 ldr r3,[r7,#4]
 1259 0030 83F82820 	 strb r2,[r3,#40]
1623:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1260              	 .loc 2 1623 0
 1261 0034 0C37     	 adds r7,r7,#12
 1262              	.LCFI139:
 1263              	 .cfi_def_cfa_offset 4
 1264 0036 BD46     	 mov sp,r7
 1265              	.LCFI140:
 1266              	 .cfi_def_cfa_register 13
 1267              	 
 1268 0038 5DF8047B 	 ldr r7,[sp],#4
 1269              	.LCFI141:
 1270              	 .cfi_restore 7
 1271              	 .cfi_def_cfa_offset 0
 1272 003c 7047     	 bx lr
 1273              	 .cfi_endproc
 1274              	.LFE204:
 1276 003e 00BF     	 .section .text.XMC_SDMMC_SetDataTransferDirection,"ax",%progbits
 1277              	 .align 2
 1278              	 .thumb
 1279              	 .thumb_func
 1281              	XMC_SDMMC_SetDataTransferDirection:
 1282              	.LFB205:
1624:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1625:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1626:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param sdmmc A constant pointer to XMC_SDMMC_t, pointing to the SDMMC base address
1627:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param dir Transfer direction (::XMC_SDMMC_DATA_TRANSFER_DIR_t)
1628:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1629:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1630:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1631:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set data transfer direction <br>
1632:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1633:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1634:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the data transfer direction: host to card OR card to host. It
1635:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * is typically used to configure block operations (read/write) on the SD card. For
1636:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * example, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD must be used for a write block operation.
1637:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1638:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDataTransferDirection(XMC_SDMMC_t *const sdmmc,
1639:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                                         XMC_SDMMC_DATA_TRANSFER_DIR_t dir)
1640:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1283              	 .loc 2 1640 0
 1284              	 .cfi_startproc
 1285              	 
 1286              	 
 1287              	 
 1288 0000 80B4     	 push {r7}
 1289              	.LCFI142:
 1290              	 .cfi_def_cfa_offset 4
 1291              	 .cfi_offset 7,-4
 1292 0002 83B0     	 sub sp,sp,#12
 1293              	.LCFI143:
 1294              	 .cfi_def_cfa_offset 16
 1295 0004 00AF     	 add r7,sp,#0
 1296              	.LCFI144:
 1297              	 .cfi_def_cfa_register 7
 1298 0006 7860     	 str r0,[r7,#4]
 1299 0008 0B46     	 mov r3,r1
 1300 000a FB70     	 strb r3,[r7,#3]
1641:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_P
1642:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_SetDataTransferDirection: Invalid direction", XMC_SDMMC_CHECK_DATA_TRANSFER
1643:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->TRANSFER_MODE = (uint16_t)((sdmmc->TRANSFER_MODE & (uint16_t)~SDMMC_TRANSFER_MODE_TX_DIR_S
 1301              	 .loc 2 1644 0
 1302 000c 7B68     	 ldr r3,[r7,#4]
 1303 000e 9B89     	 ldrh r3,[r3,#12]
 1304 0010 9BB2     	 uxth r3,r3
 1305 0012 9BB2     	 uxth r3,r3
 1306 0014 23F01003 	 bic r3,r3,#16
 1307 0018 9AB2     	 uxth r2,r3
1645:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint16_t)((uint16_t)dir << SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos
 1308              	 .loc 2 1645 0
 1309 001a FB78     	 ldrb r3,[r7,#3]
 1310 001c 9BB2     	 uxth r3,r3
 1311 001e 1B01     	 lsls r3,r3,#4
 1312 0020 9BB2     	 uxth r3,r3
1644:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint16_t)((uint16_t)dir << SDMMC_TRANSFER_MODE_TX_DIR_SELECT_Pos
 1313              	 .loc 2 1644 0
 1314 0022 9BB2     	 uxth r3,r3
 1315 0024 1343     	 orrs r3,r3,r2
 1316 0026 9BB2     	 uxth r3,r3
 1317 0028 9AB2     	 uxth r2,r3
 1318 002a 7B68     	 ldr r3,[r7,#4]
 1319 002c 9A81     	 strh r2,[r3,#12]
1646:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1320              	 .loc 2 1646 0
 1321 002e 0C37     	 adds r7,r7,#12
 1322              	.LCFI145:
 1323              	 .cfi_def_cfa_offset 4
 1324 0030 BD46     	 mov sp,r7
 1325              	.LCFI146:
 1326              	 .cfi_def_cfa_register 13
 1327              	 
 1328 0032 5DF8047B 	 ldr r7,[sp],#4
 1329              	.LCFI147:
 1330              	 .cfi_restore 7
 1331              	 .cfi_def_cfa_offset 0
 1332 0036 7047     	 bx lr
 1333              	 .cfi_endproc
 1334              	.LFE205:
 1336              	 .section .text.XMC_SDMMC_EnableHighSpeed,"ax",%progbits
 1337              	 .align 2
 1338              	 .thumb
 1339              	 .thumb_func
 1341              	XMC_SDMMC_EnableHighSpeed:
 1342              	.LFB209:
1647:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1648:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1649:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1650:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1651:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1652:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1653:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Enable delay on the command/data out lines <br>
1654:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1655:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1656:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to enable delay on the command/data out lines. Invoke this function
1657:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * before selecting the number of delay elements.
1658:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1659:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableDelayCmdDatLines(void)
1660:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1661:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL |= (uint32_t)SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
1662:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1663:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1664:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1665:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1666:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1667:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1668:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1669:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Disable delay on the command/data out lines <br>
1670:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1671:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1672:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to disable delay on the command/data out lines.
1673:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1674:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableDelayCmdDatLines(void)
1675:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1676:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL &= (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPEN_Msk;
1677:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1678:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1679:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1680:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param tapdel Number of delay elements to select
1681:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1682:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1683:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1684:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Set number of delay elements on the command/data out lines <br>
1685:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1686:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1687:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to set the number of delay elements on the command/data out lines.
1688:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * The function writes the delay value to the SDMMC delay control register (SDMMCDEL)
1689:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * within the realm of the SCU peripheral. A delay of tapdel + 1 is considered as the
1690:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * final selected number of delay elements.
1691:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1692:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_SetDelay(uint8_t tapdel)
1693:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
1694:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   SCU_GENERAL->SDMMCDEL = (uint32_t)((SCU_GENERAL->SDMMCDEL & (uint32_t)~SCU_GENERAL_SDMMCDEL_TAPDE
1695:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****                                   (uint32_t)(tapdel << SCU_GENERAL_SDMMCDEL_TAPDEL_Pos));
1696:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
1697:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1698:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1699:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1700:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1701:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1702:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1703:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * High speed enable <br>
1704:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1705:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1706:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to enable high speed operation. The default is a normal speed operation.
1707:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Once enabled, the host controller outputs command and data lines at the rising edge of the
1708:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * SD clock (up to 50 MHz for SD).
1709:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1710:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_EnableHighSpeed(XMC_SDMMC_t *const sdmmc)
1711:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1343              	 .loc 2 1711 0
 1344              	 .cfi_startproc
 1345              	 
 1346              	 
 1347              	 
 1348 0000 80B4     	 push {r7}
 1349              	.LCFI148:
 1350              	 .cfi_def_cfa_offset 4
 1351              	 .cfi_offset 7,-4
 1352 0002 83B0     	 sub sp,sp,#12
 1353              	.LCFI149:
 1354              	 .cfi_def_cfa_offset 16
 1355 0004 00AF     	 add r7,sp,#0
 1356              	.LCFI150:
 1357              	 .cfi_def_cfa_register 7
 1358 0006 7860     	 str r0,[r7,#4]
1712:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_EnableHighSpeed: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc)
1713:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1714:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL |= (uint8_t)SDMMC_HOST_CTRL_HIGH_SPEED_EN_Msk;
 1359              	 .loc 2 1714 0
 1360 0008 7B68     	 ldr r3,[r7,#4]
 1361 000a 93F82830 	 ldrb r3,[r3,#40]
 1362 000e DBB2     	 uxtb r3,r3
 1363 0010 43F00403 	 orr r3,r3,#4
 1364 0014 DAB2     	 uxtb r2,r3
 1365 0016 7B68     	 ldr r3,[r7,#4]
 1366 0018 83F82820 	 strb r2,[r3,#40]
1715:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1367              	 .loc 2 1715 0
 1368 001c 0C37     	 adds r7,r7,#12
 1369              	.LCFI151:
 1370              	 .cfi_def_cfa_offset 4
 1371 001e BD46     	 mov sp,r7
 1372              	.LCFI152:
 1373              	 .cfi_def_cfa_register 13
 1374              	 
 1375 0020 5DF8047B 	 ldr r7,[sp],#4
 1376              	.LCFI153:
 1377              	 .cfi_restore 7
 1378              	 .cfi_def_cfa_offset 0
 1379 0024 7047     	 bx lr
 1380              	 .cfi_endproc
 1381              	.LFE209:
 1383 0026 00BF     	 .section .text.XMC_SDMMC_DisableHighSpeed,"ax",%progbits
 1384              	 .align 2
 1385              	 .thumb
 1386              	 .thumb_func
 1388              	XMC_SDMMC_DisableHighSpeed:
 1389              	.LFB210:
1716:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1717:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** /**
1718:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @param None
1719:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * @return None
1720:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1721:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par<b>Description: </b><br>
1722:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * High speed disable <br>
1723:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  *
1724:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * \par
1725:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * Use the function to disable high speed operation. The host controller will switch back
1726:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * to a normal speed mode. In this mode, the host controller outputs command and data lines
1727:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  * at 25 MHz for SD.
1728:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****  */
1729:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** __STATIC_INLINE void XMC_SDMMC_DisableHighSpeed(XMC_SDMMC_t *const sdmmc)
1730:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** {
 1390              	 .loc 2 1730 0
 1391              	 .cfi_startproc
 1392              	 
 1393              	 
 1394              	 
 1395 0000 80B4     	 push {r7}
 1396              	.LCFI154:
 1397              	 .cfi_def_cfa_offset 4
 1398              	 .cfi_offset 7,-4
 1399 0002 83B0     	 sub sp,sp,#12
 1400              	.LCFI155:
 1401              	 .cfi_def_cfa_offset 16
 1402 0004 00AF     	 add r7,sp,#0
 1403              	.LCFI156:
 1404              	 .cfi_def_cfa_register 7
 1405 0006 7860     	 str r0,[r7,#4]
1731:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   XMC_ASSERT("XMC_SDMMC_DisableHighSpeed: Invalid module pointer", XMC_SDMMC_CHECK_MODULE_PTR(sdmmc
1732:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** 
1733:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h ****   sdmmc->HOST_CTRL &= (uint8_t)~SDMMC_HOST_CTRL_HIGH_SPEED_EN_Msk;
 1406              	 .loc 2 1733 0
 1407 0008 7B68     	 ldr r3,[r7,#4]
 1408 000a 93F82830 	 ldrb r3,[r3,#40]
 1409 000e DBB2     	 uxtb r3,r3
 1410 0010 23F00403 	 bic r3,r3,#4
 1411 0014 DAB2     	 uxtb r2,r3
 1412 0016 7B68     	 ldr r3,[r7,#4]
 1413 0018 83F82820 	 strb r2,[r3,#40]
1734:C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc\xmc_sdmmc.h **** }
 1414              	 .loc 2 1734 0
 1415 001c 0C37     	 adds r7,r7,#12
 1416              	.LCFI157:
 1417              	 .cfi_def_cfa_offset 4
 1418 001e BD46     	 mov sp,r7
 1419              	.LCFI158:
 1420              	 .cfi_def_cfa_register 13
 1421              	 
 1422 0020 5DF8047B 	 ldr r7,[sp],#4
 1423              	.LCFI159:
 1424              	 .cfi_restore 7
 1425              	 .cfi_def_cfa_offset 0
 1426 0024 7047     	 bx lr
 1427              	 .cfi_endproc
 1428              	.LFE210:
 1430              	 .global sdmmc_block_command
 1431 0026 00BF     	 .section .rodata.sdmmc_block_command,"a",%progbits
 1432              	 .align 2
 1435              	sdmmc_block_command:
 1436 0000 00       	 .byte 0
 1437 0001 00       	 .byte 0
 1438 0002 09       	 .byte 9
 1439 0003 02       	 .byte 2
 1440 0004 1A       	 .byte 26
 1441 0005 03       	 .byte 3
 1442 0006 00       	 .byte 0
 1443 0007 04       	 .byte 4
 1444 0008 3A       	 .byte 58
 1445 0009 06       	 .byte 6
 1446 000a 1B       	 .byte 27
 1447 000b 07       	 .byte 7
 1448 000c 1A       	 .byte 26
 1449 000d 08       	 .byte 8
 1450 000e 09       	 .byte 9
 1451 000f 09       	 .byte 9
 1452 0010 09       	 .byte 9
 1453 0011 0A       	 .byte 10
 1454 0012 1B       	 .byte 27
 1455 0013 0C       	 .byte 12
 1456 0014 1A       	 .byte 26
 1457 0015 0D       	 .byte 13
 1458 0016 00       	 .byte 0
 1459 0017 0F       	 .byte 15
 1460 0018 1A       	 .byte 26
 1461 0019 10       	 .byte 16
 1462 001a 3A       	 .byte 58
 1463 001b 11       	 .byte 17
 1464 001c 3A       	 .byte 58
 1465 001d 12       	 .byte 18
 1466 001e 3A       	 .byte 58
 1467 001f 18       	 .byte 24
 1468 0020 3A       	 .byte 58
 1469 0021 19       	 .byte 25
 1470 0022 3A       	 .byte 58
 1471 0023 1B       	 .byte 27
 1472 0024 1A       	 .byte 26
 1473 0025 1C       	 .byte 28
 1474 0026 1A       	 .byte 26
 1475 0027 1D       	 .byte 29
 1476 0028 3A       	 .byte 58
 1477 0029 1E       	 .byte 30
 1478 002a 1A       	 .byte 26
 1479 002b 20       	 .byte 32
 1480 002c 1A       	 .byte 26
 1481 002d 21       	 .byte 33
 1482 002e 1B       	 .byte 27
 1483 002f 26       	 .byte 38
 1484 0030 3A       	 .byte 58
 1485 0031 2A       	 .byte 42
 1486 0032 1A       	 .byte 26
 1487 0033 37       	 .byte 55
 1488 0034 3A       	 .byte 58
 1489 0035 38       	 .byte 56
 1490 0036 1A       	 .byte 26
 1491 0037 06       	 .byte 6
 1492 0038 3A       	 .byte 58
 1493 0039 0D       	 .byte 13
 1494 003a 3A       	 .byte 58
 1495 003b 16       	 .byte 22
 1496 003c 1A       	 .byte 26
 1497 003d 17       	 .byte 23
 1498 003e 02       	 .byte 2
 1499 003f 29       	 .byte 41
 1500 0040 1A       	 .byte 26
 1501 0041 2A       	 .byte 42
 1502 0042 3A       	 .byte 58
 1503 0043 33       	 .byte 51
 1504 0044 12       	 .byte 18
 1505 0045 01       	 .byte 1
 1506 0046 1B       	 .byte 27
 1507 0047 05       	 .byte 5
 1508 0048 1B       	 .byte 27
 1509 0049 06       	 .byte 6
 1510 004a 3A       	 .byte 58
 1511 004b 08       	 .byte 8
 1512 004c 1A       	 .byte 26
 1513 004d 23       	 .byte 35
 1514 004e 1A       	 .byte 26
 1515 004f 24       	 .byte 36
 1516              	 .global sdmmc_block_sd_hash_table
 1517              	 .section .rodata.sdmmc_block_sd_hash_table,"a",%progbits
 1518              	 .align 2
 1521              	sdmmc_block_sd_hash_table:
 1522 0000 00       	 .byte 0
 1523 0001 FF       	 .byte -1
 1524 0002 01       	 .byte 1
 1525 0003 02       	 .byte 2
 1526 0004 03       	 .byte 3
 1527 0005 FF       	 .byte -1
 1528 0006 04       	 .byte 4
 1529 0007 05       	 .byte 5
 1530 0008 06       	 .byte 6
 1531 0009 07       	 .byte 7
 1532 000a 08       	 .byte 8
 1533 000b FF       	 .byte -1
 1534 000c 09       	 .byte 9
 1535 000d 0A       	 .byte 10
 1536 000e FF       	 .byte -1
 1537 000f 0B       	 .byte 11
 1538 0010 0C       	 .byte 12
 1539 0011 0D       	 .byte 13
 1540 0012 0E       	 .byte 14
 1541 0013 FF       	 .byte -1
 1542 0014 FF       	 .byte -1
 1543 0015 FF       	 .byte -1
 1544 0016 FF       	 .byte -1
 1545 0017 FF       	 .byte -1
 1546 0018 0F       	 .byte 15
 1547 0019 10       	 .byte 16
 1548 001a FF       	 .byte -1
 1549 001b 11       	 .byte 17
 1550 001c 12       	 .byte 18
 1551 001d 13       	 .byte 19
 1552 001e 14       	 .byte 20
 1553 001f FF       	 .byte -1
 1554 0020 15       	 .byte 21
 1555 0021 16       	 .byte 22
 1556 0022 FF       	 .byte -1
 1557 0023 FF       	 .byte -1
 1558 0024 FF       	 .byte -1
 1559 0025 FF       	 .byte -1
 1560 0026 17       	 .byte 23
 1561 0027 FF       	 .byte -1
 1562 0028 FF       	 .byte -1
 1563 0029 FF       	 .byte -1
 1564 002a 18       	 .byte 24
 1565 002b FF       	 .byte -1
 1566 002c FF       	 .byte -1
 1567 002d FF       	 .byte -1
 1568 002e FF       	 .byte -1
 1569 002f FF       	 .byte -1
 1570 0030 FF       	 .byte -1
 1571 0031 FF       	 .byte -1
 1572 0032 FF       	 .byte -1
 1573 0033 FF       	 .byte -1
 1574 0034 FF       	 .byte -1
 1575 0035 FF       	 .byte -1
 1576 0036 FF       	 .byte -1
 1577 0037 19       	 .byte 25
 1578 0038 1A       	 .byte 26
 1579 0039 FF       	 .byte -1
 1580 003a 1B       	 .byte 27
 1581 003b 1C       	 .byte 28
 1582 003c 1D       	 .byte 29
 1583 003d 1E       	 .byte 30
 1584 003e 1F       	 .byte 31
 1585 003f 20       	 .byte 32
 1586 0040 21       	 .byte 33
 1587 0041 000000   	 .section .text.SDMMC_BLOCK_SD_lReset,"ax",%progbits
 1588              	 .align 2
 1589              	 .thumb
 1590              	 .thumb_func
 1592              	SDMMC_BLOCK_SD_lReset:
 1593              	.LFB221:
 1594              	 .file 3 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c"
   1:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**
   2:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @file sdmmc_block_private_sd.c
   3:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @date 2017-06-08
   4:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
   5:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * NOTE:
   6:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * This file is generated by DAVE. Any manual modification done to this file will be lost when the 
   7:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
   8:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @cond
   9:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  10:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SDMMC_BLOCK v4.0.26 - Configures the SD host to interface with the SDMMC card.
  11:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  12:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Copyright (c) 2016-2018, Infineon Technologies AG
  13:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * All rights reserved.
  14:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  15:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  16:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * following conditions are met:
  17:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  18:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Redistributions of source code must retain the above copyright notice, this list of conditions
  19:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   disclaimer.
  20:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  21:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Redistributions in binary form must reproduce the above copyright notice, this list of conditi
  22:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   following disclaimer in the documentation and/or other materials provided with the distributio
  23:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  24:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   Neither the name of the copyright holders nor the names of its contributors may be used to end
  25:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *   products derived from this software without specific prior written permission.
  26:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  27:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  28:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  29:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  30:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  31:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  32:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  33:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  34:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  35:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  36:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * with Infineon Technologies AG (dave@infineon.com).
  37:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  38:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  39:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Change History
  40:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * --------------
  41:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  42:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-01-20:
  43:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Initial version. <br>
  44:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  45:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-02-08:
  46:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Help Doc updated. <br>
  47:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Bug fixes done.<br>
  48:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  49:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-04-05
  50:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Bug fixes for public release, April, 2016 <br>
  51:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - MISRA fixes <br>
  52:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Add timeout for erase() <br>
  53:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Check write protection in write/erase conditions <br>
  54:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Remove mode_init_flag check for functions invoked in IOCTL <br>
  55:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  56:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-07-20:
  57:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - lReadResponse(): Fixes in handling XMC_SDMMC_RESPONSE_TYPE_R2 <br>
  58:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  59:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2016-08-24:
  60:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Introduce timeout mechanism in SDMMC_BLOCK_SD_lCheckDataCommandLines() <br>
  61:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  62:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * 2017-06-08
  63:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *     - Fix SDMMC_BLOCK_SD_GetSectorCount() for Standard Capacity cards
  64:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  65:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * @endcond
  66:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
  67:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
  68:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  69:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #include "sdmmc_block_private_sd.h"
  70:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  71:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_SD
  72:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  73:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
  74:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * LOCAL ROUTINES
  75:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
  76:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  77:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
  78:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReset(SDMMC_BLOCK_t *const obj, uint32_t reset);
  79:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  80:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  81:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardCleanUp(SDMMC_BLOCK_t *const obj);
  82:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  83:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t
  84:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckDataCommandLines(SDMMC_BLOCK_t *const obj,
  85:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                       const XMC_SDMMC_COMMAND_t *cmd);
  86:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  87:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  88:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckArgumentError(const uint32_t *card_status, uint8_t *err);
  89:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  90:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  91:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckEraseError(const uint32_t *card_status, uint8_t *err);
  92:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  93:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
  94:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckCardError(const uint32_t *card_status, uint8_t *err);
  95:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  96:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
  97:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckErrorInResponse(const uint32_t *card_status);
  98:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
  99:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lGetCardLockState(SDMMC_BLOCK_t *const obj, uint32_t card_status, uint16_t cmd_index
 101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lTransferDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadResponse(SDMMC_BLOCK_t *const obj,
 107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              const XMC_SDMMC_COMMAND_t *cmd,
 108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              void *resp);
 110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSendCommand(SDMMC_BLOCK_t *const obj,
 113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             const XMC_SDMMC_COMMAND_t *cmd,
 114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             uint32_t arg,
 115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                             void *resp);
 117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSetVoltageWindow(SDMMC_BLOCK_t *const obj);
 120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lQueryOperatingCondition(SDMMC_BLOCK_t *const obj);
 123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lQueryVoltage(SDMMC_BLOCK_t *const obj, uint32_t arg);
 126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lAfterCardInitialize(SDMMC_BLOCK_t *const obj);
 129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lInitializeCard(SDMMC_BLOCK_t *const obj);
 132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lGetWriteProtect(SDMMC_BLOCK_t *const obj);
 135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
 138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              const XMC_SDMMC_COMMAND_t *cmd,
 139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              uint32_t arg,
 140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              uint16_t block_size);
 141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lMultiBlockTransfer(SDMMC_BLOCK_t *const obj,
 144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t *addr,
 145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t num_blocks,
 146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    const XMC_SDMMC_COMMAND_t *cmd,
 147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    uint32_t *buf,
 148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode);
 149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckLockStatus(SDMMC_BLOCK_t *const obj, SDMMC_BLOCK_CARD_LOCK_STATUS_t mode);
 152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
 154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchBusWidth(SDMMC_BLOCK_t *const obj);
 156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchSpeed(SDMMC_BLOCK_t *const obj);
 159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
 160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCommandDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSwitchToTransferState(SDMMC_BLOCK_t *const obj);
 166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lAcmdErrorRecovery(SDMMC_BLOCK_t *const obj);
 169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lStartTimer(SDMMC_BLOCK_t *const obj, uint32_t delay);
 172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
 175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                  uint32_t sector_num,
 176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                  uint32_t sector_count);
 177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lLocalErase(SDMMC_BLOCK_t *const obj,
 180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t start_addr,
 181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t end_addr,
 182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                            uint32_t timeout);
 183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lHostControllerInit(SDMMC_BLOCK_t *const obj);
 186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lHostControllerDeInit(SDMMC_BLOCK_t *const obj);
 189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
 192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t *read_buf,
 193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t read_addr,
 194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        uint32_t num_blocks);
 195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardReadSingleBlock(SDMMC_BLOCK_t *const obj,
 198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t *read_buf,
 199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t read_addr);
 200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(SDMMC_BLOCK_t *const obj,
 203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         const uint32_t *write_buf,
 204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         uint32_t write_addr,
 205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                         uint32_t num_blocks);
 206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lCardWriteSingleBlock(SDMMC_BLOCK_t *const obj,
 209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                      const uint32_t *write_buf,
 210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                      uint32_t write_addr);
 211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lDelay(SDMMC_BLOCK_t *const obj, uint32_t delay);
 214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t
 216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lStopTimer(SDMMC_BLOCK_t *const obj);
 217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void
 219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lWriteCardType(SDMMC_BLOCK_t *const obj);
 220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadRca(SDMMC_BLOCK_t *const obj);
 223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lReadCardRegisters(SDMMC_BLOCK_t *const obj);
 226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lDataTransfer(SDMMC_BLOCK_t *const obj,
 229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              uint32_t *buf,
 230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode,
 231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                              uint32_t quad_bytes);
 232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lErrorInterruptRecovery(SDMMC_BLOCK_t *const obj);
 237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t
 239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_lSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
 240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     const XMC_SDMMC_COMMAND_t *cmd,
 241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t arg,
 242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint16_t block_size,
 243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     uint32_t *buf,
 244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                     SDMMC_BLOCK_SD_DATA_TRANSFER_t transfer_mode);
 245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_Start(SDMMC_BLOCK_t *const obj);
 248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_NormalInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t int_status);
 251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t
 253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_SD_ErrorInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t int_status);
 254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * MACROS
 257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * DATA STRUCTURES
 261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Command Structure defining SD, MMC and Application specific commands */
 264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** const XMC_SDMMC_COMMAND_t sdmmc_block_command[40] =
 265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start: SD card commands */
 267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_GO_IDLE_STATE}},        /* 0 */
 268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_ALL_SEND_CID}},         /* 1 */
 269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SEND_RELATIVE_ADDR}},   /* 2 */
 270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_SET_DSR}},              /* 3 */
 271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SWITCH_FUNC}},          /* 4 */
 272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SELECT_DESELECT_CARD}}, /* 5 */
 273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SD_SEND_IF_COND}},      /* 6 */
 274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_SEND_CSD}},             /* 7 */
 275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{1U, 1U, 0U, 0U, 0U, SDMMC_BLOCK_SEND_CID}},             /* 8 */
 276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_STOP_TRANSMISSION}},    /* 9 */
 277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SEND_STATUS}},          /* 10 */
 278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{0U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_GO_INACTIVE_STATE}},    /* 11 */
 279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_BLOCKLEN}},         /* 12 */
 280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_READ_SINGLE_BLOCK}},    /* 13 */
 281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_READ_MULTIPLE_BLOCK}},  /* 14 */
 282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_WRITE_BLOCK}},          /* 15 */
 283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_WRITE_MULTIPLE_BLOCK}}, /* 16 */
 284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_PROGRAM_CSD}},          /* 17 */
 285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_WRITE_PROT}},       /* 18 */
 286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_CLR_WRITE_PROT}},       /* 19 */
 287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_WRITE_PROT}},      /* 20 */
 288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_WR_BLK_START}},   /* 21 */
 289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_WR_BLK_END}},     /* 22 */
 290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE}},                /* 23 */
 291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_LOCK_UNLOCK}},          /* 24 */
 292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_APP_CMD}},              /* 25 */
 293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_GEN_CMD}},              /* 26 */
 294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start: application specific commands */
 295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_BUS_WIDTH}},        /* 27 */
 296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SD_STATUS}},            /* 28 */
 297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_NUM_WR_BLOCKS}},   /* 29 */
 298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_WR_BLK_ERASE_COUNT}}, /* 30 */
 299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 0U, 0U, 0U, 0U, SDMMC_BLOCK_SD_SEND_OP_COND}},      /* 31 */
 300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SET_CLR_CARD_DETECT}},  /* 32 */
 301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_SEND_SCR}},             /* 33 */
 302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start of SDMMC_MMC Card specific commands */
 303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 0U, 1U, 0U, 0U, SDMMC_BLOCK_MMC_SEND_OP_COND}},     /* 34 */
 304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_MMC_SLEEP_AWAKE}},      /* 35 */
 305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{3U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_SWITCH_FUNC}},          /* 36 */
 306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 1U, 0U, SDMMC_BLOCK_MMC_SEND_EXT_CSD}},     /* 37 */
 307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_GROUP_START}},    /* 38 */
 308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {{2U, 1U, 1U, 0U, 0U, SDMMC_BLOCK_ERASE_GROUP_END}}       /* 39 */
 309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** };
 310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
 312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * SD card command index hash table
 313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * It contains the index of the command structure
 314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  *
 315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Array index 0-57 is for general SD commands and array
 316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * index 58-64 is for application specific commands.
 317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
 318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** const uint8_t sdmmc_block_sd_hash_table[65] =
 319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x00, (uint8_t)0xFF, (uint8_t)0x01, (uint8_t)0x02,
 321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x03, (uint8_t)0xFF, (uint8_t)0x04, (uint8_t)0x05,
 322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x06, (uint8_t)0x07, (uint8_t)0x08, (uint8_t)0xFF,
 323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x09, (uint8_t)0x0A, (uint8_t)0xFF, (uint8_t)0x0B,
 324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x0C, (uint8_t)0x0D, (uint8_t)0x0E, (uint8_t)0xFF,
 325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x0F, (uint8_t)0x10, (uint8_t)0xFF, (uint8_t)0x11,
 327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x12, (uint8_t)0x13, (uint8_t)0x14, (uint8_t)0xFF,
 328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x15, (uint8_t)0x16, (uint8_t)0xFF, (uint8_t)0xFF,
 329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x17, (uint8_t)0xFF,
 330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x18, (uint8_t)0xFF,
 331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF,
 333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0xFF, (uint8_t)0x19,
 334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x1A, (uint8_t)0xFF, (uint8_t)0x1B, (uint8_t)0x1C,
 335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x1D, (uint8_t)0x1E, (uint8_t)0x1F, (uint8_t)0x20,
 336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (uint8_t)0x21
 337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** };
 338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * EXTERNAL REFERENCES
 341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /**************************************************************************************************
 344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * API DEFINITIONS
 345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  **************************************************************************************************
 346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Resets the Host Controller's register */
 348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReset(SDMMC_BLOCK_t *const obj, uint32_t reset)
 349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1595              	 .loc 3 349 0
 1596              	 .cfi_startproc
 1597              	 
 1598              	 
 1599 0000 80B5     	 push {r7,lr}
 1600              	.LCFI160:
 1601              	 .cfi_def_cfa_offset 8
 1602              	 .cfi_offset 7,-8
 1603              	 .cfi_offset 14,-4
 1604 0002 84B0     	 sub sp,sp,#16
 1605              	.LCFI161:
 1606              	 .cfi_def_cfa_offset 24
 1607 0004 00AF     	 add r7,sp,#0
 1608              	.LCFI162:
 1609              	 .cfi_def_cfa_register 7
 1610 0006 7860     	 str r0,[r7,#4]
 1611 0008 3960     	 str r1,[r7]
 350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1612              	 .loc 3 350 0
 1613 000a 0023     	 movs r3,#0
 1614 000c FB73     	 strb r3,[r7,#15]
 351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetSWReset(obj->sdmmc_sd->sdmmc, reset);
 1615              	 .loc 3 352 0
 1616 000e 7B68     	 ldr r3,[r7,#4]
 1617 0010 1B68     	 ldr r3,[r3]
 1618 0012 1B68     	 ldr r3,[r3]
 1619 0014 1846     	 mov r0,r3
 1620 0016 3968     	 ldr r1,[r7]
 1621 0018 FFF7FEFF 	 bl XMC_SDMMC_SetSWReset
 353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_RESET_DELAY);
 1622              	 .loc 3 354 0
 1623 001c 7868     	 ldr r0,[r7,#4]
 1624 001e 1749     	 ldr r1,.L58
 1625 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 1626              	 .loc 3 355 0
 1627 0024 7B68     	 ldr r3,[r7,#4]
 1628 0026 1B68     	 ldr r3,[r3]
 1629 0028 5B6D     	 ldr r3,[r3,#84]
 1630 002a 002B     	 cmp r3,#0
 1631 002c 20D0     	 beq .L53
 1632              	.L56:
 356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 1633              	 .loc 3 359 0
 1634 002e 7B68     	 ldr r3,[r7,#4]
 1635 0030 1B68     	 ldr r3,[r3]
 1636 0032 93F85C30 	 ldrb r3,[r3,#92]
 1637 0036 DBB2     	 uxtb r3,r3
 1638 0038 83F00103 	 eor r3,r3,#1
 1639 003c DBB2     	 uxtb r3,r3
 1640 003e 002B     	 cmp r3,#0
 1641 0040 02D0     	 beq .L54
 360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 1642              	 .loc 3 361 0
 1643 0042 2E23     	 movs r3,#46
 1644 0044 FB73     	 strb r3,[r7,#15]
 362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 1645              	 .loc 3 362 0
 1646 0046 0AE0     	 b .L55
 1647              	.L54:
 363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (((uint32_t)XMC_SDMMC_GetSWResetStatus(obj->sdmmc_sd->sdmmc)) & (reset));
 1648              	 .loc 3 364 0
 1649 0048 7B68     	 ldr r3,[r7,#4]
 1650 004a 1B68     	 ldr r3,[r3]
 1651 004c 1B68     	 ldr r3,[r3]
 1652 004e 1846     	 mov r0,r3
 1653 0050 FFF7FEFF 	 bl XMC_SDMMC_GetSWResetStatus
 1654 0054 0246     	 mov r2,r0
 1655 0056 3B68     	 ldr r3,[r7]
 1656 0058 1340     	 ands r3,r3,r2
 1657 005a 002B     	 cmp r3,#0
 1658 005c E7D1     	 bne .L56
 1659              	.L55:
 365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 1660              	 .loc 3 367 0
 1661 005e 7868     	 ldr r0,[r7,#4]
 1662 0060 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 1663              	 .loc 3 368 0
 1664 0064 7B68     	 ldr r3,[r7,#4]
 1665 0066 1B68     	 ldr r3,[r3]
 1666 0068 5B6D     	 ldr r3,[r3,#84]
 1667 006a 1846     	 mov r0,r3
 1668 006c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 1669              	.L53:
 369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 1670              	 .loc 3 371 0
 1671 0070 FB7B     	 ldrb r3,[r7,#15]
 372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1672              	 .loc 3 372 0
 1673 0072 1846     	 mov r0,r3
 1674 0074 1037     	 adds r7,r7,#16
 1675              	.LCFI163:
 1676              	 .cfi_def_cfa_offset 8
 1677 0076 BD46     	 mov sp,r7
 1678              	.LCFI164:
 1679              	 .cfi_def_cfa_register 13
 1680              	 
 1681 0078 80BD     	 pop {r7,pc}
 1682              	.L59:
 1683 007a 00BF     	 .align 2
 1684              	.L58:
 1685 007c 20A10700 	 .word 500000
 1686              	 .cfi_endproc
 1687              	.LFE221:
 1689              	 .section .text.SDMMC_BLOCK_SD_lCardCleanUp,"ax",%progbits
 1690              	 .align 2
 1691              	 .thumb
 1692              	 .thumb_func
 1694              	SDMMC_BLOCK_SD_lCardCleanUp:
 1695              	.LFB222:
 373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Clears card specific structures and stops the SD clock */
 375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCardCleanUp(SDMMC_BLOCK_t *const obj)
 376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1696              	 .loc 3 376 0
 1697              	 .cfi_startproc
 1698              	 
 1699              	 
 1700 0000 80B5     	 push {r7,lr}
 1701              	.LCFI165:
 1702              	 .cfi_def_cfa_offset 8
 1703              	 .cfi_offset 7,-8
 1704              	 .cfi_offset 14,-4
 1705 0002 82B0     	 sub sp,sp,#8
 1706              	.LCFI166:
 1707              	 .cfi_def_cfa_offset 16
 1708 0004 00AF     	 add r7,sp,#0
 1709              	.LCFI167:
 1710              	 .cfi_def_cfa_register 7
 1711 0006 7860     	 str r0,[r7,#4]
 377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   memset((void *)&obj->sdmmc_sd->card_info, 0, sizeof(SDMMC_BLOCK_SD_CARD_INFORMATION_t));
 1712              	 .loc 3 377 0
 1713 0008 7B68     	 ldr r3,[r7,#4]
 1714 000a 1B68     	 ldr r3,[r3]
 1715 000c 2033     	 adds r3,r3,#32
 1716 000e 1846     	 mov r0,r3
 1717 0010 0021     	 movs r1,#0
 1718 0012 3022     	 movs r2,#48
 1719 0014 FFF7FEFF 	 bl memset
 378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->card_type = (uint8_t)0;
 1720              	 .loc 3 378 0
 1721 0018 7B68     	 ldr r3,[r7,#4]
 1722 001a 0022     	 movs r2,#0
 1723 001c 5A72     	 strb r2,[r3,#9]
 379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->f8 = (uint8_t)0;
 1724              	 .loc 3 379 0
 1725 001e 7B68     	 ldr r3,[r7,#4]
 1726 0020 1B68     	 ldr r3,[r3]
 1727 0022 0022     	 movs r2,#0
 1728 0024 83F85020 	 strb r2,[r3,#80]
 380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1729              	 .loc 3 380 0
 1730 0028 7B68     	 ldr r3,[r7,#4]
 1731 002a 1B68     	 ldr r3,[r3]
 1732 002c 0122     	 movs r2,#1
 1733 002e 5A76     	 strb r2,[r3,#25]
 381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1734              	 .loc 3 381 0
 1735 0030 7B68     	 ldr r3,[r7,#4]
 1736 0032 1B68     	 ldr r3,[r3]
 1737 0034 0122     	 movs r2,#1
 1738 0036 1A76     	 strb r2,[r3,#24]
 382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->err_recovery_stat = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1739              	 .loc 3 382 0
 1740 0038 7B68     	 ldr r3,[r7,#4]
 1741 003a 1B68     	 ldr r3,[r3]
 1742 003c 0122     	 movs r2,#1
 1743 003e 1A77     	 strb r2,[r3,#28]
 383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 1744              	 .loc 3 383 0
 1745 0040 7B68     	 ldr r3,[r7,#4]
 1746 0042 1B68     	 ldr r3,[r3]
 1747 0044 0122     	 movs r2,#1
 1748 0046 9A76     	 strb r2,[r3,#26]
 384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->card_state = (uint8_t)0U;
 1749              	 .loc 3 384 0
 1750 0048 7B68     	 ldr r3,[r7,#4]
 1751 004a 0022     	 movs r2,#0
 1752 004c 1A72     	 strb r2,[r3,#8]
 385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD clock disable */
 387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SDClockDisable(obj->sdmmc_sd->sdmmc);
 1753              	 .loc 3 387 0
 1754 004e 7B68     	 ldr r3,[r7,#4]
 1755 0050 1B68     	 ldr r3,[r3]
 1756 0052 1B68     	 ldr r3,[r3]
 1757 0054 1846     	 mov r0,r3
 1758 0056 FFF7FEFF 	 bl XMC_SDMMC_SDClockDisable
 388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1759              	 .loc 3 388 0
 1760 005a 0837     	 adds r7,r7,#8
 1761              	.LCFI168:
 1762              	 .cfi_def_cfa_offset 8
 1763 005c BD46     	 mov sp,r7
 1764              	.LCFI169:
 1765              	 .cfi_def_cfa_register 13
 1766              	 
 1767 005e 80BD     	 pop {r7,pc}
 1768              	 .cfi_endproc
 1769              	.LFE222:
 1771              	 .section .text.SDMMC_BLOCK_SD_lCheckDataCommandLines,"ax",%progbits
 1772              	 .align 2
 1773              	 .thumb
 1774              	 .thumb_func
 1776              	SDMMC_BLOCK_SD_lCheckDataCommandLines:
 1777              	.LFB223:
 389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check if CMD and DAT lines are free before issuing a command */
 391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t SDMMC_BLOCK_SD_lCheckDataCommandLines(SDMMC_BLOCK_t *const obj, const XMC_SDMMC_COM
 392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1778              	 .loc 3 392 0
 1779              	 .cfi_startproc
 1780              	 
 1781              	 
 1782 0000 80B5     	 push {r7,lr}
 1783              	.LCFI170:
 1784              	 .cfi_def_cfa_offset 8
 1785              	 .cfi_offset 7,-8
 1786              	 .cfi_offset 14,-4
 1787 0002 84B0     	 sub sp,sp,#16
 1788              	.LCFI171:
 1789              	 .cfi_def_cfa_offset 24
 1790 0004 00AF     	 add r7,sp,#0
 1791              	.LCFI172:
 1792              	 .cfi_def_cfa_register 7
 1793 0006 7860     	 str r0,[r7,#4]
 1794 0008 3960     	 str r1,[r7]
 393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_CMD_LINE_BUSY;
 1795              	 .loc 3 393 0
 1796 000a 1A23     	 movs r3,#26
 1797 000c FB60     	 str r3,[r7,#12]
 394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, SDMMC_BLOCK_DELAY_IN_COMMAND);
 1798              	 .loc 3 395 0
 1799 000e 7868     	 ldr r0,[r7,#4]
 1800 0010 4249     	 ldr r1,.L72
 1801 0012 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 1802 0016 0346     	 mov r3,r0
 1803 0018 FB60     	 str r3,[r7,#12]
 396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 1804              	 .loc 3 397 0
 1805 001a 7B68     	 ldr r3,[r7,#4]
 1806 001c 1B68     	 ldr r3,[r3]
 1807 001e 5B6D     	 ldr r3,[r3,#84]
 1808 0020 002B     	 cmp r3,#0
 1809 0022 27D0     	 beq .L62
 1810              	.L65:
 398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 1811              	 .loc 3 401 0
 1812 0024 7B68     	 ldr r3,[r7,#4]
 1813 0026 1B68     	 ldr r3,[r3]
 1814 0028 93F85C30 	 ldrb r3,[r3,#92]
 1815 002c DBB2     	 uxtb r3,r3
 1816 002e 83F00103 	 eor r3,r3,#1
 1817 0032 DBB2     	 uxtb r3,r3
 1818 0034 002B     	 cmp r3,#0
 1819 0036 02D0     	 beq .L63
 402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 1820              	 .loc 3 403 0
 1821 0038 2E23     	 movs r3,#46
 1822 003a FB60     	 str r3,[r7,#12]
 404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 1823              	 .loc 3 404 0
 1824 003c 11E0     	 b .L64
 1825              	.L63:
 405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) ||
 1826              	 .loc 3 406 0
 1827 003e 7B68     	 ldr r3,[r7,#4]
 1828 0040 1B68     	 ldr r3,[r3]
 1829 0042 1B68     	 ldr r3,[r3]
 1830 0044 1846     	 mov r0,r3
 1831 0046 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 1832 004a 0346     	 mov r3,r0
 407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 1833              	 .loc 3 407 0
 1834 004c 002B     	 cmp r3,#0
 1835 004e E9D1     	 bne .L65
 1836              	 .loc 3 407 0 is_stmt 0 discriminator 1
 1837 0050 7B68     	 ldr r3,[r7,#4]
 1838 0052 1B68     	 ldr r3,[r3]
 1839 0054 1B68     	 ldr r3,[r3]
 1840 0056 1846     	 mov r0,r3
 1841 0058 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 1842 005c 0346     	 mov r3,r0
 406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 1843              	 .loc 3 406 0 is_stmt 1 discriminator 1
 1844 005e 002B     	 cmp r3,#0
 1845 0060 E0D1     	 bne .L65
 1846              	.L64:
 408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 1847              	 .loc 3 410 0
 1848 0062 7868     	 ldr r0,[r7,#4]
 1849 0064 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 1850              	 .loc 3 411 0
 1851 0068 7B68     	 ldr r3,[r7,#4]
 1852 006a 1B68     	 ldr r3,[r3]
 1853 006c 5B6D     	 ldr r3,[r3,#84]
 1854 006e 1846     	 mov r0,r3
 1855 0070 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 1856              	.L62:
 412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if command line is not busy; then proceed */
 415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc) == false)
 1857              	 .loc 3 415 0
 1858 0074 7B68     	 ldr r3,[r7,#4]
 1859 0076 1B68     	 ldr r3,[r3]
 1860 0078 1B68     	 ldr r3,[r3]
 1861 007a 1846     	 mov r0,r3
 1862 007c FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 1863 0080 0346     	 mov r3,r0
 1864 0082 83F00103 	 eor r3,r3,#1
 1865 0086 DBB2     	 uxtb r3,r3
 1866 0088 002B     	 cmp r3,#0
 1867 008a 41D0     	 beq .L66
 416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 1868              	 .loc 3 417 0
 1869 008c 0023     	 movs r3,#0
 1870 008e FB60     	 str r3,[r7,#12]
 418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) ||
 1871              	 .loc 3 418 0
 1872 0090 3B68     	 ldr r3,[r7]
 1873 0092 1B78     	 ldrb r3,[r3]
 1874 0094 03F02003 	 and r3,r3,#32
 1875 0098 DBB2     	 uxtb r3,r3
 1876 009a 002B     	 cmp r3,#0
 1877 009c 0DD1     	 bne .L67
 419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->cmd_index == (uint32_t)SDMMC_BLOCK_SEND_STATUS) ||
 1878              	 .loc 3 419 0 discriminator 1
 1879 009e 3B68     	 ldr r3,[r7]
 1880 00a0 5B78     	 ldrb r3,[r3,#1]
 1881 00a2 03F03F03 	 and r3,r3,#63
 1882 00a6 DBB2     	 uxtb r3,r3
 418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) ||
 1883              	 .loc 3 418 0 discriminator 1
 1884 00a8 0D2B     	 cmp r3,#13
 1885 00aa 06D0     	 beq .L67
 420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->response_type_sel == (uint32_t)3U))
 1886              	 .loc 3 420 0
 1887 00ac 3B68     	 ldr r3,[r7]
 1888 00ae 1B78     	 ldrb r3,[r3]
 1889 00b0 03F00303 	 and r3,r3,#3
 1890 00b4 DBB2     	 uxtb r3,r3
 419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         ((uint32_t)cmd->cmd_index == (uint32_t)SDMMC_BLOCK_SEND_STATUS) ||
 1891              	 .loc 3 419 0
 1892 00b6 032B     	 cmp r3,#3
 1893 00b8 20D1     	 bne .L68
 1894              	.L67:
 421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) != false)
 1895              	 .loc 3 422 0
 1896 00ba 7B68     	 ldr r3,[r7,#4]
 1897 00bc 1B68     	 ldr r3,[r3]
 1898 00be 1B68     	 ldr r3,[r3]
 1899 00c0 1846     	 mov r0,r3
 1900 00c2 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 1901 00c6 0346     	 mov r3,r0
 1902 00c8 002B     	 cmp r3,#0
 1903 00ca 02D0     	 beq .L69
 423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_DATA_LINE_BUSY;
 1904              	 .loc 3 424 0
 1905 00cc 1B23     	 movs r3,#27
 1906 00ce FB60     	 str r3,[r7,#12]
 1907 00d0 14E0     	 b .L68
 1908              	.L69:
 425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
 427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (((uint32_t)cmd->dat_present_sel == (uint32_t)1U) || ((uint32_t)cmd->response_type_sel =
 1909              	 .loc 3 428 0
 1910 00d2 3B68     	 ldr r3,[r7]
 1911 00d4 1B78     	 ldrb r3,[r3]
 1912 00d6 03F02003 	 and r3,r3,#32
 1913 00da DBB2     	 uxtb r3,r3
 1914 00dc 002B     	 cmp r3,#0
 1915 00de 06D1     	 bne .L70
 1916              	 .loc 3 428 0 is_stmt 0 discriminator 1
 1917 00e0 3B68     	 ldr r3,[r7]
 1918 00e2 1B78     	 ldrb r3,[r3]
 1919 00e4 03F00303 	 and r3,r3,#3
 1920 00e8 DBB2     	 uxtb r3,r3
 1921 00ea 032B     	 cmp r3,#3
 1922 00ec 06D1     	 bne .L68
 1923              	.L70:
 429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Update data line state to active */
 431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 1924              	 .loc 3 431 0 is_stmt 1
 1925 00ee 7B68     	 ldr r3,[r7,#4]
 1926 00f0 1B7A     	 ldrb r3,[r3,#8]
 1927 00f2 43F02003 	 orr r3,r3,#32
 1928 00f6 DAB2     	 uxtb r2,r3
 1929 00f8 7B68     	 ldr r3,[r7,#4]
 1930 00fa 1A72     	 strb r2,[r3,#8]
 1931              	.L68:
 432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == (uint32_t)SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 1932              	 .loc 3 436 0
 1933 00fc FB68     	 ldr r3,[r7,#12]
 1934 00fe 002B     	 cmp r3,#0
 1935 0100 06D1     	 bne .L66
 437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Update command line state to active */
 439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 1936              	 .loc 3 439 0
 1937 0102 7B68     	 ldr r3,[r7,#4]
 1938 0104 1B7A     	 ldrb r3,[r3,#8]
 1939 0106 43F01003 	 orr r3,r3,#16
 1940 010a DAB2     	 uxtb r2,r3
 1941 010c 7B68     	 ldr r3,[r7,#4]
 1942 010e 1A72     	 strb r2,[r3,#8]
 1943              	.L66:
 440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 1944              	 .loc 3 443 0
 1945 0110 FB68     	 ldr r3,[r7,#12]
 444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 1946              	 .loc 3 444 0
 1947 0112 1846     	 mov r0,r3
 1948 0114 1037     	 adds r7,r7,#16
 1949              	.LCFI173:
 1950              	 .cfi_def_cfa_offset 8
 1951 0116 BD46     	 mov sp,r7
 1952              	.LCFI174:
 1953              	 .cfi_def_cfa_register 13
 1954              	 
 1955 0118 80BD     	 pop {r7,pc}
 1956              	.L73:
 1957 011a 00BF     	 .align 2
 1958              	.L72:
 1959 011c 40420F00 	 .word 1000000
 1960              	 .cfi_endproc
 1961              	.LFE223:
 1963              	 .section .text.SDMMC_BLOCK_SD_lCheckArgumentError,"ax",%progbits
 1964              	 .align 2
 1965              	 .thumb
 1966              	 .thumb_func
 1968              	SDMMC_BLOCK_SD_lCheckArgumentError:
 1969              	.LFB224:
 445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check response error types in command's arguments category */
 447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckArgumentError(const uint32_t *card_status, uint8_t *err)
 448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 1970              	 .loc 3 448 0
 1971              	 .cfi_startproc
 1972              	 
 1973              	 
 1974              	 
 1975 0000 80B4     	 push {r7}
 1976              	.LCFI175:
 1977              	 .cfi_def_cfa_offset 4
 1978              	 .cfi_offset 7,-4
 1979 0002 83B0     	 sub sp,sp,#12
 1980              	.LCFI176:
 1981              	 .cfi_def_cfa_offset 16
 1982 0004 00AF     	 add r7,sp,#0
 1983              	.LCFI177:
 1984              	 .cfi_def_cfa_register 7
 1985 0006 7860     	 str r0,[r7,#4]
 1986 0008 3960     	 str r1,[r7]
 449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_OUT_OF_RANGE_BITMASK) != (uint32_t)0U)
 1987              	 .loc 3 449 0
 1988 000a 7B68     	 ldr r3,[r7,#4]
 1989 000c 1B68     	 ldr r3,[r3]
 1990 000e 002B     	 cmp r3,#0
 1991 0010 02DA     	 bge .L75
 450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 1992              	 .loc 3 451 0
 1993 0012 3B68     	 ldr r3,[r7]
 1994 0014 0122     	 movs r2,#1
 1995 0016 1A70     	 strb r2,[r3]
 1996              	.L75:
 452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Out of range error");
 453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ADDRESS_ERROR_BITMASK) != (uint32_t)0U)
 1997              	 .loc 3 455 0
 1998 0018 7B68     	 ldr r3,[r7,#4]
 1999 001a 1B68     	 ldr r3,[r3]
 2000 001c 03F08043 	 and r3,r3,#1073741824
 2001 0020 002B     	 cmp r3,#0
 2002 0022 02D0     	 beq .L76
 456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2003              	 .loc 3 457 0
 2004 0024 3B68     	 ldr r3,[r7]
 2005 0026 0122     	 movs r2,#1
 2006 0028 1A70     	 strb r2,[r3]
 2007              	.L76:
 458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Address error");
 459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_BLOCK_LEN_ERROR_BITMASK) != (uint32_t)0U)
 2008              	 .loc 3 461 0
 2009 002a 7B68     	 ldr r3,[r7,#4]
 2010 002c 1B68     	 ldr r3,[r3]
 2011 002e 03F00053 	 and r3,r3,#536870912
 2012 0032 002B     	 cmp r3,#0
 2013 0034 02D0     	 beq .L77
 462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2014              	 .loc 3 463 0
 2015 0036 3B68     	 ldr r3,[r7]
 2016 0038 0122     	 movs r2,#1
 2017 003a 1A70     	 strb r2,[r3]
 2018              	.L77:
 464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Block length error");
 465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_WP_VIOLATION_BITMASK) != (uint32_t)0U)
 2019              	 .loc 3 467 0
 2020 003c 7B68     	 ldr r3,[r7,#4]
 2021 003e 1B68     	 ldr r3,[r3]
 2022 0040 03F08063 	 and r3,r3,#67108864
 2023 0044 002B     	 cmp r3,#0
 2024 0046 02D0     	 beq .L74
 468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2025              	 .loc 3 469 0
 2026 0048 3B68     	 ldr r3,[r7]
 2027 004a 0122     	 movs r2,#1
 2028 004c 1A70     	 strb r2,[r3]
 2029              	.L74:
 470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckArgumentError: Write protection violation error");
 471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2030              	 .loc 3 472 0
 2031 004e 0C37     	 adds r7,r7,#12
 2032              	.LCFI178:
 2033              	 .cfi_def_cfa_offset 4
 2034 0050 BD46     	 mov sp,r7
 2035              	.LCFI179:
 2036              	 .cfi_def_cfa_register 13
 2037              	 
 2038 0052 5DF8047B 	 ldr r7,[sp],#4
 2039              	.LCFI180:
 2040              	 .cfi_restore 7
 2041              	 .cfi_def_cfa_offset 0
 2042 0056 7047     	 bx lr
 2043              	 .cfi_endproc
 2044              	.LFE224:
 2046              	 .section .text.SDMMC_BLOCK_SD_lCheckEraseError,"ax",%progbits
 2047              	 .align 2
 2048              	 .thumb
 2049              	 .thumb_func
 2051              	SDMMC_BLOCK_SD_lCheckEraseError:
 2052              	.LFB225:
 473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Checks response error types in erase category */
 475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckEraseError(const uint32_t *card_status, uint8_t *err)
 476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2053              	 .loc 3 476 0
 2054              	 .cfi_startproc
 2055              	 
 2056              	 
 2057              	 
 2058 0000 80B4     	 push {r7}
 2059              	.LCFI181:
 2060              	 .cfi_def_cfa_offset 4
 2061              	 .cfi_offset 7,-4
 2062 0002 83B0     	 sub sp,sp,#12
 2063              	.LCFI182:
 2064              	 .cfi_def_cfa_offset 16
 2065 0004 00AF     	 add r7,sp,#0
 2066              	.LCFI183:
 2067              	 .cfi_def_cfa_register 7
 2068 0006 7860     	 str r0,[r7,#4]
 2069 0008 3960     	 str r1,[r7]
 477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* An error in the sequence of erase commands occurred.*/
 478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERASE_SEQ_ERROR_BITMASK) != (uint32_t)0)
 2070              	 .loc 3 478 0
 2071 000a 7B68     	 ldr r3,[r7,#4]
 2072 000c 1B68     	 ldr r3,[r3]
 2073 000e 03F08053 	 and r3,r3,#268435456
 2074 0012 002B     	 cmp r3,#0
 2075 0014 02D0     	 beq .L80
 479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2076              	 .loc 3 480 0
 2077 0016 3B68     	 ldr r3,[r7]
 2078 0018 0122     	 movs r2,#1
 2079 001a 1A70     	 strb r2,[r3]
 2080              	.L80:
 481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Sequential erase error");
 482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* An invalid selection of write-blocks for erase occurred */
 485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERASE_PARAM_BITMASK) != (uint32_t)0)
 2081              	 .loc 3 485 0
 2082 001c 7B68     	 ldr r3,[r7,#4]
 2083 001e 1B68     	 ldr r3,[r3]
 2084 0020 03F00063 	 and r3,r3,#134217728
 2085 0024 002B     	 cmp r3,#0
 2086 0026 02D0     	 beq .L81
 486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2087              	 .loc 3 487 0
 2088 0028 3B68     	 ldr r3,[r7]
 2089 002a 0122     	 movs r2,#1
 2090 002c 1A70     	 strb r2,[r3]
 2091              	.L81:
 488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Parameter erase error");
 489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Set when only partial address space was erased due to existing
 493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * write protected blocks OR the temporary/permanent write protected card
 494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * was erased
 495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_WP_ERASE_SKIP_BITMASK) != (uint32_t)0)
 2092              	 .loc 3 496 0
 2093 002e 7B68     	 ldr r3,[r7,#4]
 2094 0030 1B68     	 ldr r3,[r3]
 2095 0032 03F40043 	 and r3,r3,#32768
 2096 0036 002B     	 cmp r3,#0
 2097 0038 02D0     	 beq .L79
 497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2098              	 .loc 3 498 0
 2099 003a 3B68     	 ldr r3,[r7]
 2100 003c 0122     	 movs r2,#1
 2101 003e 1A70     	 strb r2,[r3]
 2102              	.L79:
 499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckEraseError: Write protection erase skip error");
 500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2103              	 .loc 3 501 0
 2104 0040 0C37     	 adds r7,r7,#12
 2105              	.LCFI184:
 2106              	 .cfi_def_cfa_offset 4
 2107 0042 BD46     	 mov sp,r7
 2108              	.LCFI185:
 2109              	 .cfi_def_cfa_register 13
 2110              	 
 2111 0044 5DF8047B 	 ldr r7,[sp],#4
 2112              	.LCFI186:
 2113              	 .cfi_restore 7
 2114              	 .cfi_def_cfa_offset 0
 2115 0048 7047     	 bx lr
 2116              	 .cfi_endproc
 2117              	.LFE225:
 2119 004a 00BF     	 .section .text.SDMMC_BLOCK_SD_lCheckCardError,"ax",%progbits
 2120              	 .align 2
 2121              	 .thumb
 2122              	 .thumb_func
 2124              	SDMMC_BLOCK_SD_lCheckCardError:
 2125              	.LFB226:
 502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check response error types in card's internal error category */
 504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lCheckCardError(const uint32_t *card_status, uint8_t *err)
 505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2126              	 .loc 3 505 0
 2127              	 .cfi_startproc
 2128              	 
 2129              	 
 2130              	 
 2131 0000 80B4     	 push {r7}
 2132              	.LCFI187:
 2133              	 .cfi_def_cfa_offset 4
 2134              	 .cfi_offset 7,-4
 2135 0002 83B0     	 sub sp,sp,#12
 2136              	.LCFI188:
 2137              	 .cfi_def_cfa_offset 16
 2138 0004 00AF     	 add r7,sp,#0
 2139              	.LCFI189:
 2140              	 .cfi_def_cfa_register 7
 2141 0006 7860     	 str r0,[r7,#4]
 2142 0008 3960     	 str r1,[r7]
 506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card internal ECC was applied but failed to correct the data */
 507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_ECC_FAILED_BITMASK) != (uint32_t)0U)
 2143              	 .loc 3 507 0
 2144 000a 7B68     	 ldr r3,[r7,#4]
 2145 000c 1B68     	 ldr r3,[r3]
 2146 000e 03F40013 	 and r3,r3,#2097152
 2147 0012 002B     	 cmp r3,#0
 2148 0014 02D0     	 beq .L84
 508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2149              	 .loc 3 509 0
 2150 0016 3B68     	 ldr r3,[r7]
 2151 0018 0122     	 movs r2,#1
 2152 001a 1A70     	 strb r2,[r3]
 2153              	.L84:
 510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Card ECC error");
 511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Internal card controller error */
 514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CC_ERROR_BITMASK) != (uint32_t)0)
 2154              	 .loc 3 514 0
 2155 001c 7B68     	 ldr r3,[r7,#4]
 2156 001e 1B68     	 ldr r3,[r3]
 2157 0020 03F48013 	 and r3,r3,#1048576
 2158 0024 002B     	 cmp r3,#0
 2159 0026 02D0     	 beq .L85
 515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2160              	 .loc 3 516 0
 2161 0028 3B68     	 ldr r3,[r7]
 2162 002a 0122     	 movs r2,#1
 2163 002c 1A70     	 strb r2,[r3]
 2164              	.L85:
 517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Internal card controller error");
 518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* A general or an unknown error occurred during the operation */
 521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ERROR_BITMASK) != (uint32_t)0)
 2165              	 .loc 3 521 0
 2166 002e 7B68     	 ldr r3,[r7,#4]
 2167 0030 1B68     	 ldr r3,[r3]
 2168 0032 03F40023 	 and r3,r3,#524288
 2169 0036 002B     	 cmp r3,#0
 2170 0038 02D0     	 beq .L83
 522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *err = (uint8_t)1U;
 2171              	 .loc 3 523 0
 2172 003a 3B68     	 ldr r3,[r7]
 2173 003c 0122     	 movs r2,#1
 2174 003e 1A70     	 strb r2,[r3]
 2175              	.L83:
 524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckCardError: Unknown error");
 525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2176              	 .loc 3 526 0
 2177 0040 0C37     	 adds r7,r7,#12
 2178              	.LCFI190:
 2179              	 .cfi_def_cfa_offset 4
 2180 0042 BD46     	 mov sp,r7
 2181              	.LCFI191:
 2182              	 .cfi_def_cfa_register 13
 2183              	 
 2184 0044 5DF8047B 	 ldr r7,[sp],#4
 2185              	.LCFI192:
 2186              	 .cfi_restore 7
 2187              	 .cfi_def_cfa_offset 0
 2188 0048 7047     	 bx lr
 2189              	 .cfi_endproc
 2190              	.LFE226:
 2192 004a 00BF     	 .section .text.SDMMC_BLOCK_SD_lCheckErrorInResponse,"ax",%progbits
 2193              	 .align 2
 2194              	 .thumb
 2195              	 .thumb_func
 2197              	SDMMC_BLOCK_SD_lCheckErrorInResponse:
 2198              	.LFB227:
 527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check for any error in the command's (received) response */
 529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckErrorInResponse(const uint32_t *card_status)
 530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2199              	 .loc 3 530 0
 2200              	 .cfi_startproc
 2201              	 
 2202              	 
 2203 0000 80B5     	 push {r7,lr}
 2204              	.LCFI193:
 2205              	 .cfi_def_cfa_offset 8
 2206              	 .cfi_offset 7,-8
 2207              	 .cfi_offset 14,-4
 2208 0002 84B0     	 sub sp,sp,#16
 2209              	.LCFI194:
 2210              	 .cfi_def_cfa_offset 24
 2211 0004 00AF     	 add r7,sp,#0
 2212              	.LCFI195:
 2213              	 .cfi_def_cfa_register 7
 2214 0006 7860     	 str r0,[r7,#4]
 531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2215              	 .loc 3 531 0
 2216 0008 0023     	 movs r3,#0
 2217 000a FB73     	 strb r3,[r7,#15]
 532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t err = (uint8_t)0; /* No error */
 2218              	 .loc 3 532 0
 2219 000c 0023     	 movs r3,#0
 2220 000e BB73     	 strb r3,[r7,#14]
 533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors in arguments */
 535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckArgumentError(card_status, &err);
 2221              	 .loc 3 535 0
 2222 0010 07F10E03 	 add r3,r7,#14
 2223 0014 7868     	 ldr r0,[r7,#4]
 2224 0016 1946     	 mov r1,r3
 2225 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckArgumentError
 536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors specific to erase operation */
 538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckEraseError(card_status, &err);
 2226              	 .loc 3 538 0
 2227 001c 07F10E03 	 add r3,r7,#14
 2228 0020 7868     	 ldr r0,[r7,#4]
 2229 0022 1946     	 mov r1,r3
 2230 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckEraseError
 539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check errors specific to the card */
 541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SD_lCheckCardError(card_status, &err);
 2231              	 .loc 3 541 0
 2232 0028 07F10E03 	 add r3,r7,#14
 2233 002c 7868     	 ldr r0,[r7,#4]
 2234 002e 1946     	 mov r1,r3
 2235 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckCardError
 542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Set when a sequence or password error has been detected in
 545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * lock/unlock card command
 546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_LOCK_UNLOCK_FAILED_BITMASK) != (uint32_t)0)
 2236              	 .loc 3 547 0
 2237 0034 7B68     	 ldr r3,[r7,#4]
 2238 0036 1B68     	 ldr r3,[r3]
 2239 0038 03F08073 	 and r3,r3,#16777216
 2240 003c 002B     	 cmp r3,#0
 2241 003e 01D0     	 beq .L88
 548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2242              	 .loc 3 549 0
 2243 0040 0123     	 movs r3,#1
 2244 0042 BB73     	 strb r3,[r7,#14]
 2245              	.L88:
 550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: Lock/unlock error");
 551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
 554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Can be one of the following errors:
 555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * 1) The read only section of the CSD does not match the card content
 556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * 2) An attempt to reverse the copy or permanent WP bits was made
 557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
 558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CSD_OVERWRITE_BITMASK) != (uint32_t)0)
 2246              	 .loc 3 558 0
 2247 0044 7B68     	 ldr r3,[r7,#4]
 2248 0046 1B68     	 ldr r3,[r3]
 2249 0048 03F48033 	 and r3,r3,#65536
 2250 004c 002B     	 cmp r3,#0
 2251 004e 01D0     	 beq .L89
 559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2252              	 .loc 3 560 0
 2253 0050 0123     	 movs r3,#1
 2254 0052 BB73     	 strb r3,[r7,#14]
 2255              	.L89:
 561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: CSD overwrite error");
 562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Error in the sequence of the authentication process */
 565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((*card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_ASK_SEQ_ERROR_BITMASK) != (uint32_t)0)
 2256              	 .loc 3 565 0
 2257 0054 7B68     	 ldr r3,[r7,#4]
 2258 0056 1B68     	 ldr r3,[r3]
 2259 0058 03F00803 	 and r3,r3,#8
 2260 005c 002B     	 cmp r3,#0
 2261 005e 01D0     	 beq .L90
 566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     err = (uint8_t)1;
 2262              	 .loc 3 567 0
 2263 0060 0123     	 movs r3,#1
 2264 0062 BB73     	 strb r3,[r7,#14]
 2265              	.L90:
 568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_DEBUG("SDMMC_BLOCK_SD_CheckErrorInResponse: Authentication sequence error");
 569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Some SD cards treat CMD55 as an illegal command */
 572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (err == 1U)
 2266              	 .loc 3 572 0
 2267 0064 BB7B     	 ldrb r3,[r7,#14]
 2268 0066 012B     	 cmp r3,#1
 2269 0068 01D1     	 bne .L91
 573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2270              	 .loc 3 574 0
 2271 006a 0123     	 movs r3,#1
 2272 006c FB73     	 strb r3,[r7,#15]
 2273              	.L91:
 575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2274              	 .loc 3 577 0
 2275 006e FB7B     	 ldrb r3,[r7,#15]
 578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2276              	 .loc 3 578 0
 2277 0070 1846     	 mov r0,r3
 2278 0072 1037     	 adds r7,r7,#16
 2279              	.LCFI196:
 2280              	 .cfi_def_cfa_offset 8
 2281 0074 BD46     	 mov sp,r7
 2282              	.LCFI197:
 2283              	 .cfi_def_cfa_register 13
 2284              	 
 2285 0076 80BD     	 pop {r7,pc}
 2286              	 .cfi_endproc
 2287              	.LFE227:
 2289              	 .section .text.SDMMC_BLOCK_SD_lGetCardLockState,"ax",%progbits
 2290              	 .align 2
 2291              	 .thumb
 2292              	 .thumb_func
 2294              	SDMMC_BLOCK_SD_lGetCardLockState:
 2295              	.LFB228:
 579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check for lock status of SD card */
 581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lGetCardLockState(SDMMC_BLOCK_t *const obj, uint32_t card_status, uint16
 582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2296              	 .loc 3 582 0
 2297              	 .cfi_startproc
 2298              	 
 2299              	 
 2300              	 
 2301 0000 80B4     	 push {r7}
 2302              	.LCFI198:
 2303              	 .cfi_def_cfa_offset 4
 2304              	 .cfi_offset 7,-4
 2305 0002 85B0     	 sub sp,sp,#20
 2306              	.LCFI199:
 2307              	 .cfi_def_cfa_offset 24
 2308 0004 00AF     	 add r7,sp,#0
 2309              	.LCFI200:
 2310              	 .cfi_def_cfa_register 7
 2311 0006 F860     	 str r0,[r7,#12]
 2312 0008 B960     	 str r1,[r7,#8]
 2313 000a 1346     	 mov r3,r2
 2314 000c FB80     	 strh r3,[r7,#6]
 583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_IS_LOCKED_BITMASK) != (uint32_t)0) &&
 2315              	 .loc 3 583 0
 2316 000e BB68     	 ldr r3,[r7,#8]
 2317 0010 03F00073 	 and r3,r3,#33554432
 2318 0014 002B     	 cmp r3,#0
 2319 0016 0AD0     	 beq .L94
 2320              	 .loc 3 583 0 is_stmt 0 discriminator 1
 2321 0018 FB88     	 ldrh r3,[r7,#6]
 2322 001a 032B     	 cmp r3,#3
 2323 001c 07D0     	 beq .L94
 584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (cmd_index != (uint32_t)SDMMC_BLOCK_SEND_RELATIVE_ADDR))
 585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 2324              	 .loc 3 586 0 is_stmt 1
 2325 001e FB68     	 ldr r3,[r7,#12]
 2326 0020 1B7A     	 ldrb r3,[r3,#8]
 2327 0022 43F00803 	 orr r3,r3,#8
 2328 0026 DAB2     	 uxtb r2,r3
 2329 0028 FB68     	 ldr r3,[r7,#12]
 2330 002a 1A72     	 strb r2,[r3,#8]
 2331 002c 06E0     	 b .L93
 2332              	.L94:
 587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 2333              	 .loc 3 590 0
 2334 002e FB68     	 ldr r3,[r7,#12]
 2335 0030 1B7A     	 ldrb r3,[r3,#8]
 2336 0032 23F00803 	 bic r3,r3,#8
 2337 0036 DAB2     	 uxtb r2,r3
 2338 0038 FB68     	 ldr r3,[r7,#12]
 2339 003a 1A72     	 strb r2,[r3,#8]
 2340              	.L93:
 591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2341              	 .loc 3 592 0
 2342 003c 1437     	 adds r7,r7,#20
 2343              	.LCFI201:
 2344              	 .cfi_def_cfa_offset 4
 2345 003e BD46     	 mov sp,r7
 2346              	.LCFI202:
 2347              	 .cfi_def_cfa_register 13
 2348              	 
 2349 0040 5DF8047B 	 ldr r7,[sp],#4
 2350              	.LCFI203:
 2351              	 .cfi_restore 7
 2352              	 .cfi_def_cfa_offset 0
 2353 0044 7047     	 bx lr
 2354              	 .cfi_endproc
 2355              	.LFE228:
 2357 0046 00BF     	 .section .text.SDMMC_BLOCK_SD_lTransferDelay,"ax",%progbits
 2358              	 .align 2
 2359              	 .thumb
 2360              	 .thumb_func
 2362              	SDMMC_BLOCK_SD_lTransferDelay:
 2363              	.LFB229:
 593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Provide transfer delay */
 595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lTransferDelay(SDMMC_BLOCK_t *const obj, uint32_t d
 596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2364              	 .loc 3 596 0
 2365              	 .cfi_startproc
 2366              	 
 2367              	 
 2368 0000 80B5     	 push {r7,lr}
 2369              	.LCFI204:
 2370              	 .cfi_def_cfa_offset 8
 2371              	 .cfi_offset 7,-8
 2372              	 .cfi_offset 14,-4
 2373 0002 84B0     	 sub sp,sp,#16
 2374              	.LCFI205:
 2375              	 .cfi_def_cfa_offset 24
 2376 0004 00AF     	 add r7,sp,#0
 2377              	.LCFI206:
 2378              	 .cfi_def_cfa_register 7
 2379 0006 7860     	 str r0,[r7,#4]
 2380 0008 3960     	 str r1,[r7]
 597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2381              	 .loc 3 597 0
 2382 000a 0023     	 movs r3,#0
 2383 000c FB73     	 strb r3,[r7,#15]
 598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1;
 2384              	 .loc 3 598 0
 2385 000e 7B68     	 ldr r3,[r7,#4]
 2386 0010 1B68     	 ldr r3,[r3]
 2387 0012 0122     	 movs r2,#1
 2388 0014 83F85C20 	 strb r2,[r3,#92]
 599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Start timer */
 601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStartTimer(obj, delay);
 2389              	 .loc 3 601 0
 2390 0018 7868     	 ldr r0,[r7,#4]
 2391 001a 3968     	 ldr r1,[r7]
 2392 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id == 0U)
 2393              	 .loc 3 602 0
 2394 0020 7B68     	 ldr r3,[r7,#4]
 2395 0022 1B68     	 ldr r3,[r3]
 2396 0024 5B6D     	 ldr r3,[r3,#84]
 2397 0026 002B     	 cmp r3,#0
 2398 0028 01D1     	 bne .L97
 603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 2399              	 .loc 3 604 0
 2400 002a 3123     	 movs r3,#49
 2401 002c FB73     	 strb r3,[r7,#15]
 2402              	.L97:
 605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED)
 2403              	 .loc 3 607 0
 2404 002e FB7B     	 ldrb r3,[r7,#15]
 2405 0030 312B     	 cmp r3,#49
 2406 0032 1ED0     	 beq .L98
 2407              	.L101:
 608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
 610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 2408              	 .loc 3 611 0
 2409 0034 7B68     	 ldr r3,[r7,#4]
 2410 0036 1B68     	 ldr r3,[r3]
 2411 0038 93F85C30 	 ldrb r3,[r3,#92]
 2412 003c DBB2     	 uxtb r3,r3
 2413 003e 83F00103 	 eor r3,r3,#1
 2414 0042 DBB2     	 uxtb r3,r3
 2415 0044 002B     	 cmp r3,#0
 2416 0046 02D0     	 beq .L99
 612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 2417              	 .loc 3 613 0
 2418 0048 2E23     	 movs r3,#46
 2419 004a FB73     	 strb r3,[r7,#15]
 614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2420              	 .loc 3 614 0
 2421 004c 04E0     	 b .L100
 2422              	.L99:
 615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (obj->sdmmc_sd->isr_context.transfer_flag == (uint8_t)0U);
 2423              	 .loc 3 616 0
 2424 004e 7B68     	 ldr r3,[r7,#4]
 2425 0050 1B68     	 ldr r3,[r3]
 2426 0052 1B7A     	 ldrb r3,[r3,#8]
 2427 0054 002B     	 cmp r3,#0
 2428 0056 EDD0     	 beq .L101
 2429              	.L100:
 617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)0U;
 2430              	 .loc 3 618 0
 2431 0058 7B68     	 ldr r3,[r7,#4]
 2432 005a 1B68     	 ldr r3,[r3]
 2433 005c 0022     	 movs r2,#0
 2434 005e 1A72     	 strb r2,[r3,#8]
 619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
 621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 2435              	 .loc 3 621 0
 2436 0060 7868     	 ldr r0,[r7,#4]
 2437 0062 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 2438              	 .loc 3 622 0
 2439 0066 7B68     	 ldr r3,[r7,#4]
 2440 0068 1B68     	 ldr r3,[r3]
 2441 006a 5B6D     	 ldr r3,[r3,#84]
 2442 006c 1846     	 mov r0,r3
 2443 006e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 2444              	.L98:
 623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->transfer_int_err != SDMMC_BLOCK_MODE_STATUS_TRANSFER_COMPLETE)
 2445              	 .loc 3 625 0
 2446 0072 7B68     	 ldr r3,[r7,#4]
 2447 0074 1B68     	 ldr r3,[r3]
 2448 0076 9B7E     	 ldrb r3,[r3,#26]
 2449 0078 1F2B     	 cmp r3,#31
 2450 007a 03D0     	 beq .L102
 626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->data_int_err;
 2451              	 .loc 3 627 0
 2452 007c 7B68     	 ldr r3,[r7,#4]
 2453 007e 1B68     	 ldr r3,[r3]
 2454 0080 1B7E     	 ldrb r3,[r3,#24]
 2455 0082 FB73     	 strb r3,[r7,#15]
 2456              	.L102:
 628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2457              	 .loc 3 630 0
 2458 0084 FB7B     	 ldrb r3,[r7,#15]
 631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2459              	 .loc 3 631 0
 2460 0086 1846     	 mov r0,r3
 2461 0088 1037     	 adds r7,r7,#16
 2462              	.LCFI207:
 2463              	 .cfi_def_cfa_offset 8
 2464 008a BD46     	 mov sp,r7
 2465              	.LCFI208:
 2466              	 .cfi_def_cfa_register 13
 2467              	 
 2468 008c 80BD     	 pop {r7,pc}
 2469              	 .cfi_endproc
 2470              	.LFE229:
 2472 008e 00BF     	 .section .text.SDMMC_BLOCK_SD_lReadResponse,"ax",%progbits
 2473              	 .align 2
 2474              	 .thumb
 2475              	 .thumb_func
 2477              	SDMMC_BLOCK_SD_lReadResponse:
 2478              	.LFB230:
 632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read response received for the command issued */
 634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadResponse(SDMMC_BLOCK_t *const obj,
 635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               const XMC_SDMMC_COMMAND_t *cmd,
 636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               void *resp)
 638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2479              	 .loc 3 638 0
 2480              	 .cfi_startproc
 2481              	 
 2482              	 
 2483 0000 80B5     	 push {r7,lr}
 2484              	.LCFI209:
 2485              	 .cfi_def_cfa_offset 8
 2486              	 .cfi_offset 7,-8
 2487              	 .cfi_offset 14,-4
 2488 0002 8AB0     	 sub sp,sp,#40
 2489              	.LCFI210:
 2490              	 .cfi_def_cfa_offset 48
 2491 0004 00AF     	 add r7,sp,#0
 2492              	.LCFI211:
 2493              	 .cfi_def_cfa_register 7
 2494 0006 F860     	 str r0,[r7,#12]
 2495 0008 B960     	 str r1,[r7,#8]
 2496 000a 3B60     	 str r3,[r7]
 2497 000c 1346     	 mov r3,r2
 2498 000e FB71     	 strb r3,[r7,#7]
 639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t *ptr;
 640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 2499              	 .loc 3 640 0
 2500 0010 0023     	 movs r3,#0
 2501 0012 BB61     	 str r3,[r7,#24]
 641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t err_status = 0U;
 2502              	 .loc 3 641 0
 2503 0014 0023     	 movs r3,#0
 2504 0016 7B61     	 str r3,[r7,#20]
 642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2505              	 .loc 3 642 0
 2506 0018 0023     	 movs r3,#0
 2507 001a 87F82730 	 strb r3,[r7,#39]
 643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* To mask high byte from response register */
 644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t resp_high_mask = 0;  
 2508              	 .loc 3 644 0
 2509 001e 0023     	 movs r3,#0
 2510 0020 3B62     	 str r3,[r7,#32]
 645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check for no-response type commands */
 647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_IDLE_STATE) ||
 2511              	 .loc 3 647 0
 2512 0022 BB68     	 ldr r3,[r7,#8]
 2513 0024 5B78     	 ldrb r3,[r3,#1]
 2514 0026 03F03F03 	 and r3,r3,#63
 2515 002a DBB2     	 uxtb r3,r3
 2516 002c 002B     	 cmp r3,#0
 2517 002e 06D0     	 beq .L105
 648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_INACTIVE_STATE))
 2518              	 .loc 3 648 0 discriminator 1
 2519 0030 BB68     	 ldr r3,[r7,#8]
 2520 0032 5B78     	 ldrb r3,[r3,#1]
 2521 0034 03F03F03 	 and r3,r3,#63
 2522 0038 DBB2     	 uxtb r3,r3
 647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_GO_INACTIVE_STATE))
 2523              	 .loc 3 647 0 discriminator 1
 2524 003a 0F2B     	 cmp r3,#15
 2525 003c 03D1     	 bne .L106
 2526              	.L105:
 649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2527              	 .loc 3 650 0
 2528 003e 0023     	 movs r3,#0
 2529 0040 87F82730 	 strb r3,[r7,#39]
 2530 0044 96E0     	 b .L107
 2531              	.L106:
 651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     ptr = (uint32_t *)resp;
 2532              	 .loc 3 654 0
 2533 0046 3B68     	 ldr r3,[r7]
 2534 0048 FB61     	 str r3,[r7,#28]
 655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     card_status = (uint32_t)obj->sdmmc_sd->sdmmc->RESPONSE[0];
 2535              	 .loc 3 655 0
 2536 004a FB68     	 ldr r3,[r7,#12]
 2537 004c 1B68     	 ldr r3,[r3]
 2538 004e 1B68     	 ldr r3,[r3]
 2539 0050 1B69     	 ldr r3,[r3,#16]
 2540 0052 BB61     	 str r3,[r7,#24]
 656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Lock Status */
 658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SD_lGetCardLockState(obj, card_status, (uint16_t)cmd->cmd_index);
 2541              	 .loc 3 658 0
 2542 0054 BA69     	 ldr r2,[r7,#24]
 2543 0056 BB68     	 ldr r3,[r7,#8]
 2544 0058 5B78     	 ldrb r3,[r3,#1]
 2545 005a C3F30503 	 ubfx r3,r3,#0,#6
 2546 005e DBB2     	 uxtb r3,r3
 2547 0060 9BB2     	 uxth r3,r3
 2548 0062 F868     	 ldr r0,[r7,#12]
 2549 0064 1146     	 mov r1,r2
 2550 0066 1A46     	 mov r2,r3
 2551 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lGetCardLockState
 659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check response type */
 661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     switch (resp_type)
 2552              	 .loc 3 661 0
 2553 006c FB79     	 ldrb r3,[r7,#7]
 2554 006e 062B     	 cmp r3,#6
 2555 0070 7CD8     	 bhi .L108
 2556 0072 01A2     	 adr r2,.L110
 2557 0074 52F823F0 	 ldr pc,[r2,r3,lsl#2]
 2558              	 .p2align 2
 2559              	.L110:
 2560 0078 65010000 	 .word .L109+1
 2561 007c 95000000 	 .word .L111+1
 2562 0080 AD000000 	 .word .L112+1
 2563 0084 DB000000 	 .word .L113+1
 2564 0088 35010000 	 .word .L114+1
 2565 008c 45010000 	 .word .L115+1
 2566 0090 3D010000 	 .word .L116+1
 2567              	 .p2align 1
 2568              	.L111:
 662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R1 */
 664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R1:
 665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* check the error bits in the response */
 666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2569              	 .loc 3 666 0
 2570 0094 BA69     	 ldr r2,[r7,#24]
 2571 0096 FB69     	 ldr r3,[r7,#28]
 2572 0098 1A60     	 str r2,[r3]
 667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&card_status);
 2573              	 .loc 3 667 0
 2574 009a 07F11803 	 add r3,r7,#24
 2575 009e 1846     	 mov r0,r3
 2576 00a0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2577 00a4 0346     	 mov r3,r0
 2578 00a6 87F82730 	 strb r3,[r7,#39]
 668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2579              	 .loc 3 668 0
 2580 00aa 63E0     	 b .L107
 2581              	.L112:
 669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R1b */
 671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R1b:
 672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2582              	 .loc 3 672 0
 2583 00ac BA69     	 ldr r2,[r7,#24]
 2584 00ae FB69     	 ldr r3,[r7,#28]
 2585 00b0 1A60     	 str r2,[r3]
 673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&card_status);
 2586              	 .loc 3 674 0
 2587 00b2 07F11803 	 add r3,r7,#24
 2588 00b6 1846     	 mov r0,r3
 2589 00b8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2590 00bc 0346     	 mov r3,r0
 2591 00be 87F82730 	 strb r3,[r7,#39]
 675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2592              	 .loc 3 675 0
 2593 00c2 97F82730 	 ldrb r3,[r7,#39]
 2594 00c6 002B     	 cmp r3,#0
 2595 00c8 06D0     	 beq .L117
 676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Wait for transfer complete interrupt */
 678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lTransferDelay(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_TRANSFER);
 2596              	 .loc 3 678 0
 2597 00ca F868     	 ldr r0,[r7,#12]
 2598 00cc 2C49     	 ldr r1,.L119
 2599 00ce FFF7FEFF 	 bl SDMMC_BLOCK_SD_lTransferDelay
 2600 00d2 0346     	 mov r3,r0
 2601 00d4 87F82730 	 strb r3,[r7,#39]
 2602              	.L117:
 679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
 681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_ReadResponse: For R1b, SDMMC_BLOCK_TransferDelay failed");
 682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
 683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2603              	 .loc 3 685 0
 2604 00d8 4CE0     	 b .L107
 2605              	.L113:
 686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R2: response register R0-R7 */
 688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R2:
 689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)((uint32_t)XMC_SDMMC->RESPONSE[0] << 8U); ptr++;
 2606              	 .loc 3 689 0
 2607 00da 2A4B     	 ldr r3,.L119+4
 2608 00dc 1B69     	 ldr r3,[r3,#16]
 2609 00de 1A02     	 lsls r2,r3,#8
 2610 00e0 FB69     	 ldr r3,[r7,#28]
 2611 00e2 1A60     	 str r2,[r3]
 2612 00e4 FB69     	 ldr r3,[r7,#28]
 2613 00e6 0433     	 adds r3,r3,#4
 2614 00e8 FB61     	 str r3,[r7,#28]
 690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[0] & 0xFF000000) >> 24U);
 2615              	 .loc 3 690 0
 2616 00ea 264B     	 ldr r3,.L119+4
 2617 00ec 1B69     	 ldr r3,[r3,#16]
 2618 00ee 1B0E     	 lsrs r3,r3,#24
 2619 00f0 3B62     	 str r3,[r7,#32]
 691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[1] << 8U) | resp_high_mask); ptr++;
 2620              	 .loc 3 692 0
 2621 00f2 244B     	 ldr r3,.L119+4
 2622 00f4 5B69     	 ldr r3,[r3,#20]
 2623 00f6 1A02     	 lsls r2,r3,#8
 2624 00f8 3B6A     	 ldr r3,[r7,#32]
 2625 00fa 1A43     	 orrs r2,r2,r3
 2626 00fc FB69     	 ldr r3,[r7,#28]
 2627 00fe 1A60     	 str r2,[r3]
 2628 0100 FB69     	 ldr r3,[r7,#28]
 2629 0102 0433     	 adds r3,r3,#4
 2630 0104 FB61     	 str r3,[r7,#28]
 693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[1] & 0xFF000000) >> 24U);
 2631              	 .loc 3 693 0
 2632 0106 1F4B     	 ldr r3,.L119+4
 2633 0108 5B69     	 ldr r3,[r3,#20]
 2634 010a 1B0E     	 lsrs r3,r3,#24
 2635 010c 3B62     	 str r3,[r7,#32]
 694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[2] << 8U) | resp_high_mask);
 2636              	 .loc 3 695 0
 2637 010e 1D4B     	 ldr r3,.L119+4
 2638 0110 9B69     	 ldr r3,[r3,#24]
 2639 0112 1A02     	 lsls r2,r3,#8
 2640 0114 3B6A     	 ldr r3,[r7,#32]
 2641 0116 1A43     	 orrs r2,r2,r3
 2642 0118 FB69     	 ldr r3,[r7,#28]
 2643 011a 1A60     	 str r2,[r3]
 696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         resp_high_mask = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[2] & 0xFF000000) >> 24U);
 2644              	 .loc 3 696 0
 2645 011c 194B     	 ldr r3,.L119+4
 2646 011e 9B69     	 ldr r3,[r3,#24]
 2647 0120 1B0E     	 lsrs r3,r3,#24
 2648 0122 3B62     	 str r3,[r7,#32]
 697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = (uint32_t)(((uint32_t)XMC_SDMMC->RESPONSE[3] << 8U) | resp_high_mask);
 2649              	 .loc 3 698 0
 2650 0124 174B     	 ldr r3,.L119+4
 2651 0126 DB69     	 ldr r3,[r3,#28]
 2652 0128 1A02     	 lsls r2,r3,#8
 2653 012a 3B6A     	 ldr r3,[r7,#32]
 2654 012c 1A43     	 orrs r2,r2,r3
 2655 012e FB69     	 ldr r3,[r7,#28]
 2656 0130 1A60     	 str r2,[r3]
 699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2657              	 .loc 3 699 0
 2658 0132 1FE0     	 b .L107
 2659              	.L114:
 700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Responses R3 and R7 */
 702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R3:
 703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2660              	 .loc 3 703 0
 2661 0134 BA69     	 ldr r2,[r7,#24]
 2662 0136 FB69     	 ldr r3,[r7,#28]
 2663 0138 1A60     	 str r2,[r3]
 704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2664              	 .loc 3 704 0
 2665 013a 1BE0     	 b .L107
 2666              	.L116:
 705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R7:
 707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = card_status;
 2667              	 .loc 3 707 0
 2668 013c BA69     	 ldr r2,[r7,#24]
 2669 013e FB69     	 ldr r3,[r7,#28]
 2670 0140 1A60     	 str r2,[r3]
 708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2671              	 .loc 3 708 0
 2672 0142 17E0     	 b .L107
 2673              	.L115:
 709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Response R6 */
 711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_R6:
 712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         err_status = card_status & (uint32_t)SDMMC_RESPONSE0_RESPONSE0_Msk;
 2674              	 .loc 3 712 0
 2675 0144 BB69     	 ldr r3,[r7,#24]
 2676 0146 9BB2     	 uxth r3,r3
 2677 0148 7B61     	 str r3,[r7,#20]
 713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckErrorInResponse(&err_status);
 2678              	 .loc 3 713 0
 2679 014a 07F11403 	 add r3,r7,#20
 2680 014e 1846     	 mov r0,r3
 2681 0150 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckErrorInResponse
 2682 0154 0346     	 mov r3,r0
 2683 0156 87F82730 	 strb r3,[r7,#39]
 714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read 16-bit RCA received in response R1 register */
 716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         *ptr = ((uint32_t)(card_status & (uint32_t)SDMMC_RESPONSE0_RESPONSE1_Msk) >> SDMMC_BLOCK_HC
 2684              	 .loc 3 716 0
 2685 015a BB69     	 ldr r3,[r7,#24]
 2686 015c 1A0C     	 lsrs r2,r3,#16
 2687 015e FB69     	 ldr r3,[r7,#28]
 2688 0160 1A60     	 str r2,[r3]
 717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2689              	 .loc 3 717 0
 2690 0162 07E0     	 b .L107
 2691              	.L109:
 718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* No response */
 720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       case XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE:
 721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 2692              	 .loc 3 721 0
 2693 0164 0023     	 movs r3,#0
 2694 0166 87F82730 	 strb r3,[r7,#39]
 722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2695              	 .loc 3 722 0
 2696 016a 03E0     	 b .L107
 2697              	.L108:
 723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       default:
 725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2698              	 .loc 3 725 0
 2699 016c 0123     	 movs r3,#1
 2700 016e 87F82730 	 strb r3,[r7,#39]
 726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 2701              	 .loc 3 726 0
 2702 0172 00BF     	 nop
 2703              	.L107:
 727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2704              	 .loc 3 730 0
 2705 0174 97F82730 	 ldrb r3,[r7,#39]
 731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2706              	 .loc 3 731 0
 2707 0178 1846     	 mov r0,r3
 2708 017a 2837     	 adds r7,r7,#40
 2709              	.LCFI212:
 2710              	 .cfi_def_cfa_offset 8
 2711 017c BD46     	 mov sp,r7
 2712              	.LCFI213:
 2713              	 .cfi_def_cfa_register 13
 2714              	 
 2715 017e 80BD     	 pop {r7,pc}
 2716              	.L120:
 2717              	 .align 2
 2718              	.L119:
 2719 0180 40420F00 	 .word 1000000
 2720 0184 00C00148 	 .word 1208074240
 2721              	 .cfi_endproc
 2722              	.LFE230:
 2724              	 .section .text.SDMMC_BLOCK_SD_lSendCommand,"ax",%progbits
 2725              	 .align 2
 2726              	 .thumb
 2727              	 .thumb_func
 2729              	SDMMC_BLOCK_SD_lSendCommand:
 2730              	.LFB231:
 732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Send command */
 734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSendCommand(SDMMC_BLOCK_t *const obj,
 735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              const XMC_SDMMC_COMMAND_t *cmd,
 736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              uint32_t arg,
 737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              XMC_SDMMC_RESPONSE_TYPE_t resp_type,
 738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                              void *resp)
 739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2731              	 .loc 3 739 0
 2732              	 .cfi_startproc
 2733              	 
 2734              	 
 2735 0000 80B5     	 push {r7,lr}
 2736              	.LCFI214:
 2737              	 .cfi_def_cfa_offset 8
 2738              	 .cfi_offset 7,-8
 2739              	 .cfi_offset 14,-4
 2740 0002 86B0     	 sub sp,sp,#24
 2741              	.LCFI215:
 2742              	 .cfi_def_cfa_offset 32
 2743 0004 00AF     	 add r7,sp,#0
 2744              	.LCFI216:
 2745              	 .cfi_def_cfa_register 7
 2746 0006 F860     	 str r0,[r7,#12]
 2747 0008 B960     	 str r1,[r7,#8]
 2748 000a 7A60     	 str r2,[r7,#4]
 2749 000c FB70     	 strb r3,[r7,#3]
 740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2750              	 .loc 3 740 0
 2751 000e 0123     	 movs r3,#1
 2752 0010 FB75     	 strb r3,[r7,#23]
 741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->issue_abort = (uint8_t)0U;
 2753              	 .loc 3 742 0
 2754 0012 FB68     	 ldr r3,[r7,#12]
 2755 0014 1B68     	 ldr r3,[r3]
 2756 0016 0022     	 movs r2,#0
 2757 0018 83F85120 	 strb r2,[r3,#81]
 743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2758              	 .loc 3 743 0
 2759 001c FB68     	 ldr r3,[r7,#12]
 2760 001e 1B68     	 ldr r3,[r3]
 2761 0020 0122     	 movs r2,#1
 2762 0022 5A76     	 strb r2,[r3,#25]
 744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2763              	 .loc 3 744 0
 2764 0024 FB68     	 ldr r3,[r7,#12]
 2765 0026 1B68     	 ldr r3,[r3]
 2766 0028 0122     	 movs r2,#1
 2767 002a 1A76     	 strb r2,[r3,#24]
 745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data or command line free? */
 747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = (SDMMC_BLOCK_MODE_STATUS_t)SDMMC_BLOCK_SD_lCheckDataCommandLines(obj, cmd);
 2768              	 .loc 3 747 0
 2769 002c F868     	 ldr r0,[r7,#12]
 2770 002e B968     	 ldr r1,[r7,#8]
 2771 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckDataCommandLines
 2772 0034 0346     	 mov r3,r0
 2773 0036 FB75     	 strb r3,[r7,#23]
 748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (!((status == SDMMC_BLOCK_MODE_STATUS_DATA_LINE_BUSY) ||
 2774              	 .loc 3 748 0
 2775 0038 FB7D     	 ldrb r3,[r7,#23]
 2776 003a 1B2B     	 cmp r3,#27
 2777 003c 5DD0     	 beq .L122
 2778              	 .loc 3 748 0 is_stmt 0 discriminator 1
 2779 003e FB7D     	 ldrb r3,[r7,#23]
 2780 0040 1A2B     	 cmp r3,#26
 2781 0042 5AD0     	 beq .L122
 749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        (status == SDMMC_BLOCK_MODE_STATUS_CMD_LINE_BUSY)))
 750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send command */
 752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)XMC_SDMMC_SendCommand(obj->sdmmc_sd->sdmmc, cmd, arg);
 2782              	 .loc 3 752 0 is_stmt 1
 2783 0044 FB68     	 ldr r3,[r7,#12]
 2784 0046 1B68     	 ldr r3,[r3]
 2785 0048 1B68     	 ldr r3,[r3]
 2786 004a 1846     	 mov r0,r3
 2787 004c B968     	 ldr r1,[r7,#8]
 2788 004e 7A68     	 ldr r2,[r7,#4]
 2789 0050 FFF7FEFF 	 bl XMC_SDMMC_SendCommand
 753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Block until any of the bit in the interrupt status register gets set */
 755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_COMMAND) == SDMMC_BLOCK_MODE
 2790              	 .loc 3 755 0
 2791 0054 F868     	 ldr r0,[r7,#12]
 2792 0056 2B49     	 ldr r1,.L130
 2793 0058 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 2794 005c 0346     	 mov r3,r0
 2795 005e 002B     	 cmp r3,#0
 2796 0060 4BD1     	 bne .L122
 2797              	.L125:
 756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       do
 758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (obj->sdmmc_sd->tmr_expire == (bool)0)
 2798              	 .loc 3 759 0
 2799 0062 FB68     	 ldr r3,[r7,#12]
 2800 0064 1B68     	 ldr r3,[r3]
 2801 0066 93F85C30 	 ldrb r3,[r3,#92]
 2802 006a DBB2     	 uxtb r3,r3
 2803 006c 83F00103 	 eor r3,r3,#1
 2804 0070 DBB2     	 uxtb r3,r3
 2805 0072 002B     	 cmp r3,#0
 2806 0074 00D0     	 beq .L123
 760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_DEBUG("SDMMC_BLOCK_SendCommand: Timeout occured");
 762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           break;
 2807              	 .loc 3 762 0
 2808 0076 04E0     	 b .L124
 2809              	.L123:
 763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       } while ((uint8_t)obj->sdmmc_sd->isr_context.cmd_flag == (uint8_t)0U);
 2810              	 .loc 3 764 0
 2811 0078 FB68     	 ldr r3,[r7,#12]
 2812 007a 1B68     	 ldr r3,[r3]
 2813 007c 9B79     	 ldrb r3,[r3,#6]
 2814 007e 002B     	 cmp r3,#0
 2815 0080 EFD0     	 beq .L125
 2816              	.L124:
 765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)0;
 2817              	 .loc 3 766 0
 2818 0082 FB68     	 ldr r3,[r7,#12]
 2819 0084 1B68     	 ldr r3,[r3]
 2820 0086 0022     	 movs r2,#0
 2821 0088 9A71     	 strb r2,[r3,#6]
 767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop timer and delete it */
 769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 2822              	 .loc 3 769 0
 2823 008a F868     	 ldr r0,[r7,#12]
 2824 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
 770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer((uint32_t)obj->sdmmc_sd->tmr_id);
 2825              	 .loc 3 770 0
 2826 0090 FB68     	 ldr r3,[r7,#12]
 2827 0092 1B68     	 ldr r3,[r3]
 2828 0094 5B6D     	 ldr r3,[r3,#84]
 2829 0096 1846     	 mov r0,r3
 2830 0098 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Check for possible errors */
 773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_COMMAND_
 2831              	 .loc 3 773 0
 2832 009c FB68     	 ldr r3,[r7,#12]
 2833 009e 1B68     	 ldr r3,[r3]
 2834 00a0 5B7E     	 ldrb r3,[r3,#25]
 2835 00a2 1C2B     	 cmp r3,#28
 2836 00a4 09D1     	 bne .L126
 774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read response received */
 776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReadResponse(obj, cmd, resp_type, resp);
 2837              	 .loc 3 776 0
 2838 00a6 FB78     	 ldrb r3,[r7,#3]
 2839 00a8 F868     	 ldr r0,[r7,#12]
 2840 00aa B968     	 ldr r1,[r7,#8]
 2841 00ac 1A46     	 mov r2,r3
 2842 00ae 3B6A     	 ldr r3,[r7,#32]
 2843 00b0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadResponse
 2844 00b4 0346     	 mov r3,r0
 2845 00b6 FB75     	 strb r3,[r7,#23]
 2846 00b8 1FE0     	 b .L122
 2847              	.L126:
 777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* For cmd8, check for cmd timeout interrupt */
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else if (((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_CO
 2848              	 .loc 3 779 0
 2849 00ba FB68     	 ldr r3,[r7,#12]
 2850 00bc 1B68     	 ldr r3,[r3]
 2851 00be 5B7E     	 ldrb r3,[r3,#25]
 2852 00c0 022B     	 cmp r3,#2
 2853 00c2 09D1     	 bne .L127
 780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_SD_SEND_IF_COND))
 2854              	 .loc 3 780 0 discriminator 1
 2855 00c4 BB68     	 ldr r3,[r7,#8]
 2856 00c6 5B78     	 ldrb r3,[r3,#1]
 2857 00c8 03F03F03 	 and r3,r3,#63
 2858 00cc DBB2     	 uxtb r3,r3
 779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                ((uint16_t)cmd->cmd_index == (uint16_t)SDMMC_BLOCK_SD_SEND_IF_COND))
 2859              	 .loc 3 779 0 discriminator 1
 2860 00ce 082B     	 cmp r3,#8
 2861 00d0 02D1     	 bne .L127
 781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 2862              	 .loc 3 782 0
 2863 00d2 0223     	 movs r3,#2
 2864 00d4 FB75     	 strb r3,[r7,#23]
 2865 00d6 10E0     	 b .L122
 2866              	.L127:
 783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
 785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((uint16_t)cmd->dat_present_sel == (uint16_t)1)
 2867              	 .loc 3 786 0
 2868 00d8 BB68     	 ldr r3,[r7,#8]
 2869 00da 1B78     	 ldrb r3,[r3]
 2870 00dc 03F02003 	 and r3,r3,#32
 2871 00e0 DBB2     	 uxtb r3,r3
 2872 00e2 002B     	 cmp r3,#0
 2873 00e4 04D0     	 beq .L128
 787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->sdmmc_sd->issue_abort = (uint8_t)1;
 2874              	 .loc 3 788 0
 2875 00e6 FB68     	 ldr r3,[r7,#12]
 2876 00e8 1B68     	 ldr r3,[r3]
 2877 00ea 0122     	 movs r2,#1
 2878 00ec 83F85120 	 strb r2,[r3,#81]
 2879              	.L128:
 789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
 790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Error Recovery for the failed command  */
 792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 2880              	 .loc 3 792 0
 2881 00f0 F868     	 ldr r0,[r7,#12]
 2882 00f2 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 2883 00f6 0346     	 mov r3,r0
 2884 00f8 FB75     	 strb r3,[r7,#23]
 2885              	.L122:
 793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 2886              	 .loc 3 797 0
 2887 00fa FB7D     	 ldrb r3,[r7,#23]
 798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 2888              	 .loc 3 798 0
 2889 00fc 1846     	 mov r0,r3
 2890 00fe 1837     	 adds r7,r7,#24
 2891              	.LCFI217:
 2892              	 .cfi_def_cfa_offset 8
 2893 0100 BD46     	 mov sp,r7
 2894              	.LCFI218:
 2895              	 .cfi_def_cfa_register 13
 2896              	 
 2897 0102 80BD     	 pop {r7,pc}
 2898              	.L131:
 2899              	 .align 2
 2900              	.L130:
 2901 0104 40420F00 	 .word 1000000
 2902              	 .cfi_endproc
 2903              	.LFE231:
 2905              	 .section .text.SDMMC_BLOCK_SD_lSetVoltageWindow,"ax",%progbits
 2906              	 .align 2
 2907              	 .thumb
 2908              	 .thumb_func
 2910              	SDMMC_BLOCK_SD_lSetVoltageWindow:
 2911              	.LFB232:
 799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Set voltage window in the OCR register */
 801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSetVoltageWindow(SDMMC_BLOCK_t *const obj)
 802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 2912              	 .loc 3 802 0
 2913              	 .cfi_startproc
 2914              	 
 2915              	 
 2916 0000 80B5     	 push {r7,lr}
 2917              	.LCFI219:
 2918              	 .cfi_def_cfa_offset 8
 2919              	 .cfi_offset 7,-8
 2920              	 .cfi_offset 14,-4
 2921 0002 88B0     	 sub sp,sp,#32
 2922              	.LCFI220:
 2923              	 .cfi_def_cfa_offset 40
 2924 0004 02AF     	 add r7,sp,#8
 2925              	.LCFI221:
 2926              	 .cfi_def_cfa 7,32
 2927 0006 7860     	 str r0,[r7,#4]
 803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 2928              	 .loc 3 803 0
 2929 0008 0123     	 movs r3,#1
 2930 000a FB75     	 strb r3,[r7,#23]
 804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 2931              	 .loc 3 804 0
 2932 000c 0023     	 movs r3,#0
 2933 000e BB60     	 str r3,[r7,#8]
 805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t loop_count = 0U;
 2934              	 .loc 3 805 0
 2935 0010 0023     	 movs r3,#0
 2936 0012 3B61     	 str r3,[r7,#16]
 806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 2937              	 .loc 3 806 0
 2938 0014 0023     	 movs r3,#0
 2939 0016 FB60     	 str r3,[r7,#12]
 807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->f8 == (uint8_t)0U)
 2940              	 .loc 3 808 0
 2941 0018 7B68     	 ldr r3,[r7,#4]
 2942 001a 1B68     	 ldr r3,[r3]
 2943 001c 93F85030 	 ldrb r3,[r3,#80]
 2944 0020 002B     	 cmp r3,#0
 2945 0022 03D1     	 bne .L133
 809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg = SDMMC_BLOCK_SD_ACMD41_F80_ARG; /* Set HCS=0 for standard cards */
 2946              	 .loc 3 810 0
 2947 0024 4FF48013 	 mov r3,#1048576
 2948 0028 FB60     	 str r3,[r7,#12]
 2949 002a 01E0     	 b .L134
 2950              	.L133:
 811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg = SDMMC_BLOCK_SD_ACMD41_F81_ARG; /* Set HCS=1 for high capacity cards */
 2951              	 .loc 3 814 0
 2952 002c 214B     	 ldr r3,.L140
 2953 002e FB60     	 str r3,[r7,#12]
 2954              	.L134:
 815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   do
 818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD55 for application specific commands (default RCA: 0) */
 820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 2955              	 .loc 3 821 0
 2956 0030 1923     	 movs r3,#25
 820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 2957              	 .loc 3 820 0
 2958 0032 5B00     	 lsls r3,r3,#1
 2959 0034 204A     	 ldr r2,.L140+4
 2960 0036 1A44     	 add r2,r2,r3
 2961 0038 07F10803 	 add r3,r7,#8
 2962 003c 0093     	 str r3,[sp]
 2963 003e 7868     	 ldr r0,[r7,#4]
 2964 0040 1146     	 mov r1,r2
 2965 0042 0022     	 movs r2,#0
 2966 0044 0123     	 movs r3,#1
 2967 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 2968 004a 0346     	 mov r3,r0
 2969 004c FB75     	 strb r3,[r7,#23]
 822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
 823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
 824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
 825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 2970              	 .loc 3 826 0
 2971 004e FB7D     	 ldrb r3,[r7,#23]
 2972 0050 002B     	 cmp r3,#0
 2973 0052 1ED1     	 bne .L135
 827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send ACMD41 to set card's voltage window */
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
 830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2974              	 .loc 3 830 0
 2975 0054 1F23     	 movs r3,#31
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2976              	 .loc 3 829 0
 2977 0056 5B00     	 lsls r3,r3,#1
 2978 0058 174A     	 ldr r2,.L140+4
 2979 005a 1A44     	 add r2,r2,r3
 831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
 832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R3,
 833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(obj->sdmmc_sd->card_info.ocr));
 2980              	 .loc 3 833 0
 2981 005c 7B68     	 ldr r3,[r7,#4]
 2982 005e 1B68     	 ldr r3,[r3]
 2983 0060 2033     	 adds r3,r3,#32
 829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_SD_COMMAND(62)),
 2984              	 .loc 3 829 0
 2985 0062 0093     	 str r3,[sp]
 2986 0064 7868     	 ldr r0,[r7,#4]
 2987 0066 1146     	 mov r1,r2
 2988 0068 FA68     	 ldr r2,[r7,#12]
 2989 006a 0423     	 movs r3,#4
 2990 006c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 2991 0070 0346     	 mov r3,r0
 2992 0072 FB75     	 strb r3,[r7,#23]
 834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if ((status != SDMMC_BLOCK_MODE_STATUS_SUCCESS) &&
 2993              	 .loc 3 835 0
 2994 0074 FB7D     	 ldrb r3,[r7,#23]
 2995 0076 002B     	 cmp r3,#0
 2996 0078 03D0     	 beq .L136
 2997              	 .loc 3 835 0 is_stmt 0 discriminator 1
 2998 007a FB7D     	 ldrb r3,[r7,#23]
 2999 007c 122B     	 cmp r3,#18
 3000 007e 00D0     	 beq .L136
 836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           (status != SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERROR))
 837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 3001              	 .loc 3 838 0 is_stmt 1
 3002 0080 13E0     	 b .L137
 3003              	.L136:
 839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3004              	 .loc 3 840 0
 3005 0082 0023     	 movs r3,#0
 3006 0084 FB75     	 strb r3,[r7,#23]
 841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Card takes some time to set power status bit. Card must respond in a second */
 843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lDelay(obj, (uint32_t)SDMMC_BLOCK_CARD_POWER_DELAY);
 3007              	 .loc 3 843 0
 3008 0086 7868     	 ldr r0,[r7,#4]
 3009 0088 44F62061 	 movw r1,#20000
 3010 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDelay
 3011 0090 01E0     	 b .L138
 3012              	.L135:
 844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
 846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       loop_count = 100U;
 3013              	 .loc 3 847 0
 3014 0092 6423     	 movs r3,#100
 3015 0094 3B61     	 str r3,[r7,#16]
 3016              	.L138:
 848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while (((loop_count++) < (uint32_t)50U) &&
 3017              	 .loc 3 849 0
 3018 0096 3B69     	 ldr r3,[r7,#16]
 3019 0098 5A1C     	 adds r2,r3,#1
 3020 009a 3A61     	 str r2,[r7,#16]
 850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (uint32_t)SDMMC_BLOCK_OCR_POWER_STATUS_BITMASK)!= (uint32_t)0UL)));
 3021              	 .loc 3 851 0
 3022 009c 312B     	 cmp r3,#49
 3023 009e 04D8     	 bhi .L137
 850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 3024              	 .loc 3 850 0
 3025 00a0 7B68     	 ldr r3,[r7,#4]
 3026 00a2 1B68     	 ldr r3,[r3]
 3027 00a4 1B6A     	 ldr r3,[r3,#32]
 849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (!(((uint32_t)obj->sdmmc_sd->card_info.ocr &
 3028              	 .loc 3 849 0
 3029 00a6 002B     	 cmp r3,#0
 3030 00a8 C2DA     	 bge .L134
 3031              	.L137:
 852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3032              	 .loc 3 853 0
 3033 00aa FB7D     	 ldrb r3,[r7,#23]
 854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3034              	 .loc 3 854 0
 3035 00ac 1846     	 mov r0,r3
 3036 00ae 1837     	 adds r7,r7,#24
 3037              	.LCFI222:
 3038              	 .cfi_def_cfa_offset 8
 3039 00b0 BD46     	 mov sp,r7
 3040              	.LCFI223:
 3041              	 .cfi_def_cfa_register 13
 3042              	 
 3043 00b2 80BD     	 pop {r7,pc}
 3044              	.L141:
 3045              	 .align 2
 3046              	.L140:
 3047 00b4 00001040 	 .word 1074790400
 3048 00b8 00000000 	 .word sdmmc_block_command
 3049              	 .cfi_endproc
 3050              	.LFE232:
 3052              	 .section .text.SDMMC_BLOCK_SD_lQueryOperatingCondition,"ax",%progbits
 3053              	 .align 2
 3054              	 .thumb
 3055              	 .thumb_func
 3057              	SDMMC_BLOCK_SD_lQueryOperatingCondition:
 3058              	.LFB233:
 855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Query voltage operating condition of the card */
 857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lQueryOperatingCondition(SDMMC_BLOCK_t *const obj)
 858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3059              	 .loc 3 858 0
 3060              	 .cfi_startproc
 3061              	 
 3062              	 
 3063 0000 80B5     	 push {r7,lr}
 3064              	.LCFI224:
 3065              	 .cfi_def_cfa_offset 8
 3066              	 .cfi_offset 7,-8
 3067              	 .cfi_offset 14,-4
 3068 0002 86B0     	 sub sp,sp,#24
 3069              	.LCFI225:
 3070              	 .cfi_def_cfa_offset 32
 3071 0004 02AF     	 add r7,sp,#8
 3072              	.LCFI226:
 3073              	 .cfi_def_cfa 7,24
 3074 0006 7860     	 str r0,[r7,#4]
 859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t resp_data = 0U;
 3075              	 .loc 3 859 0
 3076 0008 0023     	 movs r3,#0
 3077 000a BB60     	 str r3,[r7,#8]
 860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Query voltage operating condition (cmd8) */
 863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
 864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(8)),
 3078              	 .loc 3 864 0
 3079 000c 0623     	 movs r3,#6
 863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(8)),
 3080              	 .loc 3 863 0
 3081 000e 5B00     	 lsls r3,r3,#1
 3082 0010 1C4A     	 ldr r2,.L149
 3083 0012 1A44     	 add r2,r2,r3
 3084 0014 07F10803 	 add r3,r7,#8
 3085 0018 0093     	 str r3,[sp]
 3086 001a 7868     	 ldr r0,[r7,#4]
 3087 001c 1146     	 mov r1,r2
 3088 001e 4FF4D572 	 mov r2,#426
 3089 0022 0623     	 movs r3,#6
 3090 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3091 0028 0346     	 mov r3,r0
 3092 002a FB73     	 strb r3,[r7,#15]
 865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        SDMMC_BLOCK_SD_CMD8_ARG,
 866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R7,
 867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &resp_data);
 868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3093              	 .loc 3 869 0
 3094 002c FB7B     	 ldrb r3,[r7,#15]
 3095 002e 002B     	 cmp r3,#0
 3096 0030 16D1     	 bne .L143
 870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if pattern matches in both the argument and response */
 872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((resp_data >> SDMMC_BLOCK_SD_CMD8_CHECK_PATTERN_BITPOS) & SDMMC_BLOCK_SD_CMD8_CHECK_PATTER
 3097              	 .loc 3 872 0
 3098 0032 BB68     	 ldr r3,[r7,#8]
 3099 0034 DBB2     	 uxtb r3,r3
 3100 0036 AA2B     	 cmp r3,#170
 3101 0038 02D0     	 beq .L144
 873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (SDMMC_BLOCK_SD_CMD8_CHECK_PATTERN_VALUE))
 874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE;
 3102              	 .loc 3 875 0
 3103 003a 1923     	 movs r3,#25
 3104 003c FB73     	 strb r3,[r7,#15]
 3105 003e 1BE0     	 b .L147
 3106              	.L144:
 876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if input voltage accepted by the card in the response  */
 878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (((uint8_t)(resp_data >> SDMMC_BLOCK_SD_CMD8_VHS_BITPOS) & SDMMC_BLOCK_SD_CMD8_VHS_BITM
 3107              	 .loc 3 878 0
 3108 0040 BB68     	 ldr r3,[r7,#8]
 3109 0042 1B0A     	 lsrs r3,r3,#8
 3110 0044 DBB2     	 uxtb r3,r3
 3111 0046 03F00F03 	 and r3,r3,#15
 3112 004a 012B     	 cmp r3,#1
 3113 004c 02D0     	 beq .L146
 879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (SDMMC_BLOCK_SD_VHS_PATTERN_2_7_3_6_VALUE))
 880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE;
 3114              	 .loc 3 881 0
 3115 004e 1923     	 movs r3,#25
 3116 0050 FB73     	 strb r3,[r7,#15]
 3117 0052 11E0     	 b .L147
 3118              	.L146:
 882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
 884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set Flag f8 */
 886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->f8 = (uint8_t)1U;
 3119              	 .loc 3 886 0
 3120 0054 7B68     	 ldr r3,[r7,#4]
 3121 0056 1B68     	 ldr r3,[r3]
 3122 0058 0122     	 movs r2,#1
 3123 005a 83F85020 	 strb r2,[r3,#80]
 3124 005e 0BE0     	 b .L147
 3125              	.L143:
 887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Response received; High capacity cards */
 890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
 891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /*  No response is received for Standard Capacity SD cards or MMC card. */
 893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->cmd_int_err == SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR)
 3126              	 .loc 3 893 0
 3127 0060 7B68     	 ldr r3,[r7,#4]
 3128 0062 1B68     	 ldr r3,[r3]
 3129 0064 5B7E     	 ldrb r3,[r3,#25]
 3130 0066 022B     	 cmp r3,#2
 3131 0068 06D1     	 bne .L147
 894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->f8 = (uint8_t)0U;
 3132              	 .loc 3 895 0
 3133 006a 7B68     	 ldr r3,[r7,#4]
 3134 006c 1B68     	 ldr r3,[r3]
 3135 006e 0022     	 movs r2,#0
 3136 0070 83F85020 	 strb r2,[r3,#80]
 896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3137              	 .loc 3 896 0
 3138 0074 0023     	 movs r3,#0
 3139 0076 FB73     	 strb r3,[r7,#15]
 3140              	.L147:
 897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3141              	 .loc 3 900 0
 3142 0078 FB7B     	 ldrb r3,[r7,#15]
 901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3143              	 .loc 3 901 0
 3144 007a 1846     	 mov r0,r3
 3145 007c 1037     	 adds r7,r7,#16
 3146              	.LCFI227:
 3147              	 .cfi_def_cfa_offset 8
 3148 007e BD46     	 mov sp,r7
 3149              	.LCFI228:
 3150              	 .cfi_def_cfa_register 13
 3151              	 
 3152 0080 80BD     	 pop {r7,pc}
 3153              	.L150:
 3154 0082 00BF     	 .align 2
 3155              	.L149:
 3156 0084 00000000 	 .word sdmmc_block_command
 3157              	 .cfi_endproc
 3158              	.LFE233:
 3160              	 .section .text.SDMMC_BLOCK_SD_lQueryVoltage,"ax",%progbits
 3161              	 .align 2
 3162              	 .thumb
 3163              	 .thumb_func
 3165              	SDMMC_BLOCK_SD_lQueryVoltage:
 3166              	.LFB234:
 902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Query voltage supported from the card */
 904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lQueryVoltage(SDMMC_BLOCK_t *const obj, uint32_t ar
 905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3167              	 .loc 3 905 0
 3168              	 .cfi_startproc
 3169              	 
 3170              	 
 3171 0000 80B5     	 push {r7,lr}
 3172              	.LCFI229:
 3173              	 .cfi_def_cfa_offset 8
 3174              	 .cfi_offset 7,-8
 3175              	 .cfi_offset 14,-4
 3176 0002 86B0     	 sub sp,sp,#24
 3177              	.LCFI230:
 3178              	 .cfi_def_cfa_offset 32
 3179 0004 02AF     	 add r7,sp,#8
 3180              	.LCFI231:
 3181              	 .cfi_def_cfa 7,24
 3182 0006 7860     	 str r0,[r7,#4]
 3183 0008 3960     	 str r1,[r7]
 906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 3184              	 .loc 3 906 0
 3185 000a 0023     	 movs r3,#0
 3186 000c BB60     	 str r3,[r7,#8]
 907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD55 for application specific commands with 0 as the default RCA */
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
 911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3187              	 .loc 3 911 0
 3188 000e 1923     	 movs r3,#25
 910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3189              	 .loc 3 910 0
 3190 0010 5B00     	 lsls r3,r3,#1
 3191 0012 1F4A     	 ldr r2,.L157
 3192 0014 1A44     	 add r2,r2,r3
 3193 0016 07F10803 	 add r3,r7,#8
 3194 001a 0093     	 str r3,[sp]
 3195 001c 7868     	 ldr r0,[r7,#4]
 3196 001e 1146     	 mov r1,r2
 3197 0020 3A68     	 ldr r2,[r7]
 3198 0022 0123     	 movs r3,#1
 3199 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3200 0028 0346     	 mov r3,r0
 3201 002a FB73     	 strb r3,[r7,#15]
 912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
 913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
 914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
 915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((obj->sdmmc_sd->f8 == (uint8_t)0U) && (status == SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERR
 3202              	 .loc 3 916 0
 3203 002c 7B68     	 ldr r3,[r7,#4]
 3204 002e 1B68     	 ldr r3,[r3]
 3205 0030 93F85030 	 ldrb r3,[r3,#80]
 3206 0034 002B     	 cmp r3,#0
 3207 0036 02D1     	 bne .L152
 3208              	 .loc 3 916 0 is_stmt 0 discriminator 1
 3209 0038 FB7B     	 ldrb r3,[r7,#15]
 3210 003a 122B     	 cmp r3,#18
 3211 003c 02D0     	 beq .L153
 3212              	.L152:
 3213              	 .loc 3 916 0 discriminator 3
 3214 003e FB7B     	 ldrb r3,[r7,#15]
 3215 0040 002B     	 cmp r3,#0
 3216 0042 20D1     	 bne .L154
 3217              	.L153:
 917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send ACMD41 to query the card's voltage window */
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3218              	 .loc 3 921 0 is_stmt 1
 3219 0044 1F23     	 movs r3,#31
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3220              	 .loc 3 920 0
 3221 0046 5B00     	 lsls r3,r3,#1
 3222 0048 114A     	 ldr r2,.L157
 3223 004a 1A44     	 add r2,r2,r3
 922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          arg,
 923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R3,
 924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(obj->sdmmc_sd->card_info.ocr));
 3224              	 .loc 3 924 0
 3225 004c 7B68     	 ldr r3,[r7,#4]
 3226 004e 1B68     	 ldr r3,[r3]
 3227 0050 2033     	 adds r3,r3,#32
 920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(62)),
 3228              	 .loc 3 920 0
 3229 0052 0093     	 str r3,[sp]
 3230 0054 7868     	 ldr r0,[r7,#4]
 3231 0056 1146     	 mov r1,r2
 3232 0058 3A68     	 ldr r2,[r7]
 3233 005a 0423     	 movs r3,#4
 3234 005c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3235 0060 0346     	 mov r3,r0
 3236 0062 FB73     	 strb r3,[r7,#15]
 925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_ILLEGAL_COMMAND_ERROR) ||
 3237              	 .loc 3 926 0
 3238 0064 FB7B     	 ldrb r3,[r7,#15]
 3239 0066 122B     	 cmp r3,#18
 3240 0068 02D0     	 beq .L155
 3241              	 .loc 3 926 0 is_stmt 0 discriminator 1
 3242 006a FB7B     	 ldrb r3,[r7,#15]
 3243 006c 002B     	 cmp r3,#0
 3244 006e 0AD1     	 bne .L154
 3245              	.L155:
 927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS))
 928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send ACMD41 with voltage window argument set */
 930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSetVoltageWindow(obj);
 3246              	 .loc 3 930 0 is_stmt 1
 3247 0070 7868     	 ldr r0,[r7,#4]
 3248 0072 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSetVoltageWindow
 3249 0076 0346     	 mov r3,r0
 3250 0078 FB73     	 strb r3,[r7,#15]
 931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3251              	 .loc 3 931 0
 3252 007a FB7B     	 ldrb r3,[r7,#15]
 3253 007c 002B     	 cmp r3,#0
 3254 007e 02D1     	 bne .L154
 932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* SD Card Type */
 934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         SDMMC_BLOCK_SD_lWriteCardType(obj);
 3255              	 .loc 3 934 0
 3256 0080 7868     	 ldr r0,[r7,#4]
 3257 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lWriteCardType
 3258              	.L154:
 935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
 936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3259              	 .loc 3 939 0
 3260 0086 FB7B     	 ldrb r3,[r7,#15]
 940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3261              	 .loc 3 940 0
 3262 0088 1846     	 mov r0,r3
 3263 008a 1037     	 adds r7,r7,#16
 3264              	.LCFI232:
 3265              	 .cfi_def_cfa_offset 8
 3266 008c BD46     	 mov sp,r7
 3267              	.LCFI233:
 3268              	 .cfi_def_cfa_register 13
 3269              	 
 3270 008e 80BD     	 pop {r7,pc}
 3271              	.L158:
 3272              	 .align 2
 3273              	.L157:
 3274 0090 00000000 	 .word sdmmc_block_command
 3275              	 .cfi_endproc
 3276              	.LFE234:
 3278              	 .section .text.SDMMC_BLOCK_SD_lAfterCardInitialize,"ax",%progbits
 3279              	 .align 2
 3280              	 .thumb
 3281              	 .thumb_func
 3283              	SDMMC_BLOCK_SD_lAfterCardInitialize:
 3284              	.LFB235:
 941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read card registers after the card initialization */
 943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lAfterCardInitialize(SDMMC_BLOCK_t *const obj)
 944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3285              	 .loc 3 944 0
 3286              	 .cfi_startproc
 3287              	 
 3288              	 
 3289 0000 80B5     	 push {r7,lr}
 3290              	.LCFI234:
 3291              	 .cfi_def_cfa_offset 8
 3292              	 .cfi_offset 7,-8
 3293              	 .cfi_offset 14,-4
 3294 0002 86B0     	 sub sp,sp,#24
 3295              	.LCFI235:
 3296              	 .cfi_def_cfa_offset 32
 3297 0004 02AF     	 add r7,sp,#8
 3298              	.LCFI236:
 3299              	 .cfi_def_cfa 7,24
 3300 0006 7860     	 str r0,[r7,#4]
 945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3301              	 .loc 3 945 0
 3302 0008 0123     	 movs r3,#1
 3303 000a FB73     	 strb r3,[r7,#15]
 946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t card_lock = (obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED);
 3304              	 .loc 3 946 0
 3305 000c 7B68     	 ldr r3,[r7,#4]
 3306 000e 1B7A     	 ldrb r3,[r3,#8]
 3307 0010 03F00803 	 and r3,r3,#8
 3308 0014 BB73     	 strb r3,[r7,#14]
 947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status;
 948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read CSD & SCR register & card write protection flags */
 950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lReadCardRegisters(obj);
 3309              	 .loc 3 950 0
 3310 0016 7868     	 ldr r0,[r7,#4]
 3311 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadCardRegisters
 3312 001c 0346     	 mov r3,r0
 3313 001e FB73     	 strb r3,[r7,#15]
 951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Explicitly set block size as 512 */
 953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3314              	 .loc 3 953 0
 3315 0020 FB7B     	 ldrb r3,[r7,#15]
 3316 0022 002B     	 cmp r3,#0
 3317 0024 0FD1     	 bne .L160
 954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
 956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 3318              	 .loc 3 956 0
 3319 0026 0C23     	 movs r3,#12
 955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 3320              	 .loc 3 955 0
 3321 0028 5B00     	 lsls r3,r3,#1
 3322 002a 1C4A     	 ldr r2,.L164
 3323 002c 1A44     	 add r2,r2,r3
 3324 002e 07F10803 	 add r3,r7,#8
 3325 0032 0093     	 str r3,[sp]
 3326 0034 7868     	 ldr r0,[r7,#4]
 3327 0036 1146     	 mov r1,r2
 3328 0038 4FF40072 	 mov r2,#512
 3329 003c 0123     	 movs r3,#1
 3330 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3331 0042 0346     	 mov r3,r0
 3332 0044 FB73     	 strb r3,[r7,#15]
 3333              	.L160:
 957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          512U,
 958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
 959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
 960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (card_lock == (uint8_t)0U))
 3334              	 .loc 3 962 0
 3335 0046 FB7B     	 ldrb r3,[r7,#15]
 3336 0048 002B     	 cmp r3,#0
 3337 004a 21D1     	 bne .L161
 3338              	 .loc 3 962 0 is_stmt 0 discriminator 1
 3339 004c BB7B     	 ldrb r3,[r7,#14]
 3340 004e 002B     	 cmp r3,#0
 3341 0050 1ED1     	 bne .L161
 963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
 965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to 4-bit bus width if supported */
 966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchBusWidth(obj);
 3342              	 .loc 3 966 0 is_stmt 1
 3343 0052 7868     	 ldr r0,[r7,#4]
 3344 0054 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchBusWidth
 3345 0058 0346     	 mov r3,r0
 3346 005a FB73     	 strb r3,[r7,#15]
 967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3347              	 .loc 3 968 0
 3348 005c FB7B     	 ldrb r3,[r7,#15]
 3349 005e 002B     	 cmp r3,#0
 3350 0060 06D0     	 beq .L162
 969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch to default (1-bit) bus width */
 971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferWidth(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_LINES_1);
 3351              	 .loc 3 971 0
 3352 0062 7B68     	 ldr r3,[r7,#4]
 3353 0064 1B68     	 ldr r3,[r3]
 3354 0066 1B68     	 ldr r3,[r3]
 3355 0068 1846     	 mov r0,r3
 3356 006a 0021     	 movs r1,#0
 3357 006c FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferWidth
 3358              	.L162:
 972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to high speed mode */
 975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchSpeed(obj);
 3359              	 .loc 3 975 0
 3360 0070 7868     	 ldr r0,[r7,#4]
 3361 0072 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchSpeed
 3362 0076 0346     	 mov r3,r0
 3363 0078 FB73     	 strb r3,[r7,#15]
 976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3364              	 .loc 3 976 0
 3365 007a FB7B     	 ldrb r3,[r7,#15]
 3366 007c 002B     	 cmp r3,#0
 3367 007e 07D0     	 beq .L161
 977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch host controller to normal (default) speed mode */
 979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_DisableHighSpeed(obj->sdmmc_sd->sdmmc);
 3368              	 .loc 3 979 0
 3369 0080 7B68     	 ldr r3,[r7,#4]
 3370 0082 1B68     	 ldr r3,[r3]
 3371 0084 1B68     	 ldr r3,[r3]
 3372 0086 1846     	 mov r0,r3
 3373 0088 FFF7FEFF 	 bl XMC_SDMMC_DisableHighSpeed
 980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 3374              	 .loc 3 980 0
 3375 008c 0023     	 movs r3,#0
 3376 008e FB73     	 strb r3,[r7,#15]
 3377              	.L161:
 981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
 982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
 983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
 984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3378              	 .loc 3 985 0
 3379 0090 FB7B     	 ldrb r3,[r7,#15]
 986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3380              	 .loc 3 986 0
 3381 0092 1846     	 mov r0,r3
 3382 0094 1037     	 adds r7,r7,#16
 3383              	.LCFI237:
 3384              	 .cfi_def_cfa_offset 8
 3385 0096 BD46     	 mov sp,r7
 3386              	.LCFI238:
 3387              	 .cfi_def_cfa_register 13
 3388              	 
 3389 0098 80BD     	 pop {r7,pc}
 3390              	.L165:
 3391 009a 00BF     	 .align 2
 3392              	.L164:
 3393 009c 00000000 	 .word sdmmc_block_command
 3394              	 .cfi_endproc
 3395              	.LFE235:
 3397              	 .section .text.SDMMC_BLOCK_SD_lInitializeCard,"ax",%progbits
 3398              	 .align 2
 3399              	 .thumb
 3400              	 .thumb_func
 3402              	SDMMC_BLOCK_SD_lInitializeCard:
 3403              	.LFB236:
 987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Initialize the SD card */
 989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lInitializeCard(SDMMC_BLOCK_t *const obj)
 990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3404              	 .loc 3 990 0
 3405              	 .cfi_startproc
 3406              	 
 3407              	 
 3408 0000 80B5     	 push {r7,lr}
 3409              	.LCFI239:
 3410              	 .cfi_def_cfa_offset 8
 3411              	 .cfi_offset 7,-8
 3412              	 .cfi_offset 14,-4
 3413 0002 86B0     	 sub sp,sp,#24
 3414              	.LCFI240:
 3415              	 .cfi_def_cfa_offset 32
 3416 0004 02AF     	 add r7,sp,#8
 3417              	.LCFI241:
 3418              	 .cfi_def_cfa 7,24
 3419 0006 7860     	 str r0,[r7,#4]
 991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
 992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
 993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t count = (uint8_t)0U;
 3420              	 .loc 3 993 0
 3421 0008 0023     	 movs r3,#0
 3422 000a BB73     	 strb r3,[r7,#14]
 3423              	.L169:
 994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
 995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Repeat the below steps 2 times if bad response is received */
 996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   do
 997:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
 998:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset the card (CMD0) */
 999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
1000:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(0)),
 3424              	 .loc 3 1000 0
 3425 000c 0023     	 movs r3,#0
 999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(0)),
 3426              	 .loc 3 999 0
 3427 000e 5B00     	 lsls r3,r3,#1
 3428 0010 324A     	 ldr r2,.L173
 3429 0012 1A44     	 add r2,r2,r3
 3430 0014 0023     	 movs r3,#0
 3431 0016 0093     	 str r3,[sp]
 3432 0018 7868     	 ldr r0,[r7,#4]
 3433 001a 1146     	 mov r1,r2
 3434 001c 0022     	 movs r2,#0
 3435 001e 0023     	 movs r3,#0
 3436 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3437 0024 0346     	 mov r3,r0
 3438 0026 FB73     	 strb r3,[r7,#15]
1001:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
1002:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_NO_RESPONSE,
1003:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          NULL);
1004:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1005:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3439              	 .loc 3 1005 0
 3440 0028 FB7B     	 ldrb r3,[r7,#15]
 3441 002a 002B     	 cmp r3,#0
 3442 002c 00D0     	 beq .L167
1006:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1007:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       break;
 3443              	 .loc 3 1007 0
 3444 002e 0DE0     	 b .L168
 3445              	.L167:
1008:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1009:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1010:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Query card's operation condition */
1011:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lQueryOperatingCondition(obj);
 3446              	 .loc 3 1011 0
 3447 0030 7868     	 ldr r0,[r7,#4]
 3448 0032 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lQueryOperatingCondition
 3449 0036 0346     	 mov r3,r0
 3450 0038 FB73     	 strb r3,[r7,#15]
1012:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1013:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     count++;
 3451              	 .loc 3 1013 0
 3452 003a BB7B     	 ldrb r3,[r7,#14]
 3453 003c 0133     	 adds r3,r3,#1
 3454 003e BB73     	 strb r3,[r7,#14]
1014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while ((count < (uint8_t)SDMMC_BLOCK_NUM_CARD_RESET_RETRIES) &&
1015:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            (status == SDMMC_BLOCK_MODE_STATUS_BAD_RESPONSE));
 3455              	 .loc 3 1015 0
 3456 0040 BB7B     	 ldrb r3,[r7,#14]
 3457 0042 012B     	 cmp r3,#1
 3458 0044 02D8     	 bhi .L168
1014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   } while ((count < (uint8_t)SDMMC_BLOCK_NUM_CARD_RESET_RETRIES) &&
 3459              	 .loc 3 1014 0
 3460 0046 FB7B     	 ldrb r3,[r7,#15]
 3461 0048 192B     	 cmp r3,#25
 3462 004a DFD0     	 beq .L169
 3463              	.L168:
1016:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1017:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3464              	 .loc 3 1017 0
 3465 004c FB7B     	 ldrb r3,[r7,#15]
 3466 004e 002B     	 cmp r3,#0
 3467 0050 3ED1     	 bne .L170
1018:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1019:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Query and set voltage window  */
1020:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lQueryVoltage(obj, (uint32_t)obj->sdmmc_sd->card_info.rca);
 3468              	 .loc 3 1020 0
 3469 0052 7B68     	 ldr r3,[r7,#4]
 3470 0054 1B68     	 ldr r3,[r3]
 3471 0056 B3F84C30 	 ldrh r3,[r3,#76]
 3472 005a 7868     	 ldr r0,[r7,#4]
 3473 005c 1946     	 mov r1,r3
 3474 005e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lQueryVoltage
 3475 0062 0346     	 mov r3,r0
 3476 0064 FB73     	 strb r3,[r7,#15]
1021:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1022:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3477              	 .loc 3 1022 0
 3478 0066 FB7B     	 ldrb r3,[r7,#15]
 3479 0068 002B     	 cmp r3,#0
 3480 006a 31D1     	 bne .L170
1023:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1024:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read CID */
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1026:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3481              	 .loc 3 1026 0
 3482 006c 0123     	 movs r3,#1
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3483              	 .loc 3 1025 0
 3484 006e 5B00     	 lsls r3,r3,#1
 3485 0070 1A4A     	 ldr r2,.L173
 3486 0072 1A44     	 add r2,r2,r3
1027:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1028:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R2,
1029:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            (void *)obj->sdmmc_sd->card_info.cid);
 3487              	 .loc 3 1029 0
 3488 0074 7B68     	 ldr r3,[r7,#4]
 3489 0076 1B68     	 ldr r3,[r3]
 3490 0078 2433     	 adds r3,r3,#36
1025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(2)),
 3491              	 .loc 3 1025 0
 3492 007a 0093     	 str r3,[sp]
 3493 007c 7868     	 ldr r0,[r7,#4]
 3494 007e 1146     	 mov r1,r2
 3495 0080 0022     	 movs r2,#0
 3496 0082 0323     	 movs r3,#3
 3497 0084 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3498 0088 0346     	 mov r3,r0
 3499 008a FB73     	 strb r3,[r7,#15]
1030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3500              	 .loc 3 1031 0
 3501 008c FB7B     	 ldrb r3,[r7,#15]
 3502 008e 002B     	 cmp r3,#0
 3503 0090 1ED1     	 bne .L170
1032:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1033:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Read RCA */
1034:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReadRca(obj);
 3504              	 .loc 3 1034 0
 3505 0092 7868     	 ldr r0,[r7,#4]
 3506 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReadRca
 3507 0098 0346     	 mov r3,r0
 3508 009a FB73     	 strb r3,[r7,#15]
1035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3509              	 .loc 3 1035 0
 3510 009c FB7B     	 ldrb r3,[r7,#15]
 3511 009e 002B     	 cmp r3,#0
 3512 00a0 16D1     	 bne .L170
1036:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1037:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Check card lock/unlock status */
1038:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_GetLockStatus(obj, &lock_status);
 3513              	 .loc 3 1038 0
 3514 00a2 07F10D03 	 add r3,r7,#13
 3515 00a6 7868     	 ldr r0,[r7,#4]
 3516 00a8 1946     	 mov r1,r3
 3517 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetLockStatus
 3518 00ae 0346     	 mov r3,r0
 3519 00b0 FB73     	 strb r3,[r7,#15]
1039:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3520              	 .loc 3 1039 0
 3521 00b2 FB7B     	 ldrb r3,[r7,#15]
 3522 00b4 002B     	 cmp r3,#0
 3523 00b6 0BD1     	 bne .L170
1040:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1041:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             if (lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED)
 3524              	 .loc 3 1041 0
 3525 00b8 7B7B     	 ldrb r3,[r7,#13]
 3526 00ba 012B     	 cmp r3,#1
 3527 00bc 01D1     	 bne .L171
1042:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1043:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               status = SDMMC_BLOCK_MODE_STATUS_INITIALIZED_BUT_LOCKED;
 3528              	 .loc 3 1043 0
 3529 00be 2B23     	 movs r3,#43
 3530 00c0 FB73     	 strb r3,[r7,#15]
 3531              	.L171:
1044:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1045:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1046:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Update card initialization status */
1047:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->card_state &= (uint8_t)~((uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED |
 3532              	 .loc 3 1047 0
 3533 00c2 7B68     	 ldr r3,[r7,#4]
 3534 00c4 1B7A     	 ldrb r3,[r3,#8]
 3535 00c6 23F00303 	 bic r3,r3,#3
 3536 00ca DAB2     	 uxtb r2,r3
 3537 00cc 7B68     	 ldr r3,[r7,#4]
 3538 00ce 1A72     	 strb r2,[r3,#8]
 3539              	.L170:
1048:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                           (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD);
1049:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1050:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1051:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1052:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1053:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1054:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1055:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3540              	 .loc 3 1055 0
 3541 00d0 FB7B     	 ldrb r3,[r7,#15]
1056:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3542              	 .loc 3 1056 0
 3543 00d2 1846     	 mov r0,r3
 3544 00d4 1037     	 adds r7,r7,#16
 3545              	.LCFI242:
 3546              	 .cfi_def_cfa_offset 8
 3547 00d6 BD46     	 mov sp,r7
 3548              	.LCFI243:
 3549              	 .cfi_def_cfa_register 13
 3550              	 
 3551 00d8 80BD     	 pop {r7,pc}
 3552              	.L174:
 3553 00da 00BF     	 .align 2
 3554              	.L173:
 3555 00dc 00000000 	 .word sdmmc_block_command
 3556              	 .cfi_endproc
 3557              	.LFE236:
 3559              	 .section .text.SDMMC_BLOCK_SD_lWriteCardType,"ax",%progbits
 3560              	 .align 2
 3561              	 .thumb
 3562              	 .thumb_func
 3564              	SDMMC_BLOCK_SD_lWriteCardType:
 3565              	.LFB237:
1057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1058:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1059:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card type */
1060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lWriteCardType(SDMMC_BLOCK_t *const obj)
1061:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3566              	 .loc 3 1061 0
 3567              	 .cfi_startproc
 3568              	 
 3569              	 
 3570              	 
 3571 0000 80B4     	 push {r7}
 3572              	.LCFI244:
 3573              	 .cfi_def_cfa_offset 4
 3574              	 .cfi_offset 7,-4
 3575 0002 83B0     	 sub sp,sp,#12
 3576              	.LCFI245:
 3577              	 .cfi_def_cfa_offset 16
 3578 0004 00AF     	 add r7,sp,#0
 3579              	.LCFI246:
 3580              	 .cfi_def_cfa_register 7
 3581 0006 7860     	 str r0,[r7,#4]
1062:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If F8=0; standard capacity v1 card */
1063:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->f8 == (uint8_t)0U)
 3582              	 .loc 3 1063 0
 3583 0008 7B68     	 ldr r3,[r7,#4]
 3584 000a 1B68     	 ldr r3,[r3]
 3585 000c 93F85030 	 ldrb r3,[r3,#80]
 3586 0010 002B     	 cmp r3,#0
 3587 0012 07D1     	 bne .L176
1064:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1065:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_type |= (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V1X;
 3588              	 .loc 3 1065 0
 3589 0014 7B68     	 ldr r3,[r7,#4]
 3590 0016 5B7A     	 ldrb r3,[r3,#9]
 3591 0018 43F00203 	 orr r3,r3,#2
 3592 001c DAB2     	 uxtb r2,r3
 3593 001e 7B68     	 ldr r3,[r7,#4]
 3594 0020 5A72     	 strb r2,[r3,#9]
 3595 0022 15E0     	 b .L175
 3596              	.L176:
1066:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1067:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If F8=1; standard capacity v2 or high capacity card */
1068:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1069:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1070:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check CCS bit in the OCR register; CCS=1 implies a high capacity card */
1071:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)obj->sdmmc_sd->card_info.ocr & (uint32_t)SDMMC_BLOCK_OCR_CCS_BITMASK) != (uint32
 3597              	 .loc 3 1071 0
 3598 0024 7B68     	 ldr r3,[r7,#4]
 3599 0026 1B68     	 ldr r3,[r3]
 3600 0028 1B6A     	 ldr r3,[r3,#32]
 3601 002a 03F08043 	 and r3,r3,#1073741824
 3602 002e 002B     	 cmp r3,#0
 3603 0030 07D0     	 beq .L178
1072:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1073:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_type |= (uint8_t)((uint8_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY |
 3604              	 .loc 3 1073 0
 3605 0032 7B68     	 ldr r3,[r7,#4]
 3606 0034 5B7A     	 ldrb r3,[r3,#9]
 3607 0036 43F00C03 	 orr r3,r3,#12
 3608 003a DAB2     	 uxtb r2,r3
 3609 003c 7B68     	 ldr r3,[r7,#4]
 3610 003e 5A72     	 strb r2,[r3,#9]
 3611 0040 06E0     	 b .L175
 3612              	.L178:
1074:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                   (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING);
1075:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1076:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1077:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1078:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* CCS=0 implies standard capacity v2 */
1079:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_type |= (uint8_t)SDMMC_BLOCK_CARD_TYPE_STANDARD_CAPACITY_V2;
 3613              	 .loc 3 1079 0
 3614 0042 7B68     	 ldr r3,[r7,#4]
 3615 0044 5B7A     	 ldrb r3,[r3,#9]
 3616 0046 43F00103 	 orr r3,r3,#1
 3617 004a DAB2     	 uxtb r2,r3
 3618 004c 7B68     	 ldr r3,[r7,#4]
 3619 004e 5A72     	 strb r2,[r3,#9]
 3620              	.L175:
1080:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1081:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1082:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3621              	 .loc 3 1082 0
 3622 0050 0C37     	 adds r7,r7,#12
 3623              	.LCFI247:
 3624              	 .cfi_def_cfa_offset 4
 3625 0052 BD46     	 mov sp,r7
 3626              	.LCFI248:
 3627              	 .cfi_def_cfa_register 13
 3628              	 
 3629 0054 5DF8047B 	 ldr r7,[sp],#4
 3630              	.LCFI249:
 3631              	 .cfi_restore 7
 3632              	 .cfi_def_cfa_offset 0
 3633 0058 7047     	 bx lr
 3634              	 .cfi_endproc
 3635              	.LFE237:
 3637 005a 00BF     	 .section .text.SDMMC_BLOCK_SD_lGetWriteProtect,"ax",%progbits
 3638              	 .align 2
 3639              	 .thumb
 3640              	 .thumb_func
 3642              	SDMMC_BLOCK_SD_lGetWriteProtect:
 3643              	.LFB238:
1083:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1084:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check write protection status of card */
1085:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lGetWriteProtect(SDMMC_BLOCK_t *const obj)
1086:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3644              	 .loc 3 1086 0
 3645              	 .cfi_startproc
 3646              	 
 3647              	 
 3648 0000 80B5     	 push {r7,lr}
 3649              	.LCFI250:
 3650              	 .cfi_def_cfa_offset 8
 3651              	 .cfi_offset 7,-8
 3652              	 .cfi_offset 14,-4
 3653 0002 94B0     	 sub sp,sp,#80
 3654              	.LCFI251:
 3655              	 .cfi_def_cfa_offset 88
 3656 0004 00AF     	 add r7,sp,#0
 3657              	.LCFI252:
 3658              	 .cfi_def_cfa_register 7
 3659 0006 7860     	 str r0,[r7,#4]
1087:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sd_status[16] = {0U};
 3660              	 .loc 3 1087 0
 3661 0008 07F10803 	 add r3,r7,#8
 3662 000c 4022     	 movs r2,#64
 3663 000e 1846     	 mov r0,r3
 3664 0010 0021     	 movs r1,#0
 3665 0012 FFF7FEFF 	 bl memset
1088:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t write_protect;
1089:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3666              	 .loc 3 1089 0
 3667 0016 0123     	 movs r3,#1
 3668 0018 87F84F30 	 strb r3,[r7,#79]
1090:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1091:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetSdStatus(obj, (void *)&(sd_status[0]));
 3669              	 .loc 3 1091 0
 3670 001c 07F10803 	 add r3,r7,#8
 3671 0020 7868     	 ldr r0,[r7,#4]
 3672 0022 1946     	 mov r1,r3
 3673 0024 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSdStatus
 3674 0028 0346     	 mov r3,r0
 3675 002a 87F84F30 	 strb r3,[r7,#79]
1092:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3676              	 .loc 3 1092 0
 3677 002e 97F84F30 	 ldrb r3,[r7,#79]
 3678 0032 002B     	 cmp r3,#0
 3679 0034 13D1     	 bne .L180
1093:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1094:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Bits 480:495 in the SD status provides write protection information */
1095:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     write_protect = ((sd_status[0] & 0xFF000000U) >> 24U) | (((sd_status[0] & 0x00FF0000U) >> 16U) 
 3680              	 .loc 3 1095 0
 3681 0036 BB68     	 ldr r3,[r7,#8]
 3682 0038 1A0E     	 lsrs r2,r3,#24
 3683 003a BB68     	 ldr r3,[r7,#8]
 3684 003c 03F47F03 	 and r3,r3,#16711680
 3685 0040 1B0C     	 lsrs r3,r3,#16
 3686 0042 1B02     	 lsls r3,r3,#8
 3687 0044 1343     	 orrs r3,r3,r2
 3688 0046 BB64     	 str r3,[r7,#72]
1096:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((write_protect & SDMMC_BLOCK_SD_CARD_TYPE_BITMASK) != 0U)
 3689              	 .loc 3 1096 0
 3690 0048 BB6C     	 ldr r3,[r7,#72]
 3691 004a 9BB2     	 uxth r3,r3
 3692 004c 002B     	 cmp r3,#0
 3693 004e 06D0     	 beq .L180
1097:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1098:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED;
 3694              	 .loc 3 1098 0
 3695 0050 7B68     	 ldr r3,[r7,#4]
 3696 0052 1B7A     	 ldrb r3,[r3,#8]
 3697 0054 43F00403 	 orr r3,r3,#4
 3698 0058 DAB2     	 uxtb r2,r3
 3699 005a 7B68     	 ldr r3,[r7,#4]
 3700 005c 1A72     	 strb r2,[r3,#8]
 3701              	.L180:
1099:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3702              	 .loc 3 1102 0
 3703 005e 97F84F30 	 ldrb r3,[r7,#79]
1103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3704              	 .loc 3 1103 0
 3705 0062 1846     	 mov r0,r3
 3706 0064 5037     	 adds r7,r7,#80
 3707              	.LCFI253:
 3708              	 .cfi_def_cfa_offset 8
 3709 0066 BD46     	 mov sp,r7
 3710              	.LCFI254:
 3711              	 .cfi_def_cfa_register 13
 3712              	 
 3713 0068 80BD     	 pop {r7,pc}
 3714              	 .cfi_endproc
 3715              	.LFE238:
 3717 006a 00BF     	 .section .text.SDMMC_BLOCK_SD_lReadRca,"ax",%progbits
 3718              	 .align 2
 3719              	 .thumb
 3720              	 .thumb_func
 3722              	SDMMC_BLOCK_SD_lReadRca:
 3723              	.LFB239:
1104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Reads RCA (relative card address) of the card */
1106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadRca(SDMMC_BLOCK_t *const obj)
1107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3724              	 .loc 3 1107 0
 3725              	 .cfi_startproc
 3726              	 
 3727              	 
 3728 0000 80B5     	 push {r7,lr}
 3729              	.LCFI255:
 3730              	 .cfi_def_cfa_offset 8
 3731              	 .cfi_offset 7,-8
 3732              	 .cfi_offset 14,-4
 3733 0002 86B0     	 sub sp,sp,#24
 3734              	.LCFI256:
 3735              	 .cfi_def_cfa_offset 32
 3736 0004 02AF     	 add r7,sp,#8
 3737              	.LCFI257:
 3738              	 .cfi_def_cfa 7,24
 3739 0006 7860     	 str r0,[r7,#4]
1108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3740              	 .loc 3 1111 0
 3741 0008 0223     	 movs r3,#2
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3742              	 .loc 3 1110 0
 3743 000a 5B00     	 lsls r3,r3,#1
 3744 000c 094A     	 ldr r2,.L184
 3745 000e 1A44     	 add r2,r2,r3
1112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        SDMMC_BLOCK_ARGUMENT0,
1113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R6,
1114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(obj->sdmmc_sd->card_info.rca));
 3746              	 .loc 3 1114 0
 3747 0010 7B68     	 ldr r3,[r7,#4]
 3748 0012 1B68     	 ldr r3,[r3]
 3749 0014 4C33     	 adds r3,r3,#76
1110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(3)),
 3750              	 .loc 3 1110 0
 3751 0016 0093     	 str r3,[sp]
 3752 0018 7868     	 ldr r0,[r7,#4]
 3753 001a 1146     	 mov r1,r2
 3754 001c 0022     	 movs r2,#0
 3755 001e 0523     	 movs r3,#5
 3756 0020 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3757 0024 0346     	 mov r3,r0
 3758 0026 FB73     	 strb r3,[r7,#15]
1115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3759              	 .loc 3 1115 0
 3760 0028 FB7B     	 ldrb r3,[r7,#15]
1116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3761              	 .loc 3 1116 0
 3762 002a 1846     	 mov r0,r3
 3763 002c 1037     	 adds r7,r7,#16
 3764              	.LCFI258:
 3765              	 .cfi_def_cfa_offset 8
 3766 002e BD46     	 mov sp,r7
 3767              	.LCFI259:
 3768              	 .cfi_def_cfa_register 13
 3769              	 
 3770 0030 80BD     	 pop {r7,pc}
 3771              	.L185:
 3772 0032 00BF     	 .align 2
 3773              	.L184:
 3774 0034 00000000 	 .word sdmmc_block_command
 3775              	 .cfi_endproc
 3776              	.LFE239:
 3778              	 .section .text.SDMMC_BLOCK_SD_lReadCardRegisters,"ax",%progbits
 3779              	 .align 2
 3780              	 .thumb
 3781              	 .thumb_func
 3783              	SDMMC_BLOCK_SD_lReadCardRegisters:
 3784              	.LFB240:
1117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read the CSD, SCR and Write protection status of the card */
1119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lReadCardRegisters(SDMMC_BLOCK_t *const obj)
1120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3785              	 .loc 3 1120 0
 3786              	 .cfi_startproc
 3787              	 
 3788              	 
 3789 0000 80B5     	 push {r7,lr}
 3790              	.LCFI260:
 3791              	 .cfi_def_cfa_offset 8
 3792              	 .cfi_offset 7,-8
 3793              	 .cfi_offset 14,-4
 3794 0002 8AB0     	 sub sp,sp,#40
 3795              	.LCFI261:
 3796              	 .cfi_def_cfa_offset 48
 3797 0004 02AF     	 add r7,sp,#8
 3798              	.LCFI262:
 3799              	 .cfi_def_cfa 7,40
 3800 0006 7860     	 str r0,[r7,#4]
1121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 3801              	 .loc 3 1121 0
 3802 0008 0023     	 movs r3,#0
 3803 000a BB61     	 str r3,[r7,#24]
1122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 3804              	 .loc 3 1122 0
 3805 000c 0023     	 movs r3,#0
 3806 000e 3B61     	 str r3,[r7,#16]
1123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_SCR_t scr_content = {0U};
 3807              	 .loc 3 1124 0
 3808 0010 0023     	 movs r3,#0
 3809 0012 BB60     	 str r3,[r7,#8]
 3810 0014 0023     	 movs r3,#0
 3811 0016 FB60     	 str r3,[r7,#12]
1125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t card_lock = (obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED);
 3812              	 .loc 3 1125 0
 3813 0018 7B68     	 ldr r3,[r7,#4]
 3814 001a 1B7A     	 ldrb r3,[r3,#8]
 3815 001c 03F00803 	 and r3,r3,#8
 3816 0020 FB75     	 strb r3,[r7,#23]
1126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read CSD Register  */
1128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint16_t)SDMMC_BLOCK_ARG_RCA_BITPOS)
 3817              	 .loc 3 1128 0
 3818 0022 7B68     	 ldr r3,[r7,#4]
 3819 0024 1B68     	 ldr r3,[r3]
 3820 0026 B3F84C30 	 ldrh r3,[r3,#76]
 3821 002a 1B04     	 lsls r3,r3,#16
 3822 002c BA69     	 ldr r2,[r7,#24]
 3823 002e 1343     	 orrs r3,r3,r2
 3824 0030 BB61     	 str r3,[r7,#24]
1129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3825              	 .loc 3 1131 0
 3826 0032 0723     	 movs r3,#7
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3827              	 .loc 3 1130 0
 3828 0034 5B00     	 lsls r3,r3,#1
 3829 0036 3C4A     	 ldr r2,.L191
 3830 0038 1A44     	 add r2,r2,r3
1132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
1133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R2,
1134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        (void *)obj->sdmmc_sd->card_info.csd);
 3831              	 .loc 3 1134 0
 3832 003a 7B68     	 ldr r3,[r7,#4]
 3833 003c 1B68     	 ldr r3,[r3]
 3834 003e 3433     	 adds r3,r3,#52
1130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(9)),
 3835              	 .loc 3 1130 0
 3836 0040 0093     	 str r3,[sp]
 3837 0042 7868     	 ldr r0,[r7,#4]
 3838 0044 1146     	 mov r1,r2
 3839 0046 BA69     	 ldr r2,[r7,#24]
 3840 0048 0323     	 movs r3,#3
 3841 004a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3842 004e 0346     	 mov r3,r0
 3843 0050 FB77     	 strb r3,[r7,#31]
1135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (card_lock == (uint8_t)0U))
 3844              	 .loc 3 1136 0
 3845 0052 FB7F     	 ldrb r3,[r7,#31]
 3846 0054 002B     	 cmp r3,#0
 3847 0056 55D1     	 bne .L187
 3848              	 .loc 3 1136 0 is_stmt 0 discriminator 1
 3849 0058 FB7D     	 ldrb r3,[r7,#23]
 3850 005a 002B     	 cmp r3,#0
 3851 005c 52D1     	 bne .L187
1137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set write protection flags */
1139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lGetWriteProtect(obj);
 3852              	 .loc 3 1139 0 is_stmt 1
 3853 005e 7868     	 ldr r0,[r7,#4]
 3854 0060 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lGetWriteProtect
 3855 0064 0346     	 mov r3,r0
 3856 0066 FB77     	 strb r3,[r7,#31]
1140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3857              	 .loc 3 1141 0
 3858 0068 FB7F     	 ldrb r3,[r7,#31]
 3859 006a 002B     	 cmp r3,#0
 3860 006c 49D1     	 bne .L188
1142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read SCR register for SD card */
1144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint8_t)obj->card_type & (uint8_t)SDMMC_BLOCK_CARD_TYPE_MMC) == 0U)
 3861              	 .loc 3 1144 0
 3862 006e 7B68     	 ldr r3,[r7,#4]
 3863 0070 5B7A     	 ldrb r3,[r3,#9]
 3864 0072 03F01003 	 and r3,r3,#16
 3865 0076 002B     	 cmp r3,#0
 3866 0078 43D1     	 bne .L188
1145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Switch to Transferring State. */
1147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 3867              	 .loc 3 1147 0
 3868 007a 7868     	 ldr r0,[r7,#4]
 3869 007c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 3870 0080 0346     	 mov r3,r0
 3871 0082 FB77     	 strb r3,[r7,#31]
1148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3872              	 .loc 3 1149 0
 3873 0084 FB7F     	 ldrb r3,[r7,#31]
 3874 0086 002B     	 cmp r3,#0
 3875 0088 3BD1     	 bne .L188
1150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Send application specific command CMD55 */
1152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA
 3876              	 .loc 3 1152 0
 3877 008a 7B68     	 ldr r3,[r7,#4]
 3878 008c 1B68     	 ldr r3,[r3]
 3879 008e B3F84C30 	 ldrh r3,[r3,#76]
 3880 0092 1B04     	 lsls r3,r3,#16
 3881 0094 BA69     	 ldr r2,[r7,#24]
 3882 0096 1343     	 orrs r3,r3,r2
 3883 0098 BB61     	 str r3,[r7,#24]
1153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lSendCommand(obj,
1155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3884              	 .loc 3 1155 0
 3885 009a 1923     	 movs r3,#25
1154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 3886              	 .loc 3 1154 0
 3887 009c 5B00     	 lsls r3,r3,#1
 3888 009e 224A     	 ldr r2,.L191
 3889 00a0 1A44     	 add r2,r2,r3
 3890 00a2 07F11003 	 add r3,r7,#16
 3891 00a6 0093     	 str r3,[sp]
 3892 00a8 7868     	 ldr r0,[r7,#4]
 3893 00aa 1146     	 mov r1,r2
 3894 00ac BA69     	 ldr r2,[r7,#24]
 3895 00ae 0123     	 movs r3,#1
 3896 00b0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 3897 00b4 0346     	 mov r3,r0
 3898 00b6 FB77     	 strb r3,[r7,#31]
1156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                arg,
1157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                XMC_SDMMC_RESPONSE_TYPE_R1,
1158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                &card_status);
1159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 3899              	 .loc 3 1160 0
 3900 00b8 FB7F     	 ldrb r3,[r7,#31]
 3901 00ba 002B     	 cmp r3,#0
 3902 00bc 21D1     	 bne .L188
1161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Set direction select bit */
1163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_T
 3903              	 .loc 3 1163 0
 3904 00be 7B68     	 ldr r3,[r7,#4]
 3905 00c0 1B68     	 ldr r3,[r3]
 3906 00c2 1B68     	 ldr r3,[r3]
 3907 00c4 1846     	 mov r0,r3
 3908 00c6 0121     	 movs r1,#1
 3909 00c8 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
1164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /* Read the transferred SCR data */
1166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
1167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          &(SDMMC_BLOCK_SD_COMMAND(64)),
 3910              	 .loc 3 1167 0
 3911 00cc 2123     	 movs r3,#33
1166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          &(SDMMC_BLOCK_SD_COMMAND(64)),
 3912              	 .loc 3 1166 0
 3913 00ce 5B00     	 lsls r3,r3,#1
 3914 00d0 154A     	 ldr r2,.L191
 3915 00d2 1A44     	 add r2,r2,r3
 3916 00d4 07F10803 	 add r3,r7,#8
 3917 00d8 0093     	 str r3,[sp]
 3918 00da 0123     	 movs r3,#1
 3919 00dc 0193     	 str r3,[sp,#4]
 3920 00de 7868     	 ldr r0,[r7,#4]
 3921 00e0 1146     	 mov r1,r2
 3922 00e2 0022     	 movs r2,#0
 3923 00e4 0823     	 movs r3,#8
 3924 00e6 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 3925 00ea 0346     	 mov r3,r0
 3926 00ec FB77     	 strb r3,[r7,#31]
1168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint32_t)SDMMC_BLOCK_ARGUMENT0,
1169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint16_t)8U,
1170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          (uint32_t *)&scr_content,
1171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                          SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
1172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->sdmmc_sd->card_info.scr = scr_content;
 3927              	 .loc 3 1173 0
 3928 00ee 7B68     	 ldr r3,[r7,#4]
 3929 00f0 1B68     	 ldr r3,[r3]
 3930 00f2 4433     	 adds r3,r3,#68
 3931 00f4 07F10802 	 add r2,r7,#8
 3932 00f8 92E80300 	 ldmia r2,{r0,r1}
 3933 00fc 83E80300 	 stmia r3,{r0,r1}
1141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 3934              	 .loc 3 1141 0
 3935 0100 0CE0     	 b .L189
 3936              	.L188:
 3937 0102 0BE0     	 b .L189
 3938              	.L187:
1174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 3939              	 .loc 3 1181 0
 3940 0104 7868     	 ldr r0,[r7,#4]
 3941 0106 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 3942 010a 0346     	 mov r3,r0
 3943 010c FB77     	 strb r3,[r7,#31]
1182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST);
 3944              	 .loc 3 1182 0
 3945 010e 7B68     	 ldr r3,[r7,#4]
 3946 0110 1B68     	 ldr r3,[r3]
 3947 0112 1B68     	 ldr r3,[r3]
 3948 0114 1846     	 mov r0,r3
 3949 0116 0121     	 movs r1,#1
 3950 0118 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
 3951              	.L189:
1183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 3952              	 .loc 3 1185 0
 3953 011c FB7F     	 ldrb r3,[r7,#31]
1186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 3954              	 .loc 3 1186 0
 3955 011e 1846     	 mov r0,r3
 3956 0120 2037     	 adds r7,r7,#32
 3957              	.LCFI263:
 3958              	 .cfi_def_cfa_offset 8
 3959 0122 BD46     	 mov sp,r7
 3960              	.LCFI264:
 3961              	 .cfi_def_cfa_register 13
 3962              	 
 3963 0124 80BD     	 pop {r7,pc}
 3964              	.L192:
 3965 0126 00BF     	 .align 2
 3966              	.L191:
 3967 0128 00000000 	 .word sdmmc_block_command
 3968              	 .cfi_endproc
 3969              	.LFE240:
 3971              	 .section .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer,"ax",%progbits
 3972              	 .align 2
 3973              	 .thumb
 3974              	 .thumb_func
 3976              	SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:
 3977              	.LFB241:
1187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Configure the registers for a single block transfer */
1189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(SDMMC_BLOCK_t *const 
1190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               const XMC_SDMMC_COMMA
1191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               uint32_t arg,
1192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                               uint16_t block_size)
1193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 3978              	 .loc 3 1193 0
 3979              	 .cfi_startproc
 3980              	 
 3981              	 
 3982 0000 80B5     	 push {r7,lr}
 3983              	.LCFI265:
 3984              	 .cfi_def_cfa_offset 8
 3985              	 .cfi_offset 7,-8
 3986              	 .cfi_offset 14,-4
 3987 0002 8CB0     	 sub sp,sp,#48
 3988              	.LCFI266:
 3989              	 .cfi_def_cfa_offset 56
 3990 0004 02AF     	 add r7,sp,#8
 3991              	.LCFI267:
 3992              	 .cfi_def_cfa 7,48
 3993 0006 F860     	 str r0,[r7,#12]
 3994 0008 B960     	 str r1,[r7,#8]
 3995 000a 7A60     	 str r2,[r7,#4]
 3996 000c 7B80     	 strh r3,[r7,#2]
1194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 3997              	 .loc 3 1194 0
 3998 000e 0123     	 movs r3,#1
 3999 0010 87F82730 	 strb r3,[r7,#39]
1195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4000              	 .loc 3 1195 0
 4001 0014 0023     	 movs r3,#0
 4002 0016 3B62     	 str r3,[r7,#32]
1196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_TRANSFER_MODE_t response;
1197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.block_size = block_size;
 4003              	 .loc 3 1198 0
 4004 0018 7B88     	 ldrh r3,[r7,#2]
 4005 001a 7B61     	 str r3,[r7,#20]
1199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.type = XMC_SDMMC_TRANSFER_MODE_TYPE_SINGLE;
 4006              	 .loc 3 1199 0
 4007 001c 0023     	 movs r3,#0
 4008 001e 3B77     	 strb r3,[r7,#28]
1200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.auto_cmd = XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_DISABLED;
 4009              	 .loc 3 1200 0
 4010 0020 0023     	 movs r3,#0
 4011 0022 7B77     	 strb r3,[r7,#29]
1201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetDataTransferMode(obj->sdmmc_sd->sdmmc, &response);
 4012              	 .loc 3 1202 0
 4013 0024 FB68     	 ldr r3,[r7,#12]
 4014 0026 1B68     	 ldr r3,[r3]
 4015 0028 1A68     	 ldr r2,[r3]
 4016 002a 07F11403 	 add r3,r7,#20
 4017 002e 1046     	 mov r0,r2
 4018 0030 1946     	 mov r1,r3
 4019 0032 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferMode
1203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj, cmd, arg, XMC_SDMMC_RESPONSE_TYPE_R1, &card_status);
 4020              	 .loc 3 1204 0
 4021 0036 07F12003 	 add r3,r7,#32
 4022 003a 0093     	 str r3,[sp]
 4023 003c F868     	 ldr r0,[r7,#12]
 4024 003e B968     	 ldr r1,[r7,#8]
 4025 0040 7A68     	 ldr r2,[r7,#4]
 4026 0042 0123     	 movs r3,#1
 4027 0044 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4028 0048 0346     	 mov r3,r0
 4029 004a 87F82730 	 strb r3,[r7,#39]
1205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4030              	 .loc 3 1206 0
 4031 004e 97F82730 	 ldrb r3,[r7,#39]
1207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4032              	 .loc 3 1207 0
 4033 0052 1846     	 mov r0,r3
 4034 0054 2837     	 adds r7,r7,#40
 4035              	.LCFI268:
 4036              	 .cfi_def_cfa_offset 8
 4037 0056 BD46     	 mov sp,r7
 4038              	.LCFI269:
 4039              	 .cfi_def_cfa_register 13
 4040              	 
 4041 0058 80BD     	 pop {r7,pc}
 4042              	 .cfi_endproc
 4043              	.LFE241:
 4045 005a 00BF     	 .section .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer,"ax",%progbits
 4046              	 .align 2
 4047              	 .thumb
 4048              	 .thumb_func
 4050              	SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:
 4051              	.LFB242:
1208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Configure the registers for a multi-block transfer */
1210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer(SDMMC_BLOCK_t *const o
1211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              uint32_t *arg,
1212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              uint32_t num_blocks,
1213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                              const XMC_SDMMC_COMMAN
1214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4052              	 .loc 3 1214 0
 4053              	 .cfi_startproc
 4054              	 
 4055              	 
 4056 0000 80B5     	 push {r7,lr}
 4057              	.LCFI270:
 4058              	 .cfi_def_cfa_offset 8
 4059              	 .cfi_offset 7,-8
 4060              	 .cfi_offset 14,-4
 4061 0002 8CB0     	 sub sp,sp,#48
 4062              	.LCFI271:
 4063              	 .cfi_def_cfa_offset 56
 4064 0004 02AF     	 add r7,sp,#8
 4065              	.LCFI272:
 4066              	 .cfi_def_cfa 7,48
 4067 0006 F860     	 str r0,[r7,#12]
 4068 0008 B960     	 str r1,[r7,#8]
 4069 000a 7A60     	 str r2,[r7,#4]
 4070 000c 3B60     	 str r3,[r7]
1215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4071              	 .loc 3 1216 0
 4072 000e 0023     	 movs r3,#0
 4073 0010 3B62     	 str r3,[r7,#32]
1217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_TRANSFER_MODE_t response;
1218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Block addressing */
1220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint8_t)obj->card_type & (uint8_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint8_t)0U)
 4074              	 .loc 3 1220 0
 4075 0012 FB68     	 ldr r3,[r7,#12]
 4076 0014 5B7A     	 ldrb r3,[r3,#9]
 4077 0016 03F00803 	 and r3,r3,#8
 4078 001a 002B     	 cmp r3,#0
 4079 001c 04D1     	 bne .L196
1221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *arg *= (uint32_t)512U;
 4080              	 .loc 3 1222 0
 4081 001e BB68     	 ldr r3,[r7,#8]
 4082 0020 1B68     	 ldr r3,[r3]
 4083 0022 5A02     	 lsls r2,r3,#9
 4084 0024 BB68     	 ldr r3,[r7,#8]
 4085 0026 1A60     	 str r2,[r3]
 4086              	.L196:
1223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.block_size = SDMMC_BLOCK_TX_BLOCK_SIZE_VALUE;
 4087              	 .loc 3 1225 0
 4088 0028 4FF40073 	 mov r3,#512
 4089 002c 7B61     	 str r3,[r7,#20]
1226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.num_blocks = num_blocks;
 4090              	 .loc 3 1226 0
 4091 002e 7B68     	 ldr r3,[r7,#4]
 4092 0030 BB61     	 str r3,[r7,#24]
1227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.type = XMC_SDMMC_TRANSFER_MODE_TYPE_MULTIPLE;
 4093              	 .loc 3 1227 0
 4094 0032 2223     	 movs r3,#34
 4095 0034 3B77     	 strb r3,[r7,#28]
1228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   response.auto_cmd = XMC_SDMMC_TRANSFER_MODE_AUTO_CMD_12;
 4096              	 .loc 3 1228 0
 4097 0036 0123     	 movs r3,#1
 4098 0038 7B77     	 strb r3,[r7,#29]
1229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_SetDataTransferMode(obj->sdmmc_sd->sdmmc, &response);
 4099              	 .loc 3 1230 0
 4100 003a FB68     	 ldr r3,[r7,#12]
 4101 003c 1B68     	 ldr r3,[r3]
 4102 003e 1A68     	 ldr r2,[r3]
 4103 0040 07F11403 	 add r3,r7,#20
 4104 0044 1046     	 mov r0,r2
 4105 0046 1946     	 mov r1,r3
 4106 0048 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferMode
1231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable ACMD 12 interrupt signal */
1233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_ACMD_ERR);
 4107              	 .loc 3 1233 0
 4108 004c FB68     	 ldr r3,[r7,#12]
 4109 004e 1B68     	 ldr r3,[r3]
 4110 0050 1B68     	 ldr r3,[r3]
 4111 0052 1846     	 mov r0,r3
 4112 0054 4FF08071 	 mov r1,#16777216
 4113 0058 FFF7FEFF 	 bl XMC_SDMMC_EnableEvent
1234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send multiple block transfer command */
1236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj, cmd, *arg, XMC_SDMMC_RESPONSE_TYPE_R1, &card_status);
 4114              	 .loc 3 1236 0
 4115 005c BB68     	 ldr r3,[r7,#8]
 4116 005e 1A68     	 ldr r2,[r3]
 4117 0060 07F12003 	 add r3,r7,#32
 4118 0064 0093     	 str r3,[sp]
 4119 0066 F868     	 ldr r0,[r7,#12]
 4120 0068 3968     	 ldr r1,[r7]
 4121 006a 0123     	 movs r3,#1
 4122 006c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4123 0070 0346     	 mov r3,r0
 4124 0072 87F82730 	 strb r3,[r7,#39]
1237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4125              	 .loc 3 1238 0
 4126 0076 97F82730 	 ldrb r3,[r7,#39]
1239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4127              	 .loc 3 1239 0
 4128 007a 1846     	 mov r0,r3
 4129 007c 2837     	 adds r7,r7,#40
 4130              	.LCFI273:
 4131              	 .cfi_def_cfa_offset 8
 4132 007e BD46     	 mov sp,r7
 4133              	.LCFI274:
 4134              	 .cfi_def_cfa_register 13
 4135              	 
 4136 0080 80BD     	 pop {r7,pc}
 4137              	 .cfi_endproc
 4138              	.LFE242:
 4140 0082 00BF     	 .section .text.SDMMC_BLOCK_SD_lMultiBlockTransfer,"ax",%progbits
 4141              	 .align 2
 4142              	 .thumb
 4143              	 .thumb_func
 4145              	SDMMC_BLOCK_SD_lMultiBlockTransfer:
 4146              	.LFB243:
1240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Transfer multiple blocks of data */
1242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lMultiBlockTransfer(SDMMC_BLOCK_t *const obj,
1243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t *addr,
1244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t num_blocks,
1245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     const XMC_SDMMC_COMMAND_t *cmd,
1246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     uint32_t *buf,
1247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                     SDMMC_BLOCK_SD_DATA_TRANSFER_t 
1248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4147              	 .loc 3 1248 0
 4148              	 .cfi_startproc
 4149              	 
 4150              	 
 4151 0000 80B5     	 push {r7,lr}
 4152              	.LCFI275:
 4153              	 .cfi_def_cfa_offset 8
 4154              	 .cfi_offset 7,-8
 4155              	 .cfi_offset 14,-4
 4156 0002 86B0     	 sub sp,sp,#24
 4157              	.LCFI276:
 4158              	 .cfi_def_cfa_offset 32
 4159 0004 00AF     	 add r7,sp,#0
 4160              	.LCFI277:
 4161              	 .cfi_def_cfa_register 7
 4162 0006 F860     	 str r0,[r7,#12]
 4163 0008 B960     	 str r1,[r7,#8]
 4164 000a 7A60     	 str r2,[r7,#4]
 4165 000c 3B60     	 str r3,[r7]
1249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4166              	 .loc 3 1250 0
 4167 000e FB68     	 ldr r3,[r7,#12]
 4168 0010 1B68     	 ldr r3,[r3]
 4169 0012 0122     	 movs r2,#1
 4170 0014 9A76     	 strb r2,[r3,#26]
1251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Configure registers for Multi block transfer*/
1253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer(obj, addr, (uint32_t)num_blocks, cmd);
 4171              	 .loc 3 1253 0
 4172 0016 F868     	 ldr r0,[r7,#12]
 4173 0018 B968     	 ldr r1,[r7,#8]
 4174 001a 7A68     	 ldr r2,[r7,#4]
 4175 001c 3B68     	 ldr r3,[r7]
 4176 001e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer
 4177 0022 0346     	 mov r3,r0
 4178 0024 FB75     	 strb r3,[r7,#23]
1254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4179              	 .loc 3 1254 0
 4180 0026 FB7D     	 ldrb r3,[r7,#23]
 4181 0028 002B     	 cmp r3,#0
 4182 002a 2CD1     	 bne .L199
1255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Read/write block data */
1257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     while ((uint32_t)num_blocks > 0U)
 4183              	 .loc 3 1257 0
 4184 002c 14E0     	 b .L200
 4185              	.L203:
1258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Perform Transfer */
1260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lDataTransfer(obj, buf, transfer_mode, SDMMC_BLOCK_NUM_QUADLETS_IN_BL
 4186              	 .loc 3 1260 0
 4187 002e 97F82430 	 ldrb r3,[r7,#36]
 4188 0032 F868     	 ldr r0,[r7,#12]
 4189 0034 396A     	 ldr r1,[r7,#32]
 4190 0036 1A46     	 mov r2,r3
 4191 0038 8023     	 movs r3,#128
 4192 003a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDataTransfer
 4193 003e 0346     	 mov r3,r0
 4194 0040 FB75     	 strb r3,[r7,#23]
1261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4195              	 .loc 3 1261 0
 4196 0042 FB7D     	 ldrb r3,[r7,#23]
 4197 0044 002B     	 cmp r3,#0
 4198 0046 00D0     	 beq .L201
1262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 4199              	 .loc 3 1263 0
 4200 0048 09E0     	 b .L202
 4201              	.L201:
1264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Decrement number of blocks */
1266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       num_blocks--;
 4202              	 .loc 3 1266 0
 4203 004a 7B68     	 ldr r3,[r7,#4]
 4204 004c 013B     	 subs r3,r3,#1
 4205 004e 7B60     	 str r3,[r7,#4]
1267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Pointer pointing to the next block pointer */
1268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       buf += (uint32_t)SDMMC_BLOCK_NUM_QUADLETS_IN_BLOCK;
 4206              	 .loc 3 1268 0
 4207 0050 3B6A     	 ldr r3,[r7,#32]
 4208 0052 03F50073 	 add r3,r3,#512
 4209 0056 3B62     	 str r3,[r7,#32]
 4210              	.L200:
1257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
 4211              	 .loc 3 1257 0
 4212 0058 7B68     	 ldr r3,[r7,#4]
 4213 005a 002B     	 cmp r3,#0
 4214 005c E7D1     	 bne .L203
 4215              	.L202:
1269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4216              	 .loc 3 1271 0
 4217 005e FB7D     	 ldrb r3,[r7,#23]
 4218 0060 002B     	 cmp r3,#0
 4219 0062 10D1     	 bne .L199
1272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block on transfer complete interrupt */
1274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Timeout: 5ms */
1275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lTransferDelay(obj, SDMMC_BLOCK_DELAY_IN_TRANSFER);
 4220              	 .loc 3 1275 0
 4221 0064 F868     	 ldr r0,[r7,#12]
 4222 0066 0A49     	 ldr r1,.L205
 4223 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lTransferDelay
 4224 006c 0346     	 mov r3,r0
 4225 006e FB75     	 strb r3,[r7,#23]
1276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4226              	 .loc 3 1276 0
 4227 0070 FB7D     	 ldrb r3,[r7,#23]
 4228 0072 002B     	 cmp r3,#0
 4229 0074 07D1     	 bne .L199
1277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check if transfer happened successfully; Check ACMD status */
1279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->acmd_int_err == SDMMC_BLOCK_MODE_STATUS_ACMD1
 4230              	 .loc 3 1279 0
 4231 0076 FB68     	 ldr r3,[r7,#12]
 4232 0078 1B68     	 ldr r3,[r3]
 4233 007a DB7E     	 ldrb r3,[r3,#27]
 4234 007c 092B     	 cmp r3,#9
 4235 007e 02D1     	 bne .L199
1280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Call ACMD12 error recovery */
1282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           SDMMC_BLOCK_SD_lAcmdErrorRecovery(obj);
 4236              	 .loc 3 1282 0
 4237 0080 F868     	 ldr r0,[r7,#12]
 4238 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lAcmdErrorRecovery
 4239              	.L199:
1283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4240              	 .loc 3 1287 0
 4241 0086 FB7D     	 ldrb r3,[r7,#23]
1288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4242              	 .loc 3 1288 0
 4243 0088 1846     	 mov r0,r3
 4244 008a 1837     	 adds r7,r7,#24
 4245              	.LCFI278:
 4246              	 .cfi_def_cfa_offset 8
 4247 008c BD46     	 mov sp,r7
 4248              	.LCFI279:
 4249              	 .cfi_def_cfa_register 13
 4250              	 
 4251 008e 80BD     	 pop {r7,pc}
 4252              	.L206:
 4253              	 .align 2
 4254              	.L205:
 4255 0090 40420F00 	 .word 1000000
 4256              	 .cfi_endproc
 4257              	.LFE243:
 4259              	 .section .text.SDMMC_BLOCK_SD_lSingleBlockTransfer,"ax",%progbits
 4260              	 .align 2
 4261              	 .thumb
 4262              	 .thumb_func
 4264              	SDMMC_BLOCK_SD_lSingleBlockTransfer:
 4265              	.LFB244:
1289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Performs single block transfer */
1291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSingleBlockTransfer(SDMMC_BLOCK_t *const obj,
1292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      const XMC_SDMMC_COMMAND_t *cmd
1293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t arg,
1294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint16_t block_size,
1295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t *buf,
1296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      SDMMC_BLOCK_SD_DATA_TRANSFER_t
1297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4266              	 .loc 3 1297 0
 4267              	 .cfi_startproc
 4268              	 
 4269              	 
 4270 0000 80B5     	 push {r7,lr}
 4271              	.LCFI280:
 4272              	 .cfi_def_cfa_offset 8
 4273              	 .cfi_offset 7,-8
 4274              	 .cfi_offset 14,-4
 4275 0002 86B0     	 sub sp,sp,#24
 4276              	.LCFI281:
 4277              	 .cfi_def_cfa_offset 32
 4278 0004 00AF     	 add r7,sp,#0
 4279              	.LCFI282:
 4280              	 .cfi_def_cfa_register 7
 4281 0006 F860     	 str r0,[r7,#12]
 4282 0008 B960     	 str r1,[r7,#8]
 4283 000a 7A60     	 str r2,[r7,#4]
 4284 000c 7B80     	 strh r3,[r7,#2]
1298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t qbytes = (uint32_t)(((((uint32_t)block_size + 3UL) >> 2U) << 2U) >> 2U);
 4285              	 .loc 3 1299 0
 4286 000e 7B88     	 ldrh r3,[r7,#2]
 4287 0010 0333     	 adds r3,r3,#3
 4288 0012 9B08     	 lsrs r3,r3,#2
 4289 0014 3B61     	 str r3,[r7,#16]
1300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer(obj, cmd, arg, block_size);
 4290              	 .loc 3 1301 0
 4291 0016 7B88     	 ldrh r3,[r7,#2]
 4292 0018 F868     	 ldr r0,[r7,#12]
 4293 001a B968     	 ldr r1,[r7,#8]
 4294 001c 7A68     	 ldr r2,[r7,#4]
 4295 001e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer
 4296 0022 0346     	 mov r3,r0
 4297 0024 FB75     	 strb r3,[r7,#23]
1302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4298              	 .loc 3 1302 0
 4299 0026 FB7D     	 ldrb r3,[r7,#23]
 4300 0028 002B     	 cmp r3,#0
 4301 002a 49D1     	 bne .L208
1303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Perform data transfer */
1305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lDataTransfer(obj, buf, transfer_mode, qbytes);
 4302              	 .loc 3 1305 0
 4303 002c 97F82430 	 ldrb r3,[r7,#36]
 4304 0030 F868     	 ldr r0,[r7,#12]
 4305 0032 396A     	 ldr r1,[r7,#32]
 4306 0034 1A46     	 mov r2,r3
 4307 0036 3B69     	 ldr r3,[r7,#16]
 4308 0038 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lDataTransfer
 4309 003c 0346     	 mov r3,r0
 4310 003e FB75     	 strb r3,[r7,#23]
1306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4311              	 .loc 3 1306 0
 4312 0040 FB7D     	 ldrb r3,[r7,#23]
 4313 0042 002B     	 cmp r3,#0
 4314 0044 3CD1     	 bne .L208
1307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block on transfer complete interrupt */
1309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lStartTimer(obj, SDMMC_BLOCK_DELAY_IN_TRANSFER);
 4315              	 .loc 3 1309 0
 4316 0046 F868     	 ldr r0,[r7,#12]
 4317 0048 2049     	 ldr r1,.L214
 4318 004a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 4319 004e 0346     	 mov r3,r0
 4320 0050 FB75     	 strb r3,[r7,#23]
1310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4321              	 .loc 3 1310 0
 4322 0052 FB7D     	 ldrb r3,[r7,#23]
 4323 0054 002B     	 cmp r3,#0
 4324 0056 02D0     	 beq .L209
1311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4325              	 .loc 3 1312 0
 4326 0058 2E23     	 movs r3,#46
 4327 005a FB75     	 strb r3,[r7,#23]
 4328 005c 30E0     	 b .L208
 4329              	.L209:
1313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         do
1317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 4330              	 .loc 3 1318 0
 4331 005e FB68     	 ldr r3,[r7,#12]
 4332 0060 1B68     	 ldr r3,[r3]
 4333 0062 93F85C30 	 ldrb r3,[r3,#92]
 4334 0066 DBB2     	 uxtb r3,r3
 4335 0068 83F00103 	 eor r3,r3,#1
 4336 006c DBB2     	 uxtb r3,r3
 4337 006e 002B     	 cmp r3,#0
 4338 0070 02D0     	 beq .L210
1319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4339              	 .loc 3 1320 0
 4340 0072 2E23     	 movs r3,#46
 4341 0074 FB75     	 strb r3,[r7,#23]
1321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             break;
 4342              	 .loc 3 1321 0
 4343 0076 04E0     	 b .L211
 4344              	.L210:
1322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         } while ((uint8_t)obj->sdmmc_sd->isr_context.transfer_flag == (uint8_t)0U);
 4345              	 .loc 3 1323 0
 4346 0078 FB68     	 ldr r3,[r7,#12]
 4347 007a 1B68     	 ldr r3,[r3]
 4348 007c 1B7A     	 ldrb r3,[r3,#8]
 4349 007e 002B     	 cmp r3,#0
 4350 0080 EDD0     	 beq .L209
 4351              	.L211:
1324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Stop timer and delete it */
1326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 4352              	 .loc 3 1326 0
 4353 0082 F868     	 ldr r0,[r7,#12]
 4354 0084 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SYSTIMER_DeleteTimer((uint32_t)obj->sdmmc_sd->tmr_id);
 4355              	 .loc 3 1327 0
 4356 0088 FB68     	 ldr r3,[r7,#12]
 4357 008a 1B68     	 ldr r3,[r3]
 4358 008c 5B6D     	 ldr r3,[r3,#84]
 4359 008e 1846     	 mov r0,r3
 4360 0090 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)0U;
 4361              	 .loc 3 1329 0
 4362 0094 FB68     	 ldr r3,[r7,#12]
 4363 0096 1B68     	 ldr r3,[r3]
 4364 0098 0022     	 movs r2,#0
 4365 009a 1A72     	 strb r2,[r3,#8]
1330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check transfer complete status */
1332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((SDMMC_BLOCK_MODE_STATUS_t)obj->sdmmc_sd->transfer_int_err == SDMMC_BLOCK_MODE_STATUS_T
 4366              	 .loc 3 1332 0
 4367 009c FB68     	 ldr r3,[r7,#12]
 4368 009e 1B68     	 ldr r3,[r3]
 4369 00a0 9B7E     	 ldrb r3,[r3,#26]
 4370 00a2 1F2B     	 cmp r3,#31
 4371 00a4 02D1     	 bne .L212
1333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4372              	 .loc 3 1334 0
 4373 00a6 0023     	 movs r3,#0
 4374 00a8 FB75     	 strb r3,[r7,#23]
 4375 00aa 09E0     	 b .L208
 4376              	.L212:
1335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         else
1337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           obj->sdmmc_sd->issue_abort = (uint8_t)1U;
 4377              	 .loc 3 1338 0
 4378 00ac FB68     	 ldr r3,[r7,#12]
 4379 00ae 1B68     	 ldr r3,[r3]
 4380 00b0 0122     	 movs r2,#1
 4381 00b2 83F85120 	 strb r2,[r3,#81]
1339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 4382              	 .loc 3 1339 0
 4383 00b6 F868     	 ldr r0,[r7,#12]
 4384 00b8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 4385 00bc 0346     	 mov r3,r0
 4386 00be FB75     	 strb r3,[r7,#23]
 4387              	.L208:
1340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4388              	 .loc 3 1345 0
 4389 00c0 FB7D     	 ldrb r3,[r7,#23]
1346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4390              	 .loc 3 1346 0
 4391 00c2 1846     	 mov r0,r3
 4392 00c4 1837     	 adds r7,r7,#24
 4393              	.LCFI283:
 4394              	 .cfi_def_cfa_offset 8
 4395 00c6 BD46     	 mov sp,r7
 4396              	.LCFI284:
 4397              	 .cfi_def_cfa_register 13
 4398              	 
 4399 00c8 80BD     	 pop {r7,pc}
 4400              	.L215:
 4401 00ca 00BF     	 .align 2
 4402              	.L214:
 4403 00cc 40420F00 	 .word 1000000
 4404              	 .cfi_endproc
 4405              	.LFE244:
 4407              	 .section .text.SDMMC_BLOCK_SD_lCheckLockStatus,"ax",%progbits
 4408              	 .align 2
 4409              	 .thumb
 4410              	 .thumb_func
 4412              	SDMMC_BLOCK_SD_lCheckLockStatus:
 4413              	.LFB245:
1347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check lock status */
1349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckLockStatus(SDMMC_BLOCK_t *const obj,
1350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                  SDMMC_BLOCK_CARD_LOCK_STATUS_t mod
1351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4414              	 .loc 3 1351 0
 4415              	 .cfi_startproc
 4416              	 
 4417              	 
 4418 0000 80B5     	 push {r7,lr}
 4419              	.LCFI285:
 4420              	 .cfi_def_cfa_offset 8
 4421              	 .cfi_offset 7,-8
 4422              	 .cfi_offset 14,-4
 4423 0002 84B0     	 sub sp,sp,#16
 4424              	.LCFI286:
 4425              	 .cfi_def_cfa_offset 24
 4426 0004 00AF     	 add r7,sp,#0
 4427              	.LCFI287:
 4428              	 .cfi_def_cfa_register 7
 4429 0006 7860     	 str r0,[r7,#4]
 4430 0008 0B46     	 mov r3,r1
 4431 000a FB70     	 strb r3,[r7,#3]
1352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
1353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CARD_LOCK_STATUS_t lock_status;
1354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetLockStatus(obj, &lock_status);
 4432              	 .loc 3 1355 0
 4433 000c 07F10E03 	 add r3,r7,#14
 4434 0010 7868     	 ldr r0,[r7,#4]
 4435 0012 1946     	 mov r1,r3
 4436 0014 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetLockStatus
 4437 0018 0346     	 mov r3,r0
 4438 001a FB73     	 strb r3,[r7,#15]
1356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* For lock, card state must be "locked" */
1357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4439              	 .loc 3 1357 0
 4440 001c FB7B     	 ldrb r3,[r7,#15]
 4441 001e 002B     	 cmp r3,#0
 4442 0020 13D1     	 bne .L217
1358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED) && (mode == SDMMC_BLOCK_CARD_LOCK_STAT
 4443              	 .loc 3 1359 0
 4444 0022 BB7B     	 ldrb r3,[r7,#14]
 4445 0024 012B     	 cmp r3,#1
 4446 0026 05D1     	 bne .L218
 4447              	 .loc 3 1359 0 is_stmt 0 discriminator 1
 4448 0028 FB78     	 ldrb r3,[r7,#3]
 4449 002a 012B     	 cmp r3,#1
 4450 002c 02D1     	 bne .L218
1360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4451              	 .loc 3 1361 0 is_stmt 1
 4452 002e 0023     	 movs r3,#0
 4453 0030 FB73     	 strb r3,[r7,#15]
 4454 0032 0AE0     	 b .L217
 4455              	.L218:
1362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* For unlock, card state must be "unlocked" */
1364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if ((lock_status == SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED) && (mode == SDMMC_BLOCK_CARD_LO
 4456              	 .loc 3 1364 0
 4457 0034 BB7B     	 ldrb r3,[r7,#14]
 4458 0036 002B     	 cmp r3,#0
 4459 0038 05D1     	 bne .L219
 4460              	 .loc 3 1364 0 is_stmt 0 discriminator 1
 4461 003a FB78     	 ldrb r3,[r7,#3]
 4462 003c 002B     	 cmp r3,#0
 4463 003e 02D1     	 bne .L219
1365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4464              	 .loc 3 1366 0 is_stmt 1
 4465 0040 0023     	 movs r3,#0
 4466 0042 FB73     	 strb r3,[r7,#15]
 4467 0044 01E0     	 b .L217
 4468              	.L219:
1367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_LOCK_UNLOCK_ERROR;
 4469              	 .loc 3 1370 0
 4470 0046 1023     	 movs r3,#16
 4471 0048 FB73     	 strb r3,[r7,#15]
 4472              	.L217:
1371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4473              	 .loc 3 1374 0
 4474 004a FB7B     	 ldrb r3,[r7,#15]
1375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4475              	 .loc 3 1375 0
 4476 004c 1846     	 mov r0,r3
 4477 004e 1037     	 adds r7,r7,#16
 4478              	.LCFI288:
 4479              	 .cfi_def_cfa_offset 8
 4480 0050 BD46     	 mov sp,r7
 4481              	.LCFI289:
 4482              	 .cfi_def_cfa_register 13
 4483              	 
 4484 0052 80BD     	 pop {r7,pc}
 4485              	 .cfi_endproc
 4486              	.LFE245:
 4488              	 .section .text.SDMMC_BLOCK_SD_lSwitchBusWidth,"ax",%progbits
 4489              	 .align 2
 4490              	 .thumb
 4491              	 .thumb_func
 4493              	SDMMC_BLOCK_SD_lSwitchBusWidth:
 4494              	.LFB246:
1376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_SUPPORT_4_BUS_WIDTH
1378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch bus width to 4-bit if supported */
1380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchBusWidth(SDMMC_BLOCK_t *const obj)
1381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4495              	 .loc 3 1381 0
 4496              	 .cfi_startproc
 4497              	 
 4498              	 
 4499 0000 80B5     	 push {r7,lr}
 4500              	.LCFI290:
 4501              	 .cfi_def_cfa_offset 8
 4502              	 .cfi_offset 7,-8
 4503              	 .cfi_offset 14,-4
 4504 0002 88B0     	 sub sp,sp,#32
 4505              	.LCFI291:
 4506              	 .cfi_def_cfa_offset 40
 4507 0004 02AF     	 add r7,sp,#8
 4508              	.LCFI292:
 4509              	 .cfi_def_cfa 7,32
 4510 0006 7860     	 str r0,[r7,#4]
1382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 4511              	 .loc 3 1382 0
 4512 0008 0023     	 movs r3,#0
 4513 000a 3B61     	 str r3,[r7,#16]
1383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4514              	 .loc 3 1383 0
 4515 000c 0123     	 movs r3,#1
 4516 000e FB75     	 strb r3,[r7,#23]
1384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 4517              	 .loc 3 1384 0
 4518 0010 0023     	 movs r3,#0
 4519 0012 FB60     	 str r3,[r7,#12]
1385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Switch to transfer state (CMD7) */
1387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 4520              	 .loc 3 1387 0
 4521 0014 7868     	 ldr r0,[r7,#4]
 4522 0016 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 4523 001a 0346     	 mov r3,r0
 4524 001c FB75     	 strb r3,[r7,#23]
1388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4525              	 .loc 3 1389 0
 4526 001e FB7D     	 ldrb r3,[r7,#23]
 4527 0020 002B     	 cmp r3,#0
 4528 0022 44D1     	 bne .L222
1390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Disable card insertion interrupt */
1392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_DisableEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_INS);
 4529              	 .loc 3 1392 0
 4530 0024 7B68     	 ldr r3,[r7,#4]
 4531 0026 1B68     	 ldr r3,[r3]
 4532 0028 1B68     	 ldr r3,[r3]
 4533 002a 1846     	 mov r0,r3
 4534 002c 4021     	 movs r1,#64
 4535 002e FFF7FEFF 	 bl XMC_SDMMC_DisableEvent
1393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check data transfer width supported in SCR register */
1395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((obj->sdmmc_sd->card_info.scr.sd_bus_width & SDMMC_BLOCK_SCR_BUS_WIDTH4_BITMASK))
 4536              	 .loc 3 1395 0
 4537 0032 7B68     	 ldr r3,[r7,#4]
 4538 0034 1B68     	 ldr r3,[r3]
 4539 0036 93F84530 	 ldrb r3,[r3,#69]
 4540 003a C3F30303 	 ubfx r3,r3,#0,#4
 4541 003e DBB2     	 uxtb r3,r3
 4542 0040 03F00403 	 and r3,r3,#4
 4543 0044 002B     	 cmp r3,#0
 4544 0046 28D0     	 beq .L223
1396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set the argument */
1398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       arg |= ((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPOS);
 4545              	 .loc 3 1398 0
 4546 0048 7B68     	 ldr r3,[r7,#4]
 4547 004a 1B68     	 ldr r3,[r3]
 4548 004c B3F84C30 	 ldrh r3,[r3,#76]
 4549 0050 1B04     	 lsls r3,r3,#16
 4550 0052 3A69     	 ldr r2,[r7,#16]
 4551 0054 1343     	 orrs r3,r3,r2
 4552 0056 3B61     	 str r3,[r7,#16]
1399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send application specific command */
1401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 4553              	 .loc 3 1402 0
 4554 0058 1923     	 movs r3,#25
1401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 4555              	 .loc 3 1401 0
 4556 005a 5B00     	 lsls r3,r3,#1
 4557 005c 164A     	 ldr r2,.L225
 4558 005e 1A44     	 add r2,r2,r3
 4559 0060 07F10C03 	 add r3,r7,#12
 4560 0064 0093     	 str r3,[sp]
 4561 0066 7868     	 ldr r0,[r7,#4]
 4562 0068 1146     	 mov r1,r2
 4563 006a 3A69     	 ldr r2,[r7,#16]
 4564 006c 0123     	 movs r3,#1
 4565 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4566 0072 0346     	 mov r3,r0
 4567 0074 FB75     	 strb r3,[r7,#23]
1403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
1404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4568              	 .loc 3 1407 0
 4569 0076 FB7D     	 ldrb r3,[r7,#23]
 4570 0078 002B     	 cmp r3,#0
 4571 007a 0ED1     	 bne .L223
1408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Send ACMD6 to switch the bus width */
1410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lSendCommand(obj,
1411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &(SDMMC_BLOCK_SD_COMMAND(58)),
 4572              	 .loc 3 1411 0
 4573 007c 1B23     	 movs r3,#27
1410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &(SDMMC_BLOCK_SD_COMMAND(58)),
 4574              	 .loc 3 1410 0
 4575 007e 5B00     	 lsls r3,r3,#1
 4576 0080 0D4A     	 ldr r2,.L225
 4577 0082 1A44     	 add r2,r2,r3
 4578 0084 07F10C03 	 add r3,r7,#12
 4579 0088 0093     	 str r3,[sp]
 4580 008a 7868     	 ldr r0,[r7,#4]
 4581 008c 1146     	 mov r1,r2
 4582 008e 0222     	 movs r2,#2
 4583 0090 0123     	 movs r3,#1
 4584 0092 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 4585 0096 0346     	 mov r3,r0
 4586 0098 FB75     	 strb r3,[r7,#23]
 4587              	.L223:
1412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              SDMMC_BLOCK_SD_4BUS_WIDTH_ARG,
1413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              XMC_SDMMC_RESPONSE_TYPE_R1,
1414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                              &card_status);
1415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4588              	 .loc 3 1418 0
 4589 009a FB7D     	 ldrb r3,[r7,#23]
 4590 009c 002B     	 cmp r3,#0
 4591 009e 06D1     	 bne .L222
1419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set data transfer width */
1421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferWidth(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_LINES_4);
 4592              	 .loc 3 1421 0
 4593 00a0 7B68     	 ldr r3,[r7,#4]
 4594 00a2 1B68     	 ldr r3,[r3]
 4595 00a4 1B68     	 ldr r3,[r3]
 4596 00a6 1846     	 mov r0,r3
 4597 00a8 0221     	 movs r1,#2
 4598 00aa FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferWidth
 4599              	.L222:
1422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4600              	 .loc 3 1425 0
 4601 00ae FB7D     	 ldrb r3,[r7,#23]
1426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4602              	 .loc 3 1426 0
 4603 00b0 1846     	 mov r0,r3
 4604 00b2 1837     	 adds r7,r7,#24
 4605              	.LCFI293:
 4606              	 .cfi_def_cfa_offset 8
 4607 00b4 BD46     	 mov sp,r7
 4608              	.LCFI294:
 4609              	 .cfi_def_cfa_register 13
 4610              	 
 4611 00b6 80BD     	 pop {r7,pc}
 4612              	.L226:
 4613              	 .align 2
 4614              	.L225:
 4615 00b8 00000000 	 .word sdmmc_block_command
 4616              	 .cfi_endproc
 4617              	.LFE246:
 4619              	 .section .text.SDMMC_BLOCK_SD_lSwitchSpeed,"ax",%progbits
 4620              	 .align 2
 4621              	 .thumb
 4622              	 .thumb_func
 4624              	SDMMC_BLOCK_SD_lSwitchSpeed:
 4625              	.LFB247:
1427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch the card speed mode to high speed if supported */
1429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchSpeed(SDMMC_BLOCK_t *const obj)
1430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4626              	 .loc 3 1430 0
 4627              	 .cfi_startproc
 4628              	 
 4629              	 
 4630 0000 80B5     	 push {r7,lr}
 4631              	.LCFI295:
 4632              	 .cfi_def_cfa_offset 8
 4633              	 .cfi_offset 7,-8
 4634              	 .cfi_offset 14,-4
 4635 0002 96B0     	 sub sp,sp,#88
 4636              	.LCFI296:
 4637              	 .cfi_def_cfa_offset 96
 4638 0004 02AF     	 add r7,sp,#8
 4639              	.LCFI297:
 4640              	 .cfi_def_cfa 7,88
 4641 0006 7860     	 str r0,[r7,#4]
1431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t switch_status[16] = {0U};
 4642              	 .loc 3 1431 0
 4643 0008 07F10C03 	 add r3,r7,#12
 4644 000c 4022     	 movs r2,#64
 4645 000e 1846     	 mov r0,r3
 4646 0010 0021     	 movs r1,#0
 4647 0012 FFF7FEFF 	 bl memset
1432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4648              	 .loc 3 1432 0
 4649 0016 0123     	 movs r3,#1
 4650 0018 87F84F30 	 strb r3,[r7,#79]
1433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check CMD6 support in SCR register */
1435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->card_info.scr.sd_spec != 0UL)
 4651              	 .loc 3 1435 0
 4652 001c 7B68     	 ldr r3,[r7,#4]
 4653 001e 1B68     	 ldr r3,[r3]
 4654 0020 93F84430 	 ldrb r3,[r3,#68]
 4655 0024 03F00F03 	 and r3,r3,#15
 4656 0028 DBB2     	 uxtb r3,r3
 4657 002a 002B     	 cmp r3,#0
 4658 002c 31D0     	 beq .L228
1436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Switch to transfer state (CMD7) */
1438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 4659              	 .loc 3 1438 0
 4660 002e 7868     	 ldr r0,[r7,#4]
 4661 0030 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 4662 0034 0346     	 mov r3,r0
 4663 0036 87F84F30 	 strb r3,[r7,#79]
1439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4664              	 .loc 3 1440 0
 4665 003a 97F84F30 	 ldrb r3,[r7,#79]
 4666 003e 002B     	 cmp r3,#0
 4667 0040 27D1     	 bne .L228
1441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
1443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * Send the Switch function command and read the transferred block of
1444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * data from the card
1445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
1446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
1447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(6)),
 4668              	 .loc 3 1447 0
 4669 0042 0423     	 movs r3,#4
1446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(6)),
 4670              	 .loc 3 1446 0
 4671 0044 5B00     	 lsls r3,r3,#1
 4672 0046 164A     	 ldr r2,.L231
 4673 0048 1A44     	 add r2,r2,r3
 4674 004a 07F10C03 	 add r3,r7,#12
 4675 004e 0093     	 str r3,[sp]
 4676 0050 0123     	 movs r3,#1
 4677 0052 0193     	 str r3,[sp,#4]
 4678 0054 7868     	 ldr r0,[r7,#4]
 4679 0056 1146     	 mov r1,r2
 4680 0058 124A     	 ldr r2,.L231+4
 4681 005a 4023     	 movs r3,#64
 4682 005c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 4683 0060 0346     	 mov r3,r0
 4684 0062 87F84F30 	 strb r3,[r7,#79]
1448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_HIGH_SPEED_ARG,
1449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    64U,
1450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)switch_status,
1451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
1452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4685              	 .loc 3 1453 0
 4686 0066 97F84F30 	 ldrb r3,[r7,#79]
 4687 006a 002B     	 cmp r3,#0
 4688 006c 07D1     	 bne .L229
1454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (((switch_status[4] & (uint32_t)SDMMC_BLOCK_SWITCH_FUNC_GRP1_STATUS_BITMASK) >>
 4689              	 .loc 3 1455 0
 4690 006e FB69     	 ldr r3,[r7,#28]
 4691 0070 03F00F03 	 and r3,r3,#15
 4692 0074 012B     	 cmp r3,#1
 4693 0076 02D0     	 beq .L229
1456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (uint32_t)SDMMC_BLOCK_SWITCH_FUNC_GRP1_STATUS_BITPOS) != (uint32_t)1U)
1457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 4694              	 .loc 3 1458 0
 4695 0078 0123     	 movs r3,#1
 4696 007a 87F84F30 	 strb r3,[r7,#79]
 4697              	.L229:
1459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4698              	 .loc 3 1462 0
 4699 007e 97F84F30 	 ldrb r3,[r7,#79]
 4700 0082 002B     	 cmp r3,#0
 4701 0084 05D1     	 bne .L228
1463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Change speed mode (high speed) in the host controller */
1465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_EnableHighSpeed(obj->sdmmc_sd->sdmmc);
 4702              	 .loc 3 1465 0
 4703 0086 7B68     	 ldr r3,[r7,#4]
 4704 0088 1B68     	 ldr r3,[r3]
 4705 008a 1B68     	 ldr r3,[r3]
 4706 008c 1846     	 mov r0,r3
 4707 008e FFF7FEFF 	 bl XMC_SDMMC_EnableHighSpeed
 4708              	.L228:
1466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4709              	 .loc 3 1470 0
 4710 0092 97F84F30 	 ldrb r3,[r7,#79]
1471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4711              	 .loc 3 1471 0
 4712 0096 1846     	 mov r0,r3
 4713 0098 5037     	 adds r7,r7,#80
 4714              	.LCFI298:
 4715              	 .cfi_def_cfa_offset 8
 4716 009a BD46     	 mov sp,r7
 4717              	.LCFI299:
 4718              	 .cfi_def_cfa_register 13
 4719              	 
 4720 009c 80BD     	 pop {r7,pc}
 4721              	.L232:
 4722 009e 00BF     	 .align 2
 4723              	.L231:
 4724 00a0 00000000 	 .word sdmmc_block_command
 4725 00a4 01000080 	 .word -2147483647
 4726              	 .cfi_endproc
 4727              	.LFE247:
 4729              	 .section .text.SDMMC_BLOCK_SD_lCommandDelay,"ax",%progbits
 4730              	 .align 2
 4731              	 .thumb
 4732              	 .thumb_func
 4734              	SDMMC_BLOCK_SD_lCommandDelay:
 4735              	.LFB248:
1472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
1474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Provides delay in command execution */
1476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCommandDelay(SDMMC_BLOCK_t *const obj, uint32_t de
1477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4736              	 .loc 3 1477 0
 4737              	 .cfi_startproc
 4738              	 
 4739              	 
 4740 0000 80B5     	 push {r7,lr}
 4741              	.LCFI300:
 4742              	 .cfi_def_cfa_offset 8
 4743              	 .cfi_offset 7,-8
 4744              	 .cfi_offset 14,-4
 4745 0002 84B0     	 sub sp,sp,#16
 4746              	.LCFI301:
 4747              	 .cfi_def_cfa_offset 24
 4748 0004 00AF     	 add r7,sp,#0
 4749              	.LCFI302:
 4750              	 .cfi_def_cfa_register 7
 4751 0006 7860     	 str r0,[r7,#4]
 4752 0008 3960     	 str r1,[r7]
1478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 4753              	 .loc 3 1478 0
 4754 000a 0023     	 movs r3,#0
 4755 000c FB73     	 strb r3,[r7,#15]
1479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 4756              	 .loc 3 1479 0
 4757 000e 7B68     	 ldr r3,[r7,#4]
 4758 0010 1B68     	 ldr r3,[r3]
 4759 0012 0122     	 movs r2,#1
 4760 0014 83F85C20 	 strb r2,[r3,#92]
1480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, delay);
 4761              	 .loc 3 1481 0
 4762 0018 7868     	 ldr r0,[r7,#4]
 4763 001a 3968     	 ldr r1,[r7]
 4764 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 4765 0020 0346     	 mov r3,r0
 4766 0022 FB73     	 strb r3,[r7,#15]
1482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4767              	 .loc 3 1482 0
 4768 0024 FB7B     	 ldrb r3,[r7,#15]
 4769 0026 002B     	 cmp r3,#0
 4770 0028 21D0     	 beq .L234
 4771              	.L236:
1483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
1485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 4772              	 .loc 3 1486 0
 4773 002a 7B68     	 ldr r3,[r7,#4]
 4774 002c 1B68     	 ldr r3,[r3]
 4775 002e 93F85C30 	 ldrb r3,[r3,#92]
 4776 0032 DBB2     	 uxtb r3,r3
 4777 0034 83F00103 	 eor r3,r3,#1
 4778 0038 DBB2     	 uxtb r3,r3
 4779 003a 002B     	 cmp r3,#0
 4780 003c 02D0     	 beq .L235
1487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 4781              	 .loc 3 1488 0
 4782 003e 2E23     	 movs r3,#46
 4783 0040 FB73     	 strb r3,[r7,#15]
1489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 4784              	 .loc 3 1489 0
 4785 0042 14E0     	 b .L234
 4786              	.L235:
1490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((!((obj->sdmmc_sd->isr_context.cmd_flag == 1U) ||
 4787              	 .loc 3 1491 0
 4788 0044 7B68     	 ldr r3,[r7,#4]
 4789 0046 1B68     	 ldr r3,[r3]
 4790 0048 9B79     	 ldrb r3,[r3,#6]
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
1493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              ((XMC_SDMMC_GetEvent(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CARD_ERR) != 0U)));
 4791              	 .loc 3 1493 0
 4792 004a 012B     	 cmp r3,#1
 4793 004c 0FD0     	 beq .L234
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4794              	 .loc 3 1492 0
 4795 004e 7B68     	 ldr r3,[r7,#4]
 4796 0050 1B68     	 ldr r3,[r3]
 4797 0052 DB79     	 ldrb r3,[r3,#7]
1491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4798              	 .loc 3 1491 0
 4799 0054 012B     	 cmp r3,#1
 4800 0056 0AD0     	 beq .L234
 4801              	 .loc 3 1493 0
 4802 0058 7B68     	 ldr r3,[r7,#4]
 4803 005a 1B68     	 ldr r3,[r3]
 4804 005c 1B68     	 ldr r3,[r3]
 4805 005e 1846     	 mov r0,r3
 4806 0060 4FF40041 	 mov r1,#32768
 4807 0064 FFF7FEFF 	 bl XMC_SDMMC_GetEvent
 4808 0068 0346     	 mov r3,r0
1492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               (obj->sdmmc_sd->isr_context.data_flag == 1U))) &&
 4809              	 .loc 3 1492 0
 4810 006a 002B     	 cmp r3,#0
 4811 006c DDD1     	 bne .L236
 4812              	.L234:
1494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Stop timer and delete it */
1497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 4813              	 .loc 3 1497 0
 4814 006e 7868     	 ldr r0,[r7,#4]
 4815 0070 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 4816              	 .loc 3 1498 0
 4817 0074 7B68     	 ldr r3,[r7,#4]
 4818 0076 1B68     	 ldr r3,[r3]
 4819 0078 5B6D     	 ldr r3,[r3,#84]
 4820 007a 1846     	 mov r0,r3
 4821 007c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)0U;
 4822              	 .loc 3 1500 0
 4823 0080 7B68     	 ldr r3,[r7,#4]
 4824 0082 1B68     	 ldr r3,[r3]
 4825 0084 0022     	 movs r2,#0
 4826 0086 9A71     	 strb r2,[r3,#6]
1501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.data_flag = (uint8_t)0U;
 4827              	 .loc 3 1501 0
 4828 0088 7B68     	 ldr r3,[r7,#4]
 4829 008a 1B68     	 ldr r3,[r3]
 4830 008c 0022     	 movs r2,#0
 4831 008e DA71     	 strb r2,[r3,#7]
1502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 4832              	 .loc 3 1503 0
 4833 0090 FB7B     	 ldrb r3,[r7,#15]
1504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 4834              	 .loc 3 1504 0
 4835 0092 1846     	 mov r0,r3
 4836 0094 1037     	 adds r7,r7,#16
 4837              	.LCFI303:
 4838              	 .cfi_def_cfa_offset 8
 4839 0096 BD46     	 mov sp,r7
 4840              	.LCFI304:
 4841              	 .cfi_def_cfa_register 13
 4842              	 
 4843 0098 80BD     	 pop {r7,pc}
 4844              	 .cfi_endproc
 4845              	.LFE248:
 4847 009a 00BF     	 .section .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery,"ax",%progbits
 4848              	 .align 2
 4849              	 .thumb
 4850              	 .thumb_func
 4852              	SDMMC_BLOCK_SD_lErrorInterruptRecovery:
 4853              	.LFB249:
1505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Recovery task for error interrupts */
1507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lErrorInterruptRecovery(SDMMC_BLOCK_t *const obj)
1508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 4854              	 .loc 3 1508 0
 4855              	 .cfi_startproc
 4856              	 
 4857              	 
 4858 0000 80B5     	 push {r7,lr}
 4859              	.LCFI305:
 4860              	 .cfi_def_cfa_offset 8
 4861              	 .cfi_offset 7,-8
 4862              	 .cfi_offset 14,-4
 4863 0002 86B0     	 sub sp,sp,#24
 4864              	.LCFI306:
 4865              	 .cfi_def_cfa_offset 32
 4866 0004 00AF     	 add r7,sp,#0
 4867              	.LCFI307:
 4868              	 .cfi_def_cfa_register 7
 4869 0006 7860     	 str r0,[r7,#4]
1509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_COMMAND_t *cmd = (XMC_SDMMC_COMMAND_t *)&(SDMMC_BLOCK_COMMON_COMMAND(12));
 4870              	 .loc 3 1509 0
 4871 0008 0923     	 movs r3,#9
 4872 000a 5B00     	 lsls r3,r3,#1
 4873 000c 614A     	 ldr r2,.L250
 4874 000e 1344     	 add r3,r3,r2
 4875 0010 3B61     	 str r3,[r7,#16]
1510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 4876              	 .loc 3 1510 0
 4877 0012 2523     	 movs r3,#37
 4878 0014 FB75     	 strb r3,[r7,#23]
1511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t normal_events = 0U;
 4879              	 .loc 3 1511 0
 4880 0016 0023     	 movs r3,#0
 4881 0018 FB60     	 str r3,[r7,#12]
1512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t error_events = 0U;
 4882              	 .loc 3 1512 0
 4883 001a 0023     	 movs r3,#0
 4884 001c BB60     	 str r3,[r7,#8]
1513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events = ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR)   |
 4885              	 .loc 3 1514 0
 4886 001e 5E4B     	 ldr r3,.L250+4
 4887 0020 BB60     	 str r3,[r7,#8]
1515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_CRC_ERR)       |
1516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR)   |
1517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_IND_ERR)       |
1518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR)  |
1519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_CRC_ERR)      |
1520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR)  |
1521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CURRENT_LIMIT_ERR) |
1522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_TARGET_RESP_ERR);
1523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Disable all error events */
1525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_DisableEvent(obj->sdmmc_sd->sdmmc, error_events);
 4888              	 .loc 3 1525 0
 4889 0022 7B68     	 ldr r3,[r7,#4]
 4890 0024 1B68     	 ldr r3,[r3]
 4891 0026 1B68     	 ldr r3,[r3]
 4892 0028 1846     	 mov r0,r3
 4893 002a B968     	 ldr r1,[r7,#8]
 4894 002c FFF7FEFF 	 bl XMC_SDMMC_DisableEvent
1526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check error interrupt status bits D0-D3 for CMD line errors */
1528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((((uint32_t)obj->sdmmc_sd->isr_context.int_status_shadow &
 4895              	 .loc 3 1528 0
 4896 0030 7B68     	 ldr r3,[r7,#4]
 4897 0032 1B68     	 ldr r3,[r3]
 4898 0034 9B88     	 ldrh r3,[r3,#4]
 4899 0036 03F00F03 	 and r3,r3,#15
 4900 003a 002B     	 cmp r3,#0
 4901 003c 08D1     	 bne .L239
1529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_CMD_STATUS_BITMASK) != (uint32_t)0U) ||
1530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc) == true))
 4902              	 .loc 3 1530 0
 4903 003e 7B68     	 ldr r3,[r7,#4]
 4904 0040 1B68     	 ldr r3,[r3]
 4905 0042 1B68     	 ldr r3,[r3]
 4906 0044 1846     	 mov r0,r3
 4907 0046 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 4908 004a 0346     	 mov r3,r0
1529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_CMD_STATUS_BITMASK) != (uint32_t)0U) ||
 4909              	 .loc 3 1529 0
 4910 004c 002B     	 cmp r3,#0
 4911 004e 05D0     	 beq .L240
 4912              	.L239:
1531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for CMD line */
1533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_CMD_LINE);
 4913              	 .loc 3 1533 0
 4914 0050 7868     	 ldr r0,[r7,#4]
 4915 0052 0221     	 movs r1,#2
 4916 0054 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 4917 0058 0346     	 mov r3,r0
 4918 005a FB75     	 strb r3,[r7,#23]
 4919              	.L240:
1534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check error interrupt status bits D4-D6 for data line errors */
1537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((((uint32_t)obj->sdmmc_sd->isr_context.int_status_shadow &
 4920              	 .loc 3 1537 0
 4921 005c 7B68     	 ldr r3,[r7,#4]
 4922 005e 1B68     	 ldr r3,[r3]
 4923 0060 9B88     	 ldrh r3,[r3,#4]
 4924 0062 03F07003 	 and r3,r3,#112
 4925 0066 002B     	 cmp r3,#0
 4926 0068 08D1     	 bne .L241
1538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_DATA_STATUS_BITMASK) != (uint32_t)0U) ||
1539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) == true))
 4927              	 .loc 3 1539 0
 4928 006a 7B68     	 ldr r3,[r7,#4]
 4929 006c 1B68     	 ldr r3,[r3]
 4930 006e 1B68     	 ldr r3,[r3]
 4931 0070 1846     	 mov r0,r3
 4932 0072 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 4933 0076 0346     	 mov r3,r0
1538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (uint32_t)SDMMC_BLOCK_ERROR_DATA_STATUS_BITMASK) != (uint32_t)0U) ||
 4934              	 .loc 3 1538 0
 4935 0078 002B     	 cmp r3,#0
 4936 007a 05D0     	 beq .L242
 4937              	.L241:
1540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for data line */
1542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 4938              	 .loc 3 1542 0
 4939 007c 7868     	 ldr r0,[r7,#4]
 4940 007e 0421     	 movs r1,#4
 4941 0080 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 4942 0084 0346     	 mov r3,r0
 4943 0086 FB75     	 strb r3,[r7,#23]
 4944              	.L242:
1543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events = ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR)   |
 4945              	 .loc 3 1545 0
 4946 0088 444B     	 ldr r3,.L250+8
 4947 008a BB60     	 str r3,[r7,#8]
1546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_CRC_ERR)       |
1547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR)   |
1548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CMD_IND_ERR)       |
1549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR)  |
1550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_CRC_ERR)      |
1551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR)  |
1552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CURRENT_LIMIT_ERR) |
1553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                  ((uint32_t)XMC_SDMMC_CARD_ERR);
1554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, error_events);
 4948              	 .loc 3 1555 0
 4949 008c 7B68     	 ldr r3,[r7,#4]
 4950 008e 1B68     	 ldr r3,[r3]
 4951 0090 1B68     	 ldr r3,[r3]
 4952 0092 1846     	 mov r0,r3
 4953 0094 B968     	 ldr r1,[r7,#8]
 4954 0096 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->issue_abort == (uint8_t)1U)
 4955              	 .loc 3 1557 0
 4956 009a 7B68     	 ldr r3,[r7,#4]
 4957 009c 1B68     	 ldr r3,[r3]
 4958 009e 93F85130 	 ldrb r3,[r3,#81]
 4959 00a2 012B     	 cmp r3,#1
 4960 00a4 48D1     	 bne .L243
1558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Issue abort command. Set argument register */
1560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)XMC_SDMMC_SendCommand(obj->sdmmc_sd->sdmmc, cmd, SDMMC_BLOCK_ARGUMENT0);
 4961              	 .loc 3 1560 0
 4962 00a6 7B68     	 ldr r3,[r7,#4]
 4963 00a8 1B68     	 ldr r3,[r3]
 4964 00aa 1B68     	 ldr r3,[r3]
 4965 00ac 1846     	 mov r0,r3
 4966 00ae 3969     	 ldr r1,[r7,#16]
 4967 00b0 0022     	 movs r2,#0
 4968 00b2 FFF7FEFF 	 bl XMC_SDMMC_SendCommand
1561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Wait for any interrupt status bit to be set */
1563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timeout of 5ms */
1565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCommandDelay(obj, (uint32_t)SDMMC_BLOCK_DELAY_IN_COMMAND);
 4969              	 .loc 3 1565 0
 4970 00b6 7868     	 ldr r0,[r7,#4]
 4971 00b8 3949     	 ldr r1,.L250+12
 4972 00ba FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCommandDelay
 4973 00be 0346     	 mov r3,r0
 4974 00c0 FB75     	 strb r3,[r7,#23]
1566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((SDMMC_BLOCK_MODE_STATUS_t)status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 4975              	 .loc 3 1566 0
 4976 00c2 FB7D     	 ldrb r3,[r7,#23]
 4977 00c4 002B     	 cmp r3,#0
 4978 00c6 1CD1     	 bne .L244
1567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* If error status bit is set in the status register */
1569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == true)
 4979              	 .loc 3 1569 0
 4980 00c8 7B68     	 ldr r3,[r7,#4]
 4981 00ca 1B68     	 ldr r3,[r3]
 4982 00cc 1B68     	 ldr r3,[r3]
 4983 00ce 1846     	 mov r0,r3
 4984 00d0 FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 4985 00d4 0346     	 mov r3,r0
 4986 00d6 002B     	 cmp r3,#0
 4987 00d8 13D0     	 beq .L244
1570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 4988              	 .loc 3 1571 0
 4989 00da 2523     	 movs r3,#37
 4990 00dc FB75     	 strb r3,[r7,#23]
1572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, normal_events);
 4991              	 .loc 3 1573 0
 4992 00de 7B68     	 ldr r3,[r7,#4]
 4993 00e0 1B68     	 ldr r3,[r3]
 4994 00e2 1B68     	 ldr r3,[r3]
 4995 00e4 1846     	 mov r0,r3
 4996 00e6 F968     	 ldr r1,[r7,#12]
 4997 00e8 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, error_events);
 4998              	 .loc 3 1574 0
 4999 00ec 7B68     	 ldr r3,[r7,#4]
 5000 00ee 1B68     	 ldr r3,[r3]
 5001 00f0 1B68     	 ldr r3,[r3]
 5002 00f2 1846     	 mov r0,r3
 5003 00f4 B968     	 ldr r1,[r7,#8]
 5004 00f6 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Set software reset for CMD line and data line */
1577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         (void)SDMMC_BLOCK_SD_lReset(obj, (uint32_t)((uint32_t)XMC_SDMMC_SW_RST_CMD_LINE |
 5005              	 .loc 3 1577 0
 5006 00fa 7868     	 ldr r0,[r7,#4]
 5007 00fc 0621     	 movs r1,#6
 5008 00fe FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5009              	.L244:
1578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                     (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE));
1579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Data lines status in present status register */
1583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == false)
 5010              	 .loc 3 1583 0
 5011 0102 7B68     	 ldr r3,[r7,#4]
 5012 0104 1B68     	 ldr r3,[r3]
 5013 0106 1B68     	 ldr r3,[r3]
 5014 0108 1846     	 mov r0,r3
 5015 010a FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 5016 010e 0346     	 mov r3,r0
 5017 0110 83F00103 	 eor r3,r3,#1
 5018 0114 DBB2     	 uxtb r3,r3
 5019 0116 002B     	 cmp r3,#0
 5020 0118 28D0     	 beq .L247
1584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAllDataLinesHigh(obj->sdmmc_sd->sdmmc) == true)
 5021              	 .loc 3 1585 0
 5022 011a 7B68     	 ldr r3,[r7,#4]
 5023 011c 1B68     	 ldr r3,[r3]
 5024 011e 1B68     	 ldr r3,[r3]
 5025 0120 1846     	 mov r0,r3
 5026 0122 FFF7FEFF 	 bl XMC_SDMMC_IsAllDataLinesHigh
 5027 0126 0346     	 mov r3,r0
 5028 0128 002B     	 cmp r3,#0
 5029 012a 02D0     	 beq .L246
1586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR;
 5030              	 .loc 3 1587 0
 5031 012c 2423     	 movs r3,#36
 5032 012e FB75     	 strb r3,[r7,#23]
 5033 0130 1CE0     	 b .L247
 5034              	.L246:
1588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 5035              	 .loc 3 1591 0
 5036 0132 2523     	 movs r3,#37
 5037 0134 FB75     	 strb r3,[r7,#23]
 5038 0136 19E0     	 b .L247
 5039              	.L243:
1592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (XMC_SDMMC_IsAnyErrorEvent(obj->sdmmc_sd->sdmmc) == false)
 5040              	 .loc 3 1597 0
 5041 0138 7B68     	 ldr r3,[r7,#4]
 5042 013a 1B68     	 ldr r3,[r3]
 5043 013c 1B68     	 ldr r3,[r3]
 5044 013e 1846     	 mov r0,r3
 5045 0140 FFF7FEFF 	 bl XMC_SDMMC_IsAnyErrorEvent
 5046 0144 0346     	 mov r3,r0
 5047 0146 83F00103 	 eor r3,r3,#1
 5048 014a DBB2     	 uxtb r3,r3
 5049 014c 002B     	 cmp r3,#0
 5050 014e 0DD0     	 beq .L247
1598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (XMC_SDMMC_IsAllDataLinesHigh(obj->sdmmc_sd->sdmmc) == true)
 5051              	 .loc 3 1599 0
 5052 0150 7B68     	 ldr r3,[r7,#4]
 5053 0152 1B68     	 ldr r3,[r3]
 5054 0154 1B68     	 ldr r3,[r3]
 5055 0156 1846     	 mov r0,r3
 5056 0158 FFF7FEFF 	 bl XMC_SDMMC_IsAllDataLinesHigh
 5057 015c 0346     	 mov r3,r0
 5058 015e 002B     	 cmp r3,#0
 5059 0160 02D0     	 beq .L248
1600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR;
 5060              	 .loc 3 1601 0
 5061 0162 2423     	 movs r3,#36
 5062 0164 FB75     	 strb r3,[r7,#23]
 5063 0166 01E0     	 b .L247
 5064              	.L248:
1602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       else
1604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR;
 5065              	 .loc 3 1605 0
 5066 0168 2523     	 movs r3,#37
 5067 016a FB75     	 strb r3,[r7,#23]
 5068              	.L247:
1606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable the error interrupt signal */
1611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   error_events |= (uint32_t)XMC_SDMMC_TARGET_RESP_ERR;
 5069              	 .loc 3 1611 0
 5070 016c BB68     	 ldr r3,[r7,#8]
 5071 016e 43F08053 	 orr r3,r3,#268435456
 5072 0172 BB60     	 str r3,[r7,#8]
1612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, error_events);
 5073              	 .loc 3 1612 0
 5074 0174 7B68     	 ldr r3,[r7,#4]
 5075 0176 1B68     	 ldr r3,[r3]
 5076 0178 1B68     	 ldr r3,[r3]
 5077 017a 1846     	 mov r0,r3
 5078 017c B968     	 ldr r1,[r7,#8]
 5079 017e FFF7FEFF 	 bl XMC_SDMMC_EnableEvent
1613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Global error recovery variable */
1615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->err_recovery_stat = status;
 5080              	 .loc 3 1615 0
 5081 0182 7B68     	 ldr r3,[r7,#4]
 5082 0184 1B68     	 ldr r3,[r3]
 5083 0186 FA7D     	 ldrb r2,[r7,#23]
 5084 0188 1A77     	 strb r2,[r3,#28]
1616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5085              	 .loc 3 1617 0
 5086 018a FB7D     	 ldrb r3,[r7,#23]
1618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5087              	 .loc 3 1618 0
 5088 018c 1846     	 mov r0,r3
 5089 018e 1837     	 adds r7,r7,#24
 5090              	.LCFI308:
 5091              	 .cfi_def_cfa_offset 8
 5092 0190 BD46     	 mov sp,r7
 5093              	.LCFI309:
 5094              	 .cfi_def_cfa_register 13
 5095              	 
 5096 0192 80BD     	 pop {r7,pc}
 5097              	.L251:
 5098              	 .align 2
 5099              	.L250:
 5100 0194 00000000 	 .word sdmmc_block_command
 5101 0198 0000FF10 	 .word 285147136
 5102 019c 0080FF00 	 .word 16744448
 5103 01a0 40420F00 	 .word 1000000
 5104              	 .cfi_endproc
 5105              	.LFE249:
 5107              	 .section .text.SDMMC_BLOCK_SD_NormalInterruptHandler,"ax",%progbits
 5108              	 .align 2
 5109              	 .global SDMMC_BLOCK_SD_NormalInterruptHandler
 5110              	 .thumb
 5111              	 .thumb_func
 5113              	SDMMC_BLOCK_SD_NormalInterruptHandler:
 5114              	.LFB250:
1619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Handles interrupts in normal interrupt status register */
1621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_NormalInterruptHandler(SDMMC_BLOCK_t *const obj, uint16_t 
1622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5115              	 .loc 3 1622 0
 5116              	 .cfi_startproc
 5117              	 
 5118              	 
 5119 0000 80B5     	 push {r7,lr}
 5120              	.LCFI310:
 5121              	 .cfi_def_cfa_offset 8
 5122              	 .cfi_offset 7,-8
 5123              	 .cfi_offset 14,-4
 5124 0002 84B0     	 sub sp,sp,#16
 5125              	.LCFI311:
 5126              	 .cfi_def_cfa_offset 24
 5127 0004 00AF     	 add r7,sp,#0
 5128              	.LCFI312:
 5129              	 .cfi_def_cfa_register 7
 5130 0006 7860     	 str r0,[r7,#4]
 5131 0008 0B46     	 mov r3,r1
 5132 000a 7B80     	 strh r3,[r7,#2]
1623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5133              	 .loc 3 1623 0
 5134 000c 0023     	 movs r3,#0
 5135 000e FB73     	 strb r3,[r7,#15]
1624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_CARD_DETECTION_SUPPORT
1626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   bool pstate;
1627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card removal interrupt */
1629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((int_status & (uint32_t)XMC_SDMMC_CARD_REMOVAL) != 0U)
1630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state |= ((uint32_t)1U << SDMMC_BLOCK_SD_INTERRUPT_CARD_REMOVAL);
1632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear the interrupt status bit */
1633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_REMOVAL);
1634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Card insertion interrupt */
1637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((int_status & (uint32_t)XMC_SDMMC_CARD_INS) != 0U)
1638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state |= ((uint32_t)1U << SDMMC_BLOCK_SD_INTERRUPT_CARD_INSERTION);
1640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear the interrupt status bit */
1641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CARD_INS);
1642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Invoke a callback function if a user has registered one */
1645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->sdmmc_sd->callback != NULL) && (obj->sdmmc_sd->card_detect_state != 0U))
1646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->card_detect_state = 0U;
1648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     pstate = (bool)(SDMMC_BLOCK_0.sdmmc_sd->sdmmc->PRESENT_STATE & SDMMC_PRESENT_STATE_CARD_INSERTE
1649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->callback((SDMMC_BLOCK_SD_INTERRUPT_t)pstate);
1650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_NULL_POINTER;
1654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
1656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Buffer read ready interrupt */
1658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_BUFFER_READ_READY) != (uint32_t)0)
 5136              	 .loc 3 1658 0
 5137 0010 7B88     	 ldrh r3,[r7,#2]
 5138 0012 03F02003 	 and r3,r3,#32
 5139 0016 002B     	 cmp r3,#0
 5140 0018 0ED0     	 beq .L253
1659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_BUFFER_READY;
 5141              	 .loc 3 1660 0
 5142 001a 7B68     	 ldr r3,[r7,#4]
 5143 001c 1B68     	 ldr r3,[r3]
 5144 001e 1E22     	 movs r2,#30
 5145 0020 1A76     	 strb r2,[r3,#24]
1661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_BUFFER_READ_READY);
 5146              	 .loc 3 1661 0
 5147 0022 7B68     	 ldr r3,[r7,#4]
 5148 0024 1B68     	 ldr r3,[r3]
 5149 0026 1B68     	 ldr r3,[r3]
 5150 0028 1846     	 mov r0,r3
 5151 002a 2021     	 movs r1,#32
 5152 002c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)1U;
 5153              	 .loc 3 1662 0
 5154 0030 7B68     	 ldr r3,[r7,#4]
 5155 0032 1B68     	 ldr r3,[r3]
 5156 0034 0122     	 movs r2,#1
 5157 0036 DA71     	 strb r2,[r3,#7]
 5158              	.L253:
1663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Buffer write ready interrupt */
1666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_BUFFER_WRITE_READY) != (uint32_t)0)
 5159              	 .loc 3 1666 0
 5160 0038 7B88     	 ldrh r3,[r7,#2]
 5161 003a 03F01003 	 and r3,r3,#16
 5162 003e 002B     	 cmp r3,#0
 5163 0040 0ED0     	 beq .L254
1667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_BUFFER_READY;
 5164              	 .loc 3 1668 0
 5165 0042 7B68     	 ldr r3,[r7,#4]
 5166 0044 1B68     	 ldr r3,[r3]
 5167 0046 1E22     	 movs r2,#30
 5168 0048 1A76     	 strb r2,[r3,#24]
1669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_BUFFER_WRITE_READY);
 5169              	 .loc 3 1669 0
 5170 004a 7B68     	 ldr r3,[r7,#4]
 5171 004c 1B68     	 ldr r3,[r3]
 5172 004e 1B68     	 ldr r3,[r3]
 5173 0050 1846     	 mov r0,r3
 5174 0052 1021     	 movs r1,#16
 5175 0054 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)1U;
 5176              	 .loc 3 1670 0
 5177 0058 7B68     	 ldr r3,[r7,#4]
 5178 005a 1B68     	 ldr r3,[r3]
 5179 005c 0122     	 movs r2,#1
 5180 005e DA71     	 strb r2,[r3,#7]
 5181              	.L254:
1671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Transfer complete interrupt */
1674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_TX_COMPLETE) != (uint32_t)0)
 5182              	 .loc 3 1674 0
 5183 0060 7B88     	 ldrh r3,[r7,#2]
 5184 0062 03F00203 	 and r3,r3,#2
 5185 0066 002B     	 cmp r3,#0
 5186 0068 15D0     	 beq .L255
1675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_TRANSFER_COMPLETE;
 5187              	 .loc 3 1676 0
 5188 006a 7B68     	 ldr r3,[r7,#4]
 5189 006c 1B68     	 ldr r3,[r3]
 5190 006e 1F22     	 movs r2,#31
 5191 0070 9A76     	 strb r2,[r3,#26]
1677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_TX_COMPLETE);
 5192              	 .loc 3 1677 0
 5193 0072 7B68     	 ldr r3,[r7,#4]
 5194 0074 1B68     	 ldr r3,[r3]
 5195 0076 1B68     	 ldr r3,[r3]
 5196 0078 1846     	 mov r0,r3
 5197 007a 0221     	 movs r1,#2
 5198 007c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5199              	 .loc 3 1678 0
 5200 0080 7B68     	 ldr r3,[r7,#4]
 5201 0082 1B7A     	 ldrb r3,[r3,#8]
 5202 0084 23F02003 	 bic r3,r3,#32
 5203 0088 DAB2     	 uxtb r2,r3
 5204 008a 7B68     	 ldr r3,[r7,#4]
 5205 008c 1A72     	 strb r2,[r3,#8]
1679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.transfer_flag = (uint8_t)1U;
 5206              	 .loc 3 1679 0
 5207 008e 7B68     	 ldr r3,[r7,#4]
 5208 0090 1B68     	 ldr r3,[r3]
 5209 0092 0122     	 movs r2,#1
 5210 0094 1A72     	 strb r2,[r3,#8]
 5211              	.L255:
1680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command complete interrupt */
1683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & (uint32_t)XMC_SDMMC_CMD_COMPLETE) != (uint32_t)0)
 5212              	 .loc 3 1683 0
 5213 0096 7B88     	 ldrh r3,[r7,#2]
 5214 0098 03F00103 	 and r3,r3,#1
 5215 009c 002B     	 cmp r3,#0
 5216 009e 15D0     	 beq .L256
1684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_COMPLETE;
 5217              	 .loc 3 1685 0
 5218 00a0 7B68     	 ldr r3,[r7,#4]
 5219 00a2 1B68     	 ldr r3,[r3]
 5220 00a4 1C22     	 movs r2,#28
 5221 00a6 5A76     	 strb r2,[r3,#25]
1686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_COMPLETE);
 5222              	 .loc 3 1686 0
 5223 00a8 7B68     	 ldr r3,[r7,#4]
 5224 00aa 1B68     	 ldr r3,[r3]
 5225 00ac 1B68     	 ldr r3,[r3]
 5226 00ae 1846     	 mov r0,r3
 5227 00b0 0121     	 movs r1,#1
 5228 00b2 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5229              	 .loc 3 1687 0
 5230 00b6 7B68     	 ldr r3,[r7,#4]
 5231 00b8 1B7A     	 ldrb r3,[r3,#8]
 5232 00ba 23F01003 	 bic r3,r3,#16
 5233 00be DAB2     	 uxtb r2,r3
 5234 00c0 7B68     	 ldr r3,[r7,#4]
 5235 00c2 1A72     	 strb r2,[r3,#8]
1688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = (uint8_t)1;
 5236              	 .loc 3 1688 0
 5237 00c4 7B68     	 ldr r3,[r7,#4]
 5238 00c6 1B68     	 ldr r3,[r3]
 5239 00c8 0122     	 movs r2,#1
 5240 00ca 9A71     	 strb r2,[r3,#6]
 5241              	.L256:
1689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5242              	 .loc 3 1691 0
 5243 00cc FB7B     	 ldrb r3,[r7,#15]
1692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5244              	 .loc 3 1692 0
 5245 00ce 1846     	 mov r0,r3
 5246 00d0 1037     	 adds r7,r7,#16
 5247              	.LCFI313:
 5248              	 .cfi_def_cfa_offset 8
 5249 00d2 BD46     	 mov sp,r7
 5250              	.LCFI314:
 5251              	 .cfi_def_cfa_register 13
 5252              	 
 5253 00d4 80BD     	 pop {r7,pc}
 5254              	 .cfi_endproc
 5255              	.LFE250:
 5257 00d6 00BF     	 .section .text.SDMMC_BLOCK_SD_ErrorInterruptHandler,"ax",%progbits
 5258              	 .align 2
 5259              	 .global SDMMC_BLOCK_SD_ErrorInterruptHandler
 5260              	 .thumb
 5261              	 .thumb_func
 5263              	SDMMC_BLOCK_SD_ErrorInterruptHandler:
 5264              	.LFB251:
1693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Handles interrupt in error interrupt status register */
1695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_ErrorInterruptHandler(SDMMC_BLOCK_t *const obj,
1696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                uint16_t int_status)
1697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5265              	 .loc 3 1697 0
 5266              	 .cfi_startproc
 5267              	 
 5268              	 
 5269 0000 80B5     	 push {r7,lr}
 5270              	.LCFI315:
 5271              	 .cfi_def_cfa_offset 8
 5272              	 .cfi_offset 7,-8
 5273              	 .cfi_offset 14,-4
 5274 0002 84B0     	 sub sp,sp,#16
 5275              	.LCFI316:
 5276              	 .cfi_def_cfa_offset 24
 5277 0004 00AF     	 add r7,sp,#0
 5278              	.LCFI317:
 5279              	 .cfi_def_cfa_register 7
 5280 0006 7860     	 str r0,[r7,#4]
 5281 0008 0B46     	 mov r3,r1
 5282 000a 7B80     	 strh r3,[r7,#2]
1698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5283              	 .loc 3 1698 0
 5284 000c 0123     	 movs r3,#1
 5285 000e FB73     	 strb r3,[r7,#15]
1699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->isr_context.int_status_shadow = int_status;
 5286              	 .loc 3 1699 0
 5287 0010 7B68     	 ldr r3,[r7,#4]
 5288 0012 1B68     	 ldr r3,[r3]
 5289 0014 7A88     	 ldrh r2,[r7,#2]
 5290 0016 9A80     	 strh r2,[r3,#4]
1700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command timeout error interrupt */
1702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR >> 16U)) != (uint32_t)0)
 5291              	 .loc 3 1702 0
 5292 0018 7B88     	 ldrh r3,[r7,#2]
 5293 001a 03F00103 	 and r3,r3,#1
 5294 001e 002B     	 cmp r3,#0
 5295 0020 16D0     	 beq .L259
1703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_TIMEOUT_ERROR;
 5296              	 .loc 3 1704 0
 5297 0022 7B68     	 ldr r3,[r7,#4]
 5298 0024 1B68     	 ldr r3,[r3]
 5299 0026 0222     	 movs r2,#2
 5300 0028 5A76     	 strb r2,[r3,#25]
1705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5301              	 .loc 3 1705 0
 5302 002a 7B68     	 ldr r3,[r7,#4]
 5303 002c 1B7A     	 ldrb r3,[r3,#8]
 5304 002e 23F01003 	 bic r3,r3,#16
 5305 0032 DAB2     	 uxtb r2,r3
 5306 0034 7B68     	 ldr r3,[r7,#4]
 5307 0036 1A72     	 strb r2,[r3,#8]
1706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_TIMEOUT_ERR);
 5308              	 .loc 3 1706 0
 5309 0038 7B68     	 ldr r3,[r7,#4]
 5310 003a 1B68     	 ldr r3,[r3]
 5311 003c 1B68     	 ldr r3,[r3]
 5312 003e 1846     	 mov r0,r3
 5313 0040 4FF48031 	 mov r1,#65536
 5314 0044 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5315              	 .loc 3 1707 0
 5316 0048 7B68     	 ldr r3,[r7,#4]
 5317 004a 1B68     	 ldr r3,[r3]
 5318 004c 0122     	 movs r2,#1
 5319 004e 9A71     	 strb r2,[r3,#6]
 5320              	.L259:
1708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command CRC error interrupt */
1711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_CRC_ERR >> 16U)) != (uint32_t)0)
 5321              	 .loc 3 1711 0
 5322 0050 7B88     	 ldrh r3,[r7,#2]
 5323 0052 03F00203 	 and r3,r3,#2
 5324 0056 002B     	 cmp r3,#0
 5325 0058 16D0     	 beq .L260
1712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_CRC_ERROR;
 5326              	 .loc 3 1713 0
 5327 005a 7B68     	 ldr r3,[r7,#4]
 5328 005c 1B68     	 ldr r3,[r3]
 5329 005e 0322     	 movs r2,#3
 5330 0060 5A76     	 strb r2,[r3,#25]
1714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5331              	 .loc 3 1714 0
 5332 0062 7B68     	 ldr r3,[r7,#4]
 5333 0064 1B7A     	 ldrb r3,[r3,#8]
 5334 0066 23F01003 	 bic r3,r3,#16
 5335 006a DAB2     	 uxtb r2,r3
 5336 006c 7B68     	 ldr r3,[r7,#4]
 5337 006e 1A72     	 strb r2,[r3,#8]
1715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_CRC_ERR);
 5338              	 .loc 3 1715 0
 5339 0070 7B68     	 ldr r3,[r7,#4]
 5340 0072 1B68     	 ldr r3,[r3]
 5341 0074 1B68     	 ldr r3,[r3]
 5342 0076 1846     	 mov r0,r3
 5343 0078 4FF40031 	 mov r1,#131072
 5344 007c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5345              	 .loc 3 1716 0
 5346 0080 7B68     	 ldr r3,[r7,#4]
 5347 0082 1B68     	 ldr r3,[r3]
 5348 0084 0122     	 movs r2,#1
 5349 0086 9A71     	 strb r2,[r3,#6]
 5350              	.L260:
1717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command end bit error interrupt */
1720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_END_BIT_ERR >> 16U)) != (uint32_t)0)
 5351              	 .loc 3 1720 0
 5352 0088 7B88     	 ldrh r3,[r7,#2]
 5353 008a 03F00403 	 and r3,r3,#4
 5354 008e 002B     	 cmp r3,#0
 5355 0090 16D0     	 beq .L261
1721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_ENDBIT_ERROR;
 5356              	 .loc 3 1722 0
 5357 0092 7B68     	 ldr r3,[r7,#4]
 5358 0094 1B68     	 ldr r3,[r3]
 5359 0096 0422     	 movs r2,#4
 5360 0098 5A76     	 strb r2,[r3,#25]
1723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5361              	 .loc 3 1723 0
 5362 009a 7B68     	 ldr r3,[r7,#4]
 5363 009c 1B7A     	 ldrb r3,[r3,#8]
 5364 009e 23F01003 	 bic r3,r3,#16
 5365 00a2 DAB2     	 uxtb r2,r3
 5366 00a4 7B68     	 ldr r3,[r7,#4]
 5367 00a6 1A72     	 strb r2,[r3,#8]
1724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_END_BIT_ERR);
 5368              	 .loc 3 1724 0
 5369 00a8 7B68     	 ldr r3,[r7,#4]
 5370 00aa 1B68     	 ldr r3,[r3]
 5371 00ac 1B68     	 ldr r3,[r3]
 5372 00ae 1846     	 mov r0,r3
 5373 00b0 4FF48021 	 mov r1,#262144
 5374 00b4 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5375              	 .loc 3 1725 0
 5376 00b8 7B68     	 ldr r3,[r7,#4]
 5377 00ba 1B68     	 ldr r3,[r3]
 5378 00bc 0122     	 movs r2,#1
 5379 00be 9A71     	 strb r2,[r3,#6]
 5380              	.L261:
1726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Command index error interrupt */
1729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_CMD_IND_ERR >> 16U)) != (uint32_t)0)
 5381              	 .loc 3 1729 0
 5382 00c0 7B88     	 ldrh r3,[r7,#2]
 5383 00c2 03F00803 	 and r3,r3,#8
 5384 00c6 002B     	 cmp r3,#0
 5385 00c8 16D0     	 beq .L262
1730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_COMMAND_INDEX_ERROR;
 5386              	 .loc 3 1731 0
 5387 00ca 7B68     	 ldr r3,[r7,#4]
 5388 00cc 1B68     	 ldr r3,[r3]
 5389 00ce 0522     	 movs r2,#5
 5390 00d0 5A76     	 strb r2,[r3,#25]
1732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5391              	 .loc 3 1732 0
 5392 00d2 7B68     	 ldr r3,[r7,#4]
 5393 00d4 1B7A     	 ldrb r3,[r3,#8]
 5394 00d6 23F01003 	 bic r3,r3,#16
 5395 00da DAB2     	 uxtb r2,r3
 5396 00dc 7B68     	 ldr r3,[r7,#4]
 5397 00de 1A72     	 strb r2,[r3,#8]
1733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_CMD_IND_ERR);
 5398              	 .loc 3 1733 0
 5399 00e0 7B68     	 ldr r3,[r7,#4]
 5400 00e2 1B68     	 ldr r3,[r3]
 5401 00e4 1B68     	 ldr r3,[r3]
 5402 00e6 1846     	 mov r0,r3
 5403 00e8 4FF40021 	 mov r1,#524288
 5404 00ec FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5405              	 .loc 3 1734 0
 5406 00f0 7B68     	 ldr r3,[r7,#4]
 5407 00f2 1B68     	 ldr r3,[r3]
 5408 00f4 0122     	 movs r2,#1
 5409 00f6 9A71     	 strb r2,[r3,#6]
 5410              	.L262:
1735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data timeout error interrupt */
1738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR >> 16U)) != (uint32_t)0)
 5411              	 .loc 3 1738 0
 5412 00f8 7B88     	 ldrh r3,[r7,#2]
 5413 00fa 03F01003 	 and r3,r3,#16
 5414 00fe 002B     	 cmp r3,#0
 5415 0100 16D0     	 beq .L263
1739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_TIMEOUT_ERROR;
 5416              	 .loc 3 1740 0
 5417 0102 7B68     	 ldr r3,[r7,#4]
 5418 0104 1B68     	 ldr r3,[r3]
 5419 0106 0622     	 movs r2,#6
 5420 0108 1A76     	 strb r2,[r3,#24]
1741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5421              	 .loc 3 1741 0
 5422 010a 7B68     	 ldr r3,[r7,#4]
 5423 010c 1B7A     	 ldrb r3,[r3,#8]
 5424 010e 23F02003 	 bic r3,r3,#32
 5425 0112 DAB2     	 uxtb r2,r3
 5426 0114 7B68     	 ldr r3,[r7,#4]
 5427 0116 1A72     	 strb r2,[r3,#8]
1742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_TIMEOUT_ERR);
 5428              	 .loc 3 1742 0
 5429 0118 7B68     	 ldr r3,[r7,#4]
 5430 011a 1B68     	 ldr r3,[r3]
 5431 011c 1B68     	 ldr r3,[r3]
 5432 011e 1846     	 mov r0,r3
 5433 0120 4FF48011 	 mov r1,#1048576
 5434 0124 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5435              	 .loc 3 1743 0
 5436 0128 7B68     	 ldr r3,[r7,#4]
 5437 012a 1B68     	 ldr r3,[r3]
 5438 012c 0122     	 movs r2,#1
 5439 012e DA71     	 strb r2,[r3,#7]
 5440              	.L263:
1744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data CRC error interrupt */
1747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_CRC_ERR >> 16U)) != (uint32_t)0)
 5441              	 .loc 3 1747 0
 5442 0130 7B88     	 ldrh r3,[r7,#2]
 5443 0132 03F02003 	 and r3,r3,#32
 5444 0136 002B     	 cmp r3,#0
 5445 0138 16D0     	 beq .L264
1748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_CRC_ERROR;
 5446              	 .loc 3 1749 0
 5447 013a 7B68     	 ldr r3,[r7,#4]
 5448 013c 1B68     	 ldr r3,[r3]
 5449 013e 0722     	 movs r2,#7
 5450 0140 1A76     	 strb r2,[r3,#24]
1750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5451              	 .loc 3 1750 0
 5452 0142 7B68     	 ldr r3,[r7,#4]
 5453 0144 1B7A     	 ldrb r3,[r3,#8]
 5454 0146 23F02003 	 bic r3,r3,#32
 5455 014a DAB2     	 uxtb r2,r3
 5456 014c 7B68     	 ldr r3,[r7,#4]
 5457 014e 1A72     	 strb r2,[r3,#8]
1751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_CRC_ERR);
 5458              	 .loc 3 1751 0
 5459 0150 7B68     	 ldr r3,[r7,#4]
 5460 0152 1B68     	 ldr r3,[r3]
 5461 0154 1B68     	 ldr r3,[r3]
 5462 0156 1846     	 mov r0,r3
 5463 0158 4FF40011 	 mov r1,#2097152
 5464 015c FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5465              	 .loc 3 1752 0
 5466 0160 7B68     	 ldr r3,[r7,#4]
 5467 0162 1B68     	 ldr r3,[r3]
 5468 0164 0122     	 movs r2,#1
 5469 0166 DA71     	 strb r2,[r3,#7]
 5470              	.L264:
1753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Data end bit error interrupt */
1756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_DATA_END_BIT_ERR >> 16U)) != (uint32_t)0)
 5471              	 .loc 3 1756 0
 5472 0168 7B88     	 ldrh r3,[r7,#2]
 5473 016a 03F04003 	 and r3,r3,#64
 5474 016e 002B     	 cmp r3,#0
 5475 0170 16D0     	 beq .L265
1757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_DATA_ENDBIT_ERROR;
 5476              	 .loc 3 1758 0
 5477 0172 7B68     	 ldr r3,[r7,#4]
 5478 0174 1B68     	 ldr r3,[r3]
 5479 0176 0822     	 movs r2,#8
 5480 0178 1A76     	 strb r2,[r3,#24]
1759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5481              	 .loc 3 1759 0
 5482 017a 7B68     	 ldr r3,[r7,#4]
 5483 017c 1B7A     	 ldrb r3,[r3,#8]
 5484 017e 23F02003 	 bic r3,r3,#32
 5485 0182 DAB2     	 uxtb r2,r3
 5486 0184 7B68     	 ldr r3,[r7,#4]
 5487 0186 1A72     	 strb r2,[r3,#8]
1760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_DATA_END_BIT_ERR);
 5488              	 .loc 3 1760 0
 5489 0188 7B68     	 ldr r3,[r7,#4]
 5490 018a 1B68     	 ldr r3,[r3]
 5491 018c 1B68     	 ldr r3,[r3]
 5492 018e 1846     	 mov r0,r3
 5493 0190 4FF48001 	 mov r1,#4194304
 5494 0194 FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = 1U;
 5495              	 .loc 3 1761 0
 5496 0198 7B68     	 ldr r3,[r7,#4]
 5497 019a 1B68     	 ldr r3,[r3]
 5498 019c 0122     	 movs r2,#1
 5499 019e DA71     	 strb r2,[r3,#7]
 5500              	.L265:
1762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* ACMD12 error interrupt */
1765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)int_status & ((uint32_t)XMC_SDMMC_ACMD_ERR >> 16U)) != (uint32_t)0)
 5501              	 .loc 3 1765 0
 5502 01a0 7B88     	 ldrh r3,[r7,#2]
 5503 01a2 03F48073 	 and r3,r3,#256
 5504 01a6 002B     	 cmp r3,#0
 5505 01a8 1DD0     	 beq .L266
1766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->acmd_int_err = SDMMC_BLOCK_MODE_STATUS_ACMD12_ERROR;
 5506              	 .loc 3 1767 0
 5507 01aa 7B68     	 ldr r3,[r7,#4]
 5508 01ac 1B68     	 ldr r3,[r3]
 5509 01ae 0922     	 movs r2,#9
 5510 01b0 DA76     	 strb r2,[r3,#27]
1768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_CMD_ACTIVE;
 5511              	 .loc 3 1768 0
 5512 01b2 7B68     	 ldr r3,[r7,#4]
 5513 01b4 1B7A     	 ldrb r3,[r3,#8]
 5514 01b6 23F01003 	 bic r3,r3,#16
 5515 01ba DAB2     	 uxtb r2,r3
 5516 01bc 7B68     	 ldr r3,[r7,#4]
 5517 01be 1A72     	 strb r2,[r3,#8]
1769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->card_state &= (uint8_t)~(uint8_t)SDMMC_BLOCK_CARD_STATE_DATA_ACTIVE;
 5518              	 .loc 3 1769 0
 5519 01c0 7B68     	 ldr r3,[r7,#4]
 5520 01c2 1B7A     	 ldrb r3,[r3,#8]
 5521 01c4 23F02003 	 bic r3,r3,#32
 5522 01c8 DAB2     	 uxtb r2,r3
 5523 01ca 7B68     	 ldr r3,[r7,#4]
 5524 01cc 1A72     	 strb r2,[r3,#8]
1770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_ClearEvent(obj->sdmmc_sd->sdmmc, (uint32_t)XMC_SDMMC_ACMD_ERR);
 5525              	 .loc 3 1770 0
 5526 01ce 7B68     	 ldr r3,[r7,#4]
 5527 01d0 1B68     	 ldr r3,[r3]
 5528 01d2 1B68     	 ldr r3,[r3]
 5529 01d4 1846     	 mov r0,r3
 5530 01d6 4FF08071 	 mov r1,#16777216
 5531 01da FFF7FEFF 	 bl XMC_SDMMC_ClearEvent
1771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.cmd_flag = 1U;
 5532              	 .loc 3 1771 0
 5533 01de 7B68     	 ldr r3,[r7,#4]
 5534 01e0 1B68     	 ldr r3,[r3]
 5535 01e2 0122     	 movs r2,#1
 5536 01e4 9A71     	 strb r2,[r3,#6]
 5537              	.L266:
1772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5538              	 .loc 3 1774 0
 5539 01e6 FB7B     	 ldrb r3,[r7,#15]
1775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5540              	 .loc 3 1775 0
 5541 01e8 1846     	 mov r0,r3
 5542 01ea 1037     	 adds r7,r7,#16
 5543              	.LCFI318:
 5544              	 .cfi_def_cfa_offset 8
 5545 01ec BD46     	 mov sp,r7
 5546              	.LCFI319:
 5547              	 .cfi_def_cfa_register 13
 5548              	 
 5549 01ee 80BD     	 pop {r7,pc}
 5550              	 .cfi_endproc
 5551              	.LFE251:
 5553              	 .section .text.SDMMC_BLOCK_SD_lSwitchToTransferState,"ax",%progbits
 5554              	 .align 2
 5555              	 .thumb
 5556              	 .thumb_func
 5558              	SDMMC_BLOCK_SD_lSwitchToTransferState:
 5559              	.LFB252:
1776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Switch the card state to transferring state if it isn't */
1778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lSwitchToTransferState(SDMMC_BLOCK_t *const obj)
1779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5560              	 .loc 3 1779 0
 5561              	 .cfi_startproc
 5562              	 
 5563              	 
 5564 0000 80B5     	 push {r7,lr}
 5565              	.LCFI320:
 5566              	 .cfi_def_cfa_offset 8
 5567              	 .cfi_offset 7,-8
 5568              	 .cfi_offset 14,-4
 5569 0002 88B0     	 sub sp,sp,#32
 5570              	.LCFI321:
 5571              	 .cfi_def_cfa_offset 40
 5572 0004 02AF     	 add r7,sp,#8
 5573              	.LCFI322:
 5574              	 .cfi_def_cfa 7,32
 5575 0006 7860     	 str r0,[r7,#4]
1780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5576              	 .loc 3 1780 0
 5577 0008 0123     	 movs r3,#1
 5578 000a FB75     	 strb r3,[r7,#23]
1781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0UL;
 5579              	 .loc 3 1781 0
 5580 000c 0023     	 movs r3,#0
 5581 000e 3B61     	 str r3,[r7,#16]
1782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 5582              	 .loc 3 1782 0
 5583 0010 0023     	 movs r3,#0
 5584 0012 FB60     	 str r3,[r7,#12]
1783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check the current state of the card */
1785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPOS)
 5585              	 .loc 3 1785 0
 5586 0014 7B68     	 ldr r3,[r7,#4]
 5587 0016 1B68     	 ldr r3,[r3]
 5588 0018 B3F84C30 	 ldrh r3,[r3,#76]
 5589 001c 1B04     	 lsls r3,r3,#16
 5590 001e 3A69     	 ldr r2,[r7,#16]
 5591 0020 1343     	 orrs r3,r3,r2
 5592 0022 3B61     	 str r3,[r7,#16]
1786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD13 to read card status */
1788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
1789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 5593              	 .loc 3 1789 0
 5594 0024 0A23     	 movs r3,#10
1788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 5595              	 .loc 3 1788 0
 5596 0026 5B00     	 lsls r3,r3,#1
 5597 0028 164A     	 ldr r2,.L272
 5598 002a 1A44     	 add r2,r2,r3
 5599 002c 07F10C03 	 add r3,r7,#12
 5600 0030 0093     	 str r3,[sp]
 5601 0032 7868     	 ldr r0,[r7,#4]
 5602 0034 1146     	 mov r1,r2
 5603 0036 3A69     	 ldr r2,[r7,#16]
 5604 0038 0123     	 movs r3,#1
 5605 003a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5606 003e 0346     	 mov r3,r0
 5607 0040 FB75     	 strb r3,[r7,#23]
1790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
1791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
1792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
1793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5608              	 .loc 3 1794 0
 5609 0042 FB7D     	 ldrb r3,[r7,#23]
 5610 0044 002B     	 cmp r3,#0
 5611 0046 17D1     	 bne .L269
1795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if it is in transferring state */
1797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((card_status & SDMMC_BLOCK_SD_CSR_CURRENT_STATE_BITMASK) >> SDMMC_BLOCK_SD_CSR_CURRENT_STA
 5612              	 .loc 3 1797 0
 5613 0048 FB68     	 ldr r3,[r7,#12]
 5614 004a 03F4E853 	 and r3,r3,#7424
 5615 004e 5B0A     	 lsrs r3,r3,#9
 5616 0050 042B     	 cmp r3,#4
 5617 0052 02D1     	 bne .L270
1798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         SDMMC_BLOCK_SD_CSR_CURRENT_STATE_TRANS_VALUE)
1799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5618              	 .loc 3 1800 0
 5619 0054 0023     	 movs r3,#0
 5620 0056 FB75     	 strb r3,[r7,#23]
 5621 0058 0EE0     	 b .L269
 5622              	.L270:
1801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Switch to transfer state (CMD7) */
1805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(7)),
 5623              	 .loc 3 1806 0
 5624 005a 0523     	 movs r3,#5
1805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(7)),
 5625              	 .loc 3 1805 0
 5626 005c 5B00     	 lsls r3,r3,#1
 5627 005e 094A     	 ldr r2,.L272
 5628 0060 1A44     	 add r2,r2,r3
 5629 0062 07F10C03 	 add r3,r7,#12
 5630 0066 0093     	 str r3,[sp]
 5631 0068 7868     	 ldr r0,[r7,#4]
 5632 006a 1146     	 mov r1,r2
 5633 006c 3A69     	 ldr r2,[r7,#16]
 5634 006e 0223     	 movs r3,#2
 5635 0070 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5636 0074 0346     	 mov r3,r0
 5637 0076 FB75     	 strb r3,[r7,#23]
 5638              	.L269:
1807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            arg,
1808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1b,
1809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5639              	 .loc 3 1813 0
 5640 0078 FB7D     	 ldrb r3,[r7,#23]
1814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5641              	 .loc 3 1814 0
 5642 007a 1846     	 mov r0,r3
 5643 007c 1837     	 adds r7,r7,#24
 5644              	.LCFI323:
 5645              	 .cfi_def_cfa_offset 8
 5646 007e BD46     	 mov sp,r7
 5647              	.LCFI324:
 5648              	 .cfi_def_cfa_register 13
 5649              	 
 5650 0080 80BD     	 pop {r7,pc}
 5651              	.L273:
 5652 0082 00BF     	 .align 2
 5653              	.L272:
 5654 0084 00000000 	 .word sdmmc_block_command
 5655              	 .cfi_endproc
 5656              	.LFE252:
 5658              	 .section .text.SDMMC_BLOCK_SD_lDataTransfer,"ax",%progbits
 5659              	 .align 2
 5660              	 .thumb
 5661              	 .thumb_func
 5663              	SDMMC_BLOCK_SD_lDataTransfer:
 5664              	.LFB253:
1815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Do data transfer to OR from card */
1817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lDataTransfer(SDMMC_BLOCK_t *const obj,
1818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               uint32_t *buf,
1819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               SDMMC_BLOCK_SD_DATA_TRANSFER_t transf
1820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                               uint32_t quad_bytes)
1821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5665              	 .loc 3 1821 0
 5666              	 .cfi_startproc
 5667              	 
 5668              	 
 5669 0000 80B5     	 push {r7,lr}
 5670              	.LCFI325:
 5671              	 .cfi_def_cfa_offset 8
 5672              	 .cfi_offset 7,-8
 5673              	 .cfi_offset 14,-4
 5674 0002 86B0     	 sub sp,sp,#24
 5675              	.LCFI326:
 5676              	 .cfi_def_cfa_offset 32
 5677 0004 00AF     	 add r7,sp,#0
 5678              	.LCFI327:
 5679              	 .cfi_def_cfa_register 7
 5680 0006 F860     	 str r0,[r7,#12]
 5681 0008 B960     	 str r1,[r7,#8]
 5682 000a 3B60     	 str r3,[r7]
 5683 000c 1346     	 mov r3,r2
 5684 000e FB71     	 strb r3,[r7,#7]
1822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 5685              	 .loc 3 1822 0
 5686 0010 0123     	 movs r3,#1
 5687 0012 FB75     	 strb r3,[r7,#23]
1823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t count = 0U;
 5688              	 .loc 3 1823 0
 5689 0014 0023     	 movs r3,#0
 5690 0016 3B61     	 str r3,[r7,#16]
1824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Block on buffer read/write ready interrupt */
1826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_RESET_IN_DATA_TRANSFER);
 5691              	 .loc 3 1826 0
 5692 0018 F868     	 ldr r0,[r7,#12]
 5693 001a 3049     	 ldr r1,.L285
 5694 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 5695 0020 0346     	 mov r3,r0
 5696 0022 FB75     	 strb r3,[r7,#23]
1827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5697              	 .loc 3 1827 0
 5698 0024 FB7D     	 ldrb r3,[r7,#23]
 5699 0026 002B     	 cmp r3,#0
 5700 0028 53D1     	 bne .L275
 5701              	.L278:
1828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
1830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 5702              	 .loc 3 1831 0
 5703 002a FB68     	 ldr r3,[r7,#12]
 5704 002c 1B68     	 ldr r3,[r3]
 5705 002e 93F85C30 	 ldrb r3,[r3,#92]
 5706 0032 DBB2     	 uxtb r3,r3
 5707 0034 83F00103 	 eor r3,r3,#1
 5708 0038 DBB2     	 uxtb r3,r3
 5709 003a 002B     	 cmp r3,#0
 5710 003c 02D0     	 beq .L276
1832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 5711              	 .loc 3 1833 0
 5712 003e 2E23     	 movs r3,#46
 5713 0040 FB75     	 strb r3,[r7,#23]
1834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 5714              	 .loc 3 1834 0
 5715 0042 04E0     	 b .L277
 5716              	.L276:
1835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while (obj->sdmmc_sd->isr_context.data_flag == 0U);
 5717              	 .loc 3 1836 0
 5718 0044 FB68     	 ldr r3,[r7,#12]
 5719 0046 1B68     	 ldr r3,[r3]
 5720 0048 DB79     	 ldrb r3,[r3,#7]
 5721 004a 002B     	 cmp r3,#0
 5722 004c EDD0     	 beq .L278
 5723              	.L277:
1837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
1839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 5724              	 .loc 3 1839 0
 5725 004e F868     	 ldr r0,[r7,#12]
 5726 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
1840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 5727              	 .loc 3 1840 0
 5728 0054 FB68     	 ldr r3,[r7,#12]
 5729 0056 1B68     	 ldr r3,[r3]
 5730 0058 5B6D     	 ldr r3,[r3,#84]
 5731 005a 1846     	 mov r0,r3
 5732 005c FFF7FEFF 	 bl SYSTIMER_DeleteTimer
1841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->isr_context.data_flag = (uint8_t)0U;
 5733              	 .loc 3 1842 0
 5734 0060 FB68     	 ldr r3,[r7,#12]
 5735 0062 1B68     	 ldr r3,[r3]
 5736 0064 0022     	 movs r2,#0
 5737 0066 DA71     	 strb r2,[r3,#7]
1843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if buffer is ready */
1845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->data_int_err == SDMMC_BLOCK_MODE_STATUS_BUFFER_READY)
 5738              	 .loc 3 1845 0
 5739 0068 FB68     	 ldr r3,[r7,#12]
 5740 006a 1B68     	 ldr r3,[r3]
 5741 006c 1B7E     	 ldrb r3,[r3,#24]
 5742 006e 1E2B     	 cmp r3,#30
 5743 0070 25D1     	 bne .L279
1846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* 4 bytes data transmission in each iteration */
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       for (count = 0U; count < quad_bytes; count++)
 5744              	 .loc 3 1848 0
 5745 0072 0023     	 movs r3,#0
 5746 0074 3B61     	 str r3,[r7,#16]
 5747 0076 1BE0     	 b .L280
 5748              	.L283:
1849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (transfer_mode == SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER)
 5749              	 .loc 3 1850 0
 5750 0078 FB79     	 ldrb r3,[r7,#7]
 5751 007a 012B     	 cmp r3,#1
 5752 007c 08D1     	 bne .L281
1851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           *buf = (uint32_t)XMC_SDMMC_ReadFIFO(obj->sdmmc_sd->sdmmc);
 5753              	 .loc 3 1852 0
 5754 007e FB68     	 ldr r3,[r7,#12]
 5755 0080 1B68     	 ldr r3,[r3]
 5756 0082 1B68     	 ldr r3,[r3]
 5757 0084 1846     	 mov r0,r3
 5758 0086 FFF7FEFF 	 bl XMC_SDMMC_ReadFIFO
 5759 008a 0246     	 mov r2,r0
 5760 008c BB68     	 ldr r3,[r7,#8]
 5761 008e 1A60     	 str r2,[r3]
 5762              	.L281:
1853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (transfer_mode == SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER)
 5763              	 .loc 3 1855 0
 5764 0090 FB79     	 ldrb r3,[r7,#7]
 5765 0092 022B     	 cmp r3,#2
 5766 0094 06D1     	 bne .L282
1856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_SDMMC_WriteFIFO(obj->sdmmc_sd->sdmmc, buf);
 5767              	 .loc 3 1857 0
 5768 0096 FB68     	 ldr r3,[r7,#12]
 5769 0098 1B68     	 ldr r3,[r3]
 5770 009a 1B68     	 ldr r3,[r3]
 5771 009c 1846     	 mov r0,r3
 5772 009e B968     	 ldr r1,[r7,#8]
 5773 00a0 FFF7FEFF 	 bl XMC_SDMMC_WriteFIFO
 5774              	.L282:
1858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         buf++;
 5775              	 .loc 3 1860 0 discriminator 2
 5776 00a4 BB68     	 ldr r3,[r7,#8]
 5777 00a6 0433     	 adds r3,r3,#4
 5778 00a8 BB60     	 str r3,[r7,#8]
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 5779              	 .loc 3 1848 0 discriminator 2
 5780 00aa 3B69     	 ldr r3,[r7,#16]
 5781 00ac 0133     	 adds r3,r3,#1
 5782 00ae 3B61     	 str r3,[r7,#16]
 5783              	.L280:
1848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
 5784              	 .loc 3 1848 0 is_stmt 0 discriminator 1
 5785 00b0 3A69     	 ldr r2,[r7,#16]
 5786 00b2 3B68     	 ldr r3,[r7]
 5787 00b4 9A42     	 cmp r2,r3
 5788 00b6 DFD3     	 bcc .L283
1861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5789              	 .loc 3 1862 0 is_stmt 1
 5790 00b8 0023     	 movs r3,#0
 5791 00ba FB75     	 strb r3,[r7,#23]
 5792 00bc 09E0     	 b .L275
 5793              	.L279:
1863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
1865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->issue_abort = (uint8_t)1U;
 5794              	 .loc 3 1866 0
 5795 00be FB68     	 ldr r3,[r7,#12]
 5796 00c0 1B68     	 ldr r3,[r3]
 5797 00c2 0122     	 movs r2,#1
 5798 00c4 83F85120 	 strb r2,[r3,#81]
1867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lErrorInterruptRecovery(obj);
 5799              	 .loc 3 1867 0
 5800 00c8 F868     	 ldr r0,[r7,#12]
 5801 00ca FFF7FEFF 	 bl SDMMC_BLOCK_SD_lErrorInterruptRecovery
 5802 00ce 0346     	 mov r3,r0
 5803 00d0 FB75     	 strb r3,[r7,#23]
 5804              	.L275:
1868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 5805              	 .loc 3 1871 0
 5806 00d2 FB7D     	 ldrb r3,[r7,#23]
1872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5807              	 .loc 3 1872 0
 5808 00d4 1846     	 mov r0,r3
 5809 00d6 1837     	 adds r7,r7,#24
 5810              	.LCFI328:
 5811              	 .cfi_def_cfa_offset 8
 5812 00d8 BD46     	 mov sp,r7
 5813              	.LCFI329:
 5814              	 .cfi_def_cfa_register 13
 5815              	 
 5816 00da 80BD     	 pop {r7,pc}
 5817              	.L286:
 5818              	 .align 2
 5819              	.L285:
 5820 00dc 40420F00 	 .word 1000000
 5821              	 .cfi_endproc
 5822              	.LFE253:
 5824              	 .section .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery,"ax",%progbits
 5825              	 .align 2
 5826              	 .thumb
 5827              	 .thumb_func
 5829              	SDMMC_BLOCK_SD_lAcmdErrorRecovery:
 5830              	.LFB254:
1873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Performs the ACMD error recovery */
1875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_lAcmdErrorRecovery(SDMMC_BLOCK_t *const obj)
1876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5831              	 .loc 3 1876 0
 5832              	 .cfi_startproc
 5833              	 
 5834              	 
 5835 0000 80B5     	 push {r7,lr}
 5836              	.LCFI330:
 5837              	 .cfi_def_cfa_offset 8
 5838              	 .cfi_offset 7,-8
 5839              	 .cfi_offset 14,-4
 5840 0002 88B0     	 sub sp,sp,#32
 5841              	.LCFI331:
 5842              	 .cfi_def_cfa_offset 40
 5843 0004 02AF     	 add r7,sp,#8
 5844              	.LCFI332:
 5845              	 .cfi_def_cfa 7,32
 5846 0006 7860     	 str r0,[r7,#4]
1877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 5847              	 .loc 3 1877 0
 5848 0008 0023     	 movs r3,#0
 5849 000a FB75     	 strb r3,[r7,#23]
1878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t pcmd_flag = 0U;
 5850              	 .loc 3 1878 0
 5851 000c 0023     	 movs r3,#0
 5852 000e 3B61     	 str r3,[r7,#16]
1879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 5853              	 .loc 3 1879 0
 5854 0010 0023     	 movs r3,#0
 5855 0012 FB60     	 str r3,[r7,#12]
1880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check ACMD12 "Not executed err" in Auto CMD12 error status register */
1882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_ACMD12_NOT_EXEC_ERR) == true)
 5856              	 .loc 3 1882 0
 5857 0014 7B68     	 ldr r3,[r7,#4]
 5858 0016 1B68     	 ldr r3,[r3]
 5859 0018 1B68     	 ldr r3,[r3]
 5860 001a 1846     	 mov r0,r3
 5861 001c 0121     	 movs r1,#1
 5862 001e FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5863 0022 0346     	 mov r3,r0
 5864 0024 002B     	 cmp r3,#0
 5865 0026 2CD0     	 beq .L288
1883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     pcmd_flag = 1U;
 5866              	 .loc 3 1884 0
 5867 0028 0123     	 movs r3,#1
 5868 002a 3B61     	 str r3,[r7,#16]
1885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check Return Status of Recovery function of CMD_wo_DAT command */
1886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->err_recovery_stat == SDMMC_BLOCK_MODE_STATUS_RECOVERABLE_ERROR)
 5869              	 .loc 3 1886 0
 5870 002c 7B68     	 ldr r3,[r7,#4]
 5871 002e 1B68     	 ldr r3,[r3]
 5872 0030 1B7F     	 ldrb r3,[r3,#28]
 5873 0032 242B     	 cmp r3,#36
 5874 0034 0ED1     	 bne .L289
1887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* For recoverable error, issue CMD12 */
1889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5875              	 .loc 3 1890 0
 5876 0036 0923     	 movs r3,#9
1889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5877              	 .loc 3 1889 0
 5878 0038 5B00     	 lsls r3,r3,#1
 5879 003a 294A     	 ldr r2,.L291
 5880 003c 1A44     	 add r2,r2,r3
 5881 003e 07F10C03 	 add r3,r7,#12
 5882 0042 0093     	 str r3,[sp]
 5883 0044 7868     	 ldr r0,[r7,#4]
 5884 0046 1146     	 mov r1,r2
 5885 0048 0022     	 movs r2,#0
 5886 004a 0123     	 movs r3,#1
 5887 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5888 0050 0346     	 mov r3,r0
 5889 0052 FB75     	 strb r3,[r7,#23]
 5890              	.L289:
1891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status != SDMMC_BLOCK_MODE_STATUS_SUCCESS) && (status != SDMMC_BLOCK_MODE_STATUS_NONRECOVE
 5891              	 .loc 3 1895 0
 5892 0054 FB7D     	 ldrb r3,[r7,#23]
 5893 0056 002B     	 cmp r3,#0
 5894 0058 3ED0     	 beq .L287
 5895              	 .loc 3 1895 0 is_stmt 0 discriminator 1
 5896 005a FB7D     	 ldrb r3,[r7,#23]
 5897 005c 252B     	 cmp r3,#37
 5898 005e 3BD0     	 beq .L287
1896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set software reset for data line */
1898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 5899              	 .loc 3 1898 0 is_stmt 1
 5900 0060 7868     	 ldr r0,[r7,#4]
 5901 0062 0421     	 movs r1,#4
 5902 0064 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5903 0068 0346     	 mov r3,r0
 5904 006a FB75     	 strb r3,[r7,#23]
1899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5905              	 .loc 3 1899 0
 5906 006c FB7D     	 ldrb r3,[r7,#23]
 5907 006e 002B     	 cmp r3,#0
 5908 0070 32D1     	 bne .L287
1900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Check for XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR */
1902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR
 5909              	 .loc 3 1902 0
 5910 0072 7B68     	 ldr r3,[r7,#4]
 5911 0074 1B68     	 ldr r3,[r3]
 5912 0076 1B68     	 ldr r3,[r3]
 5913 0078 1846     	 mov r0,r3
 5914 007a 8021     	 movs r1,#128
 5915 007c FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5916 0080 2AE0     	 b .L287
 5917              	.L288:
1903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           XMC_DEBUG("SDMMC_BLOCK_ACMDErrorRecovery: SDMMC_BLOCK_ACMD_CMD_wo_DAT_NOT_ISSUED");
1905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         else
1907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /*
1909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            * Check pcmd_flag. If 1, an error occurred in CMD_wo_DAT,
1910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            * and also in the SD memory transfer
1911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****            */
1912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (pcmd_flag == 1U)
1913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD both error");
1915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           else
1917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD SD transfer error");
1919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
1925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set software reset for CMD line */
1927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_CMD_LINE);
 5918              	 .loc 3 1927 0
 5919 0082 7868     	 ldr r0,[r7,#4]
 5920 0084 0221     	 movs r1,#2
 5921 0086 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5922 008a 0346     	 mov r3,r0
 5923 008c FB75     	 strb r3,[r7,#23]
1928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5924              	 .loc 3 1928 0
 5925 008e FB7D     	 ldrb r3,[r7,#23]
 5926 0090 002B     	 cmp r3,#0
 5927 0092 21D1     	 bne .L287
1929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Issue CMD12 */
1931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
1932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5928              	 .loc 3 1932 0
 5929 0094 0923     	 movs r3,#9
1931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(12)),
 5930              	 .loc 3 1931 0
 5931 0096 5B00     	 lsls r3,r3,#1
 5932 0098 114A     	 ldr r2,.L291
 5933 009a 1A44     	 add r2,r2,r3
 5934 009c 07F10C03 	 add r3,r7,#12
 5935 00a0 0093     	 str r3,[sp]
 5936 00a2 7868     	 ldr r0,[r7,#4]
 5937 00a4 1146     	 mov r1,r2
 5938 00a6 0022     	 movs r2,#0
 5939 00a8 0123     	 movs r3,#1
 5940 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 5941 00ae 0346     	 mov r3,r0
 5942 00b0 FB75     	 strb r3,[r7,#23]
1933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            SDMMC_BLOCK_ARGUMENT0,
1934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
1935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
1936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status != SDMMC_BLOCK_MODE_STATUS_NONRECOVERABLE_ERROR)
 5943              	 .loc 3 1936 0
 5944 00b2 FB7D     	 ldrb r3,[r7,#23]
 5945 00b4 252B     	 cmp r3,#37
 5946 00b6 0FD0     	 beq .L287
1937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
1938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /*Set Software Reset for  Data line*/
1939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RST_DAT_LINE);
 5947              	 .loc 3 1939 0
 5948 00b8 7868     	 ldr r0,[r7,#4]
 5949 00ba 0421     	 movs r1,#4
 5950 00bc FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 5951 00c0 0346     	 mov r3,r0
 5952 00c2 FB75     	 strb r3,[r7,#23]
1940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 5953              	 .loc 3 1940 0
 5954 00c4 FB7D     	 ldrb r3,[r7,#23]
 5955 00c6 002B     	 cmp r3,#0
 5956 00c8 06D1     	 bne .L287
1941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
1942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           /* Check XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_ERR */
1943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (XMC_SDMMC_GetACMDErrStatus(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CMD_NOT_ISSUED_BY_ACMD12_E
 5957              	 .loc 3 1943 0
 5958 00ca 7B68     	 ldr r3,[r7,#4]
 5959 00cc 1B68     	 ldr r3,[r3]
 5960 00ce 1B68     	 ldr r3,[r3]
 5961 00d0 1846     	 mov r0,r3
 5962 00d2 8021     	 movs r1,#128
 5963 00d4 FFF7FEFF 	 bl XMC_SDMMC_GetACMDErrStatus
 5964              	.L287:
1944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             XMC_DEBUG("SDMMC_BLOCK_ACMDErrorRecovery: SDMMC_BLOCK_ACMD_CMD_wo_DAT_NOT_ISSUED");
1946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           else
1948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
1949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             /*
1950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              * Check PCMD flag. If 1, an error occurred in CMD_wo_DAT,
1951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              * and also in the SD memory transfer
1952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              */
1953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             if (pcmd_flag == 1U)
1954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD both error");
1956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             else
1958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             {
1959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****               XMC_DEBUG("SDMMC_BLOCK_CheckPCMDFlag: ACMD SD transfer error");
1960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             }
1961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
1962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
1963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
1964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
1965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 5965              	 .loc 3 1966 0
 5966 00d8 1837     	 adds r7,r7,#24
 5967              	.LCFI333:
 5968              	 .cfi_def_cfa_offset 8
 5969 00da BD46     	 mov sp,r7
 5970              	.LCFI334:
 5971              	 .cfi_def_cfa_register 13
 5972              	 
 5973 00dc 80BD     	 pop {r7,pc}
 5974              	.L292:
 5975 00de 00BF     	 .align 2
 5976              	.L291:
 5977 00e0 00000000 	 .word sdmmc_block_command
 5978              	 .cfi_endproc
 5979              	.LFE254:
 5981              	 .section .text.SDMMC_BLOCK_SD_TimerCallback,"ax",%progbits
 5982              	 .align 2
 5983              	 .thumb
 5984              	 .thumb_func
 5986              	SDMMC_BLOCK_SD_TimerCallback:
 5987              	.LFB255:
1967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Timer callback function */
1969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static void SDMMC_BLOCK_SD_TimerCallback(void *arg)
1970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 5988              	 .loc 3 1970 0
 5989              	 .cfi_startproc
 5990              	 
 5991              	 
 5992              	 
 5993 0000 80B4     	 push {r7}
 5994              	.LCFI335:
 5995              	 .cfi_def_cfa_offset 4
 5996              	 .cfi_offset 7,-4
 5997 0002 85B0     	 sub sp,sp,#20
 5998              	.LCFI336:
 5999              	 .cfi_def_cfa_offset 24
 6000 0004 00AF     	 add r7,sp,#0
 6001              	.LCFI337:
 6002              	 .cfi_def_cfa_register 7
 6003 0006 7860     	 str r0,[r7,#4]
1971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (arg != NULL)
 6004              	 .loc 3 1971 0
 6005 0008 7B68     	 ldr r3,[r7,#4]
 6006 000a 002B     	 cmp r3,#0
 6007 000c 06D0     	 beq .L293
 6008              	.LBB2:
1972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_t *obj = (SDMMC_BLOCK_t *)arg;
 6009              	 .loc 3 1973 0
 6010 000e 7B68     	 ldr r3,[r7,#4]
 6011 0010 FB60     	 str r3,[r7,#12]
1974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_expire = (bool)0U;
 6012              	 .loc 3 1974 0
 6013 0012 FB68     	 ldr r3,[r7,#12]
 6014 0014 1B68     	 ldr r3,[r3]
 6015 0016 0022     	 movs r2,#0
 6016 0018 83F85C20 	 strb r2,[r3,#92]
 6017              	.L293:
 6018              	.LBE2:
1975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
1976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6019              	 .loc 3 1976 0
 6020 001c 1437     	 adds r7,r7,#20
 6021              	.LCFI338:
 6022              	 .cfi_def_cfa_offset 4
 6023 001e BD46     	 mov sp,r7
 6024              	.LCFI339:
 6025              	 .cfi_def_cfa_register 13
 6026              	 
 6027 0020 5DF8047B 	 ldr r7,[sp],#4
 6028              	.LCFI340:
 6029              	 .cfi_restore 7
 6030              	 .cfi_def_cfa_offset 0
 6031 0024 7047     	 bx lr
 6032              	 .cfi_endproc
 6033              	.LFE255:
 6035 0026 00BF     	 .section .text.SDMMC_BLOCK_SD_lDelay,"ax",%progbits
 6036              	 .align 2
 6037              	 .thumb
 6038              	 .thumb_func
 6040              	SDMMC_BLOCK_SD_lDelay:
 6041              	.LFB256:
1977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Delay function */
1979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lDelay(SDMMC_BLOCK_t *const obj, uint32_t delay)
1980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6042              	 .loc 3 1980 0
 6043              	 .cfi_startproc
 6044              	 
 6045              	 
 6046 0000 80B5     	 push {r7,lr}
 6047              	.LCFI341:
 6048              	 .cfi_def_cfa_offset 8
 6049              	 .cfi_offset 7,-8
 6050              	 .cfi_offset 14,-4
 6051 0002 84B0     	 sub sp,sp,#16
 6052              	.LCFI342:
 6053              	 .cfi_def_cfa_offset 24
 6054 0004 00AF     	 add r7,sp,#0
 6055              	.LCFI343:
 6056              	 .cfi_def_cfa_register 7
 6057 0006 7860     	 str r0,[r7,#4]
 6058 0008 3960     	 str r1,[r7]
1981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = 0U;
 6059              	 .loc 3 1981 0
 6060 000a 0023     	 movs r3,#0
 6061 000c BB60     	 str r3,[r7,#8]
1982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_CREATE_TIMER_FAILED;
 6062              	 .loc 3 1982 0
 6063 000e 2F23     	 movs r3,#47
 6064 0010 FB73     	 strb r3,[r7,#15]
1983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 6065              	 .loc 3 1984 0
 6066 0012 7B68     	 ldr r3,[r7,#4]
 6067 0014 1B68     	 ldr r3,[r3]
 6068 0016 0122     	 movs r2,#1
 6069 0018 83F85C20 	 strb r2,[r3,#92]
1985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_id = tmr_id;
 6070              	 .loc 3 1985 0
 6071 001c 7B68     	 ldr r3,[r7,#4]
 6072 001e 1B68     	 ldr r3,[r3]
 6073 0020 BA68     	 ldr r2,[r7,#8]
 6074 0022 5A65     	 str r2,[r3,#84]
1986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   tmr_id = SYSTIMER_CreateTimer(delay, SYSTIMER_MODE_ONE_SHOT, &SDMMC_BLOCK_SD_TimerCallback, (void
 6075              	 .loc 3 1987 0
 6076 0024 3868     	 ldr r0,[r7]
 6077 0026 0021     	 movs r1,#0
 6078 0028 184A     	 ldr r2,.L302
 6079 002a 7B68     	 ldr r3,[r7,#4]
 6080 002c FFF7FEFF 	 bl SYSTIMER_CreateTimer
 6081 0030 B860     	 str r0,[r7,#8]
1988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (tmr_id > 0U)
 6082              	 .loc 3 1988 0
 6083 0032 BB68     	 ldr r3,[r7,#8]
 6084 0034 002B     	 cmp r3,#0
 6085 0036 1ED0     	 beq .L296
1989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
1990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = tmr_id;
 6086              	 .loc 3 1990 0
 6087 0038 7B68     	 ldr r3,[r7,#4]
 6088 003a 1B68     	 ldr r3,[r3]
 6089 003c BA68     	 ldr r2,[r7,#8]
 6090 003e 5A65     	 str r2,[r3,#84]
1991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (SDMMC_BLOCK_MODE_STATUS_t)SYSTIMER_StartTimer(tmr_id);
 6091              	 .loc 3 1992 0
 6092 0040 B868     	 ldr r0,[r7,#8]
 6093 0042 FFF7FEFF 	 bl SYSTIMER_StartTimer
 6094 0046 0346     	 mov r3,r0
 6095 0048 FB73     	 strb r3,[r7,#15]
1993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
1994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Is timer started successfully? */
1995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == (SDMMC_BLOCK_MODE_STATUS_t)SYSTIMER_STATUS_SUCCESS)
 6096              	 .loc 3 1995 0
 6097 004a FB7B     	 ldrb r3,[r7,#15]
 6098 004c 002B     	 cmp r3,#0
 6099 004e 10D1     	 bne .L297
1996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
1997:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Wait infinitely until timer expires */
1998:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while (obj->sdmmc_sd->tmr_expire)
 6100              	 .loc 3 1998 0
 6101 0050 00BF     	 nop
 6102              	.L298:
 6103              	 .loc 3 1998 0 is_stmt 0 discriminator 1
 6104 0052 7B68     	 ldr r3,[r7,#4]
 6105 0054 1B68     	 ldr r3,[r3]
 6106 0056 93F85C30 	 ldrb r3,[r3,#92]
 6107 005a DBB2     	 uxtb r3,r3
 6108 005c 002B     	 cmp r3,#0
 6109 005e F8D1     	 bne .L298
1999:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2000:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2001:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2002:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop the timer */
2003:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (SYSTIMER_StopTimer(tmr_id) == SYSTIMER_STATUS_SUCCESS)
 6110              	 .loc 3 2003 0 is_stmt 1
 6111 0060 B868     	 ldr r0,[r7,#8]
 6112 0062 FFF7FEFF 	 bl SYSTIMER_StopTimer
 6113 0066 0346     	 mov r3,r0
 6114 0068 002B     	 cmp r3,#0
 6115 006a 04D1     	 bne .L296
2004:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2005:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 6116              	 .loc 3 2005 0
 6117 006c 0023     	 movs r3,#0
 6118 006e FB73     	 strb r3,[r7,#15]
 6119 0070 01E0     	 b .L296
 6120              	.L297:
2006:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2007:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2008:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2009:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2010:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 6121              	 .loc 3 2010 0
 6122 0072 3123     	 movs r3,#49
 6123 0074 FB73     	 strb r3,[r7,#15]
 6124              	.L296:
2011:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2012:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2013:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2014:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6125              	 .loc 3 2014 0
 6126 0076 FB7B     	 ldrb r3,[r7,#15]
 6127 0078 002B     	 cmp r3,#0
 6128 007a 02D1     	 bne .L300
2015:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2016:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Delete the timer */
2017:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(tmr_id);
 6129              	 .loc 3 2017 0
 6130 007c B868     	 ldr r0,[r7,#8]
 6131 007e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 6132              	.L300:
2018:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2019:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2020:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6133              	 .loc 3 2020 0
 6134 0082 FB7B     	 ldrb r3,[r7,#15]
2021:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6135              	 .loc 3 2021 0
 6136 0084 1846     	 mov r0,r3
 6137 0086 1037     	 adds r7,r7,#16
 6138              	.LCFI344:
 6139              	 .cfi_def_cfa_offset 8
 6140 0088 BD46     	 mov sp,r7
 6141              	.LCFI345:
 6142              	 .cfi_def_cfa_register 13
 6143              	 
 6144 008a 80BD     	 pop {r7,pc}
 6145              	.L303:
 6146              	 .align 2
 6147              	.L302:
 6148 008c 00000000 	 .word SDMMC_BLOCK_SD_TimerCallback
 6149              	 .cfi_endproc
 6150              	.LFE256:
 6152              	 .section .text.SDMMC_BLOCK_SD_CardIdentificationProcess,"ax",%progbits
 6153              	 .align 2
 6154              	 .global SDMMC_BLOCK_SD_CardIdentificationProcess
 6155              	 .thumb
 6156              	 .thumb_func
 6158              	SDMMC_BLOCK_SD_CardIdentificationProcess:
 6159              	.LFB257:
2022:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2023:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2024:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Perform host controller initialization and card initialization.
2025:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Also, reading card registers
2026:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2027:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_CardIdentificationProcess(SDMMC_BLOCK_t *const obj)
2028:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6160              	 .loc 3 2028 0
 6161              	 .cfi_startproc
 6162              	 
 6163              	 
 6164 0000 80B5     	 push {r7,lr}
 6165              	.LCFI346:
 6166              	 .cfi_def_cfa_offset 8
 6167              	 .cfi_offset 7,-8
 6168              	 .cfi_offset 14,-4
 6169 0002 84B0     	 sub sp,sp,#16
 6170              	.LCFI347:
 6171              	 .cfi_def_cfa_offset 24
 6172 0004 00AF     	 add r7,sp,#0
 6173              	.LCFI348:
 6174              	 .cfi_def_cfa_register 7
 6175 0006 7860     	 str r0,[r7,#4]
2029:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2030:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2031:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait until the internal clock is stable */
2032:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lStartTimer(obj, (uint32_t)SDMMC_BLOCK_CLOCK_STABLE_DELAY);
 6176              	 .loc 3 2032 0
 6177 0008 7868     	 ldr r0,[r7,#4]
 6178 000a 3049     	 ldr r1,.L311
 6179 000c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 6180 0010 0346     	 mov r3,r0
 6181 0012 FB73     	 strb r3,[r7,#15]
2033:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2034:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->tmr_id != 0U)
 6182              	 .loc 3 2034 0
 6183 0014 7B68     	 ldr r3,[r7,#4]
 6184 0016 1B68     	 ldr r3,[r3]
 6185 0018 5B6D     	 ldr r3,[r3,#84]
 6186 001a 002B     	 cmp r3,#0
 6187 001c 51D0     	 beq .L305
 6188              	.L308:
2035:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2036:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     do
2037:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2038:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 6189              	 .loc 3 2038 0
 6190 001e 7B68     	 ldr r3,[r7,#4]
 6191 0020 1B68     	 ldr r3,[r3]
 6192 0022 93F85C30 	 ldrb r3,[r3,#92]
 6193 0026 DBB2     	 uxtb r3,r3
 6194 0028 83F00103 	 eor r3,r3,#1
 6195 002c DBB2     	 uxtb r3,r3
 6196 002e 002B     	 cmp r3,#0
 6197 0030 02D0     	 beq .L306
2039:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2040:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 6198              	 .loc 3 2040 0
 6199 0032 2E23     	 movs r3,#46
 6200 0034 FB73     	 strb r3,[r7,#15]
2041:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         break;
 6201              	 .loc 3 2041 0
 6202 0036 0BE0     	 b .L307
 6203              	.L306:
2042:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2043:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     } while ((XMC_SDMMC_GetClockStability(obj->sdmmc_sd->sdmmc) == false));
 6204              	 .loc 3 2043 0
 6205 0038 7B68     	 ldr r3,[r7,#4]
 6206 003a 1B68     	 ldr r3,[r3]
 6207 003c 1B68     	 ldr r3,[r3]
 6208 003e 1846     	 mov r0,r3
 6209 0040 FFF7FEFF 	 bl XMC_SDMMC_GetClockStability
 6210 0044 0346     	 mov r3,r0
 6211 0046 83F00103 	 eor r3,r3,#1
 6212 004a DBB2     	 uxtb r3,r3
 6213 004c 002B     	 cmp r3,#0
 6214 004e E6D1     	 bne .L308
 6215              	.L307:
2044:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2045:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Stop timer and delete it */
2046:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 6216              	 .loc 3 2046 0
 6217 0050 7868     	 ldr r0,[r7,#4]
 6218 0052 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
2047:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 6219              	 .loc 3 2047 0
 6220 0056 7B68     	 ldr r3,[r7,#4]
 6221 0058 1B68     	 ldr r3,[r3]
 6222 005a 5B6D     	 ldr r3,[r3,#84]
 6223 005c 1846     	 mov r0,r3
 6224 005e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2048:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2049:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status != SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED)
 6225              	 .loc 3 2049 0
 6226 0062 FB7B     	 ldrb r3,[r7,#15]
 6227 0064 2E2B     	 cmp r3,#46
 6228 0066 2CD0     	 beq .L305
2050:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2051:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Enable the SD clock */
2052:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SDClockEnable(obj->sdmmc_sd->sdmmc);
 6229              	 .loc 3 2052 0
 6230 0068 7B68     	 ldr r3,[r7,#4]
 6231 006a 1B68     	 ldr r3,[r3]
 6232 006c 1B68     	 ldr r3,[r3]
 6233 006e 1846     	 mov r0,r3
 6234 0070 FFF7FEFF 	 bl XMC_SDMMC_SDClockEnable
2053:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2054:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Turn the bus power on */
2055:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_BusPowerOn(obj->sdmmc_sd->sdmmc);
 6235              	 .loc 3 2055 0
 6236 0074 7B68     	 ldr r3,[r7,#4]
 6237 0076 1B68     	 ldr r3,[r3]
 6238 0078 1B68     	 ldr r3,[r3]
 6239 007a 1846     	 mov r0,r3
 6240 007c FFF7FEFF 	 bl XMC_SDMMC_BusPowerOn
2056:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2057:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (obj->sdmmc_sd->mode_init_flag == false)
 6241              	 .loc 3 2057 0
 6242 0080 7B68     	 ldr r3,[r7,#4]
 6243 0082 1B68     	 ldr r3,[r3]
 6244 0084 93F85E30 	 ldrb r3,[r3,#94]
 6245 0088 83F00103 	 eor r3,r3,#1
 6246 008c DBB2     	 uxtb r3,r3
 6247 008e 002B     	 cmp r3,#0
 6248 0090 17D0     	 beq .L305
2058:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2059:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lInitializeCard(obj);
 6249              	 .loc 3 2059 0
 6250 0092 7868     	 ldr r0,[r7,#4]
 6251 0094 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lInitializeCard
 6252 0098 0346     	 mov r3,r0
 6253 009a FB73     	 strb r3,[r7,#15]
2060:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) ||
 6254              	 .loc 3 2060 0
 6255 009c FB7B     	 ldrb r3,[r7,#15]
 6256 009e 002B     	 cmp r3,#0
 6257 00a0 02D0     	 beq .L309
 6258              	 .loc 3 2060 0 is_stmt 0 discriminator 1
 6259 00a2 FB7B     	 ldrb r3,[r7,#15]
 6260 00a4 2B2B     	 cmp r3,#43
 6261 00a6 0CD1     	 bne .L305
 6262              	.L309:
2061:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             (status == SDMMC_BLOCK_MODE_STATUS_INITIALIZED_BUT_LOCKED))
2062:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2063:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lAfterCardInitialize(obj);
 6263              	 .loc 3 2063 0 is_stmt 1
 6264 00a8 7868     	 ldr r0,[r7,#4]
 6265 00aa FFF7FEFF 	 bl SDMMC_BLOCK_SD_lAfterCardInitialize
 6266 00ae 0346     	 mov r3,r0
 6267 00b0 FB73     	 strb r3,[r7,#15]
2064:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6268              	 .loc 3 2064 0
 6269 00b2 FB7B     	 ldrb r3,[r7,#15]
 6270 00b4 002B     	 cmp r3,#0
 6271 00b6 04D1     	 bne .L305
2065:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
2066:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             obj->sdmmc_sd->mode_init_flag = 1U;
 6272              	 .loc 3 2066 0
 6273 00b8 7B68     	 ldr r3,[r7,#4]
 6274 00ba 1B68     	 ldr r3,[r3]
 6275 00bc 0122     	 movs r2,#1
 6276 00be 83F85E20 	 strb r2,[r3,#94]
 6277              	.L305:
2067:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
2068:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2069:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2070:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2071:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2072:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2073:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6278              	 .loc 3 2073 0
 6279 00c2 FB7B     	 ldrb r3,[r7,#15]
2074:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6280              	 .loc 3 2074 0
 6281 00c4 1846     	 mov r0,r3
 6282 00c6 1037     	 adds r7,r7,#16
 6283              	.LCFI349:
 6284              	 .cfi_def_cfa_offset 8
 6285 00c8 BD46     	 mov sp,r7
 6286              	.LCFI350:
 6287              	 .cfi_def_cfa_register 13
 6288              	 
 6289 00ca 80BD     	 pop {r7,pc}
 6290              	.L312:
 6291              	 .align 2
 6292              	.L311:
 6293 00cc 40420F00 	 .word 1000000
 6294              	 .cfi_endproc
 6295              	.LFE257:
 6297              	 .section .text.SDMMC_BLOCK_SD_lStartTimer,"ax",%progbits
 6298              	 .align 2
 6299              	 .thumb
 6300              	 .thumb_func
 6302              	SDMMC_BLOCK_SD_lStartTimer:
 6303              	.LFB258:
2075:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2076:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Create and start timer in a non-RTOS environment */
2077:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lStartTimer(SDMMC_BLOCK_t *const obj, uint32_t dela
2078:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6304              	 .loc 3 2078 0
 6305              	 .cfi_startproc
 6306              	 
 6307              	 
 6308 0000 80B5     	 push {r7,lr}
 6309              	.LCFI351:
 6310              	 .cfi_def_cfa_offset 8
 6311              	 .cfi_offset 7,-8
 6312              	 .cfi_offset 14,-4
 6313 0002 84B0     	 sub sp,sp,#16
 6314              	.LCFI352:
 6315              	 .cfi_def_cfa_offset 24
 6316 0004 00AF     	 add r7,sp,#0
 6317              	.LCFI353:
 6318              	 .cfi_def_cfa_register 7
 6319 0006 7860     	 str r0,[r7,#4]
 6320 0008 3960     	 str r1,[r7]
2079:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = 0U;
 6321              	 .loc 3 2079 0
 6322 000a 0023     	 movs r3,#0
 6323 000c BB60     	 str r3,[r7,#8]
2080:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 6324              	 .loc 3 2080 0
 6325 000e 0023     	 movs r3,#0
 6326 0010 FB73     	 strb r3,[r7,#15]
2081:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->tmr_expire = (bool)1U;
 6327              	 .loc 3 2081 0
 6328 0012 7B68     	 ldr r3,[r7,#4]
 6329 0014 1B68     	 ldr r3,[r3]
 6330 0016 0122     	 movs r2,#1
 6331 0018 83F85C20 	 strb r2,[r3,#92]
2082:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2083:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   tmr_id = SYSTIMER_CreateTimer(delay, SYSTIMER_MODE_ONE_SHOT, &SDMMC_BLOCK_SD_TimerCallback, (void
 6332              	 .loc 3 2083 0
 6333 001c 3868     	 ldr r0,[r7]
 6334 001e 0021     	 movs r1,#0
 6335 0020 134A     	 ldr r2,.L318
 6336 0022 7B68     	 ldr r3,[r7,#4]
 6337 0024 FFF7FEFF 	 bl SYSTIMER_CreateTimer
 6338 0028 B860     	 str r0,[r7,#8]
2084:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (tmr_id != (uint32_t)SYSTIMER_STATUS_FAILURE)
 6339              	 .loc 3 2084 0
 6340 002a BB68     	 ldr r3,[r7,#8]
 6341 002c 012B     	 cmp r3,#1
 6342 002e 13D0     	 beq .L314
2085:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2086:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timer creation successful */
2087:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (SYSTIMER_StartTimer(tmr_id) != SYSTIMER_STATUS_SUCCESS)
 6343              	 .loc 3 2087 0
 6344 0030 B868     	 ldr r0,[r7,#8]
 6345 0032 FFF7FEFF 	 bl SYSTIMER_StartTimer
 6346 0036 0346     	 mov r3,r0
 6347 0038 002B     	 cmp r3,#0
 6348 003a 08D0     	 beq .L315
2088:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2089:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Remove timer; it can't be used */
2090:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer(tmr_id);
 6349              	 .loc 3 2090 0
 6350 003c B868     	 ldr r0,[r7,#8]
 6351 003e FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2091:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->tmr_id = 0U;
 6352              	 .loc 3 2091 0
 6353 0042 7B68     	 ldr r3,[r7,#4]
 6354 0044 1B68     	 ldr r3,[r3]
 6355 0046 0022     	 movs r2,#0
 6356 0048 5A65     	 str r2,[r3,#84]
2092:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_START_TIMER_FAILED;
 6357              	 .loc 3 2092 0
 6358 004a 3123     	 movs r3,#49
 6359 004c FB73     	 strb r3,[r7,#15]
 6360              	.L315:
2093:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2094:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = tmr_id;
 6361              	 .loc 3 2094 0
 6362 004e 7B68     	 ldr r3,[r7,#4]
 6363 0050 1B68     	 ldr r3,[r3]
 6364 0052 BA68     	 ldr r2,[r7,#8]
 6365 0054 5A65     	 str r2,[r3,#84]
 6366 0056 05E0     	 b .L316
 6367              	.L314:
2095:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2096:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2097:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2098:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Timer creation failed! */
2099:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = 0U;
 6368              	 .loc 3 2099 0
 6369 0058 7B68     	 ldr r3,[r7,#4]
 6370 005a 1B68     	 ldr r3,[r3]
 6371 005c 0022     	 movs r2,#0
 6372 005e 5A65     	 str r2,[r3,#84]
2100:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_CREATE_TIMER_FAILED;
 6373              	 .loc 3 2100 0
 6374 0060 2F23     	 movs r3,#47
 6375 0062 FB73     	 strb r3,[r7,#15]
 6376              	.L316:
2101:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2102:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2103:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6377              	 .loc 3 2103 0
 6378 0064 FB7B     	 ldrb r3,[r7,#15]
2104:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6379              	 .loc 3 2104 0
 6380 0066 1846     	 mov r0,r3
 6381 0068 1037     	 adds r7,r7,#16
 6382              	.LCFI354:
 6383              	 .cfi_def_cfa_offset 8
 6384 006a BD46     	 mov sp,r7
 6385              	.LCFI355:
 6386              	 .cfi_def_cfa_register 13
 6387              	 
 6388 006c 80BD     	 pop {r7,pc}
 6389              	.L319:
 6390 006e 00BF     	 .align 2
 6391              	.L318:
 6392 0070 00000000 	 .word SDMMC_BLOCK_SD_TimerCallback
 6393              	 .cfi_endproc
 6394              	.LFE258:
 6396              	 .section .text.SDMMC_BLOCK_SD_lStopTimer,"ax",%progbits
 6397              	 .align 2
 6398              	 .thumb
 6399              	 .thumb_func
 6401              	SDMMC_BLOCK_SD_lStopTimer:
 6402              	.LFB259:
2105:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2106:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Stop timer in a non-RTOS environment */
2107:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static uint32_t SDMMC_BLOCK_SD_lStopTimer(SDMMC_BLOCK_t *const obj)
2108:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6403              	 .loc 3 2108 0
 6404              	 .cfi_startproc
 6405              	 
 6406              	 
 6407 0000 80B5     	 push {r7,lr}
 6408              	.LCFI356:
 6409              	 .cfi_def_cfa_offset 8
 6410              	 .cfi_offset 7,-8
 6411              	 .cfi_offset 14,-4
 6412 0002 84B0     	 sub sp,sp,#16
 6413              	.LCFI357:
 6414              	 .cfi_def_cfa_offset 24
 6415 0004 00AF     	 add r7,sp,#0
 6416              	.LCFI358:
 6417              	 .cfi_def_cfa_register 7
 6418 0006 7860     	 str r0,[r7,#4]
2109:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmr_id = obj->sdmmc_sd->tmr_id;
 6419              	 .loc 3 2109 0
 6420 0008 7B68     	 ldr r3,[r7,#4]
 6421 000a 1B68     	 ldr r3,[r3]
 6422 000c 5B6D     	 ldr r3,[r3,#84]
 6423 000e BB60     	 str r3,[r7,#8]
2110:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t status;
2111:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2112:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = (uint32_t)SYSTIMER_StopTimer(tmr_id);
 6424              	 .loc 3 2112 0
 6425 0010 B868     	 ldr r0,[r7,#8]
 6426 0012 FFF7FEFF 	 bl SYSTIMER_StopTimer
 6427 0016 0346     	 mov r3,r0
 6428 0018 FB60     	 str r3,[r7,#12]
2113:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status != (uint32_t)SYSTIMER_STATUS_SUCCESS)
 6429              	 .loc 3 2113 0
 6430 001a FB68     	 ldr r3,[r7,#12]
 6431 001c 002B     	 cmp r3,#0
 6432 001e 08D0     	 beq .L321
2114:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2115:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Remove timer; it can't be used */
2116:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     (void)SYSTIMER_DeleteTimer(tmr_id);
 6433              	 .loc 3 2116 0
 6434 0020 B868     	 ldr r0,[r7,#8]
 6435 0022 FFF7FEFF 	 bl SYSTIMER_DeleteTimer
2117:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = (uint32_t)SDMMC_BLOCK_MODE_STATUS_STOP_TIMER_FAILED;
 6436              	 .loc 3 2117 0
 6437 0026 3223     	 movs r3,#50
 6438 0028 FB60     	 str r3,[r7,#12]
2118:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     obj->sdmmc_sd->tmr_id = 0U;
 6439              	 .loc 3 2118 0
 6440 002a 7B68     	 ldr r3,[r7,#4]
 6441 002c 1B68     	 ldr r3,[r3]
 6442 002e 0022     	 movs r2,#0
 6443 0030 5A65     	 str r2,[r3,#84]
 6444              	.L321:
2119:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2120:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2121:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6445              	 .loc 3 2121 0
 6446 0032 FB68     	 ldr r3,[r7,#12]
2122:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6447              	 .loc 3 2122 0
 6448 0034 1846     	 mov r0,r3
 6449 0036 1037     	 adds r7,r7,#16
 6450              	.LCFI359:
 6451              	 .cfi_def_cfa_offset 8
 6452 0038 BD46     	 mov sp,r7
 6453              	.LCFI360:
 6454              	 .cfi_def_cfa_register 13
 6455              	 
 6456 003a 80BD     	 pop {r7,pc}
 6457              	 .cfi_endproc
 6458              	.LFE259:
 6460              	 .section .text.SDMMC_BLOCK_SD_lCheckSectorBound,"ax",%progbits
 6461              	 .align 2
 6462              	 .thumb
 6463              	 .thumb_func
 6465              	SDMMC_BLOCK_SD_lCheckSectorBound:
 6466              	.LFB260:
2123:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2124:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Check if the sector address is out of bound */
2125:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCheckSectorBound(SDMMC_BLOCK_t *const obj,
2126:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                   uint32_t sector_num,
2127:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                   uint32_t sector_count)
2128:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6467              	 .loc 3 2128 0
 6468              	 .cfi_startproc
 6469              	 
 6470              	 
 6471 0000 80B5     	 push {r7,lr}
 6472              	.LCFI361:
 6473              	 .cfi_def_cfa_offset 8
 6474              	 .cfi_offset 7,-8
 6475              	 .cfi_offset 14,-4
 6476 0002 86B0     	 sub sp,sp,#24
 6477              	.LCFI362:
 6478              	 .cfi_def_cfa_offset 32
 6479 0004 00AF     	 add r7,sp,#0
 6480              	.LCFI363:
 6481              	 .cfi_def_cfa_register 7
 6482 0006 F860     	 str r0,[r7,#12]
 6483 0008 B960     	 str r1,[r7,#8]
 6484 000a 7A60     	 str r2,[r7,#4]
2129:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2130:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t local_sector_count = 0U;
 6485              	 .loc 3 2130 0
 6486 000c 0023     	 movs r3,#0
 6487 000e 3B61     	 str r3,[r7,#16]
2131:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2132:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Get sector count function */
2133:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_GetSectorCount(obj, (void *)&local_sector_count);
 6488              	 .loc 3 2133 0
 6489 0010 07F11003 	 add r3,r7,#16
 6490 0014 F868     	 ldr r0,[r7,#12]
 6491 0016 1946     	 mov r1,r3
 6492 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSectorCount
 6493 001c 0346     	 mov r3,r0
 6494 001e FB75     	 strb r3,[r7,#23]
2134:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6495              	 .loc 3 2134 0
 6496 0020 FB7D     	 ldrb r3,[r7,#23]
 6497 0022 002B     	 cmp r3,#0
 6498 0024 07D1     	 bne .L324
2135:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2136:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check the sector count limit */
2137:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((sector_num + sector_count) > local_sector_count)
 6499              	 .loc 3 2137 0
 6500 0026 BA68     	 ldr r2,[r7,#8]
 6501 0028 7B68     	 ldr r3,[r7,#4]
 6502 002a 1A44     	 add r2,r2,r3
 6503 002c 3B69     	 ldr r3,[r7,#16]
 6504 002e 9A42     	 cmp r2,r3
 6505 0030 01D9     	 bls .L324
2138:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2139:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND;
 6506              	 .loc 3 2139 0
 6507 0032 3323     	 movs r3,#51
 6508 0034 FB75     	 strb r3,[r7,#23]
 6509              	.L324:
2140:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2141:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2142:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2143:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6510              	 .loc 3 2143 0
 6511 0036 FB7D     	 ldrb r3,[r7,#23]
2144:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6512              	 .loc 3 2144 0
 6513 0038 1846     	 mov r0,r3
 6514 003a 1837     	 adds r7,r7,#24
 6515              	.LCFI364:
 6516              	 .cfi_def_cfa_offset 8
 6517 003c BD46     	 mov sp,r7
 6518              	.LCFI365:
 6519              	 .cfi_def_cfa_register 13
 6520              	 
 6521 003e 80BD     	 pop {r7,pc}
 6522              	 .cfi_endproc
 6523              	.LFE260:
 6525              	 .section .text.SDMMC_BLOCK_SD_lLocalErase,"ax",%progbits
 6526              	 .align 2
 6527              	 .thumb
 6528              	 .thumb_func
 6530              	SDMMC_BLOCK_SD_lLocalErase:
 6531              	.LFB261:
2145:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2146:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Perform erase operation */
2147:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lLocalErase(SDMMC_BLOCK_t *const obj,
2148:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t start_addr,
2149:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t end_addr,
2150:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                             uint32_t timeout)
2151:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6532              	 .loc 3 2151 0
 6533              	 .cfi_startproc
 6534              	 
 6535              	 
 6536 0000 80B5     	 push {r7,lr}
 6537              	.LCFI366:
 6538              	 .cfi_def_cfa_offset 8
 6539              	 .cfi_offset 7,-8
 6540              	 .cfi_offset 14,-4
 6541 0002 88B0     	 sub sp,sp,#32
 6542              	.LCFI367:
 6543              	 .cfi_def_cfa_offset 40
 6544 0004 02AF     	 add r7,sp,#8
 6545              	.LCFI368:
 6546              	 .cfi_def_cfa 7,32
 6547 0006 F860     	 str r0,[r7,#12]
 6548 0008 B960     	 str r1,[r7,#8]
 6549 000a 7A60     	 str r2,[r7,#4]
 6550 000c 3B60     	 str r3,[r7]
2152:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Stores the response received */
2153:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 6551              	 .loc 3 2153 0
 6552 000e 0023     	 movs r3,#0
 6553 0010 3B61     	 str r3,[r7,#16]
2154:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6554              	 .loc 3 2154 0
 6555 0012 0123     	 movs r3,#1
 6556 0014 FB75     	 strb r3,[r7,#23]
2155:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2156:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_t)0U
 6557              	 .loc 3 2156 0
 6558 0016 FB68     	 ldr r3,[r7,#12]
 6559 0018 5B7A     	 ldrb r3,[r3,#9]
 6560 001a 03F00803 	 and r3,r3,#8
 6561 001e 002B     	 cmp r3,#0
 6562 0020 05D1     	 bne .L327
2157:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2158:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     start_addr *= (uint32_t)512U;
 6563              	 .loc 3 2158 0
 6564 0022 BB68     	 ldr r3,[r7,#8]
 6565 0024 5B02     	 lsls r3,r3,#9
 6566 0026 BB60     	 str r3,[r7,#8]
2159:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     end_addr *= (uint32_t)512U;
 6567              	 .loc 3 2159 0
 6568 0028 7B68     	 ldr r3,[r7,#4]
 6569 002a 5B02     	 lsls r3,r3,#9
 6570 002c 7B60     	 str r3,[r7,#4]
 6571              	.L327:
2160:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2161:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2162:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD erase start command */
2163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
2164:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(32)),
 6572              	 .loc 3 2164 0
 6573 002e 1523     	 movs r3,#21
2163:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_SD_COMMAND(32)),
 6574              	 .loc 3 2163 0
 6575 0030 5B00     	 lsls r3,r3,#1
 6576 0032 364A     	 ldr r2,.L334
 6577 0034 1A44     	 add r2,r2,r3
 6578 0036 07F11003 	 add r3,r7,#16
 6579 003a 0093     	 str r3,[sp]
 6580 003c F868     	 ldr r0,[r7,#12]
 6581 003e 1146     	 mov r1,r2
 6582 0040 BA68     	 ldr r2,[r7,#8]
 6583 0042 0123     	 movs r3,#1
 6584 0044 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6585 0048 0346     	 mov r3,r0
 6586 004a FB75     	 strb r3,[r7,#23]
2165:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        start_addr,
2166:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
2167:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
2168:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2169:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6587              	 .loc 3 2169 0
 6588 004c FB7D     	 ldrb r3,[r7,#23]
 6589 004e 002B     	 cmp r3,#0
 6590 0050 0ED1     	 bne .L328
2170:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2171:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* SD Erase End Command */
2172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2173:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(33)),
 6591              	 .loc 3 2173 0
 6592 0052 1623     	 movs r3,#22
2172:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(33)),
 6593              	 .loc 3 2172 0
 6594 0054 5B00     	 lsls r3,r3,#1
 6595 0056 2D4A     	 ldr r2,.L334
 6596 0058 1A44     	 add r2,r2,r3
 6597 005a 07F11003 	 add r3,r7,#16
 6598 005e 0093     	 str r3,[sp]
 6599 0060 F868     	 ldr r0,[r7,#12]
 6600 0062 1146     	 mov r1,r2
 6601 0064 7A68     	 ldr r2,[r7,#4]
 6602 0066 0123     	 movs r3,#1
 6603 0068 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6604 006c 0346     	 mov r3,r0
 6605 006e FB75     	 strb r3,[r7,#23]
 6606              	.L328:
2174:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          end_addr,
2175:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2176:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2177:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2178:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2179:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6607              	 .loc 3 2179 0
 6608 0070 FB7D     	 ldrb r3,[r7,#23]
 6609 0072 002B     	 cmp r3,#0
 6610 0074 45D1     	 bne .L329
2180:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2182:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(38)),
 6611              	 .loc 3 2182 0
 6612 0076 1723     	 movs r3,#23
2181:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(38)),
 6613              	 .loc 3 2181 0
 6614 0078 5B00     	 lsls r3,r3,#1
 6615 007a 244A     	 ldr r2,.L334
 6616 007c 1A44     	 add r2,r2,r3
 6617 007e 07F11003 	 add r3,r7,#16
 6618 0082 0093     	 str r3,[sp]
 6619 0084 F868     	 ldr r0,[r7,#12]
 6620 0086 1146     	 mov r1,r2
 6621 0088 0022     	 movs r2,#0
 6622 008a 0223     	 movs r3,#2
 6623 008c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 6624 0090 0346     	 mov r3,r0
 6625 0092 FB75     	 strb r3,[r7,#23]
2183:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          SDMMC_BLOCK_ARGUMENT0,
2184:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1b,
2185:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2186:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2187:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lStartTimer(obj, (timeout * (uint32_t)1000000U));
 6626              	 .loc 3 2187 0
 6627 0094 3B68     	 ldr r3,[r7]
 6628 0096 1E4A     	 ldr r2,.L334+4
 6629 0098 02FB03F3 	 mul r3,r2,r3
 6630 009c F868     	 ldr r0,[r7,#12]
 6631 009e 1946     	 mov r1,r3
 6632 00a0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStartTimer
 6633 00a4 0346     	 mov r3,r0
 6634 00a6 FB75     	 strb r3,[r7,#23]
2188:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2189:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (obj->sdmmc_sd->tmr_id != 0U)
 6635              	 .loc 3 2189 0
 6636 00a8 FB68     	 ldr r3,[r7,#12]
 6637 00aa 1B68     	 ldr r3,[r3]
 6638 00ac 5B6D     	 ldr r3,[r3,#84]
 6639 00ae 002B     	 cmp r3,#0
 6640 00b0 27D0     	 beq .L329
 6641              	.L332:
2190:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2191:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       do
2192:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2193:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (obj->sdmmc_sd->tmr_expire == (bool)0U)
 6642              	 .loc 3 2193 0
 6643 00b2 FB68     	 ldr r3,[r7,#12]
 6644 00b4 1B68     	 ldr r3,[r3]
 6645 00b6 93F85C30 	 ldrb r3,[r3,#92]
 6646 00ba DBB2     	 uxtb r3,r3
 6647 00bc 83F00103 	 eor r3,r3,#1
 6648 00c0 DBB2     	 uxtb r3,r3
 6649 00c2 002B     	 cmp r3,#0
 6650 00c4 02D0     	 beq .L330
2194:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2195:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_MODE_STATUS_TIMEOUT_OCCURED;
 6651              	 .loc 3 2195 0
 6652 00c6 2E23     	 movs r3,#46
 6653 00c8 FB75     	 strb r3,[r7,#23]
2196:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           break;
 6654              	 .loc 3 2196 0
 6655 00ca 11E0     	 b .L331
 6656              	.L330:
2197:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       } while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc) ||
 6657              	 .loc 3 2198 0
 6658 00cc FB68     	 ldr r3,[r7,#12]
 6659 00ce 1B68     	 ldr r3,[r3]
 6660 00d0 1B68     	 ldr r3,[r3]
 6661 00d2 1846     	 mov r0,r3
 6662 00d4 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 6663 00d8 0346     	 mov r3,r0
2199:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 6664              	 .loc 3 2199 0
 6665 00da 002B     	 cmp r3,#0
 6666 00dc E9D1     	 bne .L332
 6667              	 .loc 3 2199 0 is_stmt 0 discriminator 1
 6668 00de FB68     	 ldr r3,[r7,#12]
 6669 00e0 1B68     	 ldr r3,[r3]
 6670 00e2 1B68     	 ldr r3,[r3]
 6671 00e4 1846     	 mov r0,r3
 6672 00e6 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 6673 00ea 0346     	 mov r3,r0
2198:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc))));
 6674              	 .loc 3 2198 0 is_stmt 1 discriminator 1
 6675 00ec 002B     	 cmp r3,#0
 6676 00ee E0D1     	 bne .L332
 6677              	.L331:
2200:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2201:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Stop timer and delete it */
2202:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SDMMC_BLOCK_SD_lStopTimer(obj);
 6678              	 .loc 3 2202 0
 6679 00f0 F868     	 ldr r0,[r7,#12]
 6680 00f2 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lStopTimer
2203:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       (void)SYSTIMER_DeleteTimer(obj->sdmmc_sd->tmr_id);
 6681              	 .loc 3 2203 0
 6682 00f6 FB68     	 ldr r3,[r7,#12]
 6683 00f8 1B68     	 ldr r3,[r3]
 6684 00fa 5B6D     	 ldr r3,[r3,#84]
 6685 00fc 1846     	 mov r0,r3
 6686 00fe FFF7FEFF 	 bl SYSTIMER_DeleteTimer
 6687              	.L329:
2204:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2205:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2206:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2207:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6688              	 .loc 3 2207 0
 6689 0102 FB7D     	 ldrb r3,[r7,#23]
2208:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6690              	 .loc 3 2208 0
 6691 0104 1846     	 mov r0,r3
 6692 0106 1837     	 adds r7,r7,#24
 6693              	.LCFI369:
 6694              	 .cfi_def_cfa_offset 8
 6695 0108 BD46     	 mov sp,r7
 6696              	.LCFI370:
 6697              	 .cfi_def_cfa_register 13
 6698              	 
 6699 010a 80BD     	 pop {r7,pc}
 6700              	.L335:
 6701              	 .align 2
 6702              	.L334:
 6703 010c 00000000 	 .word sdmmc_block_command
 6704 0110 40420F00 	 .word 1000000
 6705              	 .cfi_endproc
 6706              	.LFE261:
 6708              	 .section .text.SDMMC_BLOCK_SD_lHostControllerInit,"ax",%progbits
 6709              	 .align 2
 6710              	 .thumb
 6711              	 .thumb_func
 6713              	SDMMC_BLOCK_SD_lHostControllerInit:
 6714              	.LFB262:
2209:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2210:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2211:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * PUBLIC FUNCTIONS
2212:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2213:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2214:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Initialize host controller */
2215:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lHostControllerInit(SDMMC_BLOCK_t *const obj)
2216:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6715              	 .loc 3 2216 0
 6716              	 .cfi_startproc
 6717              	 
 6718              	 
 6719 0000 80B5     	 push {r7,lr}
 6720              	.LCFI371:
 6721              	 .cfi_def_cfa_offset 8
 6722              	 .cfi_offset 7,-8
 6723              	 .cfi_offset 14,-4
 6724 0002 84B0     	 sub sp,sp,#16
 6725              	.LCFI372:
 6726              	 .cfi_def_cfa_offset 24
 6727 0004 00AF     	 add r7,sp,#0
 6728              	.LCFI373:
 6729              	 .cfi_def_cfa_register 7
 6730 0006 7860     	 str r0,[r7,#4]
2217:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_HOST_CONTROLLER_INITIALIZED;
 6731              	 .loc 3 2217 0
 6732 0008 2C23     	 movs r3,#44
 6733 000a FB73     	 strb r3,[r7,#15]
2218:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2219:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if host controller is initialized */
2220:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) == (uint32_t)0U
 6734              	 .loc 3 2220 0
 6735 000c 7B68     	 ldr r3,[r7,#4]
 6736 000e 1B7A     	 ldrb r3,[r3,#8]
 6737 0010 03F04003 	 and r3,r3,#64
 6738 0014 002B     	 cmp r3,#0
 6739 0016 50D1     	 bne .L337
2221:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2222:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset the registers to default values */
2223:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RESET_ALL);
 6740              	 .loc 3 2223 0
 6741 0018 7868     	 ldr r0,[r7,#4]
 6742 001a 0121     	 movs r1,#1
 6743 001c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 6744 0020 0346     	 mov r3,r0
 6745 0022 FB73     	 strb r3,[r7,#15]
2224:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6746              	 .loc 3 2224 0
 6747 0024 FB7B     	 ldrb r3,[r7,#15]
 6748 0026 002B     	 cmp r3,#0
 6749 0028 47D1     	 bne .L337
2225:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2226:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2227:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * The internal clock should be disabled before
2228:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * updating frequency clock select (Please see
2229:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * section 2.2.14 -> Clock Control Register)
2230:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2231:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_Stop(obj->sdmmc_sd->sdmmc);
 6750              	 .loc 3 2231 0
 6751 002a 7B68     	 ldr r3,[r7,#4]
 6752 002c 1B68     	 ldr r3,[r3]
 6753 002e 1B68     	 ldr r3,[r3]
 6754 0030 1846     	 mov r0,r3
 6755 0032 FFF7FEFF 	 bl XMC_SDMMC_Stop
2232:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2233:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Select SD clock frequency */
2234:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SDClockFreqSelect(obj->sdmmc_sd->sdmmc, XMC_SDMMC_CLK_DIV_2);
 6756              	 .loc 3 2234 0
 6757 0036 7B68     	 ldr r3,[r7,#4]
 6758 0038 1B68     	 ldr r3,[r3]
 6759 003a 1B68     	 ldr r3,[r3]
 6760 003c 1846     	 mov r0,r3
 6761 003e 0121     	 movs r1,#1
 6762 0040 FFF7FEFF 	 bl XMC_SDMMC_SDClockFreqSelect
2235:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2236:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Internal clock enable */
2237:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_Start(obj->sdmmc_sd->sdmmc);
 6763              	 .loc 3 2237 0
 6764 0044 7B68     	 ldr r3,[r7,#4]
 6765 0046 1B68     	 ldr r3,[r3]
 6766 0048 1B68     	 ldr r3,[r3]
 6767 004a 1846     	 mov r0,r3
 6768 004c FFF7FEFF 	 bl XMC_SDMMC_Start
2238:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2239:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2240:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * Enable all normal interrupt status bits except block-gap
2241:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * event, card interrupt event, DMA int., ADMA and auto cmd
2242:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * errors. Enable the status and the events themselves.
2243:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2244:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_STATUS_NORM = SDMMC_BLOCK_NORMAL_INT_STATUS_ENABLE;
 6769              	 .loc 3 2244 0
 6770 0050 7B68     	 ldr r3,[r7,#4]
 6771 0052 1B68     	 ldr r3,[r3]
 6772 0054 1B68     	 ldr r3,[r3]
 6773 0056 F322     	 movs r2,#243
 6774 0058 9A86     	 strh r2,[r3,#52]
2245:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_STATUS_ERR = SDMMC_BLOCK_ERROR_INT_STATUS_ENABLE;
 6775              	 .loc 3 2245 0
 6776 005a 7B68     	 ldr r3,[r7,#4]
 6777 005c 1B68     	 ldr r3,[r3]
 6778 005e 1B68     	 ldr r3,[r3]
 6779 0060 4EF2FF02 	 movw r2,#57599
 6780 0064 DA86     	 strh r2,[r3,#54]
2246:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_SIGNAL_NORM = SDMMC_BLOCK_NORMAL_INT_SIGNAL_ENABLE;
 6781              	 .loc 3 2246 0
 6782 0066 7B68     	 ldr r3,[r7,#4]
 6783 0068 1B68     	 ldr r3,[r3]
 6784 006a 1B68     	 ldr r3,[r3]
 6785 006c 3322     	 movs r2,#51
 6786 006e 1A87     	 strh r2,[r3,#56]
2247:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->sdmmc->EN_INT_SIGNAL_ERR = SDMMC_BLOCK_ERROR_INT_SIGNAL_ENABLE;
 6787              	 .loc 3 2247 0
 6788 0070 7B68     	 ldr r3,[r7,#4]
 6789 0072 1B68     	 ldr r3,[r3]
 6790 0074 1B68     	 ldr r3,[r3]
 6791 0076 4EF2FF02 	 movw r2,#57599
 6792 007a 5A87     	 strh r2,[r3,#58]
2248:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2249:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #if SDMMC_BLOCK_SD_CARD_DETECTION_SUPPORT
2250:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_EnableEvent(obj->sdmmc_sd->sdmmc, ((uint32_t)XMC_SDMMC_CARD_REMOVAL) |
2251:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   ((uint32_t)XMC_SDMMC_CARD_INS) |
2252:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   ((uint32_t)XMC_SDMMC_CARD_INT));
2253:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif
2254:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2255:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set data-line timeout */
2256:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataLineTimeout(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DAT_TIMEOUT_COUNTER_2_POW_27);
 6793              	 .loc 3 2256 0
 6794 007c 7B68     	 ldr r3,[r7,#4]
 6795 007e 1B68     	 ldr r3,[r3]
 6796 0080 1B68     	 ldr r3,[r3]
 6797 0082 1846     	 mov r0,r3
 6798 0084 0E21     	 movs r1,#14
 6799 0086 FFF7FEFF 	 bl XMC_SDMMC_SetDataLineTimeout
2257:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2258:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set bus voltage in the power control register: flattop 3.3 volts */
2259:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetBusVoltage(obj->sdmmc_sd->sdmmc, XMC_SDMMC_BUS_VOLTAGE_3_3_VOLTS);
 6800              	 .loc 3 2259 0
 6801 008a 7B68     	 ldr r3,[r7,#4]
 6802 008c 1B68     	 ldr r3,[r3]
 6803 008e 1B68     	 ldr r3,[r3]
 6804 0090 1846     	 mov r0,r3
 6805 0092 0721     	 movs r1,#7
 6806 0094 FFF7FEFF 	 bl XMC_SDMMC_SetBusVoltage
2260:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2261:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Update the state status to card initialized */
2262:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)((uint8_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED |
 6807              	 .loc 3 2262 0
 6808 0098 7B68     	 ldr r3,[r7,#4]
 6809 009a 1B7A     	 ldrb r3,[r3,#8]
 6810 009c 43F04303 	 orr r3,r3,#67
 6811 00a0 DAB2     	 uxtb r2,r3
 6812 00a2 7B68     	 ldr r3,[r7,#4]
 6813 00a4 1A72     	 strb r2,[r3,#8]
 6814              	.LBB3:
2263:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    (uint8_t)SDMMC_BLOCK_CARD_STATE_NO_CARD |
2264:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                    (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED);
2265:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2266:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* A stub of delay for initialization */
2267:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       for (volatile uint32_t i = 0; (uint32_t)i < (uint32_t)100000U; i++)
 6815              	 .loc 3 2267 0
 6816 00a6 0023     	 movs r3,#0
 6817 00a8 BB60     	 str r3,[r7,#8]
 6818 00aa 02E0     	 b .L338
 6819              	.L339:
 6820              	 .loc 3 2267 0 is_stmt 0 discriminator 3
 6821 00ac BB68     	 ldr r3,[r7,#8]
 6822 00ae 0133     	 adds r3,r3,#1
 6823 00b0 BB60     	 str r3,[r7,#8]
 6824              	.L338:
 6825              	 .loc 3 2267 0 discriminator 1
 6826 00b2 BB68     	 ldr r3,[r7,#8]
 6827 00b4 034A     	 ldr r2,.L341
 6828 00b6 9342     	 cmp r3,r2
 6829 00b8 F8D9     	 bls .L339
 6830              	.L337:
 6831              	.LBE3:
2268:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2269:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2270:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2271:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2272:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2273:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6832              	 .loc 3 2273 0 is_stmt 1
 6833 00ba FB7B     	 ldrb r3,[r7,#15]
2274:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6834              	 .loc 3 2274 0
 6835 00bc 1846     	 mov r0,r3
 6836 00be 1037     	 adds r7,r7,#16
 6837              	.LCFI374:
 6838              	 .cfi_def_cfa_offset 8
 6839 00c0 BD46     	 mov sp,r7
 6840              	.LCFI375:
 6841              	 .cfi_def_cfa_register 13
 6842              	 
 6843 00c2 80BD     	 pop {r7,pc}
 6844              	.L342:
 6845              	 .align 2
 6846              	.L341:
 6847 00c4 9F860100 	 .word 99999
 6848              	 .cfi_endproc
 6849              	.LFE262:
 6851              	 .section .text.SDMMC_BLOCK_SD_lHostControllerDeInit,"ax",%progbits
 6852              	 .align 2
 6853              	 .thumb
 6854              	 .thumb_func
 6856              	SDMMC_BLOCK_SD_lHostControllerDeInit:
 6857              	.LFB263:
2275:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2276:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* De-initialize the host controller */
2277:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lHostControllerDeInit(SDMMC_BLOCK_t *const obj)
2278:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6858              	 .loc 3 2278 0
 6859              	 .cfi_startproc
 6860              	 
 6861              	 
 6862 0000 80B5     	 push {r7,lr}
 6863              	.LCFI376:
 6864              	 .cfi_def_cfa_offset 8
 6865              	 .cfi_offset 7,-8
 6866              	 .cfi_offset 14,-4
 6867 0002 84B0     	 sub sp,sp,#16
 6868              	.LCFI377:
 6869              	 .cfi_def_cfa_offset 24
 6870 0004 00AF     	 add r7,sp,#0
 6871              	.LCFI378:
 6872              	 .cfi_def_cfa_register 7
 6873 0006 7860     	 str r0,[r7,#4]
2279:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6874              	 .loc 3 2279 0
 6875 0008 0123     	 movs r3,#1
 6876 000a FB73     	 strb r3,[r7,#15]
2280:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2281:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if the host controller is initialized */
2282:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) != (uint32_t)0U
 6877              	 .loc 3 2282 0
 6878 000c 7B68     	 ldr r3,[r7,#4]
 6879 000e 1B7A     	 ldrb r3,[r3,#8]
 6880 0010 03F04003 	 and r3,r3,#64
 6881 0014 002B     	 cmp r3,#0
 6882 0016 08D0     	 beq .L344
2283:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2284:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Cleanup the card */
2285:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SD_lCardCleanUp(obj);
 6883              	 .loc 3 2285 0
 6884 0018 7868     	 ldr r0,[r7,#4]
 6885 001a FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardCleanUp
2286:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2287:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Reset host controller's registers */
2288:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lReset(obj, (uint32_t)XMC_SDMMC_SW_RESET_ALL);
 6886              	 .loc 3 2288 0
 6887 001e 7868     	 ldr r0,[r7,#4]
 6888 0020 0121     	 movs r1,#1
 6889 0022 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lReset
 6890 0026 0346     	 mov r3,r0
 6891 0028 FB73     	 strb r3,[r7,#15]
 6892              	.L344:
2289:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2290:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2291:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6893              	 .loc 3 2291 0
 6894 002a FB7B     	 ldrb r3,[r7,#15]
2292:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6895              	 .loc 3 2292 0
 6896 002c 1846     	 mov r0,r3
 6897 002e 1037     	 adds r7,r7,#16
 6898              	.LCFI379:
 6899              	 .cfi_def_cfa_offset 8
 6900 0030 BD46     	 mov sp,r7
 6901              	.LCFI380:
 6902              	 .cfi_def_cfa_register 13
 6903              	 
 6904 0032 80BD     	 pop {r7,pc}
 6905              	 .cfi_endproc
 6906              	.LFE263:
 6908              	 .section .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks,"ax",%progbits
 6909              	 .align 2
 6910              	 .thumb
 6911              	 .thumb_func
 6913              	SDMMC_BLOCK_SD_lCardReadMultipleBlocks:
 6914              	.LFB264:
2293:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2294:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read multiple blocks of data from the card */
2295:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardReadMultipleBlocks(SDMMC_BLOCK_t *const obj,
2296:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t *read_buf,
2297:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t read_addr,
2298:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                         uint32_t num_blocks)
2299:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 6915              	 .loc 3 2299 0
 6916              	 .cfi_startproc
 6917              	 
 6918              	 
 6919 0000 90B5     	 push {r4,r7,lr}
 6920              	.LCFI381:
 6921              	 .cfi_def_cfa_offset 12
 6922              	 .cfi_offset 4,-12
 6923              	 .cfi_offset 7,-8
 6924              	 .cfi_offset 14,-4
 6925 0002 89B0     	 sub sp,sp,#36
 6926              	.LCFI382:
 6927              	 .cfi_def_cfa_offset 48
 6928 0004 02AF     	 add r7,sp,#8
 6929              	.LCFI383:
 6930              	 .cfi_def_cfa 7,40
 6931 0006 F860     	 str r0,[r7,#12]
 6932 0008 B960     	 str r1,[r7,#8]
 6933 000a 7A60     	 str r2,[r7,#4]
 6934 000c 3B60     	 str r3,[r7]
2300:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 6935              	 .loc 3 2300 0
 6936 000e 2A23     	 movs r3,#42
 6937 0010 FB75     	 strb r3,[r7,#23]
2301:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6938              	 .loc 3 2301 0
 6939 0012 FB68     	 ldr r3,[r7,#12]
 6940 0014 1B68     	 ldr r3,[r3]
 6941 0016 0122     	 movs r2,#1
 6942 0018 5A76     	 strb r2,[r3,#25]
2302:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6943              	 .loc 3 2302 0
 6944 001a FB68     	 ldr r3,[r7,#12]
 6945 001c 1B68     	 ldr r3,[r3]
 6946 001e 0122     	 movs r2,#1
 6947 0020 1A76     	 strb r2,[r3,#24]
2303:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 6948              	 .loc 3 2303 0
 6949 0022 FB68     	 ldr r3,[r7,#12]
 6950 0024 1B68     	 ldr r3,[r3]
 6951 0026 0122     	 movs r2,#1
 6952 0028 9A76     	 strb r2,[r3,#26]
2304:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2305:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2306:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 6953              	 .loc 3 2306 0
 6954 002a FB68     	 ldr r3,[r7,#12]
 6955 002c 1B68     	 ldr r3,[r3]
 6956 002e 93F85E30 	 ldrb r3,[r3,#94]
 6957 0032 002B     	 cmp r3,#0
 6958 0034 22D0     	 beq .L347
2307:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2308:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure that sector number is not out of bound */
2309:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, read_addr, num_blocks);
 6959              	 .loc 3 2309 0
 6960 0036 7B68     	 ldr r3,[r7,#4]
 6961 0038 F868     	 ldr r0,[r7,#12]
 6962 003a 1946     	 mov r1,r3
 6963 003c 3A68     	 ldr r2,[r7]
 6964 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 6965 0042 0346     	 mov r3,r0
 6966 0044 FB75     	 strb r3,[r7,#23]
2310:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2311:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 6967              	 .loc 3 2311 0
 6968 0046 FB7D     	 ldrb r3,[r7,#23]
 6969 0048 002B     	 cmp r3,#0
 6970 004a 17D1     	 bne .L347
2312:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2313:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set transfer direction select in the Transfer Mode Register */
2314:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 6971              	 .loc 3 2314 0
 6972 004c FB68     	 ldr r3,[r7,#12]
 6973 004e 1B68     	 ldr r3,[r3]
 6974 0050 1B68     	 ldr r3,[r3]
 6975 0052 1846     	 mov r0,r3
 6976 0054 0121     	 movs r1,#1
 6977 0056 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2315:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2316:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send Multiple Block  Read Command i.e CMD18 */
2317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lMultiBlockTransfer(obj,
2318:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &read_addr,
2319:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   num_blocks,
2320:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &(SDMMC_BLOCK_COMMON_COMMAND(18)),
 6978              	 .loc 3 2320 0
 6979 005a 0E23     	 movs r3,#14
2317:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &read_addr,
 6980              	 .loc 3 2317 0
 6981 005c 5B00     	 lsls r3,r3,#1
 6982 005e 0A4A     	 ldr r2,.L349
 6983 0060 9C18     	 adds r4,r3,r2
 6984 0062 3A1D     	 adds r2,r7,#4
 6985 0064 BB68     	 ldr r3,[r7,#8]
 6986 0066 0093     	 str r3,[sp]
 6987 0068 0123     	 movs r3,#1
 6988 006a 0193     	 str r3,[sp,#4]
 6989 006c F868     	 ldr r0,[r7,#12]
 6990 006e 1146     	 mov r1,r2
 6991 0070 3A68     	 ldr r2,[r7]
 6992 0072 2346     	 mov r3,r4
 6993 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lMultiBlockTransfer
 6994 0078 0346     	 mov r3,r0
 6995 007a FB75     	 strb r3,[r7,#23]
 6996              	.L347:
2321:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   read_buf,
2322:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2323:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2324:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2325:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2326:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 6997              	 .loc 3 2326 0
 6998 007c FB7D     	 ldrb r3,[r7,#23]
2327:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 6999              	 .loc 3 2327 0
 7000 007e 1846     	 mov r0,r3
 7001 0080 1C37     	 adds r7,r7,#28
 7002              	.LCFI384:
 7003              	 .cfi_def_cfa_offset 12
 7004 0082 BD46     	 mov sp,r7
 7005              	.LCFI385:
 7006              	 .cfi_def_cfa_register 13
 7007              	 
 7008 0084 90BD     	 pop {r4,r7,pc}
 7009              	.L350:
 7010 0086 00BF     	 .align 2
 7011              	.L349:
 7012 0088 00000000 	 .word sdmmc_block_command
 7013              	 .cfi_endproc
 7014              	.LFE264:
 7016              	 .section .text.SDMMC_BLOCK_SD_lCardReadSingleBlock,"ax",%progbits
 7017              	 .align 2
 7018              	 .thumb
 7019              	 .thumb_func
 7021              	SDMMC_BLOCK_SD_lCardReadSingleBlock:
 7022              	.LFB265:
2328:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2329:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Read single block of data from the card */
2330:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardReadSingleBlock(SDMMC_BLOCK_t *const obj,
2331:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t *read_buf,
2332:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                      uint32_t read_addr)
2333:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7023              	 .loc 3 2333 0
 7024              	 .cfi_startproc
 7025              	 
 7026              	 
 7027 0000 80B5     	 push {r7,lr}
 7028              	.LCFI386:
 7029              	 .cfi_def_cfa_offset 8
 7030              	 .cfi_offset 7,-8
 7031              	 .cfi_offset 14,-4
 7032 0002 88B0     	 sub sp,sp,#32
 7033              	.LCFI387:
 7034              	 .cfi_def_cfa_offset 40
 7035 0004 02AF     	 add r7,sp,#8
 7036              	.LCFI388:
 7037              	 .cfi_def_cfa 7,32
 7038 0006 F860     	 str r0,[r7,#12]
 7039 0008 B960     	 str r1,[r7,#8]
 7040 000a 7A60     	 str r2,[r7,#4]
2334:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7041              	 .loc 3 2334 0
 7042 000c 2A23     	 movs r3,#42
 7043 000e FB75     	 strb r3,[r7,#23]
2335:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sector_count = 1U;
 7044              	 .loc 3 2335 0
 7045 0010 0123     	 movs r3,#1
 7046 0012 3B61     	 str r3,[r7,#16]
2336:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2337:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization successful */
2338:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7047              	 .loc 3 2338 0
 7048 0014 FB68     	 ldr r3,[r7,#12]
 7049 0016 1B68     	 ldr r3,[r3]
 7050 0018 93F85E30 	 ldrb r3,[r3,#94]
 7051 001c 002B     	 cmp r3,#0
 7052 001e 2AD0     	 beq .L352
2339:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2340:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure that the sector number is not out of bound */
2341:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, read_addr, sector_count);
 7053              	 .loc 3 2341 0
 7054 0020 F868     	 ldr r0,[r7,#12]
 7055 0022 7968     	 ldr r1,[r7,#4]
 7056 0024 3A69     	 ldr r2,[r7,#16]
 7057 0026 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7058 002a 0346     	 mov r3,r0
 7059 002c FB75     	 strb r3,[r7,#23]
2342:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7060              	 .loc 3 2342 0
 7061 002e FB7D     	 ldrb r3,[r7,#23]
 7062 0030 002B     	 cmp r3,#0
 7063 0032 20D1     	 bne .L352
2343:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2344:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Block addressing or byte addressing */
2345:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_
 7064              	 .loc 3 2345 0
 7065 0034 FB68     	 ldr r3,[r7,#12]
 7066 0036 5B7A     	 ldrb r3,[r3,#9]
 7067 0038 03F00803 	 and r3,r3,#8
 7068 003c 002B     	 cmp r3,#0
 7069 003e 02D1     	 bne .L353
2346:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2347:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         read_addr = (uint32_t)(read_addr * 512UL);
 7070              	 .loc 3 2347 0
 7071 0040 7B68     	 ldr r3,[r7,#4]
 7072 0042 5B02     	 lsls r3,r3,#9
 7073 0044 7B60     	 str r3,[r7,#4]
 7074              	.L353:
2348:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2349:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2350:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 7075              	 .loc 3 2350 0
 7076 0046 FB68     	 ldr r3,[r7,#12]
 7077 0048 1B68     	 ldr r3,[r3]
 7078 004a 1B68     	 ldr r3,[r3]
 7079 004c 1846     	 mov r0,r3
 7080 004e 0121     	 movs r1,#1
 7081 0050 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2351:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* SDMMC->TRANSFER_MODE |= (uint16_t)((uint32_t)1U << (uint32_t)SDMMC_TRANSFER_MODE_TX_DIR_SE
2352:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2353:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Perform the Single block transfer operation */
2354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2355:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(17)),
 7082              	 .loc 3 2355 0
 7083 0054 0D23     	 movs r3,#13
2354:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(17)),
 7084              	 .loc 3 2354 0
 7085 0056 5B00     	 lsls r3,r3,#1
 7086 0058 094A     	 ldr r2,.L355
 7087 005a 1A44     	 add r2,r2,r3
 7088 005c BB68     	 ldr r3,[r7,#8]
 7089 005e 0093     	 str r3,[sp]
 7090 0060 0123     	 movs r3,#1
 7091 0062 0193     	 str r3,[sp,#4]
 7092 0064 F868     	 ldr r0,[r7,#12]
 7093 0066 1146     	 mov r1,r2
 7094 0068 7A68     	 ldr r2,[r7,#4]
 7095 006a 4FF40073 	 mov r3,#512
 7096 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7097 0072 0346     	 mov r3,r0
 7098 0074 FB75     	 strb r3,[r7,#23]
 7099              	.L352:
2356:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    read_addr,
2357:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)SDMMC_BLOCK_BLOCK_SIZE,
2358:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    read_buf,
2359:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2360:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2361:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2362:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2363:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7100              	 .loc 3 2363 0
 7101 0076 FB7D     	 ldrb r3,[r7,#23]
2364:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7102              	 .loc 3 2364 0
 7103 0078 1846     	 mov r0,r3
 7104 007a 1837     	 adds r7,r7,#24
 7105              	.LCFI389:
 7106              	 .cfi_def_cfa_offset 8
 7107 007c BD46     	 mov sp,r7
 7108              	.LCFI390:
 7109              	 .cfi_def_cfa_register 13
 7110              	 
 7111 007e 80BD     	 pop {r7,pc}
 7112              	.L356:
 7113              	 .align 2
 7114              	.L355:
 7115 0080 00000000 	 .word sdmmc_block_command
 7116              	 .cfi_endproc
 7117              	.LFE265:
 7119              	 .section .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks,"ax",%progbits
 7120              	 .align 2
 7121              	 .thumb
 7122              	 .thumb_func
 7124              	SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:
 7125              	.LFB266:
2365:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2366:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Write multiple blocks of data on the card */
2367:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(SDMMC_BLOCK_t *const obj,
2368:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          const uint32_t *write_buf,
2369:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          uint32_t write_addr,
2370:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                          uint32_t num_blocks)
2371:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7126              	 .loc 3 2371 0
 7127              	 .cfi_startproc
 7128              	 
 7129              	 
 7130 0000 90B5     	 push {r4,r7,lr}
 7131              	.LCFI391:
 7132              	 .cfi_def_cfa_offset 12
 7133              	 .cfi_offset 4,-12
 7134              	 .cfi_offset 7,-8
 7135              	 .cfi_offset 14,-4
 7136 0002 89B0     	 sub sp,sp,#36
 7137              	.LCFI392:
 7138              	 .cfi_def_cfa_offset 48
 7139 0004 02AF     	 add r7,sp,#8
 7140              	.LCFI393:
 7141              	 .cfi_def_cfa 7,40
 7142 0006 F860     	 str r0,[r7,#12]
 7143 0008 B960     	 str r1,[r7,#8]
 7144 000a 7A60     	 str r2,[r7,#4]
 7145 000c 3B60     	 str r3,[r7]
2372:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7146              	 .loc 3 2372 0
 7147 000e 2A23     	 movs r3,#42
 7148 0010 FB75     	 strb r3,[r7,#23]
2373:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2374:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7149              	 .loc 3 2374 0
 7150 0012 FB68     	 ldr r3,[r7,#12]
 7151 0014 1B68     	 ldr r3,[r3]
 7152 0016 0122     	 movs r2,#1
 7153 0018 5A76     	 strb r2,[r3,#25]
2375:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7154              	 .loc 3 2375 0
 7155 001a FB68     	 ldr r3,[r7,#12]
 7156 001c 1B68     	 ldr r3,[r3]
 7157 001e 0122     	 movs r2,#1
 7158 0020 1A76     	 strb r2,[r3,#24]
2376:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7159              	 .loc 3 2376 0
 7160 0022 FB68     	 ldr r3,[r7,#12]
 7161 0024 1B68     	 ldr r3,[r3]
 7162 0026 0122     	 movs r2,#1
 7163 0028 9A76     	 strb r2,[r3,#26]
2377:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2378:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2379:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7164              	 .loc 3 2379 0
 7165 002a FB68     	 ldr r3,[r7,#12]
 7166 002c 1B68     	 ldr r3,[r3]
 7167 002e 93F85E30 	 ldrb r3,[r3,#94]
 7168 0032 002B     	 cmp r3,#0
 7169 0034 22D0     	 beq .L358
2380:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2381:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Ensure sector number is not out of bound */
2382:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, write_addr, num_blocks);
 7170              	 .loc 3 2382 0
 7171 0036 7B68     	 ldr r3,[r7,#4]
 7172 0038 F868     	 ldr r0,[r7,#12]
 7173 003a 1946     	 mov r1,r3
 7174 003c 3A68     	 ldr r2,[r7]
 7175 003e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7176 0042 0346     	 mov r3,r0
 7177 0044 FB75     	 strb r3,[r7,#23]
2383:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7178              	 .loc 3 2383 0
 7179 0046 FB7D     	 ldrb r3,[r7,#23]
 7180 0048 002B     	 cmp r3,#0
 7181 004a 17D1     	 bne .L358
2384:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2385:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Clear transfer direction select in transfer mode register */
2386:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD
 7182              	 .loc 3 2386 0
 7183 004c FB68     	 ldr r3,[r7,#12]
 7184 004e 1B68     	 ldr r3,[r3]
 7185 0050 1B68     	 ldr r3,[r3]
 7186 0052 1846     	 mov r0,r3
 7187 0054 0021     	 movs r1,#0
 7188 0056 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2387:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2388:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Send Multiple Block  Write  Command i.e CMD25 */
2389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lMultiBlockTransfer(obj,
2390:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &write_addr,
2391:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   num_blocks,
2392:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &(SDMMC_BLOCK_COMMON_COMMAND(25)),
 7189              	 .loc 3 2392 0
 7190 005a 1023     	 movs r3,#16
2389:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   &write_addr,
 7191              	 .loc 3 2389 0
 7192 005c 5B00     	 lsls r3,r3,#1
 7193 005e 0A4A     	 ldr r2,.L360
 7194 0060 9C18     	 adds r4,r3,r2
 7195 0062 3A1D     	 adds r2,r7,#4
 7196 0064 BB68     	 ldr r3,[r7,#8]
 7197 0066 0093     	 str r3,[sp]
 7198 0068 0223     	 movs r3,#2
 7199 006a 0193     	 str r3,[sp,#4]
 7200 006c F868     	 ldr r0,[r7,#12]
 7201 006e 1146     	 mov r1,r2
 7202 0070 3A68     	 ldr r2,[r7]
 7203 0072 2346     	 mov r3,r4
 7204 0074 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lMultiBlockTransfer
 7205 0078 0346     	 mov r3,r0
 7206 007a FB75     	 strb r3,[r7,#23]
 7207              	.L358:
2393:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   (uint32_t *)write_buf,
2394:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                   SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2395:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2396:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2397:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2398:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7208              	 .loc 3 2398 0
 7209 007c FB7D     	 ldrb r3,[r7,#23]
2399:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7210              	 .loc 3 2399 0
 7211 007e 1846     	 mov r0,r3
 7212 0080 1C37     	 adds r7,r7,#28
 7213              	.LCFI394:
 7214              	 .cfi_def_cfa_offset 12
 7215 0082 BD46     	 mov sp,r7
 7216              	.LCFI395:
 7217              	 .cfi_def_cfa_register 13
 7218              	 
 7219 0084 90BD     	 pop {r4,r7,pc}
 7220              	.L361:
 7221 0086 00BF     	 .align 2
 7222              	.L360:
 7223 0088 00000000 	 .word sdmmc_block_command
 7224              	 .cfi_endproc
 7225              	.LFE266:
 7227              	 .section .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock,"ax",%progbits
 7228              	 .align 2
 7229              	 .thumb
 7230              	 .thumb_func
 7232              	SDMMC_BLOCK_SD_lCardWriteSingleBlock:
 7233              	.LFB267:
2400:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2401:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Write single block of data on the card */
2402:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** static SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_lCardWriteSingleBlock(SDMMC_BLOCK_t *const obj,
2403:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                       const uint32_t *write_buf,
2404:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                                       uint32_t write_addr)
2405:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7234              	 .loc 3 2405 0
 7235              	 .cfi_startproc
 7236              	 
 7237              	 
 7238 0000 80B5     	 push {r7,lr}
 7239              	.LCFI396:
 7240              	 .cfi_def_cfa_offset 8
 7241              	 .cfi_offset 7,-8
 7242              	 .cfi_offset 14,-4
 7243 0002 88B0     	 sub sp,sp,#32
 7244              	.LCFI397:
 7245              	 .cfi_def_cfa_offset 40
 7246 0004 02AF     	 add r7,sp,#8
 7247              	.LCFI398:
 7248              	 .cfi_def_cfa 7,32
 7249 0006 F860     	 str r0,[r7,#12]
 7250 0008 B960     	 str r1,[r7,#8]
 7251 000a 7A60     	 str r2,[r7,#4]
2406:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7252              	 .loc 3 2406 0
 7253 000c 2A23     	 movs r3,#42
 7254 000e FB75     	 strb r3,[r7,#23]
2407:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sector_count = 1U;
 7255              	 .loc 3 2407 0
 7256 0010 0123     	 movs r3,#1
 7257 0012 3B61     	 str r3,[r7,#16]
2408:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2409:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check if initialization is successful */
2410:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (obj->sdmmc_sd->mode_init_flag == true)
 7258              	 .loc 3 2410 0
 7259 0014 FB68     	 ldr r3,[r7,#12]
 7260 0016 1B68     	 ldr r3,[r3]
 7261 0018 93F85E30 	 ldrb r3,[r3,#94]
 7262 001c 002B     	 cmp r3,#0
 7263 001e 2AD0     	 beq .L363
2411:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2412:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check if sector number is not out of bound */
2413:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, write_addr, sector_count);
 7264              	 .loc 3 2413 0
 7265 0020 F868     	 ldr r0,[r7,#12]
 7266 0022 7968     	 ldr r1,[r7,#4]
 7267 0024 3A69     	 ldr r2,[r7,#16]
 7268 0026 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7269 002a 0346     	 mov r3,r0
 7270 002c FB75     	 strb r3,[r7,#23]
2414:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7271              	 .loc 3 2414 0
 7272 002e FB7D     	 ldrb r3,[r7,#23]
 7273 0030 002B     	 cmp r3,#0
 7274 0032 20D1     	 bne .L363
2415:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2416:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* If not block addressing, then multiply by 512 bytes */
2417:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_BLOCK_ADDRESSING) == (uint32_
 7275              	 .loc 3 2417 0
 7276 0034 FB68     	 ldr r3,[r7,#12]
 7277 0036 5B7A     	 ldrb r3,[r3,#9]
 7278 0038 03F00803 	 and r3,r3,#8
 7279 003c 002B     	 cmp r3,#0
 7280 003e 02D1     	 bne .L364
2418:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2419:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         write_addr = (uint32_t)(write_addr * 512U);
 7281              	 .loc 3 2419 0
 7282 0040 7B68     	 ldr r3,[r7,#4]
 7283 0042 5B02     	 lsls r3,r3,#9
 7284 0044 7B60     	 str r3,[r7,#4]
 7285              	.L364:
2420:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2421:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2422:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Clear transfer direction select bit */
2423:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD
 7286              	 .loc 3 2423 0
 7287 0046 FB68     	 ldr r3,[r7,#12]
 7288 0048 1B68     	 ldr r3,[r3]
 7289 004a 1B68     	 ldr r3,[r3]
 7290 004c 1846     	 mov r0,r3
 7291 004e 0021     	 movs r1,#0
 7292 0050 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2424:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2425:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Single block transfer function */
2426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2427:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(24)),
 7293              	 .loc 3 2427 0
 7294 0054 0F23     	 movs r3,#15
2426:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(24)),
 7295              	 .loc 3 2426 0
 7296 0056 5B00     	 lsls r3,r3,#1
 7297 0058 094A     	 ldr r2,.L366
 7298 005a 1A44     	 add r2,r2,r3
 7299 005c BB68     	 ldr r3,[r7,#8]
 7300 005e 0093     	 str r3,[sp]
 7301 0060 0223     	 movs r3,#2
 7302 0062 0193     	 str r3,[sp,#4]
 7303 0064 F868     	 ldr r0,[r7,#12]
 7304 0066 1146     	 mov r1,r2
 7305 0068 7A68     	 ldr r2,[r7,#4]
 7306 006a 4FF40073 	 mov r3,#512
 7307 006e FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7308 0072 0346     	 mov r3,r0
 7309 0074 FB75     	 strb r3,[r7,#23]
 7310              	.L363:
2428:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    write_addr,
2429:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)SDMMC_BLOCK_BLOCK_SIZE,
2430:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)write_buf,
2431:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2432:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2433:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2434:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2435:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7311              	 .loc 3 2435 0
 7312 0076 FB7D     	 ldrb r3,[r7,#23]
2436:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7313              	 .loc 3 2436 0
 7314 0078 1846     	 mov r0,r3
 7315 007a 1837     	 adds r7,r7,#24
 7316              	.LCFI399:
 7317              	 .cfi_def_cfa_offset 8
 7318 007c BD46     	 mov sp,r7
 7319              	.LCFI400:
 7320              	 .cfi_def_cfa_register 13
 7321              	 
 7322 007e 80BD     	 pop {r7,pc}
 7323              	.L367:
 7324              	 .align 2
 7325              	.L366:
 7326 0080 00000000 	 .word sdmmc_block_command
 7327              	 .cfi_endproc
 7328              	.LFE267:
 7330              	 .section .rodata
 7331              	 .align 2
 7332              	.LC0:
 7333 0000 00000000 	 .word 0
 7334 0004 20000000 	 .word 32
 7335 0008 40000000 	 .word 64
 7336 000c 80000000 	 .word 128
 7337 0010 00010000 	 .word 256
 7338 0014 00020000 	 .word 512
 7339 0018 00040000 	 .word 1024
 7340 001c 00080000 	 .word 2048
 7341 0020 00100000 	 .word 4096
 7342 0024 00200000 	 .word 8192
 7343              	 .section .text.SDMMC_BLOCK_SD_EraseBlock,"ax",%progbits
 7344              	 .align 2
 7345              	 .global SDMMC_BLOCK_SD_EraseBlock
 7346              	 .thumb
 7347              	 .thumb_func
 7349              	SDMMC_BLOCK_SD_EraseBlock:
 7350              	.LFB268:
2437:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2438:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Erase data from the card */
2439:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_EraseBlock(SDMMC_BLOCK_t *const obj, uint32_t start_addr, 
2440:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7351              	 .loc 3 2440 0
 7352              	 .cfi_startproc
 7353              	 
 7354              	 
 7355 0000 B0B5     	 push {r4,r5,r7,lr}
 7356              	.LCFI401:
 7357              	 .cfi_def_cfa_offset 16
 7358              	 .cfi_offset 4,-16
 7359              	 .cfi_offset 5,-12
 7360              	 .cfi_offset 7,-8
 7361              	 .cfi_offset 14,-4
 7362 0002 A6B0     	 sub sp,sp,#152
 7363              	.LCFI402:
 7364              	 .cfi_def_cfa_offset 168
 7365 0004 00AF     	 add r7,sp,#0
 7366              	.LCFI403:
 7367              	 .cfi_def_cfa_register 7
 7368 0006 F860     	 str r0,[r7,#12]
 7369 0008 B960     	 str r1,[r7,#8]
 7370 000a 7A60     	 str r2,[r7,#4]
2441:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_INIT_FAIL;
 7371              	 .loc 3 2441 0
 7372 000c 2A23     	 movs r3,#42
 7373 000e 87F89730 	 strb r3,[r7,#151]
2442:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t tmp_start_addr;
2443:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t num_sectors = 0U;
 7374              	 .loc 3 2443 0
 7375 0012 0023     	 movs r3,#0
 7376 0014 C7F88C30 	 str r3,[r7,#140]
2444:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Allocation unit to no. of sectors in 1 AU table mapping */
2445:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t au_to_sectors[10] = {0U, 32U, 64U, 128U, 256U, 512U, 1024U, 2048U, 4096U, 8192U};
 7377              	 .loc 3 2445 0
 7378 0018 724B     	 ldr r3,.L377
 7379 001a 07F15004 	 add r4,r7,#80
 7380 001e 1D46     	 mov r5,r3
 7381 0020 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 7382 0022 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 7383 0024 0FCD     	 ldmia r5!,{r0,r1,r2,r3}
 7384 0026 0FC4     	 stmia r4!,{r0,r1,r2,r3}
 7385 0028 95E80300 	 ldmia r5,{r0,r1}
 7386 002c 84E80300 	 stmia r4,{r0,r1}
2446:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint16_t erase_size = (uint16_t)0U;
 7387              	 .loc 3 2446 0
 7388 0030 0023     	 movs r3,#0
 7389 0032 A7F88A30 	 strh r3,[r7,#138]
2447:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t erase_offset = (uint8_t)0U;
 7390              	 .loc 3 2447 0
 7391 0036 0023     	 movs r3,#0
 7392 0038 87F88930 	 strb r3,[r7,#137]
2448:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t erase_timeout = (uint8_t)0U;
 7393              	 .loc 3 2448 0
 7394 003c 0023     	 movs r3,#0
 7395 003e 87F88830 	 strb r3,[r7,#136]
2449:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t au_size = (uint8_t)0U;
 7396              	 .loc 3 2449 0
 7397 0042 0023     	 movs r3,#0
 7398 0044 87F88730 	 strb r3,[r7,#135]
2450:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sectors_in_au = 0U;
 7399              	 .loc 3 2450 0
 7400 0048 0023     	 movs r3,#0
 7401 004a C7F88030 	 str r3,[r7,#128]
2451:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sectors_in_erase_cluster = 0U;
 7402              	 .loc 3 2451 0
 7403 004e 0023     	 movs r3,#0
 7404 0050 FB67     	 str r3,[r7,#124]
2452:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Read SD status  */
2453:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t sd_status[16] = {0U};
 7405              	 .loc 3 2453 0
 7406 0052 07F11003 	 add r3,r7,#16
 7407 0056 4022     	 movs r2,#64
 7408 0058 1846     	 mov r0,r3
 7409 005a 0021     	 movs r1,#0
 7410 005c FFF7FEFF 	 bl memset
2454:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t erase_timeout_per_cluster = 0UL;
 7411              	 .loc 3 2454 0
 7412 0060 0023     	 movs r3,#0
 7413 0062 BB67     	 str r3,[r7,#120]
2455:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2456:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->cmd_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7414              	 .loc 3 2456 0
 7415 0064 FB68     	 ldr r3,[r7,#12]
 7416 0066 1B68     	 ldr r3,[r3]
 7417 0068 0122     	 movs r2,#1
 7418 006a 5A76     	 strb r2,[r3,#25]
2457:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->data_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7419              	 .loc 3 2457 0
 7420 006c FB68     	 ldr r3,[r7,#12]
 7421 006e 1B68     	 ldr r3,[r3]
 7422 0070 0122     	 movs r2,#1
 7423 0072 1A76     	 strb r2,[r3,#24]
2458:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   obj->sdmmc_sd->transfer_int_err = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7424              	 .loc 3 2458 0
 7425 0074 FB68     	 ldr r3,[r7,#12]
 7426 0076 1B68     	 ldr r3,[r3]
 7427 0078 0122     	 movs r2,#1
 7428 007a 9A76     	 strb r2,[r3,#26]
2459:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2460:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is read only or write protected */
2461:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->card_state & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != (uint8_t)0U)
 7429              	 .loc 3 2461 0
 7430 007c FB68     	 ldr r3,[r7,#12]
 7431 007e 1B7A     	 ldrb r3,[r3,#8]
 7432 0080 03F00403 	 and r3,r3,#4
 7433 0084 002B     	 cmp r3,#0
 7434 0086 03D0     	 beq .L369
2462:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2463:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
 7435              	 .loc 3 2463 0
 7436 0088 0F23     	 movs r3,#15
 7437 008a 87F89730 	 strb r3,[r7,#151]
 7438 008e 90E0     	 b .L370
 7439              	.L369:
2464:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2465:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
2466:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
2467:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2468:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_MODE_STATUS_WP_VIOLATION_ERROR;
2469:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2470:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif /* SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL */
2471:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Assume initialization is successful: This is invoked from IOCTL */
2472:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2473:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2474:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     tmp_start_addr = start_addr;
 7440              	 .loc 3 2474 0
 7441 0090 BB68     	 ldr r3,[r7,#8]
 7442 0092 C7F89030 	 str r3,[r7,#144]
2475:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     num_sectors = (end_addr - tmp_start_addr) + 1U;
 7443              	 .loc 3 2475 0
 7444 0096 7A68     	 ldr r2,[r7,#4]
 7445 0098 D7F89030 	 ldr r3,[r7,#144]
 7446 009c D31A     	 subs r3,r2,r3
 7447 009e 0133     	 adds r3,r3,#1
 7448 00a0 C7F88C30 	 str r3,[r7,#140]
2476:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check sector number is not out of bound */
2477:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lCheckSectorBound(obj, tmp_start_addr, num_sectors);
 7449              	 .loc 3 2477 0
 7450 00a4 F868     	 ldr r0,[r7,#12]
 7451 00a6 D7F89010 	 ldr r1,[r7,#144]
 7452 00aa D7F88C20 	 ldr r2,[r7,#140]
 7453 00ae FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckSectorBound
 7454 00b2 0346     	 mov r3,r0
 7455 00b4 87F89730 	 strb r3,[r7,#151]
2478:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7456              	 .loc 3 2478 0
 7457 00b8 97F89730 	 ldrb r3,[r7,#151]
 7458 00bc 002B     	 cmp r3,#0
 7459 00be 78D1     	 bne .L370
2479:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2480:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Erase timeout calculation */
2481:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Get SD status */
2482:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_GetSdStatus(obj, (void*)&(sd_status[0]));
 7460              	 .loc 3 2482 0
 7461 00c0 07F11003 	 add r3,r7,#16
 7462 00c4 F868     	 ldr r0,[r7,#12]
 7463 00c6 1946     	 mov r1,r3
 7464 00c8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetSdStatus
 7465 00cc 0346     	 mov r3,r0
 7466 00ce 87F89730 	 strb r3,[r7,#151]
2483:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7467              	 .loc 3 2483 0
 7468 00d2 97F89730 	 ldrb r3,[r7,#151]
 7469 00d6 002B     	 cmp r3,#0
 7470 00d8 6BD1     	 bne .L370
2484:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2485:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 400-401 in SD status: Erase offset */
2486:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_offset =  (uint8_t)(((sd_status[3] & 0x00000300UL)) >> 8U);
 7471              	 .loc 3 2486 0
 7472 00da FB69     	 ldr r3,[r7,#28]
 7473 00dc 03F44073 	 and r3,r3,#768
 7474 00e0 1B0A     	 lsrs r3,r3,#8
 7475 00e2 87F88930 	 strb r3,[r7,#137]
2487:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2488:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 402-407: Erase timeout */
2489:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_timeout = (uint8_t)(((sd_status[3] & 0x0000FC00UL)) >> 10UL);
 7476              	 .loc 3 2489 0
 7477 00e6 FB69     	 ldr r3,[r7,#28]
 7478 00e8 03F47C43 	 and r3,r3,#64512
 7479 00ec 9B0A     	 lsrs r3,r3,#10
 7480 00ee 87F88830 	 strb r3,[r7,#136]
2490:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2491:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 408-423: Erase size */
2492:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_size = (uint16_t)((((sd_status[2] & 0xFF000000U) >> 24U) << 8U) | (sd_status[3] & 0x0
 7481              	 .loc 3 2492 0
 7482 00f2 BB69     	 ldr r3,[r7,#24]
 7483 00f4 1B0E     	 lsrs r3,r3,#24
 7484 00f6 9BB2     	 uxth r3,r3
 7485 00f8 1B02     	 lsls r3,r3,#8
 7486 00fa 9AB2     	 uxth r2,r3
 7487 00fc FB69     	 ldr r3,[r7,#28]
 7488 00fe 9BB2     	 uxth r3,r3
 7489 0100 DBB2     	 uxtb r3,r3
 7490 0102 9BB2     	 uxth r3,r3
 7491 0104 1343     	 orrs r3,r3,r2
 7492 0106 A7F88A30 	 strh r3,[r7,#138]
2493:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2494:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Bits 428-431: Allocation unit size */
2495:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         au_size  = (uint8_t)((sd_status[2] & 0x00F00000U) >> 20);
 7493              	 .loc 3 2495 0
 7494 010a BB69     	 ldr r3,[r7,#24]
 7495 010c 03F47003 	 and r3,r3,#15728640
 7496 0110 1B0D     	 lsrs r3,r3,#20
 7497 0112 87F88730 	 strb r3,[r7,#135]
2496:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2497:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Erase timeout calculations */
2498:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         erase_timeout_per_cluster = ((uint32_t)erase_timeout / (uint32_t)erase_size) + (uint32_t)er
 7498              	 .loc 3 2498 0
 7499 0116 97F88820 	 ldrb r2,[r7,#136]
 7500 011a B7F88A30 	 ldrh r3,[r7,#138]
 7501 011e B2FBF3F2 	 udiv r2,r2,r3
 7502 0122 97F88930 	 ldrb r3,[r7,#137]
 7503 0126 1344     	 add r3,r3,r2
 7504 0128 BB67     	 str r3,[r7,#120]
2499:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2500:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         /* Number of sectors in 1 AU */
2501:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         sectors_in_au = au_to_sectors[au_size];
 7505              	 .loc 3 2501 0
 7506 012a 97F88730 	 ldrb r3,[r7,#135]
 7507 012e 9B00     	 lsls r3,r3,#2
 7508 0130 07F19802 	 add r2,r7,#152
 7509 0134 1344     	 add r3,r3,r2
 7510 0136 53F8483C 	 ldr r3,[r3,#-72]
 7511 013a C7F88030 	 str r3,[r7,#128]
2502:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         sectors_in_erase_cluster = sectors_in_au * erase_size;
 7512              	 .loc 3 2502 0
 7513 013e B7F88A30 	 ldrh r3,[r7,#138]
 7514 0142 D7F88020 	 ldr r2,[r7,#128]
 7515 0146 02FB03F3 	 mul r3,r2,r3
 7516 014a FB67     	 str r3,[r7,#124]
2503:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         while (num_sectors >= sectors_in_erase_cluster)
 7517              	 .loc 3 2504 0
 7518 014c 1EE0     	 b .L371
 7519              	.L374:
2505:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2506:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lLocalErase(obj,
 7520              	 .loc 3 2506 0
 7521 014e D7F89020 	 ldr r2,[r7,#144]
 7522 0152 FB6F     	 ldr r3,[r7,#124]
 7523 0154 1344     	 add r3,r3,r2
 7524 0156 F868     	 ldr r0,[r7,#12]
 7525 0158 D7F89010 	 ldr r1,[r7,#144]
 7526 015c 1A46     	 mov r2,r3
 7527 015e BB6F     	 ldr r3,[r7,#120]
 7528 0160 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lLocalErase
 7529 0164 0346     	 mov r3,r0
 7530 0166 87F89730 	 strb r3,[r7,#151]
2507:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               tmp_start_addr,
2508:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               (tmp_start_addr + sectors_in_erase_cluster),
2509:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               erase_timeout_per_cluster);
2510:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           if (status != SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7531              	 .loc 3 2510 0
 7532 016a 97F89730 	 ldrb r3,[r7,#151]
 7533 016e 002B     	 cmp r3,#0
 7534 0170 00D0     	 beq .L372
2511:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           {
2512:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****             break;
 7535              	 .loc 3 2512 0
 7536 0172 10E0     	 b .L373
 7537              	.L372:
2513:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           }
2514:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           tmp_start_addr = tmp_start_addr + sectors_in_erase_cluster;
 7538              	 .loc 3 2514 0
 7539 0174 D7F89020 	 ldr r2,[r7,#144]
 7540 0178 FB6F     	 ldr r3,[r7,#124]
 7541 017a 1344     	 add r3,r3,r2
 7542 017c C7F89030 	 str r3,[r7,#144]
2515:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           num_sectors = num_sectors - sectors_in_erase_cluster;
 7543              	 .loc 3 2515 0
 7544 0180 D7F88C20 	 ldr r2,[r7,#140]
 7545 0184 FB6F     	 ldr r3,[r7,#124]
 7546 0186 D31A     	 subs r3,r2,r3
 7547 0188 C7F88C30 	 str r3,[r7,#140]
 7548              	.L371:
2504:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
 7549              	 .loc 3 2504 0
 7550 018c D7F88C20 	 ldr r2,[r7,#140]
 7551 0190 FB6F     	 ldr r3,[r7,#124]
 7552 0192 9A42     	 cmp r2,r3
 7553 0194 DBD2     	 bcs .L374
 7554              	.L373:
2516:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2517:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2518:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         if (num_sectors != 0U)
 7555              	 .loc 3 2518 0
 7556 0196 D7F88C30 	 ldr r3,[r7,#140]
 7557 019a 002B     	 cmp r3,#0
 7558 019c 09D0     	 beq .L370
2519:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         {
2520:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****           status = SDMMC_BLOCK_SD_lLocalErase(obj, tmp_start_addr, end_addr, erase_timeout_per_clus
 7559              	 .loc 3 2520 0
 7560 019e F868     	 ldr r0,[r7,#12]
 7561 01a0 D7F89010 	 ldr r1,[r7,#144]
 7562 01a4 7A68     	 ldr r2,[r7,#4]
 7563 01a6 BB6F     	 ldr r3,[r7,#120]
 7564 01a8 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lLocalErase
 7565 01ac 0346     	 mov r3,r0
 7566 01ae 87F89730 	 strb r3,[r7,#151]
 7567              	.L370:
2521:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         }
2522:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2523:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2524:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2525:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2526:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2527:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 7568              	 .loc 3 2527 0
 7569 01b2 00BF     	 nop
 7570              	.L375:
 7571              	 .loc 3 2527 0 is_stmt 0 discriminator 3
 7572 01b4 FB68     	 ldr r3,[r7,#12]
 7573 01b6 1B68     	 ldr r3,[r3]
 7574 01b8 1B68     	 ldr r3,[r3]
 7575 01ba 1846     	 mov r0,r3
 7576 01bc FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7577 01c0 0346     	 mov r3,r0
 7578 01c2 002B     	 cmp r3,#0
 7579 01c4 F6D1     	 bne .L375
 7580              	 .loc 3 2527 0 discriminator 2
 7581 01c6 FB68     	 ldr r3,[r7,#12]
 7582 01c8 1B68     	 ldr r3,[r3]
 7583 01ca 1B68     	 ldr r3,[r3]
 7584 01cc 1846     	 mov r0,r3
 7585 01ce FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 7586 01d2 0346     	 mov r3,r0
 7587 01d4 002B     	 cmp r3,#0
 7588 01d6 EDD1     	 bne .L375
2528:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2529:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2530:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2531:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7589              	 .loc 3 2531 0 is_stmt 1
 7590 01d8 97F89730 	 ldrb r3,[r7,#151]
2532:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7591              	 .loc 3 2532 0
 7592 01dc 1846     	 mov r0,r3
 7593 01de 9837     	 adds r7,r7,#152
 7594              	.LCFI404:
 7595              	 .cfi_def_cfa_offset 16
 7596 01e0 BD46     	 mov sp,r7
 7597              	.LCFI405:
 7598              	 .cfi_def_cfa_register 13
 7599              	 
 7600 01e2 B0BD     	 pop {r4,r5,r7,pc}
 7601              	.L378:
 7602              	 .align 2
 7603              	.L377:
 7604 01e4 00000000 	 .word .LC0
 7605              	 .cfi_endproc
 7606              	.LFE268:
 7608              	 .section .text.SDMMC_BLOCK_SD_LockUnlockCard,"ax",%progbits
 7609              	 .align 2
 7610              	 .global SDMMC_BLOCK_SD_LockUnlockCard
 7611              	 .thumb
 7612              	 .thumb_func
 7614              	SDMMC_BLOCK_SD_LockUnlockCard:
 7615              	.LFB269:
2533:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2534:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Set, clear password, lock/unlock card */
2535:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_LockUnlockCard(SDMMC_BLOCK_t *const obj,
2536:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                         SDMMC_BLOCK_LOCK_STRUCTURE_t *lock,
2537:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                         SDMMC_BLOCK_CARD_LOCK_STATUS_t operation_mo
2538:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7616              	 .loc 3 2538 0
 7617              	 .cfi_startproc
 7618              	 
 7619              	 
 7620 0000 90B5     	 push {r4,r7,lr}
 7621              	.LCFI406:
 7622              	 .cfi_def_cfa_offset 12
 7623              	 .cfi_offset 4,-12
 7624              	 .cfi_offset 7,-8
 7625              	 .cfi_offset 14,-4
 7626 0002 8BB0     	 sub sp,sp,#44
 7627              	.LCFI407:
 7628              	 .cfi_def_cfa_offset 56
 7629 0004 02AF     	 add r7,sp,#8
 7630              	.LCFI408:
 7631              	 .cfi_def_cfa 7,48
 7632 0006 F860     	 str r0,[r7,#12]
 7633 0008 B960     	 str r1,[r7,#8]
 7634 000a 1346     	 mov r3,r2
 7635 000c FB71     	 strb r3,[r7,#7]
2539:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7636              	 .loc 3 2539 0
 7637 000e 0123     	 movs r3,#1
 7638 0010 FB77     	 strb r3,[r7,#31]
2540:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t data_length = 0U;
 7639              	 .loc 3 2540 0
 7640 0012 0023     	 movs r3,#0
 7641 0014 BB61     	 str r3,[r7,#24]
2541:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status;
2542:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2543:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*  Select the card before proceeding */
2544:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 7642              	 .loc 3 2544 0
 7643 0016 F868     	 ldr r0,[r7,#12]
 7644 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 7645 001c 0346     	 mov r3,r0
 7646 001e FB77     	 strb r3,[r7,#31]
2545:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7647              	 .loc 3 2545 0
 7648 0020 FB7F     	 ldrb r3,[r7,#31]
 7649 0022 002B     	 cmp r3,#0
 7650 0024 68D1     	 bne .L380
2546:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2547:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD42 and write the lock data structure */
2548:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Clear transfer direction select in transfer mode register */
2549:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_HOST_TO_CARD);
 7651              	 .loc 3 2549 0
 7652 0026 FB68     	 ldr r3,[r7,#12]
 7653 0028 1B68     	 ldr r3,[r3]
 7654 002a 1B68     	 ldr r3,[r3]
 7655 002c 1846     	 mov r0,r3
 7656 002e 0021     	 movs r1,#0
 7657 0030 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2550:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2551:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Compute password length */
2552:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     data_length = (uint32_t)((((uint32_t)lock->pwd_len + (uint32_t)1U) >> 1U) << 1U) + 2U;
 7658              	 .loc 3 2552 0
 7659 0034 BB68     	 ldr r3,[r7,#8]
 7660 0036 5B78     	 ldrb r3,[r3,#1]
 7661 0038 0133     	 adds r3,r3,#1
 7662 003a 23F00103 	 bic r3,r3,#1
 7663 003e 0233     	 adds r3,r3,#2
 7664 0040 BB61     	 str r3,[r7,#24]
2553:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2554:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Set block length */
2555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2556:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7665              	 .loc 3 2556 0
 7666 0042 0C23     	 movs r3,#12
2555:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7667              	 .loc 3 2555 0
 7668 0044 5B00     	 lsls r3,r3,#1
 7669 0046 2F4A     	 ldr r2,.L384
 7670 0048 1A44     	 add r2,r2,r3
 7671 004a 07F11403 	 add r3,r7,#20
 7672 004e 0093     	 str r3,[sp]
 7673 0050 F868     	 ldr r0,[r7,#12]
 7674 0052 1146     	 mov r1,r2
 7675 0054 BA69     	 ldr r2,[r7,#24]
 7676 0056 0123     	 movs r3,#1
 7677 0058 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7678 005c 0346     	 mov r3,r0
 7679 005e FB77     	 strb r3,[r7,#31]
2557:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          data_length,
2558:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2559:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2560:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2561:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7680              	 .loc 3 2561 0
 7681 0060 FB7F     	 ldrb r3,[r7,#31]
 7682 0062 002B     	 cmp r3,#0
 7683 0064 48D1     	 bne .L380
2562:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2564:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(42)),
 7684              	 .loc 3 2564 0
 7685 0066 1823     	 movs r3,#24
2563:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_COMMON_COMMAND(42)),
 7686              	 .loc 3 2563 0
 7687 0068 5B00     	 lsls r3,r3,#1
 7688 006a 264A     	 ldr r2,.L384
 7689 006c 1A44     	 add r2,r2,r3
 7690 006e BB69     	 ldr r3,[r7,#24]
 7691 0070 9CB2     	 uxth r4,r3
 7692 0072 BB68     	 ldr r3,[r7,#8]
 7693 0074 0093     	 str r3,[sp]
 7694 0076 0223     	 movs r3,#2
 7695 0078 0193     	 str r3,[sp,#4]
 7696 007a F868     	 ldr r0,[r7,#12]
 7697 007c 1146     	 mov r1,r2
 7698 007e 0022     	 movs r2,#0
 7699 0080 2346     	 mov r3,r4
 7700 0082 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 7701 0086 0346     	 mov r3,r0
 7702 0088 FB77     	 strb r3,[r7,#31]
2565:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t)SDMMC_BLOCK_ARGUMENT0,
2566:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)data_length,
2567:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)lock,
2568:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_WRITE_BUFFER);
2569:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2570:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while (XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc))
 7703              	 .loc 3 2570 0
 7704 008a 00BF     	 nop
 7705              	.L381:
 7706              	 .loc 3 2570 0 is_stmt 0 discriminator 1
 7707 008c FB68     	 ldr r3,[r7,#12]
 7708 008e 1B68     	 ldr r3,[r3]
 7709 0090 1B68     	 ldr r3,[r3]
 7710 0092 1846     	 mov r0,r3
 7711 0094 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7712 0098 0346     	 mov r3,r0
 7713 009a 002B     	 cmp r3,#0
 7714 009c F6D1     	 bne .L381
2571:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2572:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2573:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSendCommand(obj,
2575:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7715              	 .loc 3 2575 0 is_stmt 1
 7716 009e 0C23     	 movs r3,#12
2574:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &(SDMMC_BLOCK_COMMON_COMMAND(16)),
 7717              	 .loc 3 2574 0
 7718 00a0 5B00     	 lsls r3,r3,#1
 7719 00a2 184A     	 ldr r2,.L384
 7720 00a4 1A44     	 add r2,r2,r3
 7721 00a6 07F11403 	 add r3,r7,#20
 7722 00aa 0093     	 str r3,[sp]
 7723 00ac F868     	 ldr r0,[r7,#12]
 7724 00ae 1146     	 mov r1,r2
 7725 00b0 4FF40072 	 mov r2,#512
 7726 00b4 0123     	 movs r3,#1
 7727 00b6 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7728 00ba 0346     	 mov r3,r0
 7729 00bc FB77     	 strb r3,[r7,#31]
2576:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            512U,
2577:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            XMC_SDMMC_RESPONSE_TYPE_R1,
2578:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                            &card_status);
2579:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2580:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Wait for until the command OR data lines aren't busy */
2581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) ||
 7730              	 .loc 3 2581 0
 7731 00be 00BF     	 nop
 7732              	.L382:
 7733              	 .loc 3 2581 0 is_stmt 0 discriminator 3
 7734 00c0 FB68     	 ldr r3,[r7,#12]
 7735 00c2 1B68     	 ldr r3,[r3]
 7736 00c4 1B68     	 ldr r3,[r3]
 7737 00c6 1846     	 mov r0,r3
 7738 00c8 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 7739 00cc 0346     	 mov r3,r0
 7740 00ce 002B     	 cmp r3,#0
 7741 00d0 F6D1     	 bne .L382
2582:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc)))
 7742              	 .loc 3 2582 0 is_stmt 1 discriminator 2
 7743 00d2 FB68     	 ldr r3,[r7,#12]
 7744 00d4 1B68     	 ldr r3,[r3]
 7745 00d6 1B68     	 ldr r3,[r3]
 7746 00d8 1846     	 mov r0,r3
 7747 00da FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 7748 00de 0346     	 mov r3,r0
2581:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****              (XMC_SDMMC_IsCommandLineBusy(obj->sdmmc_sd->sdmmc)))
 7749              	 .loc 3 2581 0 discriminator 2
 7750 00e0 002B     	 cmp r3,#0
 7751 00e2 EDD1     	 bne .L382
2583:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2584:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2585:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2586:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7752              	 .loc 3 2586 0
 7753 00e4 FB7F     	 ldrb r3,[r7,#31]
 7754 00e6 002B     	 cmp r3,#0
 7755 00e8 06D1     	 bne .L380
2587:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       {
2588:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****         status = SDMMC_BLOCK_SD_lCheckLockStatus(obj, operation_mode);
 7756              	 .loc 3 2588 0
 7757 00ea FB79     	 ldrb r3,[r7,#7]
 7758 00ec F868     	 ldr r0,[r7,#12]
 7759 00ee 1946     	 mov r1,r3
 7760 00f0 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCheckLockStatus
 7761 00f4 0346     	 mov r3,r0
 7762 00f6 FB77     	 strb r3,[r7,#31]
 7763              	.L380:
2589:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       }
2590:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2591:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2592:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7764              	 .loc 3 2592 0
 7765 00f8 FB7F     	 ldrb r3,[r7,#31]
2593:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7766              	 .loc 3 2593 0
 7767 00fa 1846     	 mov r0,r3
 7768 00fc 2437     	 adds r7,r7,#36
 7769              	.LCFI409:
 7770              	 .cfi_def_cfa_offset 12
 7771 00fe BD46     	 mov sp,r7
 7772              	.LCFI410:
 7773              	 .cfi_def_cfa_register 13
 7774              	 
 7775 0100 90BD     	 pop {r4,r7,pc}
 7776              	.L385:
 7777 0102 00BF     	 .align 2
 7778              	.L384:
 7779 0104 00000000 	 .word sdmmc_block_command
 7780              	 .cfi_endproc
 7781              	.LFE269:
 7783              	 .section .text.SDMMC_BLOCK_SD_GetLockStatus,"ax",%progbits
 7784              	 .align 2
 7785              	 .global SDMMC_BLOCK_SD_GetLockStatus
 7786              	 .thumb
 7787              	 .thumb_func
 7789              	SDMMC_BLOCK_SD_GetLockStatus:
 7790              	.LFB270:
2594:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2595:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get the lock status from card */
2596:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetLockStatus(SDMMC_BLOCK_t *const obj,
2597:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        SDMMC_BLOCK_CARD_LOCK_STATUS_t *lock_status)
2598:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7791              	 .loc 3 2598 0
 7792              	 .cfi_startproc
 7793              	 
 7794              	 
 7795 0000 80B5     	 push {r7,lr}
 7796              	.LCFI411:
 7797              	 .cfi_def_cfa_offset 8
 7798              	 .cfi_offset 7,-8
 7799              	 .cfi_offset 14,-4
 7800 0002 88B0     	 sub sp,sp,#32
 7801              	.LCFI412:
 7802              	 .cfi_def_cfa_offset 40
 7803 0004 02AF     	 add r7,sp,#8
 7804              	.LCFI413:
 7805              	 .cfi_def_cfa 7,32
 7806 0006 7860     	 str r0,[r7,#4]
 7807 0008 3960     	 str r1,[r7]
2599:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0UL;
 7808              	 .loc 3 2599 0
 7809 000a 0023     	 movs r3,#0
 7810 000c FB60     	 str r3,[r7,#12]
2600:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0UL;
 7811              	 .loc 3 2600 0
 7812 000e 0023     	 movs r3,#0
 7813 0010 7B61     	 str r3,[r7,#20]
2601:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 7814              	 .loc 3 2601 0
 7815 0012 0123     	 movs r3,#1
 7816 0014 FB74     	 strb r3,[r7,#19]
2602:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2603:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   arg |= ((uint32_t)obj->sdmmc_sd->card_info.rca << SDMMC_BLOCK_ARG_RCA_BITPOS);
 7817              	 .loc 3 2603 0
 7818 0016 7B68     	 ldr r3,[r7,#4]
 7819 0018 1B68     	 ldr r3,[r3]
 7820 001a B3F84C30 	 ldrh r3,[r3,#76]
 7821 001e 1B04     	 lsls r3,r3,#16
 7822 0020 7A69     	 ldr r2,[r7,#20]
 7823 0022 1343     	 orrs r3,r3,r2
 7824 0024 7B61     	 str r3,[r7,#20]
2604:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2605:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Send CMD13 to read card status  */
2606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSendCommand(obj,
2607:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 7825              	 .loc 3 2607 0
 7826 0026 0A23     	 movs r3,#10
2606:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &(SDMMC_BLOCK_COMMON_COMMAND(13)),
 7827              	 .loc 3 2606 0
 7828 0028 5B00     	 lsls r3,r3,#1
 7829 002a 174A     	 ldr r2,.L390
 7830 002c 1A44     	 add r2,r2,r3
 7831 002e 07F10C03 	 add r3,r7,#12
 7832 0032 0093     	 str r3,[sp]
 7833 0034 7868     	 ldr r0,[r7,#4]
 7834 0036 1146     	 mov r1,r2
 7835 0038 7A69     	 ldr r2,[r7,#20]
 7836 003a 0123     	 movs r3,#1
 7837 003c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 7838 0040 0346     	 mov r3,r0
 7839 0042 FB74     	 strb r3,[r7,#19]
2608:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        arg,
2609:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        XMC_SDMMC_RESPONSE_TYPE_R1,
2610:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                        &card_status);
2611:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2612:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 7840              	 .loc 3 2612 0
 7841 0044 FB7C     	 ldrb r3,[r7,#19]
 7842 0046 002B     	 cmp r3,#0
 7843 0048 19D1     	 bne .L387
2613:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2614:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Lock/unlock status bit in the CSR register */
2615:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (((uint32_t)card_status & (uint32_t)SDMMC_BLOCK_SD_CSR_CARD_IS_LOCKED_BITMASK) != (uint32_t)
 7844              	 .loc 3 2615 0
 7845 004a FB68     	 ldr r3,[r7,#12]
 7846 004c 03F00073 	 and r3,r3,#33554432
 7847 0050 002B     	 cmp r3,#0
 7848 0052 0AD0     	 beq .L388
2616:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2617:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_LOCKED;
 7849              	 .loc 3 2617 0
 7850 0054 3B68     	 ldr r3,[r7]
 7851 0056 0122     	 movs r2,#1
 7852 0058 1A70     	 strb r2,[r3]
2618:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state |= (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED;
 7853              	 .loc 3 2618 0
 7854 005a 7B68     	 ldr r3,[r7,#4]
 7855 005c 1B7A     	 ldrb r3,[r3,#8]
 7856 005e 43F00803 	 orr r3,r3,#8
 7857 0062 DAB2     	 uxtb r2,r3
 7858 0064 7B68     	 ldr r3,[r7,#4]
 7859 0066 1A72     	 strb r2,[r3,#8]
 7860 0068 09E0     	 b .L387
 7861              	.L388:
2619:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2620:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2621:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2622:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *lock_status = SDMMC_BLOCK_CARD_LOCK_STATUS_UNLOCKED;
 7862              	 .loc 3 2622 0
 7863 006a 3B68     	 ldr r3,[r7]
 7864 006c 0022     	 movs r2,#0
 7865 006e 1A70     	 strb r2,[r3]
2623:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->card_state &= (uint8_t)~(uint8_t)(SDMMC_BLOCK_CARD_STATE_LOCKED);
 7866              	 .loc 3 2623 0
 7867 0070 7B68     	 ldr r3,[r7,#4]
 7868 0072 1B7A     	 ldrb r3,[r3,#8]
 7869 0074 23F00803 	 bic r3,r3,#8
 7870 0078 DAB2     	 uxtb r2,r3
 7871 007a 7B68     	 ldr r3,[r7,#4]
 7872 007c 1A72     	 strb r2,[r3,#8]
 7873              	.L387:
2624:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2625:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2626:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2627:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 7874              	 .loc 3 2627 0
 7875 007e FB7C     	 ldrb r3,[r7,#19]
2628:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7876              	 .loc 3 2628 0
 7877 0080 1846     	 mov r0,r3
 7878 0082 1837     	 adds r7,r7,#24
 7879              	.LCFI414:
 7880              	 .cfi_def_cfa_offset 8
 7881 0084 BD46     	 mov sp,r7
 7882              	.LCFI415:
 7883              	 .cfi_def_cfa_register 13
 7884              	 
 7885 0086 80BD     	 pop {r7,pc}
 7886              	.L391:
 7887              	 .align 2
 7888              	.L390:
 7889 0088 00000000 	 .word sdmmc_block_command
 7890              	 .cfi_endproc
 7891              	.LFE270:
 7893              	 .section .text.SDMMC_BLOCK_SD_GetState,"ax",%progbits
 7894              	 .align 2
 7895              	 .global SDMMC_BLOCK_SD_GetState
 7896              	 .thumb
 7897              	 .thumb_func
 7899              	SDMMC_BLOCK_SD_GetState:
 7900              	.LFB271:
2629:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2630:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card's current state */
2631:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** uint8_t SDMMC_BLOCK_SD_GetState(SDMMC_BLOCK_t *obj)
2632:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7901              	 .loc 3 2632 0
 7902              	 .cfi_startproc
 7903              	 
 7904              	 
 7905              	 
 7906 0000 80B4     	 push {r7}
 7907              	.LCFI416:
 7908              	 .cfi_def_cfa_offset 4
 7909              	 .cfi_offset 7,-4
 7910 0002 83B0     	 sub sp,sp,#12
 7911              	.LCFI417:
 7912              	 .cfi_def_cfa_offset 16
 7913 0004 00AF     	 add r7,sp,#0
 7914              	.LCFI418:
 7915              	 .cfi_def_cfa_register 7
 7916 0006 7860     	 str r0,[r7,#4]
2633:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return (obj->card_state & 0xFU);
 7917              	 .loc 3 2633 0
 7918 0008 7B68     	 ldr r3,[r7,#4]
 7919 000a 1B7A     	 ldrb r3,[r3,#8]
 7920 000c 03F00F03 	 and r3,r3,#15
 7921 0010 DBB2     	 uxtb r3,r3
2634:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7922              	 .loc 3 2634 0
 7923 0012 1846     	 mov r0,r3
 7924 0014 0C37     	 adds r7,r7,#12
 7925              	.LCFI419:
 7926              	 .cfi_def_cfa_offset 4
 7927 0016 BD46     	 mov sp,r7
 7928              	.LCFI420:
 7929              	 .cfi_def_cfa_register 13
 7930              	 
 7931 0018 5DF8047B 	 ldr r7,[sp],#4
 7932              	.LCFI421:
 7933              	 .cfi_restore 7
 7934              	 .cfi_def_cfa_offset 0
 7935 001c 7047     	 bx lr
 7936              	 .cfi_endproc
 7937              	.LFE271:
 7939 001e 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCardType,"ax",%progbits
 7940              	 .align 2
 7941              	 .global SDMMC_BLOCK_SD_GetCardType
 7942              	 .thumb
 7943              	 .thumb_func
 7945              	SDMMC_BLOCK_SD_GetCardType:
 7946              	.LFB272:
2635:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2636:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get card type */
2637:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCardType(SDMMC_BLOCK_t *const obj, uint32_t *card_type)
2638:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7947              	 .loc 3 2638 0
 7948              	 .cfi_startproc
 7949              	 
 7950              	 
 7951              	 
 7952 0000 80B4     	 push {r7}
 7953              	.LCFI422:
 7954              	 .cfi_def_cfa_offset 4
 7955              	 .cfi_offset 7,-4
 7956 0002 83B0     	 sub sp,sp,#12
 7957              	.LCFI423:
 7958              	 .cfi_def_cfa_offset 16
 7959 0004 00AF     	 add r7,sp,#0
 7960              	.LCFI424:
 7961              	 .cfi_def_cfa_register 7
 7962 0006 7860     	 str r0,[r7,#4]
 7963 0008 3960     	 str r1,[r7]
2639:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *card_type = obj->card_type;
 7964              	 .loc 3 2639 0
 7965 000a 7B68     	 ldr r3,[r7,#4]
 7966 000c 5B7A     	 ldrb r3,[r3,#9]
 7967 000e 1A46     	 mov r2,r3
 7968 0010 3B68     	 ldr r3,[r7]
 7969 0012 1A60     	 str r2,[r3]
2640:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2641:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 7970              	 .loc 3 2641 0
 7971 0014 0023     	 movs r3,#0
2642:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 7972              	 .loc 3 2642 0
 7973 0016 1846     	 mov r0,r3
 7974 0018 0C37     	 adds r7,r7,#12
 7975              	.LCFI425:
 7976              	 .cfi_def_cfa_offset 4
 7977 001a BD46     	 mov sp,r7
 7978              	.LCFI426:
 7979              	 .cfi_def_cfa_register 13
 7980              	 
 7981 001c 5DF8047B 	 ldr r7,[sp],#4
 7982              	.LCFI427:
 7983              	 .cfi_restore 7
 7984              	 .cfi_def_cfa_offset 0
 7985 0020 7047     	 bx lr
 7986              	 .cfi_endproc
 7987              	.LFE272:
 7989 0022 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCid,"ax",%progbits
 7990              	 .align 2
 7991              	 .global SDMMC_BLOCK_SD_GetCid
 7992              	 .thumb
 7993              	 .thumb_func
 7995              	SDMMC_BLOCK_SD_GetCid:
 7996              	.LFB273:
2643:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2644:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get CID register information of card */
2645:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCid(SDMMC_BLOCK_t *const obj, void *buf)
2646:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 7997              	 .loc 3 2646 0
 7998              	 .cfi_startproc
 7999              	 
 8000              	 
 8001              	 
 8002 0000 80B4     	 push {r7}
 8003              	.LCFI428:
 8004              	 .cfi_def_cfa_offset 4
 8005              	 .cfi_offset 7,-4
 8006 0002 85B0     	 sub sp,sp,#20
 8007              	.LCFI429:
 8008              	 .cfi_def_cfa_offset 24
 8009 0004 00AF     	 add r7,sp,#0
 8010              	.LCFI430:
 8011              	 .cfi_def_cfa_register 7
 8012 0006 7860     	 str r0,[r7,#4]
 8013 0008 3960     	 str r1,[r7]
2647:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_CID_t *temp = (SDMMC_BLOCK_CID_t *)buf;
 8014              	 .loc 3 2647 0
 8015 000a 3B68     	 ldr r3,[r7]
 8016 000c FB60     	 str r3,[r7,#12]
2648:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2649:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->manufacturing_date = (uint16_t)((obj->sdmmc_sd->card_info.cid[0]) & 0xFFFU);
 8017              	 .loc 3 2649 0
 8018 000e 7B68     	 ldr r3,[r7,#4]
 8019 0010 1B68     	 ldr r3,[r3]
 8020 0012 5B6A     	 ldr r3,[r3,#36]
 8021 0014 9BB2     	 uxth r3,r3
 8022 0016 C3F30B03 	 ubfx r3,r3,#0,#12
 8023 001a 9AB2     	 uxth r2,r3
 8024 001c FB68     	 ldr r3,[r7,#12]
 8025 001e 1A80     	 strh r2,[r3]
2650:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_serial_num = (obj->sdmmc_sd->card_info.cid[1] << 16U) | (obj->sdmmc_sd->card_info.c
 8026              	 .loc 3 2650 0
 8027 0020 7B68     	 ldr r3,[r7,#4]
 8028 0022 1B68     	 ldr r3,[r3]
 8029 0024 9B6A     	 ldr r3,[r3,#40]
 8030 0026 1A04     	 lsls r2,r3,#16
 8031 0028 7B68     	 ldr r3,[r7,#4]
 8032 002a 1B68     	 ldr r3,[r3]
 8033 002c 5B6A     	 ldr r3,[r3,#36]
 8034 002e 1B0C     	 lsrs r3,r3,#16
 8035 0030 1A43     	 orrs r2,r2,r3
 8036 0032 FB68     	 ldr r3,[r7,#12]
 8037 0034 5A60     	 str r2,[r3,#4]
2651:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_rev = (uint8_t)((obj->sdmmc_sd->card_info.cid[1] >> 16U) & 0xFFU);
 8038              	 .loc 3 2651 0
 8039 0036 7B68     	 ldr r3,[r7,#4]
 8040 0038 1B68     	 ldr r3,[r3]
 8041 003a 9B6A     	 ldr r3,[r3,#40]
 8042 003c 1B0C     	 lsrs r3,r3,#16
 8043 003e DAB2     	 uxtb r2,r3
 8044 0040 FB68     	 ldr r3,[r7,#12]
 8045 0042 1A72     	 strb r2,[r3,#8]
2652:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[0] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 24U) & 0xFFU);
 8046              	 .loc 3 2652 0
 8047 0044 7B68     	 ldr r3,[r7,#4]
 8048 0046 1B68     	 ldr r3,[r3]
 8049 0048 DB6A     	 ldr r3,[r3,#44]
 8050 004a 1B0E     	 lsrs r3,r3,#24
 8051 004c DAB2     	 uxtb r2,r3
 8052 004e FB68     	 ldr r3,[r7,#12]
 8053 0050 5A72     	 strb r2,[r3,#9]
2653:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[1] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 16U) & 0xFFU);
 8054              	 .loc 3 2653 0
 8055 0052 7B68     	 ldr r3,[r7,#4]
 8056 0054 1B68     	 ldr r3,[r3]
 8057 0056 DB6A     	 ldr r3,[r3,#44]
 8058 0058 1B0C     	 lsrs r3,r3,#16
 8059 005a DAB2     	 uxtb r2,r3
 8060 005c FB68     	 ldr r3,[r7,#12]
 8061 005e 9A72     	 strb r2,[r3,#10]
2654:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[2] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 8U) & 0xFFU);
 8062              	 .loc 3 2654 0
 8063 0060 7B68     	 ldr r3,[r7,#4]
 8064 0062 1B68     	 ldr r3,[r3]
 8065 0064 DB6A     	 ldr r3,[r3,#44]
 8066 0066 1B0A     	 lsrs r3,r3,#8
 8067 0068 DAB2     	 uxtb r2,r3
 8068 006a FB68     	 ldr r3,[r7,#12]
 8069 006c DA72     	 strb r2,[r3,#11]
2655:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[3] = (uint8_t)((obj->sdmmc_sd->card_info.cid[2] >> 0U) & 0xFFU);
 8070              	 .loc 3 2655 0
 8071 006e 7B68     	 ldr r3,[r7,#4]
 8072 0070 1B68     	 ldr r3,[r3]
 8073 0072 DB6A     	 ldr r3,[r3,#44]
 8074 0074 DAB2     	 uxtb r2,r3
 8075 0076 FB68     	 ldr r3,[r7,#12]
 8076 0078 1A73     	 strb r2,[r3,#12]
2656:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->product_name[4] = (uint8_t)((obj->sdmmc_sd->card_info.cid[1] >> 24U) & 0xFFU);
 8077              	 .loc 3 2656 0
 8078 007a 7B68     	 ldr r3,[r7,#4]
 8079 007c 1B68     	 ldr r3,[r3]
 8080 007e 9B6A     	 ldr r3,[r3,#40]
 8081 0080 1B0E     	 lsrs r3,r3,#24
 8082 0082 DAB2     	 uxtb r2,r3
 8083 0084 FB68     	 ldr r3,[r7,#12]
 8084 0086 5A73     	 strb r2,[r3,#13]
2657:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->app_oem_id[0] = (uint8_t)((obj->sdmmc_sd->card_info.cid[3] >> 8U) & 0xFFU);
 8085              	 .loc 3 2657 0
 8086 0088 7B68     	 ldr r3,[r7,#4]
 8087 008a 1B68     	 ldr r3,[r3]
 8088 008c 1B6B     	 ldr r3,[r3,#48]
 8089 008e 1B0A     	 lsrs r3,r3,#8
 8090 0090 DAB2     	 uxtb r2,r3
 8091 0092 FB68     	 ldr r3,[r7,#12]
 8092 0094 9A73     	 strb r2,[r3,#14]
2658:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->app_oem_id[1] = (uint8_t)((obj->sdmmc_sd->card_info.cid[3]) & 0xFFU);
 8093              	 .loc 3 2658 0
 8094 0096 7B68     	 ldr r3,[r7,#4]
 8095 0098 1B68     	 ldr r3,[r3]
 8096 009a 1B6B     	 ldr r3,[r3,#48]
 8097 009c DAB2     	 uxtb r2,r3
 8098 009e FB68     	 ldr r3,[r7,#12]
 8099 00a0 DA73     	 strb r2,[r3,#15]
2659:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   temp->manufacturer_id = (uint8_t)((obj->sdmmc_sd->card_info.cid[3] >> 16U) & 0xFFU);
 8100              	 .loc 3 2659 0
 8101 00a2 7B68     	 ldr r3,[r7,#4]
 8102 00a4 1B68     	 ldr r3,[r3]
 8103 00a6 1B6B     	 ldr r3,[r3,#48]
 8104 00a8 1B0C     	 lsrs r3,r3,#16
 8105 00aa DAB2     	 uxtb r2,r3
 8106 00ac FB68     	 ldr r3,[r7,#12]
 8107 00ae 1A74     	 strb r2,[r3,#16]
2660:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2661:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8108              	 .loc 3 2661 0
 8109 00b0 0023     	 movs r3,#0
2662:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8110              	 .loc 3 2662 0
 8111 00b2 1846     	 mov r0,r3
 8112 00b4 1437     	 adds r7,r7,#20
 8113              	.LCFI431:
 8114              	 .cfi_def_cfa_offset 4
 8115 00b6 BD46     	 mov sp,r7
 8116              	.LCFI432:
 8117              	 .cfi_def_cfa_register 13
 8118              	 
 8119 00b8 5DF8047B 	 ldr r7,[sp],#4
 8120              	.LCFI433:
 8121              	 .cfi_restore 7
 8122              	 .cfi_def_cfa_offset 0
 8123 00bc 7047     	 bx lr
 8124              	 .cfi_endproc
 8125              	.LFE273:
 8127 00be 00BF     	 .section .text.SDMMC_BLOCK_SD_GetOcr,"ax",%progbits
 8128              	 .align 2
 8129              	 .global SDMMC_BLOCK_SD_GetOcr
 8130              	 .thumb
 8131              	 .thumb_func
 8133              	SDMMC_BLOCK_SD_GetOcr:
 8134              	.LFB274:
2663:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2664:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get OCR information */
2665:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetOcr(SDMMC_BLOCK_t *const obj, void *buf)
2666:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8135              	 .loc 3 2666 0
 8136              	 .cfi_startproc
 8137              	 
 8138              	 
 8139              	 
 8140 0000 80B4     	 push {r7}
 8141              	.LCFI434:
 8142              	 .cfi_def_cfa_offset 4
 8143              	 .cfi_offset 7,-4
 8144 0002 83B0     	 sub sp,sp,#12
 8145              	.LCFI435:
 8146              	 .cfi_def_cfa_offset 16
 8147 0004 00AF     	 add r7,sp,#0
 8148              	.LCFI436:
 8149              	 .cfi_def_cfa_register 7
 8150 0006 7860     	 str r0,[r7,#4]
 8151 0008 3960     	 str r1,[r7]
2667:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *(uint32_t *)buf = obj->sdmmc_sd->card_info.ocr;
 8152              	 .loc 3 2667 0
 8153 000a 7B68     	 ldr r3,[r7,#4]
 8154 000c 1B68     	 ldr r3,[r3]
 8155 000e 1A6A     	 ldr r2,[r3,#32]
 8156 0010 3B68     	 ldr r3,[r7]
 8157 0012 1A60     	 str r2,[r3]
2668:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2669:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8158              	 .loc 3 2669 0
 8159 0014 0023     	 movs r3,#0
2670:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8160              	 .loc 3 2670 0
 8161 0016 1846     	 mov r0,r3
 8162 0018 0C37     	 adds r7,r7,#12
 8163              	.LCFI437:
 8164              	 .cfi_def_cfa_offset 4
 8165 001a BD46     	 mov sp,r7
 8166              	.LCFI438:
 8167              	 .cfi_def_cfa_register 13
 8168              	 
 8169 001c 5DF8047B 	 ldr r7,[sp],#4
 8170              	.LCFI439:
 8171              	 .cfi_restore 7
 8172              	 .cfi_def_cfa_offset 0
 8173 0020 7047     	 bx lr
 8174              	 .cfi_endproc
 8175              	.LFE274:
 8177 0022 00BF     	 .section .text.SDMMC_BLOCK_SD_GetCsd,"ax",%progbits
 8178              	 .align 2
 8179              	 .global SDMMC_BLOCK_SD_GetCsd
 8180              	 .thumb
 8181              	 .thumb_func
 8183              	SDMMC_BLOCK_SD_GetCsd:
 8184              	.LFB275:
2671:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2672:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get CSD information */
2673:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetCsd(SDMMC_BLOCK_t *const obj, void *buf)
2674:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8185              	 .loc 3 2674 0
 8186              	 .cfi_startproc
 8187              	 
 8188              	 
 8189 0000 80B5     	 push {r7,lr}
 8190              	.LCFI440:
 8191              	 .cfi_def_cfa_offset 8
 8192              	 .cfi_offset 7,-8
 8193              	 .cfi_offset 14,-4
 8194 0002 82B0     	 sub sp,sp,#8
 8195              	.LCFI441:
 8196              	 .cfi_def_cfa_offset 16
 8197 0004 00AF     	 add r7,sp,#0
 8198              	.LCFI442:
 8199              	 .cfi_def_cfa_register 7
 8200 0006 7860     	 str r0,[r7,#4]
 8201 0008 3960     	 str r1,[r7]
2675:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
2676:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * CSD Structure includes 7-bit CRC and 1-bit fixed bit
2677:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * which is not sent by the card. So, skip 1 byte before
2678:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * copying into the structure.
2679:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
2680:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   memcpy(((uint8_t *)buf + 1U), (void *)obj->sdmmc_sd->card_info.csd, 15U);
 8202              	 .loc 3 2680 0
 8203 000a 3B68     	 ldr r3,[r7]
 8204 000c 5A1C     	 adds r2,r3,#1
 8205 000e 7B68     	 ldr r3,[r7,#4]
 8206 0010 1B68     	 ldr r3,[r3]
 8207 0012 3433     	 adds r3,r3,#52
 8208 0014 1046     	 mov r0,r2
 8209 0016 1946     	 mov r1,r3
 8210 0018 0F22     	 movs r2,#15
 8211 001a FFF7FEFF 	 bl memcpy
2681:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2682:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8212              	 .loc 3 2682 0
 8213 001e 0023     	 movs r3,#0
2683:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8214              	 .loc 3 2683 0
 8215 0020 1846     	 mov r0,r3
 8216 0022 0837     	 adds r7,r7,#8
 8217              	.LCFI443:
 8218              	 .cfi_def_cfa_offset 8
 8219 0024 BD46     	 mov sp,r7
 8220              	.LCFI444:
 8221              	 .cfi_def_cfa_register 13
 8222              	 
 8223 0026 80BD     	 pop {r7,pc}
 8224              	 .cfi_endproc
 8225              	.LFE275:
 8227              	 .section .text.SDMMC_BLOCK_SD_GetSectorCount,"ax",%progbits
 8228              	 .align 2
 8229              	 .global SDMMC_BLOCK_SD_GetSectorCount
 8230              	 .thumb
 8231              	 .thumb_func
 8233              	SDMMC_BLOCK_SD_GetSectorCount:
 8234              	.LFB276:
2684:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2685:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get number of sectors present on the card */
2686:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSectorCount(SDMMC_BLOCK_t *const obj, void *buf)
2687:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8235              	 .loc 3 2687 0
 8236              	 .cfi_startproc
 8237              	 
 8238              	 
 8239 0000 80B5     	 push {r7,lr}
 8240              	.LCFI445:
 8241              	 .cfi_def_cfa_offset 8
 8242              	 .cfi_offset 7,-8
 8243              	 .cfi_offset 14,-4
 8244 0002 8EB0     	 sub sp,sp,#56
 8245              	.LCFI446:
 8246              	 .cfi_def_cfa_offset 64
 8247 0004 00AF     	 add r7,sp,#0
 8248              	.LCFI447:
 8249              	 .cfi_def_cfa_register 7
 8250 0006 7860     	 str r0,[r7,#4]
 8251 0008 3960     	 str r1,[r7]
2688:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8252              	 .loc 3 2688 0
 8253 000a 0023     	 movs r3,#0
 8254 000c 87F83730 	 strb r3,[r7,#55]
2689:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t mult = 0U;
 8255              	 .loc 3 2689 0
 8256 0010 0023     	 movs r3,#0
 8257 0012 3B63     	 str r3,[r7,#48]
2690:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2691:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0U)
 8258              	 .loc 3 2691 0
 8259 0014 7B68     	 ldr r3,[r7,#4]
 8260 0016 5B7A     	 ldrb r3,[r3,#9]
 8261 0018 03F00403 	 and r3,r3,#4
 8262 001c 002B     	 cmp r3,#0
 8263 001e 26D0     	 beq .L403
 8264              	.LBB4:
2692:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2693:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v2 = {0U};
 8265              	 .loc 3 2693 0
 8266 0020 07F11C03 	 add r3,r7,#28
 8267 0024 0022     	 movs r2,#0
 8268 0026 1A60     	 str r2,[r3]
 8269 0028 0433     	 adds r3,r3,#4
 8270 002a 0022     	 movs r2,#0
 8271 002c 1A60     	 str r2,[r3]
 8272 002e 0433     	 adds r3,r3,#4
 8273 0030 0022     	 movs r2,#0
 8274 0032 1A60     	 str r2,[r3]
 8275 0034 0433     	 adds r3,r3,#4
 8276 0036 0022     	 movs r2,#0
 8277 0038 1A60     	 str r2,[r3]
 8278 003a 0433     	 adds r3,r3,#4
 8279 003c 0022     	 movs r2,#0
 8280 003e 1A60     	 str r2,[r3]
 8281 0040 0433     	 adds r3,r3,#4
2694:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2695:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2696:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v2);
 8282              	 .loc 3 2696 0
 8283 0042 07F11C03 	 add r3,r7,#28
 8284 0046 7868     	 ldr r0,[r7,#4]
 8285 0048 1946     	 mov r1,r3
 8286 004a FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8287 004e 0346     	 mov r3,r0
 8288 0050 87F83730 	 strb r3,[r7,#55]
2697:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8289              	 .loc 3 2697 0
 8290 0054 97F83730 	 ldrb r3,[r7,#55]
 8291 0058 002B     	 cmp r3,#0
 8292 005a 07D1     	 bne .L404
2698:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2699:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /*
2700:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * For High Capacity SD card, (C_SIZE field value + 1) * 1024
2701:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        * gives the sector count
2702:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****        */
2703:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *(uint32_t *)buf = (uint32_t)(((uint32_t)temp_csd_v2.dev_size + 1) << 10);
 8293              	 .loc 3 2703 0
 8294 005c 7B6A     	 ldr r3,[r7,#36]
 8295 005e C3F31503 	 ubfx r3,r3,#0,#22
 8296 0062 0133     	 adds r3,r3,#1
 8297 0064 9A02     	 lsls r2,r3,#10
 8298 0066 3B68     	 ldr r3,[r7]
 8299 0068 1A60     	 str r2,[r3]
 8300              	.LBE4:
 8301 006a 31E0     	 b .L405
 8302              	.L404:
 8303 006c 30E0     	 b .L405
 8304              	.L403:
 8305              	.LBB5:
2704:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2705:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2706:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /*
2707:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * For Standard SD (and MMC) cards:
2708:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    * Sector Count = (Device Size + 1) * Mult, where Mult =  2 ^ C_SIZE_MULT
2709:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****    */
2710:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2711:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2712:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV1_CSD_t temp_csd_v1 = {0U};
 8306              	 .loc 3 2712 0
 8307 006e 07F10803 	 add r3,r7,#8
 8308 0072 0022     	 movs r2,#0
 8309 0074 1A60     	 str r2,[r3]
 8310 0076 0433     	 adds r3,r3,#4
 8311 0078 0022     	 movs r2,#0
 8312 007a 1A60     	 str r2,[r3]
 8313 007c 0433     	 adds r3,r3,#4
 8314 007e 0022     	 movs r2,#0
 8315 0080 1A60     	 str r2,[r3]
 8316 0082 0433     	 adds r3,r3,#4
 8317 0084 0022     	 movs r2,#0
 8318 0086 1A60     	 str r2,[r3]
 8319 0088 0433     	 adds r3,r3,#4
 8320 008a 0022     	 movs r2,#0
 8321 008c 1A60     	 str r2,[r3]
 8322 008e 0433     	 adds r3,r3,#4
2713:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2714:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v1);
 8323              	 .loc 3 2714 0
 8324 0090 07F10803 	 add r3,r7,#8
 8325 0094 7868     	 ldr r0,[r7,#4]
 8326 0096 1946     	 mov r1,r3
 8327 0098 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8328 009c 0346     	 mov r3,r0
 8329 009e 87F83730 	 strb r3,[r7,#55]
2715:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8330              	 .loc 3 2715 0
 8331 00a2 97F83730 	 ldrb r3,[r7,#55]
 8332 00a6 002B     	 cmp r3,#0
 8333 00a8 12D1     	 bne .L405
2716:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2717:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Left shift evaluates 1 * 2 ^ (TmpMmcCsd.DeviceSizeMult + 2) */
2718:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       mult = (uint32_t)(1 << ((uint32_t)temp_csd_v1.dev_size_mult + 2));
 8334              	 .loc 3 2718 0
 8335 00aa FB68     	 ldr r3,[r7,#12]
 8336 00ac C3F3C233 	 ubfx r3,r3,#15,#3
 8337 00b0 DBB2     	 uxtb r3,r3
 8338 00b2 0233     	 adds r3,r3,#2
 8339 00b4 1A46     	 mov r2,r3
 8340 00b6 0123     	 movs r3,#1
 8341 00b8 9340     	 lsls r3,r3,r2
 8342 00ba 3B63     	 str r3,[r7,#48]
2719:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2720:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Sector Count = device_size * mult */
2721:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       *(uint32_t *)buf = ((uint32_t)temp_csd_v1.dev_size + 1) * mult;
 8343              	 .loc 3 2721 0
 8344 00bc 3B8A     	 ldrh r3,[r7,#16]
 8345 00be C3F30B03 	 ubfx r3,r3,#0,#12
 8346 00c2 9BB2     	 uxth r3,r3
 8347 00c4 0133     	 adds r3,r3,#1
 8348 00c6 3A6B     	 ldr r2,[r7,#48]
 8349 00c8 02FB03F2 	 mul r2,r2,r3
 8350 00cc 3B68     	 ldr r3,[r7]
 8351 00ce 1A60     	 str r2,[r3]
 8352              	.L405:
 8353              	.LBE5:
2722:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2723:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2724:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2725:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8354              	 .loc 3 2725 0
 8355 00d0 97F83730 	 ldrb r3,[r7,#55]
2726:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8356              	 .loc 3 2726 0
 8357 00d4 1846     	 mov r0,r3
 8358 00d6 3837     	 adds r7,r7,#56
 8359              	.LCFI448:
 8360              	 .cfi_def_cfa_offset 8
 8361 00d8 BD46     	 mov sp,r7
 8362              	.LCFI449:
 8363              	 .cfi_def_cfa_register 13
 8364              	 
 8365 00da 80BD     	 pop {r7,pc}
 8366              	 .cfi_endproc
 8367              	.LFE276:
 8369              	 .section .text.SDMMC_BLOCK_SD_GetSectorSize,"ax",%progbits
 8370              	 .align 2
 8371              	 .global SDMMC_BLOCK_SD_GetSectorSize
 8372              	 .thumb
 8373              	 .thumb_func
 8375              	SDMMC_BLOCK_SD_GetSectorSize:
 8376              	.LFB277:
2727:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2728:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get sector size info from the card */
2729:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSectorSize(SDMMC_BLOCK_t *const obj, void *buf)
2730:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8377              	 .loc 3 2730 0
 8378              	 .cfi_startproc
 8379              	 
 8380              	 
 8381              	 
 8382 0000 80B4     	 push {r7}
 8383              	.LCFI450:
 8384              	 .cfi_def_cfa_offset 4
 8385              	 .cfi_offset 7,-4
 8386 0002 83B0     	 sub sp,sp,#12
 8387              	.LCFI451:
 8388              	 .cfi_def_cfa_offset 16
 8389 0004 00AF     	 add r7,sp,#0
 8390              	.LCFI452:
 8391              	 .cfi_def_cfa_register 7
 8392 0006 7860     	 str r0,[r7,#4]
 8393 0008 3960     	 str r1,[r7]
2731:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Sector Size is fixed to 512 bytes */
2732:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   *(uint16_t *)buf = (uint16_t)512U;
 8394              	 .loc 3 2732 0
 8395 000a 3B68     	 ldr r3,[r7]
 8396 000c 4FF40072 	 mov r2,#512
 8397 0010 1A80     	 strh r2,[r3]
2733:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2734:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8398              	 .loc 3 2734 0
 8399 0012 0023     	 movs r3,#0
2735:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8400              	 .loc 3 2735 0
 8401 0014 1846     	 mov r0,r3
 8402 0016 0C37     	 adds r7,r7,#12
 8403              	.LCFI453:
 8404              	 .cfi_def_cfa_offset 4
 8405 0018 BD46     	 mov sp,r7
 8406              	.LCFI454:
 8407              	 .cfi_def_cfa_register 13
 8408              	 
 8409 001a 5DF8047B 	 ldr r7,[sp],#4
 8410              	.LCFI455:
 8411              	 .cfi_restore 7
 8412              	 .cfi_def_cfa_offset 0
 8413 001e 7047     	 bx lr
 8414              	 .cfi_endproc
 8415              	.LFE277:
 8417              	 .section .text.SDMMC_BLOCK_SD_GetBlockSize,"ax",%progbits
 8418              	 .align 2
 8419              	 .global SDMMC_BLOCK_SD_GetBlockSize
 8420              	 .thumb
 8421              	 .thumb_func
 8423              	SDMMC_BLOCK_SD_GetBlockSize:
 8424              	.LFB278:
2736:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2737:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetBlockSize(SDMMC_BLOCK_t *const obj, void *buf)
2738:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8425              	 .loc 3 2738 0
 8426              	 .cfi_startproc
 8427              	 
 8428              	 
 8429 0000 80B5     	 push {r7,lr}
 8430              	.LCFI456:
 8431              	 .cfi_def_cfa_offset 8
 8432              	 .cfi_offset 7,-8
 8433              	 .cfi_offset 14,-4
 8434 0002 8EB0     	 sub sp,sp,#56
 8435              	.LCFI457:
 8436              	 .cfi_def_cfa_offset 64
 8437 0004 00AF     	 add r7,sp,#0
 8438              	.LCFI458:
 8439              	 .cfi_def_cfa_register 7
 8440 0006 7860     	 str r0,[r7,#4]
 8441 0008 3960     	 str r1,[r7]
2739:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_SUCCESS;
 8442              	 .loc 3 2739 0
 8443 000a 0023     	 movs r3,#0
 8444 000c 87F83730 	 strb r3,[r7,#55]
2740:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2741:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD high capacity card (CSD V2) */
2742:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_type & (uint32_t)SDMMC_BLOCK_CARD_TYPE_HIGH_CAPACITY) != (uint32_t)0)
 8445              	 .loc 3 2742 0
 8446 0010 7B68     	 ldr r3,[r7,#4]
 8447 0012 5B7A     	 ldrb r3,[r3,#9]
 8448 0014 03F00403 	 and r3,r3,#4
 8449 0018 002B     	 cmp r3,#0
 8450 001a 21D0     	 beq .L411
 8451              	.LBB6:
2743:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2744:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v2 = {0U};
 8452              	 .loc 3 2744 0
 8453 001c 07F12003 	 add r3,r7,#32
 8454 0020 0022     	 movs r2,#0
 8455 0022 1A60     	 str r2,[r3]
 8456 0024 0433     	 adds r3,r3,#4
 8457 0026 0022     	 movs r2,#0
 8458 0028 1A60     	 str r2,[r3]
 8459 002a 0433     	 adds r3,r3,#4
 8460 002c 0022     	 movs r2,#0
 8461 002e 1A60     	 str r2,[r3]
 8462 0030 0433     	 adds r3,r3,#4
 8463 0032 0022     	 movs r2,#0
 8464 0034 1A60     	 str r2,[r3]
 8465 0036 0433     	 adds r3,r3,#4
 8466 0038 0022     	 movs r2,#0
 8467 003a 1A60     	 str r2,[r3]
 8468 003c 0433     	 adds r3,r3,#4
2745:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2746:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v2);
 8469              	 .loc 3 2746 0
 8470 003e 07F12003 	 add r3,r7,#32
 8471 0042 7868     	 ldr r0,[r7,#4]
 8472 0044 1946     	 mov r1,r3
 8473 0046 FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8474 004a 0346     	 mov r3,r0
 8475 004c 87F83730 	 strb r3,[r7,#55]
2747:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *(uint32_t *)buf = (uint32_t)((uint32_t)temp_csd_v2.erase_sector_size + (uint32_t)1U);
 8476              	 .loc 3 2747 0
 8477 0050 BB8C     	 ldrh r3,[r7,#36]
 8478 0052 C3F3C613 	 ubfx r3,r3,#7,#7
 8479 0056 DBB2     	 uxtb r3,r3
 8480 0058 5A1C     	 adds r2,r3,#1
 8481 005a 3B68     	 ldr r3,[r7]
 8482 005c 1A60     	 str r2,[r3]
 8483              	.LBE6:
 8484 005e 20E0     	 b .L412
 8485              	.L411:
 8486              	.LBB7:
2748:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2749:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* SD standard capacity card (CSD V1) */
2750:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2751:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2752:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     SDMMC_BLOCK_SDV2_CSD_t temp_csd_v1  = {0U};
 8487              	 .loc 3 2752 0
 8488 0060 07F10C03 	 add r3,r7,#12
 8489 0064 0022     	 movs r2,#0
 8490 0066 1A60     	 str r2,[r3]
 8491 0068 0433     	 adds r3,r3,#4
 8492 006a 0022     	 movs r2,#0
 8493 006c 1A60     	 str r2,[r3]
 8494 006e 0433     	 adds r3,r3,#4
 8495 0070 0022     	 movs r2,#0
 8496 0072 1A60     	 str r2,[r3]
 8497 0074 0433     	 adds r3,r3,#4
 8498 0076 0022     	 movs r2,#0
 8499 0078 1A60     	 str r2,[r3]
 8500 007a 0433     	 adds r3,r3,#4
 8501 007c 0022     	 movs r2,#0
 8502 007e 1A60     	 str r2,[r3]
 8503 0080 0433     	 adds r3,r3,#4
2753:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Get CSD function */
2754:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_GetCsd(obj, (void *)&temp_csd_v1);
 8504              	 .loc 3 2754 0
 8505 0082 07F10C03 	 add r3,r7,#12
 8506 0086 7868     	 ldr r0,[r7,#4]
 8507 0088 1946     	 mov r1,r3
 8508 008a FFF7FEFF 	 bl SDMMC_BLOCK_SD_GetCsd
 8509 008e 0346     	 mov r3,r0
 8510 0090 87F83730 	 strb r3,[r7,#55]
2755:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     *(uint32_t *)buf = (uint32_t)((uint32_t)temp_csd_v1.erase_sector_size + (uint32_t)1U);
 8511              	 .loc 3 2755 0
 8512 0094 3B8A     	 ldrh r3,[r7,#16]
 8513 0096 C3F3C613 	 ubfx r3,r3,#7,#7
 8514 009a DBB2     	 uxtb r3,r3
 8515 009c 5A1C     	 adds r2,r3,#1
 8516 009e 3B68     	 ldr r3,[r7]
 8517 00a0 1A60     	 str r2,[r3]
 8518              	.L412:
 8519              	.LBE7:
2756:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2757:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2758:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8520              	 .loc 3 2758 0
 8521 00a2 97F83730 	 ldrb r3,[r7,#55]
2759:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8522              	 .loc 3 2759 0
 8523 00a6 1846     	 mov r0,r3
 8524 00a8 3837     	 adds r7,r7,#56
 8525              	.LCFI459:
 8526              	 .cfi_def_cfa_offset 8
 8527 00aa BD46     	 mov sp,r7
 8528              	.LCFI460:
 8529              	 .cfi_def_cfa_register 13
 8530              	 
 8531 00ac 80BD     	 pop {r7,pc}
 8532              	 .cfi_endproc
 8533              	.LFE278:
 8535 00ae 00BF     	 .section .text.SDMMC_BLOCK_SD_GetSdStatus,"ax",%progbits
 8536              	 .align 2
 8537              	 .global SDMMC_BLOCK_SD_GetSdStatus
 8538              	 .thumb
 8539              	 .thumb_func
 8541              	SDMMC_BLOCK_SD_GetSdStatus:
 8542              	.LFB279:
2760:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2761:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Get SD status information */
2762:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_GetSdStatus(SDMMC_BLOCK_t *const obj, void *buf)
2763:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8543              	 .loc 3 2763 0
 8544              	 .cfi_startproc
 8545              	 
 8546              	 
 8547 0000 80B5     	 push {r7,lr}
 8548              	.LCFI461:
 8549              	 .cfi_def_cfa_offset 8
 8550              	 .cfi_offset 7,-8
 8551              	 .cfi_offset 14,-4
 8552 0002 88B0     	 sub sp,sp,#32
 8553              	.LCFI462:
 8554              	 .cfi_def_cfa_offset 40
 8555 0004 02AF     	 add r7,sp,#8
 8556              	.LCFI463:
 8557              	 .cfi_def_cfa 7,32
 8558 0006 7860     	 str r0,[r7,#4]
 8559 0008 3960     	 str r1,[r7]
2764:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 8560              	 .loc 3 2764 0
 8561 000a 0023     	 movs r3,#0
 8562 000c 3B61     	 str r3,[r7,#16]
2765:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t card_status = 0U;
 8563              	 .loc 3 2765 0
 8564 000e 0023     	 movs r3,#0
 8565 0010 FB60     	 str r3,[r7,#12]
2766:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 8566              	 .loc 3 2766 0
 8567 0012 0123     	 movs r3,#1
 8568 0014 FB75     	 strb r3,[r7,#23]
2767:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2768:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Select the card (CMD7) */
2769:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   status = SDMMC_BLOCK_SD_lSwitchToTransferState(obj);
 8569              	 .loc 3 2769 0
 8570 0016 7868     	 ldr r0,[r7,#4]
 8571 0018 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSwitchToTransferState
 8572 001c 0346     	 mov r3,r0
 8573 001e FB75     	 strb r3,[r7,#23]
2770:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8574              	 .loc 3 2770 0
 8575 0020 FB7D     	 ldrb r3,[r7,#23]
 8576 0022 002B     	 cmp r3,#0
 8577 0024 30D1     	 bne .L415
2771:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2772:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD55 (application specific command) */
2773:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPO
 8578              	 .loc 3 2773 0
 8579 0026 7B68     	 ldr r3,[r7,#4]
 8580 0028 1B68     	 ldr r3,[r3]
 8581 002a B3F84C30 	 ldrh r3,[r3,#76]
 8582 002e 1B04     	 lsls r3,r3,#16
 8583 0030 3A69     	 ldr r2,[r7,#16]
 8584 0032 1343     	 orrs r3,r3,r2
 8585 0034 3B61     	 str r3,[r7,#16]
2774:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2776:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 8586              	 .loc 3 2776 0
 8587 0036 1923     	 movs r3,#25
2775:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_COMMON_COMMAND(55)),
 8588              	 .loc 3 2775 0
 8589 0038 5B00     	 lsls r3,r3,#1
 8590 003a 164A     	 ldr r2,.L417
 8591 003c 1A44     	 add r2,r2,r3
 8592 003e 07F10C03 	 add r3,r7,#12
 8593 0042 0093     	 str r3,[sp]
 8594 0044 7868     	 ldr r0,[r7,#4]
 8595 0046 1146     	 mov r1,r2
 8596 0048 3A69     	 ldr r2,[r7,#16]
 8597 004a 0123     	 movs r3,#1
 8598 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 8599 0050 0346     	 mov r3,r0
 8600 0052 FB75     	 strb r3,[r7,#23]
2777:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          arg,
2778:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          XMC_SDMMC_RESPONSE_TYPE_R1,
2779:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &card_status);
2780:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2781:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8601              	 .loc 3 2781 0
 8602 0054 FB7D     	 ldrb r3,[r7,#23]
 8603 0056 002B     	 cmp r3,#0
 8604 0058 16D1     	 bne .L415
2782:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2783:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Set transfer mode */
2784:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       XMC_SDMMC_SetDataTransferDirection(obj->sdmmc_sd->sdmmc, XMC_SDMMC_DATA_TRANSFER_CARD_TO_HOST
 8605              	 .loc 3 2784 0
 8606 005a 7B68     	 ldr r3,[r7,#4]
 8607 005c 1B68     	 ldr r3,[r3]
 8608 005e 1B68     	 ldr r3,[r3]
 8609 0060 1846     	 mov r0,r3
 8610 0062 0121     	 movs r1,#1
 8611 0064 FFF7FEFF 	 bl XMC_SDMMC_SetDataTransferDirection
2785:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2786:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Read the SD status from the data line */
2787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lSingleBlockTransfer(obj,
2788:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(59)),
 8612              	 .loc 3 2788 0
 8613 0068 1C23     	 movs r3,#28
2787:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    &(SDMMC_BLOCK_SD_COMMAND(59)),
 8614              	 .loc 3 2787 0
 8615 006a 5B00     	 lsls r3,r3,#1
 8616 006c 094A     	 ldr r2,.L417
 8617 006e 1A44     	 add r2,r2,r3
 8618 0070 3B68     	 ldr r3,[r7]
 8619 0072 0093     	 str r3,[sp]
 8620 0074 0123     	 movs r3,#1
 8621 0076 0193     	 str r3,[sp,#4]
 8622 0078 7868     	 ldr r0,[r7,#4]
 8623 007a 1146     	 mov r1,r2
 8624 007c 0022     	 movs r2,#0
 8625 007e 4023     	 movs r3,#64
 8626 0080 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSingleBlockTransfer
 8627 0084 0346     	 mov r3,r0
 8628 0086 FB75     	 strb r3,[r7,#23]
 8629              	.L415:
2789:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t)SDMMC_BLOCK_ARGUMENT0,
2790:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint16_t)64U,
2791:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    (uint32_t *)buf,
2792:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                    SDMMC_BLOCK_SD_DATA_TRANSFER_READ_BUFFER);
2793:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2794:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2795:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2796:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8630              	 .loc 3 2796 0
 8631 0088 FB7D     	 ldrb r3,[r7,#23]
2797:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8632              	 .loc 3 2797 0
 8633 008a 1846     	 mov r0,r3
 8634 008c 1837     	 adds r7,r7,#24
 8635              	.LCFI464:
 8636              	 .cfi_def_cfa_offset 8
 8637 008e BD46     	 mov sp,r7
 8638              	.LCFI465:
 8639              	 .cfi_def_cfa_register 13
 8640              	 
 8641 0090 80BD     	 pop {r7,pc}
 8642              	.L418:
 8643 0092 00BF     	 .align 2
 8644              	.L417:
 8645 0094 00000000 	 .word sdmmc_block_command
 8646              	 .cfi_endproc
 8647              	.LFE279:
 8649              	 .section .text.SDMMC_BLOCK_SD_EjectCard,"ax",%progbits
 8650              	 .align 2
 8651              	 .global SDMMC_BLOCK_SD_EjectCard
 8652              	 .thumb
 8653              	 .thumb_func
 8655              	SDMMC_BLOCK_SD_EjectCard:
 8656              	.LFB280:
2798:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2799:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Eject SD card */
2800:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_EjectCard(SDMMC_BLOCK_t *const obj)
2801:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8657              	 .loc 3 2801 0
 8658              	 .cfi_startproc
 8659              	 
 8660              	 
 8661 0000 80B5     	 push {r7,lr}
 8662              	.LCFI466:
 8663              	 .cfi_def_cfa_offset 8
 8664              	 .cfi_offset 7,-8
 8665              	 .cfi_offset 14,-4
 8666 0002 86B0     	 sub sp,sp,#24
 8667              	.LCFI467:
 8668              	 .cfi_def_cfa_offset 32
 8669 0004 02AF     	 add r7,sp,#8
 8670              	.LCFI468:
 8671              	 .cfi_def_cfa 7,24
 8672 0006 7860     	 str r0,[r7,#4]
2802:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_FAILURE;
 8673              	 .loc 3 2802 0
 8674 0008 0123     	 movs r3,#1
 8675 000a FB73     	 strb r3,[r7,#15]
2803:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint32_t arg = 0U;
 8676              	 .loc 3 2803 0
 8677 000c 0023     	 movs r3,#0
 8678 000e BB60     	 str r3,[r7,#8]
2804:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2805:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((obj->card_state & (uint16_t)SDMMC_BLOCK_CARD_STATE_NO_CARD) == 0U)
 8679              	 .loc 3 2805 0
 8680 0010 7B68     	 ldr r3,[r7,#4]
 8681 0012 1B7A     	 ldrb r3,[r3,#8]
 8682 0014 03F00203 	 and r3,r3,#2
 8683 0018 002B     	 cmp r3,#0
 8684 001a 20D1     	 bne .L420
2806:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2807:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Send CMD15 to deactivate the card */
2808:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     arg |= (uint32_t)((uint32_t)obj->sdmmc_sd->card_info.rca << (uint32_t)SDMMC_BLOCK_ARG_RCA_BITPO
 8685              	 .loc 3 2808 0
 8686 001c 7B68     	 ldr r3,[r7,#4]
 8687 001e 1B68     	 ldr r3,[r3]
 8688 0020 B3F84C30 	 ldrh r3,[r3,#76]
 8689 0024 1B04     	 lsls r3,r3,#16
 8690 0026 BA68     	 ldr r2,[r7,#8]
 8691 0028 1343     	 orrs r3,r3,r2
 8692 002a BB60     	 str r3,[r7,#8]
2809:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lSendCommand(obj,
2811:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(15)),
 8693              	 .loc 3 2811 0
 8694 002c 0B23     	 movs r3,#11
2810:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          &(SDMMC_BLOCK_SD_COMMAND(15)),
 8695              	 .loc 3 2810 0
 8696 002e 5B00     	 lsls r3,r3,#1
 8697 0030 0D4A     	 ldr r2,.L422
 8698 0032 1A44     	 add r2,r2,r3
 8699 0034 0023     	 movs r3,#0
 8700 0036 0093     	 str r3,[sp]
 8701 0038 7868     	 ldr r0,[r7,#4]
 8702 003a 1146     	 mov r1,r2
 8703 003c BA68     	 ldr r2,[r7,#8]
 8704 003e 0023     	 movs r3,#0
 8705 0040 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lSendCommand
 8706 0044 0346     	 mov r3,r0
 8707 0046 FB73     	 strb r3,[r7,#15]
2812:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          (uint32_t)arg,
2813:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          (XMC_SDMMC_RESPONSE_TYPE_t)XMC_SDMMC_RESPONSE_TYPE_NO_RESP
2814:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                          NULL);
2815:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2816:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8708              	 .loc 3 2816 0
 8709 0048 FB7B     	 ldrb r3,[r7,#15]
 8710 004a 002B     	 cmp r3,#0
 8711 004c 07D1     	 bne .L420
2817:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2818:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       /* Card Cleanup */
2819:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       SDMMC_BLOCK_SD_lCardCleanUp(obj);
 8712              	 .loc 3 2819 0
 8713 004e 7868     	 ldr r0,[r7,#4]
 8714 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardCleanUp
2820:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       obj->sdmmc_sd->mode_init_flag = false;
 8715              	 .loc 3 2820 0
 8716 0054 7B68     	 ldr r3,[r7,#4]
 8717 0056 1B68     	 ldr r3,[r3]
 8718 0058 0022     	 movs r2,#0
 8719 005a 83F85E20 	 strb r2,[r3,#94]
 8720              	.L420:
2821:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2822:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2823:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2824:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8721              	 .loc 3 2824 0
 8722 005e FB7B     	 ldrb r3,[r7,#15]
2825:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8723              	 .loc 3 2825 0
 8724 0060 1846     	 mov r0,r3
 8725 0062 1037     	 adds r7,r7,#16
 8726              	.LCFI469:
 8727              	 .cfi_def_cfa_offset 8
 8728 0064 BD46     	 mov sp,r7
 8729              	.LCFI470:
 8730              	 .cfi_def_cfa_register 13
 8731              	 
 8732 0066 80BD     	 pop {r7,pc}
 8733              	.L423:
 8734              	 .align 2
 8735              	.L422:
 8736 0068 00000000 	 .word sdmmc_block_command
 8737              	 .cfi_endproc
 8738              	.LFE280:
 8740              	 .section .text.SDMMC_BLOCK_SD_Start,"ax",%progbits
 8741              	 .align 2
 8742              	 .global SDMMC_BLOCK_SD_Start
 8743              	 .thumb
 8744              	 .thumb_func
 8746              	SDMMC_BLOCK_SD_Start:
 8747              	.LFB281:
2826:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2827:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /*
2828:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * Initialize low level drivers, host controller, the card
2829:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  * and read card registers.
2830:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****  */
2831:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_Start(SDMMC_BLOCK_t *const obj)
2832:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8748              	 .loc 3 2832 0
 8749              	 .cfi_startproc
 8750              	 
 8751              	 
 8752 0000 80B5     	 push {r7,lr}
 8753              	.LCFI471:
 8754              	 .cfi_def_cfa_offset 8
 8755              	 .cfi_offset 7,-8
 8756              	 .cfi_offset 14,-4
 8757 0002 84B0     	 sub sp,sp,#16
 8758              	.LCFI472:
 8759              	 .cfi_def_cfa_offset 24
 8760 0004 00AF     	 add r7,sp,#0
 8761              	.LCFI473:
 8762              	 .cfi_def_cfa_register 7
 8763 0006 7860     	 str r0,[r7,#4]
2833:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status = SDMMC_BLOCK_MODE_STATUS_HOST_CONTROLLER_INITIALIZED;
 8764              	 .loc 3 2833 0
 8765 0008 2C23     	 movs r3,#44
 8766 000a FB73     	 strb r3,[r7,#15]
2834:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2835:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check If host controller is already initialized */
2836:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if (((uint32_t)obj->card_state & (uint32_t)SDMMC_BLOCK_CARD_STATE_HC_INITIALIZED) == (uint32_t)0U
 8767              	 .loc 3 2836 0
 8768 000c 7B68     	 ldr r3,[r7,#4]
 8769 000e 1B7A     	 ldrb r3,[r3,#8]
 8770 0010 03F04003 	 and r3,r3,#64
 8771 0014 002B     	 cmp r3,#0
 8772 0016 1DD1     	 bne .L425
2837:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2838:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Enable Interrupt */
2839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_SetPriority(SDMMC0_0_IRQn,
 8773              	 .loc 3 2839 0
 8774 0018 FFF7FEFF 	 bl __NVIC_GetPriorityGrouping
 8775 001c 0146     	 mov r1,r0
2840:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
2841:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      obj->sdmmc_sd->int_priority,
 8776              	 .loc 3 2841 0
 8777 001e 7B68     	 ldr r3,[r7,#4]
 8778 0020 1B68     	 ldr r3,[r3]
2839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 8779              	 .loc 3 2839 0
 8780 0022 DA68     	 ldr r2,[r3,#12]
2842:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      obj->sdmmc_sd->int_sub_priority));
 8781              	 .loc 3 2842 0
 8782 0024 7B68     	 ldr r3,[r7,#4]
 8783 0026 1B68     	 ldr r3,[r3]
2839:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                      NVIC_EncodePriority(NVIC_GetPriorityGrouping(),
 8784              	 .loc 3 2839 0
 8785 0028 1B69     	 ldr r3,[r3,#16]
 8786 002a 0846     	 mov r0,r1
 8787 002c 1146     	 mov r1,r2
 8788 002e 1A46     	 mov r2,r3
 8789 0030 FFF7FEFF 	 bl NVIC_EncodePriority
 8790 0034 0346     	 mov r3,r0
 8791 0036 6A20     	 movs r0,#106
 8792 0038 1946     	 mov r1,r3
 8793 003a FFF7FEFF 	 bl __NVIC_SetPriority
2843:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2844:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_ClearPendingIRQ(SDMMC0_0_IRQn);
 8794              	 .loc 3 2844 0
 8795 003e 6A20     	 movs r0,#106
 8796 0040 FFF7FEFF 	 bl __NVIC_ClearPendingIRQ
2845:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     NVIC_EnableIRQ(SDMMC0_0_IRQn);
 8797              	 .loc 3 2845 0
 8798 0044 6A20     	 movs r0,#106
 8799 0046 FFF7FEFF 	 bl __NVIC_EnableIRQ
2846:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2847:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Host controller initialize */
2848:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     status = SDMMC_BLOCK_SD_lHostControllerInit(obj);
 8800              	 .loc 3 2848 0
 8801 004a 7868     	 ldr r0,[r7,#4]
 8802 004c FFF7FEFF 	 bl SDMMC_BLOCK_SD_lHostControllerInit
 8803 0050 0346     	 mov r3,r0
 8804 0052 FB73     	 strb r3,[r7,#15]
 8805              	.L425:
2849:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2850:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2851:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return status;
 8806              	 .loc 3 2851 0
 8807 0054 FB7B     	 ldrb r3,[r7,#15]
2852:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8808              	 .loc 3 2852 0
 8809 0056 1846     	 mov r0,r3
 8810 0058 1037     	 adds r7,r7,#16
 8811              	.LCFI474:
 8812              	 .cfi_def_cfa_offset 8
 8813 005a BD46     	 mov sp,r7
 8814              	.LCFI475:
 8815              	 .cfi_def_cfa_register 13
 8816              	 
 8817 005c 80BD     	 pop {r7,pc}
 8818              	 .cfi_endproc
 8819              	.LFE281:
 8821 005e 00BF     	 .section .text.SDMMC_BLOCK_SD_Init,"ax",%progbits
 8822              	 .align 2
 8823              	 .global SDMMC_BLOCK_SD_Init
 8824              	 .thumb
 8825              	 .thumb_func
 8827              	SDMMC_BLOCK_SD_Init:
 8828              	.LFB282:
2853:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2854:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* De-assert the SDMMC peripheral */
2855:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_MODE_STATUS_t SDMMC_BLOCK_SD_Init(SDMMC_BLOCK_t *const obj)
2856:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8829              	 .loc 3 2856 0
 8830              	 .cfi_startproc
 8831              	 
 8832              	 
 8833 0000 80B5     	 push {r7,lr}
 8834              	.LCFI476:
 8835              	 .cfi_def_cfa_offset 8
 8836              	 .cfi_offset 7,-8
 8837              	 .cfi_offset 14,-4
 8838 0002 82B0     	 sub sp,sp,#8
 8839              	.LCFI477:
 8840              	 .cfi_def_cfa_offset 16
 8841 0004 00AF     	 add r7,sp,#0
 8842              	.LCFI478:
 8843              	 .cfi_def_cfa_register 7
 8844 0006 7860     	 str r0,[r7,#4]
2857:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable SDMMC peripheral */
2858:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SDMMC_Enable(obj->sdmmc_sd->sdmmc);
 8845              	 .loc 3 2858 0
 8846 0008 7B68     	 ldr r3,[r7,#4]
 8847 000a 1B68     	 ldr r3,[r3]
 8848 000c 1B68     	 ldr r3,[r3]
 8849 000e 1846     	 mov r0,r3
 8850 0010 FFF7FEFF 	 bl XMC_SDMMC_Enable
2859:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2860:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Initialize System timer APP */
2861:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SYSTIMER_Init(obj->sdmmc_sd->systimer);
 8851              	 .loc 3 2861 0
 8852 0014 7B68     	 ldr r3,[r7,#4]
 8853 0016 1B68     	 ldr r3,[r3]
 8854 0018 9B6D     	 ldr r3,[r3,#88]
 8855 001a 1846     	 mov r0,r3
 8856 001c FFF7FEFF 	 bl SYSTIMER_Init
2862:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2863:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Enable SCU clock for SDMMC */
2864:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   XMC_SCU_CLOCK_EnableClock(XMC_SCU_CLOCK_MMC);
 8857              	 .loc 3 2864 0
 8858 0020 0220     	 movs r0,#2
 8859 0022 FFF7FEFF 	 bl XMC_SCU_CLOCK_EnableClock
2865:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2866:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* De-initialize host controller */
2867:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   (void)SDMMC_BLOCK_SD_lHostControllerDeInit(obj);
 8860              	 .loc 3 2867 0
 8861 0026 7868     	 ldr r0,[r7,#4]
 8862 0028 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lHostControllerDeInit
2868:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2869:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Initialize LLD and host controller */
2870:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return SDMMC_BLOCK_SD_Start(obj);
 8863              	 .loc 3 2870 0
 8864 002c 7868     	 ldr r0,[r7,#4]
 8865 002e FFF7FEFF 	 bl SDMMC_BLOCK_SD_Start
 8866 0032 0346     	 mov r3,r0
2871:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8867              	 .loc 3 2871 0
 8868 0034 1846     	 mov r0,r3
 8869 0036 0837     	 adds r7,r7,#8
 8870              	.LCFI479:
 8871              	 .cfi_def_cfa_offset 8
 8872 0038 BD46     	 mov sp,r7
 8873              	.LCFI480:
 8874              	 .cfi_def_cfa_register 13
 8875              	 
 8876 003a 80BD     	 pop {r7,pc}
 8877              	 .cfi_endproc
 8878              	.LFE282:
 8880              	 .section .text.SDMMC_BLOCK_SD_ReadBlock,"ax",%progbits
 8881              	 .align 2
 8882              	 .global SDMMC_BLOCK_SD_ReadBlock
 8883              	 .thumb
 8884              	 .thumb_func
 8886              	SDMMC_BLOCK_SD_ReadBlock:
 8887              	.LFB283:
2872:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2873:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Reads the data from the card */
2874:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SD_ReadBlock(SDMMC_BLOCK_t *const obj,
2875:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint8_t *read_buf,
2876:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint32_t sector_num,
2877:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                               uint8_t sector_count)
2878:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 8888              	 .loc 3 2878 0
 8889              	 .cfi_startproc
 8890              	 
 8891              	 
 8892 0000 80B5     	 push {r7,lr}
 8893              	.LCFI481:
 8894              	 .cfi_def_cfa_offset 8
 8895              	 .cfi_offset 7,-8
 8896              	 .cfi_offset 14,-4
 8897 0002 86B0     	 sub sp,sp,#24
 8898              	.LCFI482:
 8899              	 .cfi_def_cfa_offset 32
 8900 0004 00AF     	 add r7,sp,#0
 8901              	.LCFI483:
 8902              	 .cfi_def_cfa_register 7
 8903 0006 F860     	 str r0,[r7,#12]
 8904 0008 B960     	 str r1,[r7,#8]
 8905 000a 7A60     	 str r2,[r7,#4]
 8906 000c FB70     	 strb r3,[r7,#3]
2879:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2880:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t disk_status;
2881:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_STATUS_t res;
2882:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2883:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Check the status before reading data */
2884:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   disk_status = obj->card_state;
 8907              	 .loc 3 2884 0
 8908 000e FB68     	 ldr r3,[r7,#12]
 8909 0010 1B7A     	 ldrb r3,[r3,#8]
 8910 0012 7B75     	 strb r3,[r7,#21]
2885:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2886:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != (uint8_t)0U)
 8911              	 .loc 3 2886 0
 8912 0014 7B7D     	 ldrb r3,[r7,#21]
 8913 0016 03F00103 	 and r3,r3,#1
 8914 001a 002B     	 cmp r3,#0
 8915 001c 02D0     	 beq .L430
2887:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2888:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_NOTRDY;
 8916              	 .loc 3 2888 0
 8917 001e 0323     	 movs r3,#3
 8918 0020 BB75     	 strb r3,[r7,#22]
 8919 0022 28E0     	 b .L431
 8920              	.L430:
2889:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2890:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 8921              	 .loc 3 2890 0
 8922 0024 7B7D     	 ldrb r3,[r7,#21]
 8923 0026 03F00803 	 and r3,r3,#8
 8924 002a 002B     	 cmp r3,#0
 8925 002c 02D0     	 beq .L432
2891:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2892:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_LOCKED;
 8926              	 .loc 3 2892 0
 8927 002e 0523     	 movs r3,#5
 8928 0030 BB75     	 strb r3,[r7,#22]
 8929 0032 20E0     	 b .L431
 8930              	.L432:
2893:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2894:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2895:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2896:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check for single block read or multiple block read based on sector count */
2897:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (sector_count == (uint8_t)1U)
 8931              	 .loc 3 2897 0
 8932 0034 FB78     	 ldrb r3,[r7,#3]
 8933 0036 012B     	 cmp r3,#1
 8934 0038 07D1     	 bne .L433
2898:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2899:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardReadSingleBlock(obj, (uint32_t *)read_buf, sector_num);
 8935              	 .loc 3 2899 0
 8936 003a F868     	 ldr r0,[r7,#12]
 8937 003c B968     	 ldr r1,[r7,#8]
 8938 003e 7A68     	 ldr r2,[r7,#4]
 8939 0040 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardReadSingleBlock
 8940 0044 0346     	 mov r3,r0
 8941 0046 FB75     	 strb r3,[r7,#23]
 8942 0048 07E0     	 b .L434
 8943              	.L433:
2900:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2901:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2902:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2903:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardReadMultipleBlocks(obj, (uint32_t *)read_buf, sector_num, (uint3
 8944              	 .loc 3 2903 0
 8945 004a FB78     	 ldrb r3,[r7,#3]
 8946 004c F868     	 ldr r0,[r7,#12]
 8947 004e B968     	 ldr r1,[r7,#8]
 8948 0050 7A68     	 ldr r2,[r7,#4]
 8949 0052 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardReadMultipleBlocks
 8950 0056 0346     	 mov r3,r0
 8951 0058 FB75     	 strb r3,[r7,#23]
 8952              	.L434:
2904:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2905:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2906:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (status == SDMMC_BLOCK_MODE_STATUS_SUCCESS)
 8953              	 .loc 3 2906 0
 8954 005a FB7D     	 ldrb r3,[r7,#23]
 8955 005c 002B     	 cmp r3,#0
 8956 005e 02D1     	 bne .L435
2907:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2908:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_SUCCESS;
 8957              	 .loc 3 2908 0
 8958 0060 0023     	 movs r3,#0
 8959 0062 BB75     	 strb r3,[r7,#22]
 8960 0064 07E0     	 b .L431
 8961              	.L435:
2909:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2910:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (status == SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND)
 8962              	 .loc 3 2910 0
 8963 0066 FB7D     	 ldrb r3,[r7,#23]
 8964 0068 332B     	 cmp r3,#51
 8965 006a 02D1     	 bne .L436
2911:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2912:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_PARERR;
 8966              	 .loc 3 2912 0
 8967 006c 0423     	 movs r3,#4
 8968 006e BB75     	 strb r3,[r7,#22]
 8969 0070 01E0     	 b .L431
 8970              	.L436:
2913:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2914:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2915:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2916:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_FAILURE;
 8971              	 .loc 3 2916 0
 8972 0072 0123     	 movs r3,#1
 8973 0074 BB75     	 strb r3,[r7,#22]
 8974              	.L431:
2917:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2918:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2919:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2920:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2921:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 8975              	 .loc 3 2921 0
 8976 0076 00BF     	 nop
 8977              	.L437:
 8978              	 .loc 3 2921 0 is_stmt 0 discriminator 3
 8979 0078 FB68     	 ldr r3,[r7,#12]
 8980 007a 1B68     	 ldr r3,[r3]
 8981 007c 1B68     	 ldr r3,[r3]
 8982 007e 1846     	 mov r0,r3
 8983 0080 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 8984 0084 0346     	 mov r3,r0
 8985 0086 002B     	 cmp r3,#0
 8986 0088 F6D1     	 bne .L437
 8987              	 .loc 3 2921 0 discriminator 2
 8988 008a FB68     	 ldr r3,[r7,#12]
 8989 008c 1B68     	 ldr r3,[r3]
 8990 008e 1B68     	 ldr r3,[r3]
 8991 0090 1846     	 mov r0,r3
 8992 0092 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 8993 0096 0346     	 mov r3,r0
 8994 0098 002B     	 cmp r3,#0
 8995 009a EDD1     	 bne .L437
2922:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2923:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2924:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2925:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return res;
 8996              	 .loc 3 2925 0 is_stmt 1
 8997 009c BB7D     	 ldrb r3,[r7,#22]
2926:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 8998              	 .loc 3 2926 0
 8999 009e 1846     	 mov r0,r3
 9000 00a0 1837     	 adds r7,r7,#24
 9001              	.LCFI484:
 9002              	 .cfi_def_cfa_offset 8
 9003 00a2 BD46     	 mov sp,r7
 9004              	.LCFI485:
 9005              	 .cfi_def_cfa_register 13
 9006              	 
 9007 00a4 80BD     	 pop {r7,pc}
 9008              	 .cfi_endproc
 9009              	.LFE283:
 9011 00a6 00BF     	 .section .text.SDMMC_BLOCK_SD_WriteBlock,"ax",%progbits
 9012              	 .align 2
 9013              	 .global SDMMC_BLOCK_SD_WriteBlock
 9014              	 .thumb
 9015              	 .thumb_func
 9017              	SDMMC_BLOCK_SD_WriteBlock:
 9018              	.LFB284:
2927:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2928:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** /* Writes the data on the card */
2929:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** SDMMC_BLOCK_STATUS_t SDMMC_BLOCK_SD_WriteBlock(SDMMC_BLOCK_t *const obj,
2930:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                const uint8_t *write_buf,
2931:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                uint32_t sector_num,
2932:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                uint8_t sector_count)
2933:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** {
 9019              	 .loc 3 2933 0
 9020              	 .cfi_startproc
 9021              	 
 9022              	 
 9023 0000 80B5     	 push {r7,lr}
 9024              	.LCFI486:
 9025              	 .cfi_def_cfa_offset 8
 9026              	 .cfi_offset 7,-8
 9027              	 .cfi_offset 14,-4
 9028 0002 86B0     	 sub sp,sp,#24
 9029              	.LCFI487:
 9030              	 .cfi_def_cfa_offset 32
 9031 0004 00AF     	 add r7,sp,#0
 9032              	.LCFI488:
 9033              	 .cfi_def_cfa_register 7
 9034 0006 F860     	 str r0,[r7,#12]
 9035 0008 B960     	 str r1,[r7,#8]
 9036 000a 7A60     	 str r2,[r7,#4]
 9037 000c FB70     	 strb r3,[r7,#3]
2934:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_MODE_STATUS_t status;
2935:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   uint8_t disk_status;
2936:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   SDMMC_BLOCK_STATUS_t res;
2937:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2938:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Get card state */
2939:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   disk_status = obj->card_state;
 9038              	 .loc 3 2939 0
 9039 000e FB68     	 ldr r3,[r7,#12]
 9040 0010 1B7A     	 ldrb r3,[r3,#8]
 9041 0012 7B75     	 strb r3,[r7,#21]
2940:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2941:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is not initialized */
2942:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_NOT_INITIALIZED) != (uint8_t)0U)
 9042              	 .loc 3 2942 0
 9043 0014 7B7D     	 ldrb r3,[r7,#21]
 9044 0016 03F00103 	 and r3,r3,#1
 9045 001a 002B     	 cmp r3,#0
 9046 001c 02D0     	 beq .L440
2943:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2944:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_NOTRDY;
 9047              	 .loc 3 2944 0
 9048 001e 0323     	 movs r3,#3
 9049 0020 BB75     	 strb r3,[r7,#22]
 9050 0022 33E0     	 b .L441
 9051              	.L440:
2945:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2946:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_LOCKED) != (uint8_t)0U)
 9052              	 .loc 3 2946 0
 9053 0024 7B7D     	 ldrb r3,[r7,#21]
 9054 0026 03F00803 	 and r3,r3,#8
 9055 002a 002B     	 cmp r3,#0
 9056 002c 02D0     	 beq .L442
2947:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2948:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_LOCKED;
 9057              	 .loc 3 2948 0
 9058 002e 0523     	 movs r3,#5
 9059 0030 BB75     	 strb r3,[r7,#22]
 9060 0032 2BE0     	 b .L441
 9061              	.L442:
2949:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2950:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* If the card is read only or write protected */
2951:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((disk_status & (uint8_t)SDMMC_BLOCK_CARD_STATE_WRITE_PROTECTED) != (uint8_t)0U)
 9062              	 .loc 3 2951 0
 9063 0034 7B7D     	 ldrb r3,[r7,#21]
 9064 0036 03F00403 	 and r3,r3,#4
 9065 003a 002B     	 cmp r3,#0
 9066 003c 02D0     	 beq .L443
2952:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2953:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_WRPRT;
 9067              	 .loc 3 2953 0
 9068 003e 0223     	 movs r3,#2
 9069 0040 BB75     	 strb r3,[r7,#22]
 9070 0042 23E0     	 b .L441
 9071              	.L443:
2954:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2955:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #ifdef SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL
2956:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else if ((obj->sdwc != NULL) && (XMC_GPIO_GetInput(obj->sdwc->port, obj->sdwc->pin)))
2957:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2958:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     res = SDMMC_BLOCK_STATUS_WRPRT;
2959:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2960:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** #endif /* SDMMC_BLOCK_CARD_WRITE_PROTECT_SIGNAL */
2961:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   else
2962:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2963:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     /* Check for single block write or multiple block write */
2964:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if (sector_count == (uint8_t)1U)
 9072              	 .loc 3 2964 0
 9073 0044 FB78     	 ldrb r3,[r7,#3]
 9074 0046 012B     	 cmp r3,#1
 9075 0048 07D1     	 bne .L444
2965:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2966:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardWriteSingleBlock(obj, (const uint32_t *)write_buf, sector_num);
 9076              	 .loc 3 2966 0
 9077 004a F868     	 ldr r0,[r7,#12]
 9078 004c B968     	 ldr r1,[r7,#8]
 9079 004e 7A68     	 ldr r2,[r7,#4]
 9080 0050 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardWriteSingleBlock
 9081 0054 0346     	 mov r3,r0
 9082 0056 FB75     	 strb r3,[r7,#23]
 9083 0058 07E0     	 b .L445
 9084              	.L444:
2967:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2968:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2969:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2970:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       status = SDMMC_BLOCK_SD_lCardWriteMultipleBlocks(obj,
 9085              	 .loc 3 2970 0
 9086 005a FB78     	 ldrb r3,[r7,#3]
 9087 005c F868     	 ldr r0,[r7,#12]
 9088 005e B968     	 ldr r1,[r7,#8]
 9089 0060 7A68     	 ldr r2,[r7,#4]
 9090 0062 FFF7FEFF 	 bl SDMMC_BLOCK_SD_lCardWriteMultipleBlocks
 9091 0066 0346     	 mov r3,r0
 9092 0068 FB75     	 strb r3,[r7,#23]
 9093              	.L445:
2971:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        (const uint32_t *)write_buf,
2972:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        sector_num,
2973:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****                                                        (uint32_t)sector_count);
2974:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2975:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2976:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     if ((status == SDMMC_BLOCK_MODE_STATUS_SUCCESS) || (status == SDMMC_BLOCK_MODE_STATUS_BUFFER_RE
 9094              	 .loc 3 2976 0
 9095 006a FB7D     	 ldrb r3,[r7,#23]
 9096 006c 002B     	 cmp r3,#0
 9097 006e 02D0     	 beq .L446
 9098              	 .loc 3 2976 0 is_stmt 0 discriminator 1
 9099 0070 FB7D     	 ldrb r3,[r7,#23]
 9100 0072 1E2B     	 cmp r3,#30
 9101 0074 02D1     	 bne .L447
 9102              	.L446:
2977:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2978:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_SUCCESS;
 9103              	 .loc 3 2978 0 is_stmt 1
 9104 0076 0023     	 movs r3,#0
 9105 0078 BB75     	 strb r3,[r7,#22]
 9106 007a 07E0     	 b .L441
 9107              	.L447:
2979:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2980:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else if (status == SDMMC_BLOCK_MODE_STATUS_SECTOR_OUT_OF_BOUND)
 9108              	 .loc 3 2980 0
 9109 007c FB7D     	 ldrb r3,[r7,#23]
 9110 007e 332B     	 cmp r3,#51
 9111 0080 02D1     	 bne .L448
2981:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2982:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_PARERR;
 9112              	 .loc 3 2982 0
 9113 0082 0423     	 movs r3,#4
 9114 0084 BB75     	 strb r3,[r7,#22]
 9115 0086 01E0     	 b .L441
 9116              	.L448:
2983:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2984:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     else
2985:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     {
2986:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****       res = SDMMC_BLOCK_STATUS_FAILURE;
 9117              	 .loc 3 2986 0
 9118 0088 0123     	 movs r3,#1
 9119 008a BB75     	 strb r3,[r7,#22]
 9120              	.L441:
2987:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****     }
2988:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2989:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2990:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   /* Wait for until the command OR data lines aren't busy */
2991:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   while ((XMC_SDMMC_IsDataLineBusy(obj->sdmmc_sd->sdmmc)) || (XMC_SDMMC_IsCommandLineBusy(obj->sdmm
 9121              	 .loc 3 2991 0
 9122 008c 00BF     	 nop
 9123              	.L449:
 9124              	 .loc 3 2991 0 is_stmt 0 discriminator 3
 9125 008e FB68     	 ldr r3,[r7,#12]
 9126 0090 1B68     	 ldr r3,[r3]
 9127 0092 1B68     	 ldr r3,[r3]
 9128 0094 1846     	 mov r0,r3
 9129 0096 FFF7FEFF 	 bl XMC_SDMMC_IsDataLineBusy
 9130 009a 0346     	 mov r3,r0
 9131 009c 002B     	 cmp r3,#0
 9132 009e F6D1     	 bne .L449
 9133              	 .loc 3 2991 0 discriminator 2
 9134 00a0 FB68     	 ldr r3,[r7,#12]
 9135 00a2 1B68     	 ldr r3,[r3]
 9136 00a4 1B68     	 ldr r3,[r3]
 9137 00a6 1846     	 mov r0,r3
 9138 00a8 FFF7FEFF 	 bl XMC_SDMMC_IsCommandLineBusy
 9139 00ac 0346     	 mov r3,r0
 9140 00ae 002B     	 cmp r3,#0
 9141 00b0 EDD1     	 bne .L449
2992:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   {
2993:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   }
2994:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** 
2995:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c ****   return res;
 9142              	 .loc 3 2995 0 is_stmt 1
 9143 00b2 BB7D     	 ldrb r3,[r7,#22]
2996:../Dave/Generated/SDMMC_BLOCK/sdmmc_block_private_sd.c **** }
 9144              	 .loc 3 2996 0
 9145 00b4 1846     	 mov r0,r3
 9146 00b6 1837     	 adds r7,r7,#24
 9147              	.LCFI489:
 9148              	 .cfi_def_cfa_offset 8
 9149 00b8 BD46     	 mov sp,r7
 9150              	.LCFI490:
 9151              	 .cfi_def_cfa_register 13
 9152              	 
 9153 00ba 80BD     	 pop {r7,pc}
 9154              	 .cfi_endproc
 9155              	.LFE284:
 9157              	 .text
 9158              	.Letext0:
 9159              	 .file 4 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 9160              	 .file 5 "c:\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 9161              	 .file 6 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/XMC4500.h"
 9162              	 .file 7 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/XMCLib/inc/xmc4_scu.h"
 9163              	 .file 8 "c:\\users\\erhan\\desktop\\smartlogger\\design\\firmware\\xmc4500\\smart_logger\\smart_logger\\dave\\generated\\systimer\\systimer.h"
 9164              	 .file 9 "../Dave/Generated/SDMMC_BLOCK/sdmmc_block.h"
 9165              	 .file 10 "C:/Users/erhan/Desktop/smartlogger/design/firmware/xmc4500/smart_logger/smart_logger/Libraries/CMSIS/Infineon/XMC4500_series/Include/system_XMC4500.h"
DEFINED SYMBOLS
                            *ABS*:00000000 sdmmc_block_private_sd.c
    {standard input}:20     .text.__NVIC_GetPriorityGrouping:00000000 $t
    {standard input}:24     .text.__NVIC_GetPriorityGrouping:00000000 __NVIC_GetPriorityGrouping
    {standard input}:58     .text.__NVIC_GetPriorityGrouping:00000018 $d
    {standard input}:63     .text.__NVIC_EnableIRQ:00000000 $t
    {standard input}:67     .text.__NVIC_EnableIRQ:00000000 __NVIC_EnableIRQ
    {standard input}:116    .text.__NVIC_EnableIRQ:00000034 $d
    {standard input}:121    .text.__NVIC_ClearPendingIRQ:00000000 $t
    {standard input}:125    .text.__NVIC_ClearPendingIRQ:00000000 __NVIC_ClearPendingIRQ
    {standard input}:175    .text.__NVIC_ClearPendingIRQ:00000038 $d
    {standard input}:180    .text.__NVIC_SetPriority:00000000 $t
    {standard input}:184    .text.__NVIC_SetPriority:00000000 __NVIC_SetPriority
    {standard input}:247    .text.__NVIC_SetPriority:0000004c $d
    {standard input}:253    .text.NVIC_EncodePriority:00000000 $t
    {standard input}:257    .text.NVIC_EncodePriority:00000000 NVIC_EncodePriority
    {standard input}:339    .text.XMC_SDMMC_IsAnyErrorEvent:00000000 $t
    {standard input}:343    .text.XMC_SDMMC_IsAnyErrorEvent:00000000 XMC_SDMMC_IsAnyErrorEvent
    {standard input}:389    .text.XMC_SDMMC_GetACMDErrStatus:00000000 $t
    {standard input}:393    .text.XMC_SDMMC_GetACMDErrStatus:00000000 XMC_SDMMC_GetACMDErrStatus
    {standard input}:443    .text.XMC_SDMMC_ReadFIFO:00000000 $t
    {standard input}:447    .text.XMC_SDMMC_ReadFIFO:00000000 XMC_SDMMC_ReadFIFO
    {standard input}:486    .text.XMC_SDMMC_WriteFIFO:00000000 $t
    {standard input}:490    .text.XMC_SDMMC_WriteFIFO:00000000 XMC_SDMMC_WriteFIFO
    {standard input}:531    .text.XMC_SDMMC_BusPowerOn:00000000 $t
    {standard input}:535    .text.XMC_SDMMC_BusPowerOn:00000000 XMC_SDMMC_BusPowerOn
    {standard input}:578    .text.XMC_SDMMC_Start:00000000 $t
    {standard input}:582    .text.XMC_SDMMC_Start:00000000 XMC_SDMMC_Start
    {standard input}:625    .text.XMC_SDMMC_GetClockStability:00000000 $t
    {standard input}:629    .text.XMC_SDMMC_GetClockStability:00000000 XMC_SDMMC_GetClockStability
    {standard input}:675    .text.XMC_SDMMC_Stop:00000000 $t
    {standard input}:679    .text.XMC_SDMMC_Stop:00000000 XMC_SDMMC_Stop
    {standard input}:722    .text.XMC_SDMMC_SDClockEnable:00000000 $t
    {standard input}:726    .text.XMC_SDMMC_SDClockEnable:00000000 XMC_SDMMC_SDClockEnable
    {standard input}:769    .text.XMC_SDMMC_SDClockDisable:00000000 $t
    {standard input}:773    .text.XMC_SDMMC_SDClockDisable:00000000 XMC_SDMMC_SDClockDisable
    {standard input}:816    .text.XMC_SDMMC_SetSWReset:00000000 $t
    {standard input}:820    .text.XMC_SDMMC_SetSWReset:00000000 XMC_SDMMC_SetSWReset
    {standard input}:866    .text.XMC_SDMMC_GetSWResetStatus:00000000 $t
    {standard input}:870    .text.XMC_SDMMC_GetSWResetStatus:00000000 XMC_SDMMC_GetSWResetStatus
    {standard input}:910    .text.XMC_SDMMC_IsCommandLineBusy:00000000 $t
    {standard input}:914    .text.XMC_SDMMC_IsCommandLineBusy:00000000 XMC_SDMMC_IsCommandLineBusy
    {standard input}:959    .text.XMC_SDMMC_IsDataLineBusy:00000000 $t
    {standard input}:963    .text.XMC_SDMMC_IsDataLineBusy:00000000 XMC_SDMMC_IsDataLineBusy
    {standard input}:1008   .text.XMC_SDMMC_IsAllDataLinesHigh:00000000 $t
    {standard input}:1012   .text.XMC_SDMMC_IsAllDataLinesHigh:00000000 XMC_SDMMC_IsAllDataLinesHigh
    {standard input}:1058   .text.XMC_SDMMC_SDClockFreqSelect:00000000 $t
    {standard input}:1062   .text.XMC_SDMMC_SDClockFreqSelect:00000000 XMC_SDMMC_SDClockFreqSelect
    {standard input}:1113   .text.XMC_SDMMC_SetBusVoltage:00000000 $t
    {standard input}:1117   .text.XMC_SDMMC_SetBusVoltage:00000000 XMC_SDMMC_SetBusVoltage
    {standard input}:1167   .text.XMC_SDMMC_SetDataLineTimeout:00000000 $t
    {standard input}:1171   .text.XMC_SDMMC_SetDataLineTimeout:00000000 XMC_SDMMC_SetDataLineTimeout
    {standard input}:1219   .text.XMC_SDMMC_SetDataTransferWidth:00000000 $t
    {standard input}:1223   .text.XMC_SDMMC_SetDataTransferWidth:00000000 XMC_SDMMC_SetDataTransferWidth
    {standard input}:1277   .text.XMC_SDMMC_SetDataTransferDirection:00000000 $t
    {standard input}:1281   .text.XMC_SDMMC_SetDataTransferDirection:00000000 XMC_SDMMC_SetDataTransferDirection
    {standard input}:1337   .text.XMC_SDMMC_EnableHighSpeed:00000000 $t
    {standard input}:1341   .text.XMC_SDMMC_EnableHighSpeed:00000000 XMC_SDMMC_EnableHighSpeed
    {standard input}:1384   .text.XMC_SDMMC_DisableHighSpeed:00000000 $t
    {standard input}:1388   .text.XMC_SDMMC_DisableHighSpeed:00000000 XMC_SDMMC_DisableHighSpeed
    {standard input}:1435   .rodata.sdmmc_block_command:00000000 sdmmc_block_command
    {standard input}:1432   .rodata.sdmmc_block_command:00000000 $d
    {standard input}:1521   .rodata.sdmmc_block_sd_hash_table:00000000 sdmmc_block_sd_hash_table
    {standard input}:1518   .rodata.sdmmc_block_sd_hash_table:00000000 $d
    {standard input}:1588   .text.SDMMC_BLOCK_SD_lReset:00000000 $t
    {standard input}:1592   .text.SDMMC_BLOCK_SD_lReset:00000000 SDMMC_BLOCK_SD_lReset
    {standard input}:6302   .text.SDMMC_BLOCK_SD_lStartTimer:00000000 SDMMC_BLOCK_SD_lStartTimer
    {standard input}:6401   .text.SDMMC_BLOCK_SD_lStopTimer:00000000 SDMMC_BLOCK_SD_lStopTimer
    {standard input}:1685   .text.SDMMC_BLOCK_SD_lReset:0000007c $d
    {standard input}:1690   .text.SDMMC_BLOCK_SD_lCardCleanUp:00000000 $t
    {standard input}:1694   .text.SDMMC_BLOCK_SD_lCardCleanUp:00000000 SDMMC_BLOCK_SD_lCardCleanUp
    {standard input}:1772   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:00000000 $t
    {standard input}:1776   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:00000000 SDMMC_BLOCK_SD_lCheckDataCommandLines
    {standard input}:1959   .text.SDMMC_BLOCK_SD_lCheckDataCommandLines:0000011c $d
    {standard input}:1964   .text.SDMMC_BLOCK_SD_lCheckArgumentError:00000000 $t
    {standard input}:1968   .text.SDMMC_BLOCK_SD_lCheckArgumentError:00000000 SDMMC_BLOCK_SD_lCheckArgumentError
    {standard input}:2047   .text.SDMMC_BLOCK_SD_lCheckEraseError:00000000 $t
    {standard input}:2051   .text.SDMMC_BLOCK_SD_lCheckEraseError:00000000 SDMMC_BLOCK_SD_lCheckEraseError
    {standard input}:2120   .text.SDMMC_BLOCK_SD_lCheckCardError:00000000 $t
    {standard input}:2124   .text.SDMMC_BLOCK_SD_lCheckCardError:00000000 SDMMC_BLOCK_SD_lCheckCardError
    {standard input}:2193   .text.SDMMC_BLOCK_SD_lCheckErrorInResponse:00000000 $t
    {standard input}:2197   .text.SDMMC_BLOCK_SD_lCheckErrorInResponse:00000000 SDMMC_BLOCK_SD_lCheckErrorInResponse
    {standard input}:2290   .text.SDMMC_BLOCK_SD_lGetCardLockState:00000000 $t
    {standard input}:2294   .text.SDMMC_BLOCK_SD_lGetCardLockState:00000000 SDMMC_BLOCK_SD_lGetCardLockState
    {standard input}:2358   .text.SDMMC_BLOCK_SD_lTransferDelay:00000000 $t
    {standard input}:2362   .text.SDMMC_BLOCK_SD_lTransferDelay:00000000 SDMMC_BLOCK_SD_lTransferDelay
    {standard input}:2473   .text.SDMMC_BLOCK_SD_lReadResponse:00000000 $t
    {standard input}:2477   .text.SDMMC_BLOCK_SD_lReadResponse:00000000 SDMMC_BLOCK_SD_lReadResponse
    {standard input}:2560   .text.SDMMC_BLOCK_SD_lReadResponse:00000078 $d
    {standard input}:2567   .text.SDMMC_BLOCK_SD_lReadResponse:00000094 $t
    {standard input}:2719   .text.SDMMC_BLOCK_SD_lReadResponse:00000180 $d
    {standard input}:2725   .text.SDMMC_BLOCK_SD_lSendCommand:00000000 $t
    {standard input}:2729   .text.SDMMC_BLOCK_SD_lSendCommand:00000000 SDMMC_BLOCK_SD_lSendCommand
    {standard input}:4852   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000000 SDMMC_BLOCK_SD_lErrorInterruptRecovery
    {standard input}:2901   .text.SDMMC_BLOCK_SD_lSendCommand:00000104 $d
    {standard input}:2906   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:00000000 $t
    {standard input}:2910   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:00000000 SDMMC_BLOCK_SD_lSetVoltageWindow
    {standard input}:6040   .text.SDMMC_BLOCK_SD_lDelay:00000000 SDMMC_BLOCK_SD_lDelay
    {standard input}:3047   .text.SDMMC_BLOCK_SD_lSetVoltageWindow:000000b4 $d
    {standard input}:3053   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000000 $t
    {standard input}:3057   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000000 SDMMC_BLOCK_SD_lQueryOperatingCondition
    {standard input}:3156   .text.SDMMC_BLOCK_SD_lQueryOperatingCondition:00000084 $d
    {standard input}:3161   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000000 $t
    {standard input}:3165   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000000 SDMMC_BLOCK_SD_lQueryVoltage
    {standard input}:3564   .text.SDMMC_BLOCK_SD_lWriteCardType:00000000 SDMMC_BLOCK_SD_lWriteCardType
    {standard input}:3274   .text.SDMMC_BLOCK_SD_lQueryVoltage:00000090 $d
    {standard input}:3279   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:00000000 $t
    {standard input}:3283   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:00000000 SDMMC_BLOCK_SD_lAfterCardInitialize
    {standard input}:3783   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000000 SDMMC_BLOCK_SD_lReadCardRegisters
    {standard input}:4493   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:00000000 SDMMC_BLOCK_SD_lSwitchBusWidth
    {standard input}:4624   .text.SDMMC_BLOCK_SD_lSwitchSpeed:00000000 SDMMC_BLOCK_SD_lSwitchSpeed
    {standard input}:3393   .text.SDMMC_BLOCK_SD_lAfterCardInitialize:0000009c $d
    {standard input}:3398   .text.SDMMC_BLOCK_SD_lInitializeCard:00000000 $t
    {standard input}:3402   .text.SDMMC_BLOCK_SD_lInitializeCard:00000000 SDMMC_BLOCK_SD_lInitializeCard
    {standard input}:3722   .text.SDMMC_BLOCK_SD_lReadRca:00000000 SDMMC_BLOCK_SD_lReadRca
    {standard input}:7789   .text.SDMMC_BLOCK_SD_GetLockStatus:00000000 SDMMC_BLOCK_SD_GetLockStatus
    {standard input}:3555   .text.SDMMC_BLOCK_SD_lInitializeCard:000000dc $d
    {standard input}:3560   .text.SDMMC_BLOCK_SD_lWriteCardType:00000000 $t
    {standard input}:3638   .text.SDMMC_BLOCK_SD_lGetWriteProtect:00000000 $t
    {standard input}:3642   .text.SDMMC_BLOCK_SD_lGetWriteProtect:00000000 SDMMC_BLOCK_SD_lGetWriteProtect
    {standard input}:8541   .text.SDMMC_BLOCK_SD_GetSdStatus:00000000 SDMMC_BLOCK_SD_GetSdStatus
    {standard input}:3718   .text.SDMMC_BLOCK_SD_lReadRca:00000000 $t
    {standard input}:3774   .text.SDMMC_BLOCK_SD_lReadRca:00000034 $d
    {standard input}:3779   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000000 $t
    {standard input}:5558   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000000 SDMMC_BLOCK_SD_lSwitchToTransferState
    {standard input}:4264   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:00000000 SDMMC_BLOCK_SD_lSingleBlockTransfer
    {standard input}:3967   .text.SDMMC_BLOCK_SD_lReadCardRegisters:00000128 $d
    {standard input}:3972   .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:00000000 $t
    {standard input}:3976   .text.SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer:00000000 SDMMC_BLOCK_SD_lConfigureSingleBlockTransfer
    {standard input}:4046   .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:00000000 $t
    {standard input}:4050   .text.SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer:00000000 SDMMC_BLOCK_SD_lConfigureMultiBlockTransfer
    {standard input}:4141   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000000 $t
    {standard input}:4145   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000000 SDMMC_BLOCK_SD_lMultiBlockTransfer
    {standard input}:5663   .text.SDMMC_BLOCK_SD_lDataTransfer:00000000 SDMMC_BLOCK_SD_lDataTransfer
    {standard input}:5829   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:00000000 SDMMC_BLOCK_SD_lAcmdErrorRecovery
    {standard input}:4255   .text.SDMMC_BLOCK_SD_lMultiBlockTransfer:00000090 $d
    {standard input}:4260   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:00000000 $t
    {standard input}:4403   .text.SDMMC_BLOCK_SD_lSingleBlockTransfer:000000cc $d
    {standard input}:4408   .text.SDMMC_BLOCK_SD_lCheckLockStatus:00000000 $t
    {standard input}:4412   .text.SDMMC_BLOCK_SD_lCheckLockStatus:00000000 SDMMC_BLOCK_SD_lCheckLockStatus
    {standard input}:4489   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:00000000 $t
    {standard input}:4615   .text.SDMMC_BLOCK_SD_lSwitchBusWidth:000000b8 $d
    {standard input}:4620   .text.SDMMC_BLOCK_SD_lSwitchSpeed:00000000 $t
    {standard input}:4724   .text.SDMMC_BLOCK_SD_lSwitchSpeed:000000a0 $d
    {standard input}:4730   .text.SDMMC_BLOCK_SD_lCommandDelay:00000000 $t
    {standard input}:4734   .text.SDMMC_BLOCK_SD_lCommandDelay:00000000 SDMMC_BLOCK_SD_lCommandDelay
    {standard input}:4848   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000000 $t
    {standard input}:5100   .text.SDMMC_BLOCK_SD_lErrorInterruptRecovery:00000194 $d
    {standard input}:5108   .text.SDMMC_BLOCK_SD_NormalInterruptHandler:00000000 $t
    {standard input}:5113   .text.SDMMC_BLOCK_SD_NormalInterruptHandler:00000000 SDMMC_BLOCK_SD_NormalInterruptHandler
    {standard input}:5258   .text.SDMMC_BLOCK_SD_ErrorInterruptHandler:00000000 $t
    {standard input}:5263   .text.SDMMC_BLOCK_SD_ErrorInterruptHandler:00000000 SDMMC_BLOCK_SD_ErrorInterruptHandler
    {standard input}:5554   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000000 $t
    {standard input}:5654   .text.SDMMC_BLOCK_SD_lSwitchToTransferState:00000084 $d
    {standard input}:5659   .text.SDMMC_BLOCK_SD_lDataTransfer:00000000 $t
    {standard input}:5820   .text.SDMMC_BLOCK_SD_lDataTransfer:000000dc $d
    {standard input}:5825   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:00000000 $t
    {standard input}:5977   .text.SDMMC_BLOCK_SD_lAcmdErrorRecovery:000000e0 $d
    {standard input}:5982   .text.SDMMC_BLOCK_SD_TimerCallback:00000000 $t
    {standard input}:5986   .text.SDMMC_BLOCK_SD_TimerCallback:00000000 SDMMC_BLOCK_SD_TimerCallback
    {standard input}:6036   .text.SDMMC_BLOCK_SD_lDelay:00000000 $t
    {standard input}:6148   .text.SDMMC_BLOCK_SD_lDelay:0000008c $d
    {standard input}:6153   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:00000000 $t
    {standard input}:6158   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:00000000 SDMMC_BLOCK_SD_CardIdentificationProcess
    {standard input}:6293   .text.SDMMC_BLOCK_SD_CardIdentificationProcess:000000cc $d
    {standard input}:6298   .text.SDMMC_BLOCK_SD_lStartTimer:00000000 $t
    {standard input}:6392   .text.SDMMC_BLOCK_SD_lStartTimer:00000070 $d
    {standard input}:6397   .text.SDMMC_BLOCK_SD_lStopTimer:00000000 $t
    {standard input}:6461   .text.SDMMC_BLOCK_SD_lCheckSectorBound:00000000 $t
    {standard input}:6465   .text.SDMMC_BLOCK_SD_lCheckSectorBound:00000000 SDMMC_BLOCK_SD_lCheckSectorBound
    {standard input}:8233   .text.SDMMC_BLOCK_SD_GetSectorCount:00000000 SDMMC_BLOCK_SD_GetSectorCount
    {standard input}:6526   .text.SDMMC_BLOCK_SD_lLocalErase:00000000 $t
    {standard input}:6530   .text.SDMMC_BLOCK_SD_lLocalErase:00000000 SDMMC_BLOCK_SD_lLocalErase
    {standard input}:6703   .text.SDMMC_BLOCK_SD_lLocalErase:0000010c $d
    {standard input}:6709   .text.SDMMC_BLOCK_SD_lHostControllerInit:00000000 $t
    {standard input}:6713   .text.SDMMC_BLOCK_SD_lHostControllerInit:00000000 SDMMC_BLOCK_SD_lHostControllerInit
    {standard input}:6847   .text.SDMMC_BLOCK_SD_lHostControllerInit:000000c4 $d
    {standard input}:6852   .text.SDMMC_BLOCK_SD_lHostControllerDeInit:00000000 $t
    {standard input}:6856   .text.SDMMC_BLOCK_SD_lHostControllerDeInit:00000000 SDMMC_BLOCK_SD_lHostControllerDeInit
    {standard input}:6909   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000000 $t
    {standard input}:6913   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000000 SDMMC_BLOCK_SD_lCardReadMultipleBlocks
    {standard input}:7012   .text.SDMMC_BLOCK_SD_lCardReadMultipleBlocks:00000088 $d
    {standard input}:7017   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000000 $t
    {standard input}:7021   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000000 SDMMC_BLOCK_SD_lCardReadSingleBlock
    {standard input}:7115   .text.SDMMC_BLOCK_SD_lCardReadSingleBlock:00000080 $d
    {standard input}:7120   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000000 $t
    {standard input}:7124   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000000 SDMMC_BLOCK_SD_lCardWriteMultipleBlocks
    {standard input}:7223   .text.SDMMC_BLOCK_SD_lCardWriteMultipleBlocks:00000088 $d
    {standard input}:7228   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000000 $t
    {standard input}:7232   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000000 SDMMC_BLOCK_SD_lCardWriteSingleBlock
    {standard input}:7326   .text.SDMMC_BLOCK_SD_lCardWriteSingleBlock:00000080 $d
    {standard input}:7331   .rodata:00000000 $d
    {standard input}:7344   .text.SDMMC_BLOCK_SD_EraseBlock:00000000 $t
    {standard input}:7349   .text.SDMMC_BLOCK_SD_EraseBlock:00000000 SDMMC_BLOCK_SD_EraseBlock
    {standard input}:7604   .text.SDMMC_BLOCK_SD_EraseBlock:000001e4 $d
    {standard input}:7609   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000000 $t
    {standard input}:7614   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000000 SDMMC_BLOCK_SD_LockUnlockCard
    {standard input}:7779   .text.SDMMC_BLOCK_SD_LockUnlockCard:00000104 $d
    {standard input}:7784   .text.SDMMC_BLOCK_SD_GetLockStatus:00000000 $t
    {standard input}:7889   .text.SDMMC_BLOCK_SD_GetLockStatus:00000088 $d
    {standard input}:7894   .text.SDMMC_BLOCK_SD_GetState:00000000 $t
    {standard input}:7899   .text.SDMMC_BLOCK_SD_GetState:00000000 SDMMC_BLOCK_SD_GetState
    {standard input}:7940   .text.SDMMC_BLOCK_SD_GetCardType:00000000 $t
    {standard input}:7945   .text.SDMMC_BLOCK_SD_GetCardType:00000000 SDMMC_BLOCK_SD_GetCardType
    {standard input}:7990   .text.SDMMC_BLOCK_SD_GetCid:00000000 $t
    {standard input}:7995   .text.SDMMC_BLOCK_SD_GetCid:00000000 SDMMC_BLOCK_SD_GetCid
    {standard input}:8128   .text.SDMMC_BLOCK_SD_GetOcr:00000000 $t
    {standard input}:8133   .text.SDMMC_BLOCK_SD_GetOcr:00000000 SDMMC_BLOCK_SD_GetOcr
    {standard input}:8178   .text.SDMMC_BLOCK_SD_GetCsd:00000000 $t
    {standard input}:8183   .text.SDMMC_BLOCK_SD_GetCsd:00000000 SDMMC_BLOCK_SD_GetCsd
    {standard input}:8228   .text.SDMMC_BLOCK_SD_GetSectorCount:00000000 $t
    {standard input}:8370   .text.SDMMC_BLOCK_SD_GetSectorSize:00000000 $t
    {standard input}:8375   .text.SDMMC_BLOCK_SD_GetSectorSize:00000000 SDMMC_BLOCK_SD_GetSectorSize
    {standard input}:8418   .text.SDMMC_BLOCK_SD_GetBlockSize:00000000 $t
    {standard input}:8423   .text.SDMMC_BLOCK_SD_GetBlockSize:00000000 SDMMC_BLOCK_SD_GetBlockSize
    {standard input}:8536   .text.SDMMC_BLOCK_SD_GetSdStatus:00000000 $t
    {standard input}:8645   .text.SDMMC_BLOCK_SD_GetSdStatus:00000094 $d
    {standard input}:8650   .text.SDMMC_BLOCK_SD_EjectCard:00000000 $t
    {standard input}:8655   .text.SDMMC_BLOCK_SD_EjectCard:00000000 SDMMC_BLOCK_SD_EjectCard
    {standard input}:8736   .text.SDMMC_BLOCK_SD_EjectCard:00000068 $d
    {standard input}:8741   .text.SDMMC_BLOCK_SD_Start:00000000 $t
    {standard input}:8746   .text.SDMMC_BLOCK_SD_Start:00000000 SDMMC_BLOCK_SD_Start
    {standard input}:8822   .text.SDMMC_BLOCK_SD_Init:00000000 $t
    {standard input}:8827   .text.SDMMC_BLOCK_SD_Init:00000000 SDMMC_BLOCK_SD_Init
    {standard input}:8881   .text.SDMMC_BLOCK_SD_ReadBlock:00000000 $t
    {standard input}:8886   .text.SDMMC_BLOCK_SD_ReadBlock:00000000 SDMMC_BLOCK_SD_ReadBlock
    {standard input}:9012   .text.SDMMC_BLOCK_SD_WriteBlock:00000000 $t
    {standard input}:9017   .text.SDMMC_BLOCK_SD_WriteBlock:00000000 SDMMC_BLOCK_SD_WriteBlock
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SYSTIMER_DeleteTimer
memset
XMC_SDMMC_SendCommand
XMC_SDMMC_SetDataTransferMode
XMC_SDMMC_EnableEvent
XMC_SDMMC_DisableEvent
XMC_SDMMC_GetEvent
XMC_SDMMC_ClearEvent
SYSTIMER_CreateTimer
SYSTIMER_StartTimer
SYSTIMER_StopTimer
memcpy
XMC_SDMMC_Enable
SYSTIMER_Init
XMC_SCU_CLOCK_EnableClock
